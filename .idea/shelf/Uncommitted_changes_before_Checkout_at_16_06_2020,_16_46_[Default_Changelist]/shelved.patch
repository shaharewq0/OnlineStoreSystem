Index: src/Data_access/Acquisition_DA.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Data_access;\n\nimport Domain.Store.Acquisition;\n\nimport java.util.Optional;\n\npublic class Acquisition_DA extends DOA<Acquisition> {\n\n    public Acquisition_DA(){\n        super();\n        TABLE_NAME=\"ACQUISITION_TABLE\";\n    }\n\n    @Override\n    public Optional<Acquisition> get(int id) {\n        return Optional.ofNullable(entityManager.find(Acquisition.class,id));\n    }\n\n    @Override\n    public void save(Acquisition acquisition) {\n        executeInsideTransaction(entityManager -> entityManager.persist(acquisition));\n    }\n\n    @Override\n    public void update(Acquisition acquisition, String[] params) {\n        //TODO : add set tp Acquisition\n        executeInsideTransaction(entityManager -> entityManager.merge(acquisition));\n    }\n\n    @Override\n    public void delete(Acquisition acquisition) {\n        executeInsideTransaction(entityManager -> entityManager.remove(acquisition));\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Data_access/Acquisition_DA.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Data_access/Acquisition_DA.java	(date 1592314856740)
@@ -1,6 +1,6 @@
 package Data_access;
 
-import Domain.Store.Acquisition;
+import Domain.Policies.Acquisitions.Acquisition;
 
 import java.util.Optional;
 
Index: src/tests/UnitTests/stub/StoreStub.java
===================================================================
--- src/tests/UnitTests/stub/StoreStub.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/tests/UnitTests/stub/StoreStub.java	(revision 765f74774114b306c203219db8477a56813b661e)
@@ -1,131 +0,0 @@
-package tests.UnitTests.stub;
-
-import java.util.List;
-
-import Domain.RedClasses.IUser;
-import Domain.Store.Discount;
-import Domain.Store.IStore;
-import Domain.Store.Product;
-import Domain.Store.Purchase;
-import Domain.Store.StorePurchase;
-import Domain.Store.workers.StoreManager_Imp;
-import Domain.Store.workers.StoreOwner_Imp;
-import Domain.info.ProductDetails;
-
-public class StoreStub implements IStore {
-    UserStub Owner;
-    UserStub manager;
-
-    public void setOwner(UserStub owner) {
-        Owner = owner;
-    }
-
-    public void setManager(UserStub manager) {
-        this.manager = manager;
-    }
-
-
-    @Override
-    public String getName() {
-        return null;
-    }
-
-    @Override
-    public List<Product> getProducts() {
-        return null;
-    }
-
-    @Override
-    public String getAddress() {
-        return null;
-    }
-
-    @Override
-    public boolean addProduct(Product p) {
-        return false;
-    }
-
-    @Override
-    public Product findProductByName(String name) {
-        return null;
-    }
-
-    @Override
-    public List<Product> findProductByCategory(String category) {
-        return null;
-    }
-
-    @Override
-    public List<Product> findProductByKeyword(String keyword) {
-        return null;
-    }
-
-    @Override
-    public int getRating() {
-        return 0;
-    }
-
- 
-
-
-    
-    @Override
-    public List<StorePurchase> viewPurchaseHistory() {
-        return null;
-    }
-
-	@Override
-	public Boolean CheckItemAvailable(ProductDetails items) {
-		// TODO Auto-generated method stub
-		return null;
-	}
-
-	@Override
-	public double getPrice(String item) {
-		// TODO Auto-generated method stub
-		return 0;
-	}
-
-	@Override
-	public Product TakeItem(String name, int amout) {
-		// TODO Auto-generated method stub
-		return null;
-	}
-
-	@Override
-	public List<Discount> getDiscounts(String name) {
-		//TODO imp
-		return null;
-	}
-
-	@Override
-	public boolean removeProduct(String pName) {
-		// TODO Auto-generated method stub
-		return false;
-	}
-
-	@Override
-	public boolean editProduct(String OLD_p, Product NEW_p) {
-		// TODO Auto-generated method stub
-		return false;
-	}
-
-	@Override
-	public boolean appointManager(StoreManager_Imp user) {
-		// TODO Auto-generated method stub
-		return false;
-	}
-
-	@Override
-	public boolean appointOwner(StoreOwner_Imp user) {
-		// TODO Auto-generated method stub
-		return false;
-	}
-
-
-	@Override
-	public boolean fireManager(String user) {
-		// TODO Auto-generated method stub
-		return false;
-	}
-}
Index: src/tests/AcceptanceTests/StoreOwner/ViewStoreSellingHistoryTest.java
===================================================================
--- src/tests/AcceptanceTests/StoreOwner/ViewStoreSellingHistoryTest.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/tests/AcceptanceTests/StoreOwner/ViewStoreSellingHistoryTest.java	(revision 765f74774114b306c203219db8477a56813b661e)
@@ -1,15 +0,0 @@
-package tests.AcceptanceTests.StoreOwner;
-
-import org.junit.Test;
-import tests.AcceptanceTests.BaseAccTest;
-
-import static org.junit.Assert.fail;
-
-public class ViewStoreSellingHistoryTest extends BaseAccTest {
-//  TODO: implement later
-// same as ReviewPurchaseHistory
-    @Test
-    public void viewSellingHistory(){
-        fail("not implemented!");
-    }
-}
Index: src/Domain/RedClasses/shoppingBasket.java
===================================================================
--- src/Domain/RedClasses/shoppingBasket.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Domain/RedClasses/shoppingBasket.java	(revision 765f74774114b306c203219db8477a56813b661e)
@@ -1,85 +0,0 @@
-package Domain.RedClasses;
-
-import java.util.HashMap;
-import java.util.LinkedList;
-import java.util.List;
-import java.util.Map;
-
-import Domain.Store.Discount;
-import Domain.Store.Product;
-import Domain.Store.StoreImp;
-import Domain.Store.StorePurchase;
-import Domain.info.ProductDetails;
-
-public class shoppingBasket implements IshoppingBasket {
-	private Map<String, Integer> products;
-	private StoreImp store;
-
-	public shoppingBasket(StoreImp store) {
-		this.store = store;
-		products = new HashMap<>();
-	}
-
-	public void addProduct(String name, int amount) {
-		if (products.containsKey(name)) {
-			products.replace(name, products.get(name) + amount);
-		} else {
-			products.put(name, amount);
-		}
-	}
-
-	public int removeProduct(String name, int num) {
-		if (products.containsKey(name)) {
-			int current = products.get(name);
-			if (current > num) {
-				products.replace(name, current - num);
-				return num;
-			} else {
-				products.remove(name);
-				return current;
-			}
-		}
-		return 0;
-
-	}
-
-	public StoreImp getStore() {
-		return store;
-	}
-
-	public List<ProductDetails> getProducts() {
-		List<ProductDetails> output = new LinkedList<ProductDetails>();
-		for (String name : products.keySet()) {
-			output.add(new ProductDetails(store.findProductByName(name), products.get(name)));
-		}
-		return output;
-	}
-
-	public double CalcPrice() {
-		double price = 0;
-		for (String item : products.keySet()) {
-			price += store.getPrice(item) * products.get(item);
-		}
-		//TODO look for type 2 and 3 discount
-		return price;
-	}
-
-	public List<Product> getItems() {
-		List<Product> output = new LinkedList<Product>();
-		for (String item : products.keySet()) {
-			output.add(store.TakeItem(item, products.get(item)));
-		}
-		return output;
-	}
-
-	
-	public StorePurchase Complet_Purchase() {
-		List<Discount> allDiscounts = new LinkedList<Discount>();
-		for (String item : products.keySet()) {
-			allDiscounts.addAll( store.getDiscounts(item));
-		}
-		StorePurchase SP = new StorePurchase(getProducts(), store.getName(), CalcPrice(), allDiscounts);
-		store.addPurchase(SP);
-		return SP;
-	}
-}
Index: src/Domain/RedClasses/shoppingCart.java
===================================================================
--- src/Domain/RedClasses/shoppingCart.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Domain/RedClasses/shoppingCart.java	(revision 765f74774114b306c203219db8477a56813b661e)
@@ -1,81 +0,0 @@
-package Domain.RedClasses;
-
-
-import Domain.Store.Product;
-import Domain.Store.StoreImp;
-import Domain.info.ProductDetails;
-import Domain.store_System.System;
-
-import java.util.*;
-
-public class shoppingCart implements IshoppingCart {
-    Map<String,shoppingBasket> baskets;
-
-    public shoppingCart(){
-        baskets=new HashMap<>();
-    }
-
-    public Collection<shoppingBasket> getBaskets() {
-        return baskets.values();
-    }
-
-    public List<ProductDetails> allProductsInCart(){
-       List<ProductDetails> output = new LinkedList<ProductDetails>();
-       for (shoppingBasket basket: baskets.values()) {
-    	   output.addAll(basket.getProducts());
-       }
-       return output;
-    }
-
-
-    public shoppingBasket findBasket(StoreImp s){
-        for(shoppingBasket basket : getBaskets()){
-            if(basket.getStore().getName().equals(s.getName())){
-                return basket;
-            }
-        }
-        return null;
-    }
-
-    public shoppingBasket findBasket(String name){
-    	if(baskets.containsKey(name))
-    		return baskets.get(name);
-    	//else
-    	baskets.put(name, new shoppingBasket(System.getInstance().getStoreDetails(name)));
-    	return baskets.get(name);
-
-    }
-    
-	public int removeItem(String Storename,String Itemname,int amount) {
-    	IshoppingBasket basket = baskets.get(Storename);
-    	if (basket == null)
-    		return 0;
-    	return basket.removeProduct(Itemname, amount);
-	}
-    
-    @Override
-	public double CalcPrice() {
-		double cost= 0;
-		for (shoppingBasket basket : baskets.values()) {
-			cost += basket.CalcPrice();
-		}
-		return cost;
-	}
-
-	@Override
-	public List<Product> getItems() {
-		List<Product> takeout = new LinkedList<Product>();
-		for (shoppingBasket basket  : baskets.values()) {
-			takeout.addAll(basket.getItems());
-		}
-		return takeout;
-	}
-
-	public UserPurchase Complet_Purchase() {
-		UserPurchase p = new UserPurchase();
-		for (shoppingBasket basket : baskets.values()) {
-			 p.eachPurchase.add(basket.Complet_Purchase());
-		}
-		return p;
-	}
-}
Index: src/Domain/RedClasses/IshoppingBasket.java
===================================================================
--- src/Domain/RedClasses/IshoppingBasket.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Domain/RedClasses/IshoppingBasket.java	(revision 765f74774114b306c203219db8477a56813b661e)
@@ -1,20 +0,0 @@
-package Domain.RedClasses;
-
-import java.util.List;
-
-import Domain.Store.Product;
-import Domain.Store.StoreImp;
-import Domain.info.ProductDetails;
-
-public interface IshoppingBasket {
-	public void addProduct(String name, int amount);
-
-	public int removeProduct(String name, int num);
-
-	public StoreImp getStore();
-
-	public List<ProductDetails> getProducts();
-	public double CalcPrice();
-	public List<Product> getItems();
-
-}
Index: src/Domain/RedClasses/User.java
===================================================================
--- src/Domain/RedClasses/User.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Domain/RedClasses/User.java	(revision 765f74774114b306c203219db8477a56813b661e)
@@ -1,356 +0,0 @@
-package Domain.RedClasses;
-
-import Domain.Logs.EventLogger;
-import Domain.Store.Product;
-import Domain.Store.StoreImp;
-import Domain.Store.StorePurchase;
-import Domain.Store.workers.Creator;
-import Domain.Store.workers.Store_role;
-import Domain.info.ProductDetails;
-import Domain.info.Question;
-import Domain.info.StoreInfo;
-import Domain.store_System.Roles.Member;
-import Domain.store_System.Roles.Registered;
-import Domain.store_System.Roles.System_Manager;
-import Domain.store_System.System;
-import tests.AcceptanceTests.auxiliary.StoreDetails;
-
-import java.util.Collection;
-import java.util.LinkedList;
-import java.util.List;
-import java.util.Map;
-
-public class User implements IUser {
-
-	private shoppingCart cart;
-	// imps of new classs digram
-	private Registered profile = null;
-	private Member logInstanse = null;
-	private System_Manager sysMangaer = null;
-	// ---- dont need to be here
-
-	// TODO move this to register and call it from member system role
-
-	public User() {
-		cart = new shoppingCart();
-	}
-
-//delte this
-	public User(String address, int creditCardNum) {
-		cart = new shoppingCart();
-	}
-
-	// ------------------------------ user
-	public boolean login(String id, String password) {
-		if (profile != null)
-			return false;
-
-		profile = System.getInstance().login(id, password, this);
-		logInstanse = System.getInstance().getLogInstase(id, password);
-		sysMangaer = System.getInstance().ImManeger(id, password);
-		return profile != null;
-
-	}
-
-//	public List<StoreImp> watchAllStores() {
-//		return System.getInstance().getAllStores();
-//	}
-
-	// TODO rewrite this fucntion
-	// adding a product to a basket. if the product exists add 1 to the amount of
-	// the product in the basket
-	public boolean saveProductInBasket(String productName, String storeName, int amount) {
-
-		cart.findBasket(storeName).addProduct(productName, amount);
-		return true;
-
-	}
-
-	// removing at most amount of num of a product from the basket
-	public int deleteProductInBasket(String productName, String storeName, int num) {
-		EventLogger.GetInstance().Add_Log(this.toString() + "- remove item from cart");
-		return cart.removeItem(storeName, productName, num);
-
-	}
-
-	public List<ProductDetails> getProductsInCart() {
-		return cart.allProductsInCart();
-	}
-
-	public boolean logout() {
-		if (profile == null || logInstanse == null)
-			return false;
-		profile.LogLogout(this);
-		profile = null;
-		logInstanse = null;
-		System.getInstance().logout(this);
-		return true;
-//		if (system_role instanceof Member) {
-//			system_role = new Guest();
-//			return true;
-//		}
-//		return false;
-	}
-
-	public boolean openStore(String storename, String address, int rating) {
-		StoreImp mystore = logInstanse.OpenStore(new StoreInfo(storename, address, rating));
-		if (profile == null) {
-			EventLogger.GetInstance().Add_Log(this.toString() + "- trying to open store while not login");
-			return false;
-		}
-		EventLogger.GetInstance().Add_Log(this.toString() + "- opening store");
-		profile.store_roles.put(mystore.getName(), new Creator(mystore));
-		return mystore != null;
-	}
-
-	public boolean openStore(StoreInfo store) {
-		StoreImp mystore = logInstanse.OpenStore(store);
-		if (profile == null || mystore == null) {
-			EventLogger.GetInstance().Add_Log(this.toString() + "- trying to open store while not login");
-			return false;
-		}
-		EventLogger.GetInstance().Add_Log(this.toString() + "- opening store");
-
-		profile.store_roles.put(mystore.getName(), new Creator(mystore));
-		return mystore != null;
-
-	}
-
-	public List<UserPurchase> getPurchaseHistory() {
-		if (profile == null)
-			return null;
-
-		return profile.getPurchesHistory();
-	}
-
-	public void Complet_Purchase(double price) {
-		UserPurchase purchase = cart.Complet_Purchase();
-		purchase.TotalePrice = price;
-		if (profile != null) {
-			profile.getPurchesHistory().add(purchase);
-		}
-
-	}
-
-	// -------------------------------------------------- store info
-
-	public shoppingCart getCart() {
-		return cart;
-	}
-
-	public Collection<ProductDetails> watchProductsInStore(String name) {
-		return System.getInstance().getProductsFromStore(name);
-	}
-	// --------------------------------------------------------------- store actions
-
-	public boolean addProduct(String storeName, Product p) {
-//TODO add fail
-		if (profile == null)
-			return false;
-		Store_role role = profile.store_roles.get(storeName);
-		if(role == null)
-			return false;
-		return role.addItem(p);
-	}
-
-	public boolean editProduct(String storeName, String prodactname, Product newdetail) {
-		if (profile == null)
-			return false;
-		Store_role role = profile.store_roles.get(storeName);
-		if(role == null)
-			return false;
-		return role.editItem(prodactname, newdetail);
-	}
-
-	public boolean removeProduct(String storeName, String prodactname) {
-
-		if (profile == null)
-			return false;
-		Store_role role = profile.store_roles.get(storeName);
-		if(role == null)
-			return false;
-		return role.removeItem(prodactname);
-	}
-
-	public boolean appointOwner(String storeName, String username, String otherPassword) {
-		if (profile == null)
-			return false;
-		User appointee = System.getInstance().getMember(username, otherPassword);
-		if(appointee == null)
-			return false;
-		return profile.store_roles.get(storeName).appointOwner(appointee);
-	}
-
-	@Override
-	public boolean appointAsOwner(Store_role role) {
-		if (profile == null || profile.store_roles.containsKey(role.getStore().getName())
-				&& !profile.store_roles.get(role.getStore().getName()).canPromoteToOwner()) {
-			return false;
-		}
-		profile.store_roles.remove(role.getStore().getName());
-		profile.store_roles.put(role.getStore().getName(), role);
-		return true;
-
-	}
-
-	public boolean appointManager(String storeName, String username, String otherPassword) {
-
-		if (profile == null)
-			return false;
-		User appointee = System.getInstance().getMember(username, otherPassword);
-		if(appointee == null)
-			return false;
-		return profile.store_roles.get(storeName).appointManager(appointee);
-
-	}
-
-	@Override
-	public boolean appointAsManager(Store_role role) {
-		// TODO this is the same as appoint owner
-		if (profile == null)
-			return false;
-		Map<String, Store_role> store_roles = profile.store_roles;
-		if (store_roles.containsKey(role.getStore().getName())
-				&& !store_roles.get(role.getStore().getName()).canPromoteToOwner()) {
-			return false;
-		}
-		store_roles.remove(role.getStore().getName());
-		store_roles.put(role.getStore().getName(), role);
-		return true;
-	}
-
-	public boolean fireManager(String storeName, String username) {
-		Map<String, Store_role> store_roles = profile.store_roles;
-		return store_roles.get(storeName).fire(username);
-	}
-
-	@Override
-	public boolean getFired(String store) {
-		Map<String, Store_role> store_roles = profile.store_roles;
-		return store_roles.remove(store) != null;
-	}
-
-	private String last_store_looked_at = "";
-
-	public Collection<Question> viewQuestions(String storeName) {
-		last_store_looked_at = storeName;
-		Map<String, Store_role> store_roles = profile.store_roles;
-		return store_roles.get(storeName).viewQuestions();
-	}
-
-	public boolean giveRespond(String ansewr, int qustionID) {
-		Map<String, Store_role> store_roles = profile.store_roles;
-		return store_roles.get(last_store_looked_at).giveRespond(ansewr, qustionID);
-	}
-
-	public List<StorePurchase> ViewAquistionHistory(String storeName) {
-		if (sysMangaer != null)
-			return sysMangaer.getPurchaseHistory(storeName);
-		Map<String, Store_role> store_roles = profile.store_roles;
-		return store_roles.get(storeName).getPurchaseHistory();
-	}
-
-	public List<UserPurchase> ViewAquistionHistoryOfUser(String username) {
-		if (sysMangaer != null)
-			return sysMangaer.getPurchaseHistoryofUser(username);
-		return null;
-	}
-
-	public boolean editManagerPermesions(String storename, String managername, List<String> permesions) {
-		Map<String, Store_role> store_roles = profile.store_roles;
-		EventLogger.GetInstance().Add_Log(this.toString() + "- editing managerPermesions");
-		return store_roles.get(storename).editManagerPermesions(managername, permesions);
-	}
-
-
-	// Static -
-	// ------------------------------------------------------------------------------------------------------------------
-
-	static public boolean register(String id, String password) {
-		return System.getInstance().register(id, password);
-	}
-
-	static public StoreDetails watchStoreDetails(String name) {
-		StoreImp store = System.getInstance().getStoreDetails(name);
-		if (store == null)
-			return null;
-		return new StoreDetails(store);
-	}
-
-	static public StoreInfo watchStoreInfo(String storeName) {
-		StoreImp store = System.getInstance().getStoreDetails(storeName);
-		if (store == null)
-			return null;
-		return store.getMyInfo();
-	}
-
-	static public List<ProductDetails> searchProductsByName(String name) {
-		return System.getInstance().searchProductsByName(name);
-	}
-
-	static public List<ProductDetails> searchProductsByCategory(String category) {
-		return System.getInstance().searchProductsByCategory(category);
-	}
-
-	static public List<ProductDetails> searchProductsByKeyword(String keyword) {
-		return System.getInstance().searchProductsByKeyword(keyword);
-	}
-
-	static public List<ProductDetails> filterByPrice(double minPrice, double maxPrice) {
-
-		List<ProductDetails> output = new LinkedList<ProductDetails>();
-		for (StoreImp store : System.getInstance().getAllStores()) {
-			for (Product product : store.getProducts()) {
-				if (product.getPrice() <= maxPrice && product.getPrice() >= minPrice)
-					output.add(new ProductDetails(product, product.getAmount()));
-			}
-		}
-
-		return output;
-	}
-
-	static public List<ProductDetails> filterByRating(int minRating, int maxRating) {
-		List<ProductDetails> output = new LinkedList<ProductDetails>();
-		for (StoreImp store : System.getInstance().getAllStores()) {
-			for (Product product : store.getProducts()) {
-				if (product.getRating() <= maxRating && product.getRating() >= minRating)
-					output.add(new ProductDetails(product, product.getAmount()));
-			}
-		}
-		return output;
-		// return System.getInstance().filterByRating( min, max);
-	}
-
-	static public List<ProductDetails> filterByCategory(String category) {
-		List<ProductDetails> output = new LinkedList<ProductDetails>();
-		for (StoreImp store : System.getInstance().getAllStores()) {
-			for (Product product : store.getProducts()) {
-				if (product.getCategory().contains(category))
-					output.add(new ProductDetails(product, product.getAmount()));
-			}
-		}
-		return output;
-		// return System.getInstance().filterByCategory(category);
-	}
-
-	static public List<ProductDetails> filterByStoreRating(int minRating, int maxRating) {
-		List<ProductDetails> output = new LinkedList<ProductDetails>();
-		for (StoreImp store : System.getInstance().getAllStores()) {
-			if (store.getRating() > minRating && store.getRating() < maxRating)
-				for (Product product : store.getProducts()) {
-					output.add(new ProductDetails(product, product.getAmount()));
-				}
-		}
-		return output;
-		// return System.getInstance().filterByStoreRating( min, max);
-	}
-
-	@Override
-	public String getName() {
-		// TODO Auto-generated method stub
-		if (profile == null)
-			return "Error still no name";
-		return profile.getId();
-	}
-
-}
Index: src/Domain/Store/Acquisition.java
===================================================================
--- src/Domain/Store/Acquisition.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Domain/Store/Acquisition.java	(revision 765f74774114b306c203219db8477a56813b661e)
@@ -1,9 +0,0 @@
-package Domain.Store;
-
-public class Acquisition {
-
-	static public Acquisition Copy(Acquisition other)
-	{
-		return new Acquisition();
-	}
-}
Index: src/Domain/RedClasses/UserPurchase.java
===================================================================
--- src/Domain/RedClasses/UserPurchase.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Domain/RedClasses/UserPurchase.java	(revision 765f74774114b306c203219db8477a56813b661e)
@@ -1,13 +0,0 @@
-package Domain.RedClasses;
-
-import java.util.LinkedList;
-import java.util.List;
-
-import Domain.Store.StorePurchase;
-
-public class UserPurchase {
-
-	public List<StorePurchase> eachPurchase = new LinkedList<StorePurchase>();
-	public double TotalePrice = 0;
-
-}
Index: src/extornal/payment/bankAccount.java
===================================================================
--- src/extornal/payment/bankAccount.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/extornal/payment/bankAccount.java	(revision 765f74774114b306c203219db8477a56813b661e)
@@ -1,28 +0,0 @@
-package extornal.payment;
-
-import java.util.LinkedList;
-import java.util.List;
-
-public class bankAccount {
-
-	public String name ="";
-	protected double sum = 0;
-	protected List<Double> transactions;
-	
-	public bankAccount(String name) {
-		this.name = name;
-		transactions = new LinkedList<Double>();
-	}
-	
-	public bankAccount(String name,int startwith)
-	{
-		this.name = name;
-		sum = startwith;
-		transactions = new LinkedList<Double>();
-	}
-	
-	public void getMoney(double amount) {
-		sum += amount;
-		transactions.add(amount);
-	}
-}
Index: src/tests/AcceptanceTests/auxiliary/Products.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tests.AcceptanceTests.auxiliary;\n\nimport Domain.info.ProductDetails;\n\nimport java.util.Arrays;\n\npublic class Products {\n    public static ProductDetails PRODUCT1 = new ProductDetails(\"product 1\", Arrays.asList(\"cat1\"), \"store\", 5, 10.0, 3);\n    public static ProductDetails PRODUCT2 = new ProductDetails(\"product 2\", Arrays.asList(\"cat2\"), \"store\", 5,20.0,  4);\n    public static ProductDetails PRODUCT3 = new ProductDetails(\"product 3\", Arrays.asList(\"cat1\"), \"store\", 5,30.0,  2);\n    public static ProductDetails PRODUCT1_CHANGED_PRICE = new ProductDetails(\"product 1\", Arrays.asList(\"cat1\"), \"store\", 5,50.0,  3);\n    public static ProductDetails PRODUCT2_CHANGED_CATEGORY = new ProductDetails(\"product 2\", Arrays.asList(\"cat1\"), \"store\", 5,20.0,  4);\n    public static ProductDetails PRODUCT3_CHANGED_AMOUNT = new ProductDetails(\"product 3\", Arrays.asList(\"cat1\"), \"store\", 3,30.0,  2);\n    public static String PRODUCT_THAT_DONT_EXIST = \"wrong product\";\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/tests/AcceptanceTests/auxiliary/Products.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/tests/AcceptanceTests/auxiliary/Products.java	(date 1592314856744)
@@ -5,11 +5,11 @@
 import java.util.Arrays;
 
 public class Products {
-    public static ProductDetails PRODUCT1 = new ProductDetails("product 1", Arrays.asList("cat1"), "store", 5, 10.0, 3);
-    public static ProductDetails PRODUCT2 = new ProductDetails("product 2", Arrays.asList("cat2"), "store", 5,20.0,  4);
-    public static ProductDetails PRODUCT3 = new ProductDetails("product 3", Arrays.asList("cat1"), "store", 5,30.0,  2);
-    public static ProductDetails PRODUCT1_CHANGED_PRICE = new ProductDetails("product 1", Arrays.asList("cat1"), "store", 5,50.0,  3);
-    public static ProductDetails PRODUCT2_CHANGED_CATEGORY = new ProductDetails("product 2", Arrays.asList("cat1"), "store", 5,20.0,  4);
-    public static ProductDetails PRODUCT3_CHANGED_AMOUNT = new ProductDetails("product 3", Arrays.asList("cat1"), "store", 3,30.0,  2);
+    public static ProductDetails PRODUCT1 = new ProductDetails("product 1", Arrays.asList("cat1"), "store", 50, 10.0, 3);
+    public static ProductDetails PRODUCT2 = new ProductDetails("product 2", Arrays.asList("cat2"), "store", 50,20.0,  4);
+    public static ProductDetails PRODUCT3 = new ProductDetails("product 3", Arrays.asList("cat1"), "store", 50,30.0,  2);
+    public static ProductDetails PRODUCT1_CHANGED_PRICE = new ProductDetails("product 1", Arrays.asList("cat1"), "store", 50,50.0,  3);
+    public static ProductDetails PRODUCT2_CHANGED_CATEGORY = new ProductDetails("product 2", Arrays.asList("cat1"), "store", 50,20.0,  4);
+    public static ProductDetails PRODUCT3_CHANGED_AMOUNT = new ProductDetails("product 3", Arrays.asList("cat1"), "store", 30,30.0,  2);
     public static String PRODUCT_THAT_DONT_EXIST = "wrong product";
 }
Index: src/tests/AcceptanceTests/auxiliary/StoreDetails.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tests.AcceptanceTests.auxiliary;\n\nimport Domain.Store.StoreImp;\n\nimport java.util.Objects;\n\npublic class StoreDetails {\n    public String getName() {\n        return name;\n    }\n\n    private String name;\n    private String adress;\n    private int rating;\n\n    public StoreDetails(String name,String adress, int rating) {\n        this.name = name;\n        this.rating = rating;\n        this.adress = adress;\n    }\n\n    public StoreDetails(String name, int rating) {\n        this.name = name;\n        this.rating = rating;\n        this.adress = \"unkwon\";\n    }\n\n    public StoreDetails(StoreImp storeDetails) {\n        name = storeDetails.getName();\n        rating = storeDetails.getRating();\n        adress = storeDetails.getAddress();\n\t}\n\n    public int getRating() {\n        return rating;\n    }\n\n    @Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        StoreDetails that = (StoreDetails) o;\n        return getRating() == that.getRating() &&\n                getName().equals(that.getName()) &&\n                Objects.equals(getAdress(), that.getAdress());\n    }\n\n    public String getAdress() {\n        return adress;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/tests/AcceptanceTests/auxiliary/StoreDetails.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/tests/AcceptanceTests/auxiliary/StoreDetails.java	(date 1592314856756)
@@ -48,4 +48,13 @@
     public String getAdress() {
         return adress;
     }
+
+    @Override
+    public String toString() {
+        return "StoreDetails{" +
+                "name='" + name + '\'' +
+                ", adress='" + adress + '\'' +
+                ", rating=" + rating +
+                '}';
+    }
 }
Index: src/tests/AcceptanceTests/GuestBuyer/BaseGuestTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tests.AcceptanceTests.GuestBuyer;\n\nimport tests.AcceptanceTests.BaseAccTest;\n\n// this class is for guest use cases that require guest id\nclass BaseGuestTest extends BaseAccTest {\n    static int guestID;\n\n    static void setUpClass() {\n        GetStoreDetailsTest.setUpClass();\n        guestID = system.newGuest();\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/tests/AcceptanceTests/GuestBuyer/BaseGuestTest.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/tests/AcceptanceTests/GuestBuyer/BaseGuestTest.java	(date 1592314856744)
@@ -3,10 +3,10 @@
 import tests.AcceptanceTests.BaseAccTest;
 
 // this class is for guest use cases that require guest id
-class BaseGuestTest extends BaseAccTest {
-    static int guestID;
+public class BaseGuestTest extends BaseAccTest {
+    public static int guestID;
 
-    static void setUpClass() {
+    public static void setUpClass() {
         GetStoreDetailsTest.setUpClass();
         guestID = system.newGuest();
     }
Index: src/tests/AcceptanceTests/GuestBuyer/PurchaseTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tests.AcceptanceTests.GuestBuyer;\n\nimport org.junit.BeforeClass;\nimport org.junit.Test;\n\npublic class PurchaseTest extends BaseGuestTest {\n\n    @BeforeClass\n    public static void setUpClass() {\n        WatchAndEditShoppingCartTest.setUpClass();\n    }\n\n    @Test\n    public void purchase() {\n        //TODO\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/tests/AcceptanceTests/GuestBuyer/PurchaseTest.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/tests/AcceptanceTests/GuestBuyer/PurchaseTest.java	(date 1592314856744)
@@ -1,7 +1,13 @@
 package tests.AcceptanceTests.GuestBuyer;
 
+import Service_Layer.guest_accese.guest_accese;
+import org.junit.Assert;
 import org.junit.BeforeClass;
 import org.junit.Test;
+import tests.AcceptanceTests.auxiliary.CreditCards;
+
+import static tests.AcceptanceTests.GuestBuyer.LoginTest.PASSWORD;
+import static tests.AcceptanceTests.GuestBuyer.LoginTest.USERNAME;
 
 public class PurchaseTest extends BaseGuestTest {
 
@@ -12,6 +18,7 @@
 
     @Test
     public void purchase() {
-        //TODO
+        Assert.assertFalse(guest_accese.usecase2_8_Purchase_products(guestID, CreditCards.unvalid_card, "london")); // card with nad expiration date
+        Assert.assertTrue(guest_accese.usecase2_8_Purchase_products(guestID, CreditCards.card1, "london"));         // valid card, should work
     }
 }
Index: src/tests/AcceptanceTests/GuestBuyer/SaveProductInShoppingBasketTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tests.AcceptanceTests.GuestBuyer;\n\nimport org.junit.BeforeClass;\nimport org.junit.Test;\n\nimport static org.junit.Assert.assertFalse;\nimport static org.junit.Assert.assertTrue;\nimport static tests.AcceptanceTests.MemberedBuyer.OpenStoreTest.STORE;\nimport static tests.AcceptanceTests.MemberedBuyer.OpenStoreTest.STORE_THAT_DONT_EXIST;\nimport static tests.AcceptanceTests.auxiliary.Products.PRODUCT1;\nimport static tests.AcceptanceTests.auxiliary.Products.PRODUCT_THAT_DONT_EXIST;\n\npublic class SaveProductInShoppingBasketTest extends BaseGuestTest {\n/* TODO:\n    test fails because the system doesnt check if product/store/(amount?) exist\n */\n\n    @BeforeClass\n    public static void setUpClass() {\n        BaseGuestTest.setUpClass();\n    }\n\n    @Test\n    public void addToBasket() {\n        assertTrue(system.addToBasket(guestID, STORE.getName(), PRODUCT1.getName(), 1));\n    }\n\n    @Test\n    public void addToBasketMoreThenAmount() {\n        assertFalse(system.addToBasket(guestID, STORE.getName(), PRODUCT1.getName(), 10));\n    }\n\n    @Test\n    public void addToBasketProductDontExist() {\n        assertFalse(system.addToBasket(guestID, STORE.getName(), PRODUCT_THAT_DONT_EXIST, 1));\n    }\n\n    @Test\n    public void addToBasketStoreDontExist() {\n        assertFalse(system.addToBasket(guestID, STORE_THAT_DONT_EXIST, PRODUCT1.getName(), 1));\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/tests/AcceptanceTests/GuestBuyer/SaveProductInShoppingBasketTest.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/tests/AcceptanceTests/GuestBuyer/SaveProductInShoppingBasketTest.java	(date 1592314856744)
@@ -27,7 +27,7 @@
 
     @Test
     public void addToBasketMoreThenAmount() {
-        assertFalse(system.addToBasket(guestID, STORE.getName(), PRODUCT1.getName(), 10));
+        assertFalse(system.addToBasket(guestID, STORE.getName(), PRODUCT1.getName(), 100));
     }
 
     @Test
Index: src/tests/AcceptanceTests/StoreOwner/StoreOwnerTests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tests.AcceptanceTests.StoreOwner;\n\nimport org.junit.runner.RunWith;\nimport org.junit.runners.Suite;\n\n@RunWith(Suite.class)\n@Suite.SuiteClasses({\n        /* 4.1 */           ManageInventoryTest.class,\n        // TODO: add 4.2\n        /* 4.3 */           AppointStoreOwnerTest.class,\n        /* 4.5 & 4.7 */     AppointAndFireStoreManagerTest.class,\n        /* 4.6 */           EditStoreManagerPermissionsTest.class,\n        /* 4.10 */          ViewStoreSellingHistoryTest.class,\n})\n\npublic class StoreOwnerTests {\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/tests/AcceptanceTests/StoreOwner/StoreOwnerTests.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/tests/AcceptanceTests/StoreOwner/StoreOwnerTests.java	(date 1592314856744)
@@ -10,7 +10,7 @@
         /* 4.3 */           AppointStoreOwnerTest.class,
         /* 4.5 & 4.7 */     AppointAndFireStoreManagerTest.class,
         /* 4.6 */           EditStoreManagerPermissionsTest.class,
-        /* 4.10 */          ViewStoreSellingHistoryTest.class,
+        /* 4.10 */          //ViewStoreSellingHistoryTest.class,
 })
 
 public class StoreOwnerTests {
Index: src/tests/AcceptanceTests/StoreOwner/EditStoreManagerPermissionsTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tests.AcceptanceTests.StoreOwner;\n\n\nimport Domain.info.MangaerPermesions;\nimport org.junit.BeforeClass;\nimport org.junit.FixMethodOrder;\nimport org.junit.Test;\nimport org.junit.runners.MethodSorters;\nimport tests.AcceptanceTests.BaseAccTest;\n\nimport java.util.LinkedList;\nimport java.util.List;\n\nimport static org.junit.Assert.assertTrue;\nimport static tests.AcceptanceTests.GuestBuyer.LoginTest.PASSWORD;\nimport static tests.AcceptanceTests.GuestBuyer.LoginTest.USERNAME;\nimport static tests.AcceptanceTests.MemberedBuyer.OpenStoreTest.STORE;\nimport static tests.AcceptanceTests.StoreOwner.AppointStoreOwnerTest.APPOINTEE_PASSWORD;\nimport static tests.AcceptanceTests.StoreOwner.AppointStoreOwnerTest.APPOINTEE_USERNAME;\n\n@FixMethodOrder(MethodSorters.NAME_ASCENDING)\npublic class EditStoreManagerPermissionsTest extends BaseAccTest {\n    private List<String> permissions = new LinkedList<>();\n\n    @BeforeClass\n    public static void setUpClass() {\n        AppointAndFireStoreManagerTest.setUpClass();\n        system.appointManager(USERNAME, PASSWORD, STORE.getName(), APPOINTEE_USERNAME, APPOINTEE_PASSWORD);\n    }\n\n    @Test\n    public void A_AddPermissions() {\n        permissions.addAll(MangaerPermesions.defult_permesions);\n        permissions.add(MangaerPermesions.permesions[0]);\n        permissions.add(MangaerPermesions.permesions[1]);\n        assertTrue(system.editManagerPermissions(USERNAME, PASSWORD, STORE.getName(), APPOINTEE_USERNAME, permissions));\n    }\n\n    @Test\n    public void B_RemovePermissions() {\n        permissions.remove(MangaerPermesions.permesions[0]);\n        permissions.remove(MangaerPermesions.permesions[1]);\n        assertTrue(system.editManagerPermissions(USERNAME, PASSWORD, STORE.getName(), APPOINTEE_USERNAME, permissions));\n    }\n\n    @Test\n    public void C_AddPermissionsToNotManager() {\n        permissions.add(MangaerPermesions.permesions[0]);\n        permissions.add(MangaerPermesions.permesions[1]);\n        assertTrue(system.editManagerPermissions(USERNAME, PASSWORD, STORE.getName(), APPOINTEE_USERNAME + \"2\", permissions));\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/tests/AcceptanceTests/StoreOwner/EditStoreManagerPermissionsTest.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/tests/AcceptanceTests/StoreOwner/EditStoreManagerPermissionsTest.java	(date 1592314856744)
@@ -11,6 +11,7 @@
 import java.util.LinkedList;
 import java.util.List;
 
+import static org.junit.Assert.assertFalse;
 import static org.junit.Assert.assertTrue;
 import static tests.AcceptanceTests.GuestBuyer.LoginTest.PASSWORD;
 import static tests.AcceptanceTests.GuestBuyer.LoginTest.USERNAME;
@@ -47,6 +48,6 @@
     public void C_AddPermissionsToNotManager() {
         permissions.add(MangaerPermesions.permesions[0]);
         permissions.add(MangaerPermesions.permesions[1]);
-        assertTrue(system.editManagerPermissions(USERNAME, PASSWORD, STORE.getName(), APPOINTEE_USERNAME + "2", permissions));
+        assertFalse(system.editManagerPermissions(USERNAME, PASSWORD, STORE.getName(), APPOINTEE_USERNAME + "2", permissions));
     }
 }
\ No newline at end of file
Index: src/tests/AcceptanceTests/MemberedBuyer/ReviewPurchaseHistoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tests.AcceptanceTests.MemberedBuyer;\n\nimport org.junit.BeforeClass;\nimport org.junit.Test;\nimport tests.AcceptanceTests.BaseAccTest;\nimport tests.AcceptanceTests.GuestBuyer.PurchaseTest;\n\nimport static org.junit.Assert.fail;\nimport static tests.AcceptanceTests.GuestBuyer.LoginTest.PASSWORD;\nimport static tests.AcceptanceTests.GuestBuyer.LoginTest.USERNAME;\n\npublic class ReviewPurchaseHistoryTest extends BaseAccTest {\n// TODO: implement later\n\n    @BeforeClass\n    public static void setUpClass() {\n        PurchaseTest.setUpClass();\n        system.login(USERNAME, PASSWORD);   // do login with guest id\n        //TODO: check that login keep the guest cart\n        //  call purchase\n    }\n\n    @Test\n    public void reviewPurchaseHistory() {\n        fail(\"not implemented!\");\n//        List<PurchaseDetails> TruePurchases = Arrays.asList();\n//        List<PurchaseDetails> purchases = system.viewPurchaseHistory();\n//        assertEqualsLists(TruePurchases, purchases);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/tests/AcceptanceTests/MemberedBuyer/ReviewPurchaseHistoryTest.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/tests/AcceptanceTests/MemberedBuyer/ReviewPurchaseHistoryTest.java	(date 1592314856744)
@@ -1,30 +1,56 @@
 package tests.AcceptanceTests.MemberedBuyer;
 
+import Domain.UserClasses.UserPurchase;
+import Domain.Store.StorePurchase;
+import Domain.info.ProductDetails;
+import Service_Layer.guest_accese.guest_accese;
+import org.junit.Assert;
 import org.junit.BeforeClass;
 import org.junit.Test;
 import tests.AcceptanceTests.BaseAccTest;
+import tests.AcceptanceTests.GuestBuyer.BaseGuestTest;
+import tests.AcceptanceTests.GuestBuyer.LoginTest;
 import tests.AcceptanceTests.GuestBuyer.PurchaseTest;
+import tests.AcceptanceTests.auxiliary.CreditCards;
+
+import java.util.Collections;
+import java.util.LinkedList;
+import java.util.List;
 
 import static org.junit.Assert.fail;
 import static tests.AcceptanceTests.GuestBuyer.LoginTest.PASSWORD;
 import static tests.AcceptanceTests.GuestBuyer.LoginTest.USERNAME;
+import static tests.AcceptanceTests.auxiliary.Products.PRODUCT1;
+import static tests.AcceptanceTests.MemberedBuyer.OpenStoreTest.STORE;
+import static tests.AcceptanceTests.auxiliary.Products.PRODUCT2;
 
 public class ReviewPurchaseHistoryTest extends BaseAccTest {
+    private static int guestID;
 // TODO: implement later
 
     @BeforeClass
     public static void setUpClass() {
+        BaseGuestTest.setUpClass();
+        LoginTest.setUpClass();
         PurchaseTest.setUpClass();
-        system.login(USERNAME, PASSWORD);   // do login with guest id
-        //TODO: check that login keep the guest cart
-        //  call purchase
+        guestID = BaseGuestTest.guestID;
+
+        system.login(guestID, USERNAME, PASSWORD);   // do login with guest id
+        Assert.assertTrue(guest_accese.usecase2_8_Purchase_products(guestID, CreditCards.card1, "london"));         // valid card, should work
     }
 
     @Test
     public void reviewPurchaseHistory() {
-        fail("not implemented!");
-//        List<PurchaseDetails> TruePurchases = Arrays.asList();
-//        List<PurchaseDetails> purchases = system.viewPurchaseHistory();
-//        assertEqualsLists(TruePurchases, purchases);
+        UserPurchase p = new UserPurchase();
+        List<ProductDetails> prodects = new LinkedList<>();
+        prodects.add(new ProductDetails(PRODUCT1.getName(), new LinkedList<>(), STORE.getName(), 1, PRODUCT1.getPrice()));
+        prodects.add(new ProductDetails(PRODUCT2.getName(), new LinkedList<>(), STORE.getName(), 5, PRODUCT2.getPrice()));
+        double price = 1 * PRODUCT1.getPrice() + 5 * PRODUCT2.getPrice();
+        p.eachPurchase.add(new StorePurchase(prodects, STORE.getName(), price));
+        p.TotalePrice = price;
+
+        List<UserPurchase> TruePurchases = Collections.singletonList(p);
+        List<UserPurchase> purchases = system.getPurchaseHistory(USERNAME, PASSWORD);
+        assertEqualsLists(TruePurchases, purchases);
     }
 }
Index: src/tests/AcceptanceTests/SystemManager/ViewPurchasesHistoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tests.AcceptanceTests.SystemManager;\n\nimport org.junit.Test;\nimport tests.AcceptanceTests.BaseAccTest;\n\nimport static org.junit.Assert.fail;\n\npublic class ViewPurchasesHistoryTest extends BaseAccTest {\n//  TODO: implement later\n// same as ReviewPurchaseHistory\n// do both for user and for store\n    @Test\n    public void reviewUserPurchaseHistory() {\n        fail(\"not implemented!\");\n    //        List<PurchaseDetails> TruePurchases = Arrays.asList();\n    //        List<PurchaseDetails> purchases = system.viewPurchaseHistory();\n    //        assertEqualsLists(TruePurchases, purchases);\n    }\n\n    @Test\n    public void reviewStoreSellingHistory() {\n        fail(\"not implemented!\");\n        //        List<PurchaseDetails> TruePurchases = Arrays.asList();\n        //        List<PurchaseDetails> purchases = system.viewPurchaseHistory();\n        //        assertEqualsLists(TruePurchases, purchases);\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/tests/AcceptanceTests/SystemManager/ViewPurchasesHistoryTest.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/tests/AcceptanceTests/SystemManager/ViewPurchasesHistoryTest.java	(date 1592314856744)
@@ -1,28 +1,76 @@
 package tests.AcceptanceTests.SystemManager;
 
+import Domain.UserClasses.UserPurchase;
+import Domain.Store.StorePurchase;
+import Domain.info.ProductDetails;
+import Service_Layer.guest_accese.guest_accese;
+import org.junit.Assert;
+import org.junit.BeforeClass;
 import org.junit.Test;
 import tests.AcceptanceTests.BaseAccTest;
+import tests.AcceptanceTests.GuestBuyer.BaseGuestTest;
+import tests.AcceptanceTests.GuestBuyer.LoginTest;
+import tests.AcceptanceTests.GuestBuyer.PurchaseTest;
+import tests.AcceptanceTests.auxiliary.CreditCards;
+import tests.AcceptanceTests.auxiliary.PurchaseDetails;
+
+import java.util.Collections;
+import java.util.LinkedList;
+import java.util.List;
 
 import static org.junit.Assert.fail;
+import static tests.AcceptanceTests.GuestBuyer.LoginTest.PASSWORD;
+import static tests.AcceptanceTests.GuestBuyer.LoginTest.USERNAME;
+import static tests.AcceptanceTests.MemberedBuyer.OpenStoreTest.STORE;
+import static tests.AcceptanceTests.auxiliary.Products.PRODUCT1;
+import static tests.AcceptanceTests.auxiliary.Products.PRODUCT2;
 
 public class ViewPurchasesHistoryTest extends BaseAccTest {
-//  TODO: implement later
-// same as ReviewPurchaseHistory
-// do both for user and for store
+
+    private static int guestID;
+
+    @BeforeClass
+    public static void setUpClass() {
+        BaseGuestTest.setUpClass();
+        LoginTest.setUpClass();
+        PurchaseTest.setUpClass();
+        guestID = BaseGuestTest.guestID;
+
+        system.login(guestID, USERNAME, PASSWORD);   // do login with guest id
+        Assert.assertTrue(guest_accese.usecase2_8_Purchase_products(guestID, CreditCards.card1, "london"));         // valid card, should work
+    }
+
     @Test
     public void reviewUserPurchaseHistory() {
-        fail("not implemented!");
-    //        List<PurchaseDetails> TruePurchases = Arrays.asList();
-    //        List<PurchaseDetails> purchases = system.viewPurchaseHistory();
-    //        assertEqualsLists(TruePurchases, purchases);
+        UserPurchase p = new UserPurchase();
+        List<ProductDetails> prodects = new LinkedList<>();
+        prodects.add(new ProductDetails(PRODUCT1.getName(),new LinkedList<>(), STORE.getName(), 1, PRODUCT1.getPrice()));
+        prodects.add(new ProductDetails(PRODUCT2.getName(),new LinkedList<>(), STORE.getName(), 5, PRODUCT2.getPrice()));
+        double price = 1*PRODUCT1.getPrice() + 5*PRODUCT2.getPrice();
+        p.eachPurchase.add(new StorePurchase(prodects, STORE.getName(), price));
+        p.TotalePrice = price;
+        List<UserPurchase> TruePurchases = Collections.singletonList(p);
+
+        List<UserPurchase> purchases = system.getPurchaseHistory(USERNAME, PASSWORD);
+
+
+
+        assertEqualsLists(TruePurchases, purchases);
     }
 
     @Test
     public void reviewStoreSellingHistory() {
-        fail("not implemented!");
-        //        List<PurchaseDetails> TruePurchases = Arrays.asList();
-        //        List<PurchaseDetails> purchases = system.viewPurchaseHistory();
-        //        assertEqualsLists(TruePurchases, purchases);
+
+        List<ProductDetails> prodects = new LinkedList<>();
+        prodects.add(new ProductDetails(PRODUCT1.getName(),new LinkedList<>(), STORE.getName(), 1, PRODUCT1.getPrice()));
+        prodects.add(new ProductDetails(PRODUCT2.getName(),new LinkedList<>(), STORE.getName(), 5, PRODUCT2.getPrice()));
+        double price = 1*PRODUCT1.getPrice() + 5*PRODUCT2.getPrice();
+
+        List<StorePurchase> TruePurchases = Collections.singletonList(new StorePurchase(prodects, STORE.getName(), price));
+
+        List<StorePurchase> purchases = system.getStoreSellingHistory(USERNAME, PASSWORD, STORE.getName());
+
+        assertEqualsLists(TruePurchases, purchases);
     }
 
 }
Index: src/Domain/info/ProductDetails.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Domain.info;\n\n\nimport Domain.Store.Product;\n\nimport java.util.*;\n\npublic class ProductDetails {\n    public String getName() {\n        return name;\n    }\n\n    private List<String> keyWords;\n    private String name;\n    private List<String> category;\n    private String storeName;\n    private int amount;\n    private int rating;\n    private double price;\n\n    public ProductDetails(String name, List<String> category, String storeName, int amount,double price) {\n        this.name = name;\n        this.category = new LinkedList<>();\n        this.category.addAll(category);\n        this.storeName = storeName;\n        this.amount = amount;\n        this.price = price;\n        this.keyWords = Arrays.asList(name.split(\" \"));\n    }\n\n    public ProductDetails(String name, List<String> category, String storeName, int amount,double price, int rating) {\n        this.name = name;\n        this.category = new LinkedList<>();\n        this.category.addAll(category);\n        this.storeName = storeName;\n        this.amount = amount;\n        this.price = price;\n        this.keyWords = Arrays.asList(name.split(\" \"));\n        this.rating = rating;\n    }\n\n    public ProductDetails(Product pro, int amount) {\n        this.name = pro.getName();\n        this.category = new LinkedList<String>();\n        category.addAll(pro.getCategory());\n        this.storeName = pro.getStore().getName();\n        this.amount = amount;\n        keyWords = new LinkedList<>(pro.getKeyWords());\n        this.price = pro.getPrice();\n        this.rating = pro.getRating();\n    }\n\n\n\n\tpublic double getPrice() {\n    \treturn price;\n    }\n    \n    public List<String>  getKeyWords(){\n    \treturn keyWords;\n    }\n    \n    public List<String>  getCategory() {\n        return category;\n    }\n\n    public String getStoreName() {\n        return storeName;\n    }\n   \n    public int getAmount() {\n\t\treturn amount;\n\t}\n\n\tpublic void setAmount(int amount) {\n\t\tthis.amount = amount;\n\t}\n\n    public int getRating() {\n        return rating;\n    }\n\n    static public List<ProductDetails> adapteProdactList(Collection<Product> list)\n    {\n    \tLinkedList<ProductDetails> output = new LinkedList<ProductDetails>();\n    \tfor (Product product : list) {\n\t\t\toutput.add(new ProductDetails(product,product.getAmount()));\n\t\t}\n    \treturn output;\n    }\n\n\tstatic public ProductDetails Copy(ProductDetails other)\n\t{\n\t\treturn new ProductDetails(other.name,other.getCategory(),other.getStoreName(),other.getAmount(),other.price, other.getRating());\n\t}\n\n    @Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        ProductDetails that = (ProductDetails) o;\n        return //amount == that.amount &&\n                rating == that.rating &&\n                Double.compare(that.price, price) == 0 &&\n                Objects.equals(keyWords, that.keyWords) &&\n                Objects.equals(name, that.name) &&\n                Objects.equals(category, that.category) &&\n                Objects.equals(storeName, that.storeName);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/info/ProductDetails.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Domain/info/ProductDetails.java	(date 1592314856744)
@@ -18,7 +18,7 @@
     private int rating;
     private double price;
 
-    public ProductDetails(String name, List<String> category, String storeName, int amount,double price) {
+    public ProductDetails(String name, List<String> category, String storeName, int amount, double price) {
         this.name = name;
         this.category = new LinkedList<>();
         this.category.addAll(category);
@@ -26,9 +26,21 @@
         this.amount = amount;
         this.price = price;
         this.keyWords = Arrays.asList(name.split(" "));
+        this.rating = 0;
+    }
+
+    public ProductDetails(String name, List<String> category, List<String> kewwords, String storeName, int amount, double price) {
+        this.name = name;
+        this.category = new LinkedList<>();
+        this.category.addAll(category);
+        this.storeName = storeName;
+        this.amount = amount;
+        this.price = price;
+        this.keyWords = kewwords;
+        this.rating = 0;
     }
 
-    public ProductDetails(String name, List<String> category, String storeName, int amount,double price, int rating) {
+    public ProductDetails(String name, List<String> category, String storeName, int amount, double price, int rating) {
         this.name = name;
         this.category = new LinkedList<>();
         this.category.addAll(category);
@@ -43,7 +55,7 @@
         this.name = pro.getName();
         this.category = new LinkedList<String>();
         category.addAll(pro.getCategory());
-        this.storeName = pro.getStore().getName();
+        this.storeName = pro.getStore();
         this.amount = amount;
         keyWords = new LinkedList<>(pro.getKeyWords());
         this.price = pro.getPrice();
@@ -51,60 +63,80 @@
     }
 
 
-
-	public double getPrice() {
-    	return price;
+    public double getPrice() {
+        return price;
     }
-    
-    public List<String>  getKeyWords(){
-    	return keyWords;
+
+    public double getTotalPrice() {
+        return price * amount;
+    }
+
+    public List<String> getKeyWords() {
+        return keyWords;
     }
-    
-    public List<String>  getCategory() {
+
+    public List<String> getCategory() {
         return category;
     }
 
     public String getStoreName() {
         return storeName;
     }
-   
+
     public int getAmount() {
-		return amount;
-	}
+        return amount;
+    }
 
-	public void setAmount(int amount) {
-		this.amount = amount;
-	}
+    public void setAmount(int amount) {
+        this.amount = amount;
+    }
 
     public int getRating() {
         return rating;
     }
 
-    static public List<ProductDetails> adapteProdactList(Collection<Product> list)
-    {
-    	LinkedList<ProductDetails> output = new LinkedList<ProductDetails>();
-    	for (Product product : list) {
-			output.add(new ProductDetails(product,product.getAmount()));
-		}
-    	return output;
+    static public List<ProductDetails> adapteProdactList(Collection<Product> list) {
+        LinkedList<ProductDetails> output = new LinkedList<ProductDetails>();
+        for (Product product : list) {
+            output.add(new ProductDetails(product, product.getAmount()));
+        }
+        return output;
     }
 
-	static public ProductDetails Copy(ProductDetails other)
-	{
-		return new ProductDetails(other.name,other.getCategory(),other.getStoreName(),other.getAmount(),other.price, other.getRating());
-	}
+    static public ProductDetails Copy(ProductDetails other) {
+        return new ProductDetails(other.name, other.getCategory(), other.getStoreName(), other.getAmount(), other.price, other.getRating());
+    }
 
+
     @Override
     public boolean equals(Object o) {
         if (this == o) return true;
         if (o == null || getClass() != o.getClass()) return false;
-        ProductDetails that = (ProductDetails) o;
-        return //amount == that.amount &&
-                rating == that.rating &&
-                Double.compare(that.price, price) == 0 &&
-                Objects.equals(keyWords, that.keyWords) &&
-                Objects.equals(name, that.name) &&
-                Objects.equals(category, that.category) &&
-                Objects.equals(storeName, that.storeName);
+        ProductDetails details = (ProductDetails) o;
+        return //getAmount() == details.getAmount() &&
+                //getRating() == details.getRating() &&
+                //Double.compare(details.getPrice(), getPrice()) == 0 &&
+                //Objects.equals(getKeyWords(), details.getKeyWords()) &&
+                Objects.equals(getName(), details.getName()) &&
+                //Objects.equals(getCategory(), details.getCategory()) &&
+                Objects.equals(getStoreName(), details.getStoreName());
+    }
+
+    @Override
+    public int hashCode() {
+        return Objects.hash(getKeyWords(), getName(), getCategory(), getStoreName(), getAmount(), getRating());
+    }
+
+    @Override
+    public String toString() {
+        return "ProductDetails{" +
+                "keyWords=" + keyWords +
+                ", name='" + name + '\'' +
+                ", category=" + category +
+                ", storeName='" + storeName + '\'' +
+                ", amount=" + amount +
+                ", rating=" + rating +
+                ", price=" + price +
+                '}';
     }
 }
Index: src/Domain/info/MangaerPermesions.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Domain.info;\r\n\r\nimport java.util.Arrays;\r\nimport java.util.Collection;\r\nimport java.util.Set;\r\n\r\npublic class MangaerPermesions {\r\n\r\n\tpublic static final String[] permesions = { \"addItem\", \"editItem\", \"removeItem\", \"getPurchaseHistory\", \"viewQuestions\",\r\n\t\t\t\"giveRespond\", \"appointOwner\", \"appointManager\", \"fire\", \"getfire\", \"editManagerPermesions\" };\r\n\r\n\tpublic static final Collection<String> defult_permesions =Arrays.asList( \"getPurchaseHistory\", \"viewQuestions\", \"giveRespond\");\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/info/MangaerPermesions.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Domain/info/MangaerPermesions.java	(date 1592314856744)
@@ -7,7 +7,7 @@
 public class MangaerPermesions {
 
 	public static final String[] permesions = { "addItem", "editItem", "removeItem", "getPurchaseHistory", "viewQuestions",
-			"giveRespond", "appointOwner", "appointManager", "fire", "getfire", "editManagerPermesions" };
+			"giveRespond", "appointOwner", "appointManager", "fire", "getfire", "editManagerPermesions" ,"addDiscount","removeDiscount","addacquisition","removeacquisition"};
 
 	public static final Collection<String> defult_permesions =Arrays.asList( "getPurchaseHistory", "viewQuestions", "giveRespond");
 
Index: src/Domain/info/StoreInfo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Domain.info;\n\nimport tests.AcceptanceTests.auxiliary.StoreDetails;\n\nimport java.util.Collection;\nimport java.util.LinkedList;\nimport java.util.List;\n\npublic class StoreInfo {\n\n\tpublic String name;\n\tpublic String address;\n\tpublic int rating;\n\tpublic List<ProductDetails> products;\n\n\tpublic StoreInfo(String name, String address, int rating, Collection<ProductDetails> products) {\n\t\tthis.name = name;\n\t\tthis.address = address;\n\t\tthis.rating = rating;\n\t\t//maybe we dont need products here\n\t\tthis.products = new LinkedList<ProductDetails>();\n\t\tfor (ProductDetails product : products) {\n\t\t\tthis.products.add(product);\n\t\t}\n\t}\n\n\tpublic StoreInfo(StoreDetails store) {\n\t\tthis.name = store.getName();\n\t\tthis.address = store.getAdress();\n\t\tthis.rating = store.getRating();\n\t\tthis.products = new LinkedList<ProductDetails>();\n\n\t}\n\n\tpublic StoreInfo(String name, String address, int rating) {\n\t\tthis.name = name;\n\t\tthis.address = address;\n\t\tthis.rating = rating;\n\t\tthis.products = new LinkedList<ProductDetails>();\n\t}\n\n//\tpublic StoreInfo(String name, String address, int rating, Collection<Product> products) {\n//\t\tthis.name = name;\n//\t\tthis.address = address;\n//\t\tthis.rating = rating;\n//\t\tthis.products = new LinkedList<ProductDetails>();\n//\t\tfor (Product product : products) {\n//\t\t\tthis.products.add(new ProductDetails(product,product.getAmount()));\n//\t\t}\n//\t}\n\n\tpublic List<ProductDetails> getProducts() {\n\t\treturn products;\n\t}\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/info/StoreInfo.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Domain/info/StoreInfo.java	(date 1592314856744)
@@ -1,11 +1,11 @@
 package Domain.info;
 
-import tests.AcceptanceTests.auxiliary.StoreDetails;
-
 import java.util.Collection;
 import java.util.LinkedList;
 import java.util.List;
 
+import tests.AcceptanceTests.auxiliary.StoreDetails;
+
 public class StoreInfo {
 
 	public String name;
@@ -49,7 +49,4 @@
 //		}
 //	}
 
-	public List<ProductDetails> getProducts() {
-		return products;
-	}
 }
Index: src/Domain/Store/concreate_Product.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/Store/concreate_Product.java	(date 1592314856744)
+++ src/Domain/Store/concreate_Product.java	(date 1592314856744)
@@ -0,0 +1,10 @@
+package Domain.Store;
+
+public class concreate_Product {
+    final String lable ="this is a product";
+
+    @Override
+    public String toString(){
+        return lable;
+    }
+}
Index: src/tests/AcceptanceTests/auxiliary/CreditCards.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/tests/AcceptanceTests/auxiliary/CreditCards.java	(date 1592314856744)
+++ src/tests/AcceptanceTests/auxiliary/CreditCards.java	(date 1592314856744)
@@ -0,0 +1,11 @@
+package tests.AcceptanceTests.auxiliary;
+
+import Domain.info.ProductDetails;
+import extornal.payment.CreditCard;
+
+import java.util.Arrays;
+
+public class CreditCards {
+    public static CreditCard card1 = new CreditCard("1234-4321-1234-4321", "06/23", "123", "yosi pil");
+    public static CreditCard unvalid_card = new CreditCard("1234-4321-1234-4321", "06/19", "123", "yosi pil");
+}
Index: src/tests/UnitTests/InventoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/tests/UnitTests/InventoryTest.java	(date 1592314856756)
+++ src/tests/UnitTests/InventoryTest.java	(date 1592314856756)
@@ -0,0 +1,86 @@
+package tests.UnitTests;
+
+import Domain.Store.Product;
+import Domain.Store.Store_Inventory;
+import extornal.supply.Packet_Of_Prodacts;
+import org.junit.Before;
+import org.junit.Test;
+
+import java.util.LinkedList;
+import java.util.List;
+
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertTrue;
+
+public class InventoryTest {
+
+    Store_Inventory myInventory;
+    Product P1;
+    Product P2;
+
+    @Before
+    public void setup() {
+        myInventory = new Store_Inventory();
+        List<String> Keywords = new LinkedList<>();
+        Keywords.add("aaa");
+        Keywords.add("bbb");
+        List<String> Category = new LinkedList<>();
+        Category.add("Cats");
+        Category.add("dogs");
+        P1 = new Product("item 1", Category,new LinkedList<>(), 34.3, 4,"Mystore");
+        P2 = new Product("item 2", new LinkedList<>(),Keywords, 12.4, 2,"Mystore");
+        //Product p = new Product( "item 1", new LinkedList<>(), new LinkedList<>(),  12,  5,  store);
+
+    }
+
+    @Test
+    public void addItem() {
+        // setup();
+        myInventory.recive_item(new Packet_Of_Prodacts(P1));
+
+        assertEquals(1,myInventory.items.size());
+        assertEquals(P1,myInventory.getItem(P1.getName()));
+
+    }
+
+    @Test
+    public void add2Item() {
+        // setup();
+        myInventory.recive_item(new Packet_Of_Prodacts(P1));
+        myInventory.recive_item(new Packet_Of_Prodacts(P2));
+
+        assertEquals(2,myInventory.items.size());
+        assertEquals(P1,myInventory.getItem(P1.getName()));
+        assertEquals(P2,myInventory.getItem(P2.getName()));
+
+    }
+    @Test
+    public void RemoveItem() {
+        // setup();
+        myInventory.recive_item(new Packet_Of_Prodacts(P1));
+        myInventory.recive_item(new Packet_Of_Prodacts(P2));
+        myInventory.removeProduct(P1.getName());
+
+        assertEquals(1,myInventory.items.size());
+        assertEquals(P2,myInventory.getItem(P2.getName()));
+    }
+
+    @Test
+    public void keywordsCheck() {
+        // setup();
+        myInventory.recive_item(new Packet_Of_Prodacts(P1));
+        myInventory.recive_item(new Packet_Of_Prodacts(P2));
+
+        assertTrue(myInventory.findProductByKeyword("aaa").contains(P2));
+    }
+
+    @Test
+    public void CategoryCheck() {
+        // setup();
+        myInventory.recive_item(new Packet_Of_Prodacts(P1));
+        myInventory.recive_item(new Packet_Of_Prodacts(P2));
+
+        assertTrue(myInventory.findProductByCategory("dogs").contains(P1));
+    }
+}
+
Index: src/Domain/Store/Product.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Domain.Store;\n\nimport Domain.info.ProductDetails;\nimport Domain.store_System.System;\n\nimport java.util.LinkedList;\nimport java.util.List;\n\npublic class Product extends Object  implements IProduct{\n    private String name;\n    private List<String> category;\n    private List<String> keyWords;\n    private double price;\n    private int rating;\n    private StoreImp store;\n    private int amount;\n\n    public Product(String name , List<String> category, List<String> keyWords , double price , int rating, StoreImp store) {\n        this.name = name;\n        this.category=new LinkedList<String>();\n        this.category.addAll(category);\n        this.keyWords=keyWords;\n        this.price=price;\n        this.rating=rating;\n        this.store=store;\n        amount=0;\n    }\n\n    public Product(ProductDetails p) {\n\t\tname = p.getName();\n\t\tcategory = new LinkedList<>(p.getCategory());\n\t\tkeyWords = new LinkedList<>(p.getKeyWords());\n\t\tprice = p.getPrice();\n\t\trating = p.getRating();\n\t\tamount = p.getAmount();\n\t\tstore = System.getInstance().getStoreDetails(p.getStoreName());\n\t}\n\n\tpublic String getName() {\n        return name;\n    }\n\n    public List<String> getCategory() {\n        return category;\n    }\n\n    public List<String> getKeyWords() {\n        return keyWords;\n    }\n\n    public double getPrice() {\n        return price;\n    }\n\n    public int getRating() {\n        return rating;\n    }\n\n    public StoreImp getStore() {\n        return store;\n    }\n\n    public boolean compare(Product p){\n        return this.name==p.name && this.category==p.category && this.store==p.store && this.price==p.price && this.rating==p.rating;\n    }\n\n    public void edit(Product p){\n        this.price=p.price;\n        this.category=p.category;\n        this.name=p.name;\n        this.keyWords=p.keyWords;\n        this.rating=p.rating;\n    }\n\n    public void addToAmount(int add){\n        amount+=add;\n    }\n\n    public int getAmount(){\n        return amount;\n    }\n\n    public int removeAmount(int amount){\n        if(this.amount<amount){\n            this.amount=0;\n            return this.amount;\n        }else{\n            this.amount=this.amount-amount;\n            return amount;\n        }\n    }\n\n    @Override\n    public String toString()\n    {\n    \tString output =\"\";\n    \toutput +=\"name:\"+ name + \"\\n\";\n    \toutput +=\"category:\"+ category + \"\\n\";\n    \toutput +=\"rating:\"+ rating + \"\\n\";\n    \toutput +=\"amount:\"+ amount + \"\\n\";\n    \toutput +=\"price:\"+ price + \"\\n\";\n    \treturn output;\n    \t\t\t\n    }\n    \n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/Store/Product.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Domain/Store/Product.java	(date 1592314856744)
@@ -1,42 +1,50 @@
 package Domain.Store;
 
 import Domain.info.ProductDetails;
-import Domain.store_System.System;
 
 import java.util.LinkedList;
 import java.util.List;
+import java.util.Stack;
 
-public class Product extends Object  implements IProduct{
+public class Product extends Object implements IProduct {
     private String name;
     private List<String> category;
     private List<String> keyWords;
     private double price;
     private int rating;
-    private StoreImp store;
-    private int amount;
+    private Stack<concreate_Product> Amount = new Stack<>();
+    private String storename;
+    //private int amount;
 
-    public Product(String name , List<String> category, List<String> keyWords , double price , int rating, StoreImp store) {
+    public Product(String name, List<String> category, List<String> keyWords, double price, int rating, String storename) {
         this.name = name;
-        this.category=new LinkedList<String>();
+        this.category = new LinkedList<String>();
         this.category.addAll(category);
-        this.keyWords=keyWords;
-        this.price=price;
-        this.rating=rating;
-        this.store=store;
-        amount=0;
+        this.keyWords = keyWords;
+        this.price = price;
+        this.rating = rating;
+        this.storename = storename;
+        //this.store=store;
+        //amount=0;
     }
 
     public Product(ProductDetails p) {
-		name = p.getName();
-		category = new LinkedList<>(p.getCategory());
-		keyWords = new LinkedList<>(p.getKeyWords());
-		price = p.getPrice();
-		rating = p.getRating();
-		amount = p.getAmount();
-		store = System.getInstance().getStoreDetails(p.getStoreName());
-	}
+        name = p.getName();
+        category = new LinkedList<>(p.getCategory());
+        keyWords = new LinkedList<>(p.getKeyWords());
+        storename = p.getStoreName();
+        price = p.getPrice();
+        rating = p.getRating();
+        for (int i = 0; i < p.getAmount(); i++)
+            Amount.add(new concreate_Product());
+        //amount = p.getAmount();
+        //store = System.getInstance().getStoreDetails(p.getStoreName());
+        storename = p.getStoreName();
+    }
+
+
 
-	public String getName() {
+    public String getName() {
         return name;
     }
 
@@ -56,51 +64,58 @@
         return rating;
     }
 
-    public StoreImp getStore() {
-        return store;
+    public String getStore() {
+        return storename;
     }
-
-    public boolean compare(Product p){
-        return this.name==p.name && this.category==p.category && this.store==p.store && this.price==p.price && this.rating==p.rating;
-    }
+//
+//    public boolean compare(Product p) {
+//        return this.name.compareTo(p.name) == 0 && this.category == p.category && this.storename.compareTo(p.storename) == 0 && this.price == p.price && this.rating == p.rating;
+//    }
 
-    public void edit(Product p){
-        this.price=p.price;
-        this.category=p.category;
-        this.name=p.name;
-        this.keyWords=p.keyWords;
-        this.rating=p.rating;
+    public void edit(Product p) {
+        this.price = p.price;
+        this.category = p.category;
+        this.name = p.name;
+        this.keyWords = p.keyWords;
+        this.rating = p.rating;
     }
 
-    public void addToAmount(int add){
-        amount+=add;
+    public void addToAmount(int add) {
+
+        for (int i = 0; i < add; i++)
+            Amount.add(new concreate_Product());
+        // amount+=add;
     }
 
-    public int getAmount(){
-        return amount;
+    public int getAmount() {
+        return Amount.size();
+        //return amount;
     }
 
-    public int removeAmount(int amount){
-        if(this.amount<amount){
-            this.amount=0;
-            return this.amount;
-        }else{
-            this.amount=this.amount-amount;
+    public int removeAmount(int amount) {
+        if (Amount.size() < amount) {
+            int temp = Amount.size();
+            Amount = new Stack<>();
+            return temp;
+        } else {
+            for (int i = 0; i < amount; i++)
+                Amount.pop();
+            // this.amount = this.amount - amount;
             return amount;
         }
     }
 
     @Override
-    public String toString()
-    {
-    	String output ="";
-    	output +="name:"+ name + "\n";
-    	output +="category:"+ category + "\n";
-    	output +="rating:"+ rating + "\n";
-    	output +="amount:"+ amount + "\n";
-    	output +="price:"+ price + "\n";
-    	return output;
-    			
+    public String toString() {
+        String output = "";
+        output += "name:" + name + "\n";
+        output += "category:" + category + "\n";
+        output += "rating:" + rating + "\n";
+        output += "amount:" + Amount.size() + "\n";
+        output += "price:" + price + "\n";
+        output += "stroe:" + storename + "\n";
+        return output;
+
     }
-    
+
 }
Index: src/Domain/Store/Store_Inventory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Domain.Store;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.LinkedList;\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\nimport Domain.info.ProductDetails;\r\nimport extornal.supply.Packet_Of_Prodacts;\r\nimport extornal.supply.inventory;\r\n\r\npublic class Store_Inventory implements inventory {\r\n\r\n\tMap<String, Product> items = new HashMap<String, Product>();\r\n\r\n\t@Override\r\n\tpublic boolean recive_item(Packet_Of_Prodacts pack) {\r\n\t\tif (pack == null || pack.items == null || pack.items.isEmpty())\r\n\t\t\treturn false;\r\n\r\n\t\tfor (Product p : pack.items) {\r\n\t\t\tif (items.containsKey(p.getName()))\r\n\t\t\t\titems.get(p.getName()).addToAmount(p.getAmount());\r\n\t\t\telse\r\n\t\t\t\titems.put(p.getName(), p);\r\n\t\t}\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tpublic boolean removeProduct(String productname) {\r\n\t\tif (!items.containsKey(productname))\r\n\t\t\treturn false;\r\n\t\titems.remove(productname);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic boolean editProduct(String old_p, Product new_p) {\r\n\t\tif (items.containsKey(old_p)) {\r\n\t\t\titems.replace(old_p, new_p);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic List<Product> findProductByCategory(String category) {\r\n\t\tList<Product> toReturn = new LinkedList<>();\r\n\t\tfor (Product p : items.values()) {\r\n\t\t\tif (p != null && p.getCategory().contains(category)) {\r\n\t\t\t\ttoReturn.add(p);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn toReturn;\r\n\t}\r\n\r\n\tpublic List<Product> findProductByKeyword(String keyword) {\r\n\t\tList<Product> toReturn = new LinkedList<>();\r\n\t\tfor (Product p : items.values()) {\r\n\t\t\tif (p != null && p.getKeyWords().contains(keyword)) {\r\n\t\t\t\ttoReturn.add(p);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn toReturn;\r\n\t}\r\n\r\n\r\n\tpublic boolean recive_item(ProductDetails p) {\r\n\t\tif(items.containsKey(p.getName())) {\r\n\t\t\titems.get(p.getName()).addToAmount(p.getAmount());\r\n\t\t}\r\n\t\t\telse\r\n\t\t\t\titems.put(p.getName(), new Product(p));\r\n\t\treturn true;\r\n\t}\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/Store/Store_Inventory.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Domain/Store/Store_Inventory.java	(date 1592314856744)
@@ -11,66 +11,83 @@
 
 public class Store_Inventory implements inventory {
 
-	Map<String, Product> items = new HashMap<String, Product>();
+    public Map<String, Product> items = new HashMap<String, Product>();
 
-	@Override
-	public boolean recive_item(Packet_Of_Prodacts pack) {
-		if (pack == null || pack.items == null || pack.items.isEmpty())
-			return false;
+    @Override
+    public boolean recive_item(Packet_Of_Prodacts pack) {
+        if (pack == null || pack.items == null || pack.items.isEmpty())
+            return false;
 
-		for (Product p : pack.items) {
-			if (items.containsKey(p.getName()))
-				items.get(p.getName()).addToAmount(p.getAmount());
-			else
-				items.put(p.getName(), p);
-		}
-		return true;
+        for (Product p : pack.items) {
+            if (items.containsKey(p.getName()))
+                items.get(p.getName()).addToAmount(p.getAmount());
+            else
+                items.put(p.getName(), p);
+        }
+        return true && checkConstrains_hase1Ofitem();
 
-	}
+    }
 
-	public boolean removeProduct(String productname) {
-		if (!items.containsKey(productname))
-			return false;
-		items.remove(productname);
-		return true;
-	}
+    public boolean removeProduct(String productname) {
+        if (!items.containsKey(productname))
+            return false;
+        items.remove(productname);
+        return true && checkConstrains_hase1Ofitem();
+    }
 
-	public boolean editProduct(String old_p, Product new_p) {
-		if (items.containsKey(old_p)) {
-			items.replace(old_p, new_p);
-			return true;
-		}
-		return false;
-	}
+    public boolean editProduct(String old_p, Product new_p) {
+        if (items.containsKey(old_p)) {
+            items.replace(old_p, new_p);
+            return true &&checkConstrains_hase1Ofitem();
+        }
+        return false;
+    }
 
-	public List<Product> findProductByCategory(String category) {
-		List<Product> toReturn = new LinkedList<>();
-		for (Product p : items.values()) {
-			if (p != null && p.getCategory().contains(category)) {
-				toReturn.add(p);
-			}
-		}
-		return toReturn;
-	}
+    public List<Product> findProductByCategory(String category) {
+        List<Product> toReturn = new LinkedList<>();
+        for (Product p : items.values()) {
+            if (p != null && p.getCategory().contains(category)) {
+                toReturn.add(p);
+            }
+        }
+        return toReturn;
+    }
 
-	public List<Product> findProductByKeyword(String keyword) {
-		List<Product> toReturn = new LinkedList<>();
-		for (Product p : items.values()) {
-			if (p != null && p.getKeyWords().contains(keyword)) {
-				toReturn.add(p);
-			}
-		}
-		return toReturn;
-	}
+    public List<Product> findProductByKeyword(String keyword) {
+        List<Product> toReturn = new LinkedList<>();
+        for (Product p : items.values()) {
+            if (p != null && p.getKeyWords().contains(keyword)) {
+                toReturn.add(p);
+            }
+        }
+        return toReturn;
+    }
 
 
-	public boolean recive_item(ProductDetails p) {
-		if(items.containsKey(p.getName())) {
-			items.get(p.getName()).addToAmount(p.getAmount());
-		}
-			else
-				items.put(p.getName(), new Product(p));
-		return true;
-	}
-
+    public boolean recive_item(ProductDetails p) {
+        if (items.containsKey(p.getName())) {
+            items.get(p.getName()).addToAmount(p.getAmount());
+        } else
+            items.put(p.getName(), new Product(p));
+        return true &&checkConstrains_hase1Ofitem();
+    }
+
+    public ProductDetails findProductDetailsByName(String name) {
+        if (items.containsKey(name))
+            return new ProductDetails(items.get(name), items.get(name).getAmount());
+        return null;
+    }
+
+    public Product getItem(String name) {
+        return items.get(name);
+    }
+
+    public boolean checkConstrains_hase1Ofitem(){
+
+        for (Product P:items.values()) {
+            if(P.getAmount() <0)
+                return false;
+        }
+        return true;
+    }
 }
Index: src/tests/UnitTests/Policies/AcquisitionPolicyTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/tests/UnitTests/Policies/AcquisitionPolicyTest.java	(date 1592314856756)
+++ src/tests/UnitTests/Policies/AcquisitionPolicyTest.java	(date 1592314856756)
@@ -0,0 +1,72 @@
+package tests.UnitTests.Policies;
+
+import Domain.Policies.Acquisitions.AcquisitionPolicy;
+import org.junit.Test;
+
+import static org.junit.Assert.*;
+
+public class AcquisitionPolicyTest {
+    // true
+    private String a1 = "0#p1#20";
+    private String a2 = "1#p2#15";
+    private String a3 = "1#p3#10";
+    private String a4 = "10#2#" + a1 + "#" + a3;
+    private String a5 = "11#0";
+    private String a6 = "11#0##";
+    private String a7 = "11#2#" + a2 + "#" + a1;
+    private String a8 = "12#5#" + a1 + "#" + a2 + "#" + a3 + "#" + a4 + "#" + a7;
+
+    // false
+    private String a9 = "6#5#" + a1 + "#" + a2 + "#" + a3 + "#" + a4 + "#" + a7;
+    private String a10 = "10#3#" + a1;
+
+
+    private String accepted = "Acquisition{\n" +
+            "\t0. Min. amount of 'p1' is 20\n" +
+            "\t1. Max. amount of 'p2' is 15\n" +
+            "\t2. Max. amount of 'p3' is 10\n" +
+            "\t3. AndAcquisition{\n" +
+            "\t\tMin. amount of 'p1' is 20\n" +
+            "\t\tMax. amount of 'p3' is 10\n" +
+            "\t}\n" +
+            "\t4. OrAcquisition{\n" +
+            "\t}\n" +
+            "\t5. OrAcquisition{\n" +
+            "\t}\n" +
+            "\t6. OrAcquisition{\n" +
+            "\t\tMax. amount of 'p2' is 15\n" +
+            "\t\tMin. amount of 'p1' is 20\n" +
+            "\t}\n" +
+            "\t7. XorAcquisition{\n" +
+            "\t\tMin. amount of 'p1' is 20\n" +
+            "\t\tMax. amount of 'p2' is 15\n" +
+            "\t\tMax. amount of 'p3' is 10\n" +
+            "\t\tAndAcquisition{\n" +
+            "\t\t\tMin. amount of 'p1' is 20\n" +
+            "\t\t\tMax. amount of 'p3' is 10\n" +
+            "\t\t}\n" +
+            "\t\tOrAcquisition{\n" +
+            "\t\t\tMax. amount of 'p2' is 15\n" +
+            "\t\t\tMin. amount of 'p1' is 20\n" +
+            "\t\t}\n" +
+            "\t}\n" +
+            "}";
+
+    @Test
+    public void AddDiscounts() {
+        AcquisitionPolicy a = new AcquisitionPolicy();
+        assertTrue(a.addAcquisitionPolicy(a1));
+        assertTrue(a.addAcquisitionPolicy(a2));
+        assertTrue(a.addAcquisitionPolicy(a3));
+        assertTrue(a.addAcquisitionPolicy(a4));
+        assertTrue(a.addAcquisitionPolicy(a5));
+        assertTrue(a.addAcquisitionPolicy(a6));
+        assertTrue(a.addAcquisitionPolicy(a7));
+        assertTrue(a.addAcquisitionPolicy(a8));
+
+        assertFalse(a.addAcquisitionPolicy(a9));
+        assertFalse(a.addAcquisitionPolicy(a10));
+
+        assertEquals(a.toString(), accepted);
+    }
+}
Index: src/Domain/Store/Discount.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Domain.Store;\r\n\r\nimport java.util.Collection;\r\nimport java.util.List;\r\n\r\npublic class Discount {\r\n\r\n\t\r\n\tstatic public Discount Copy(Discount other)\r\n\t{\r\n\t\treturn new Discount();\r\n\t}\r\n\r\n\tpublic double implamentDis(double add) {\r\n\t\treturn add;\r\n\t}\r\n\r\n\t\r\n\tpublic static Collection<Discount> Copy(List<Discount> discounts) {\r\n\t\t// TODO Auto-generated method stub\r\n\t\treturn null;\r\n\t}\r\n\t\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/Store/Discount.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Domain/Store/Discount.java	(date 1592314856740)
@@ -1,6 +1,7 @@
 package Domain.Store;
 
 import java.util.Collection;
+import java.util.LinkedList;
 import java.util.List;
 
 public class Discount {
@@ -17,8 +18,15 @@
 
 	
 	public static Collection<Discount> Copy(List<Discount> discounts) {
-		// TODO Auto-generated method stub
-		return null;
+		List<Discount> lst = new LinkedList<>();
+
+		for (Discount d: discounts) {
+			lst.add(Copy(d));
+		}
+
+		return lst;
 	}
+
+
 	
 }
Index: src/tests/UnitTests/Policies/DiscountPolicyTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/tests/UnitTests/Policies/DiscountPolicyTest.java	(date 1592314856756)
+++ src/tests/UnitTests/Policies/DiscountPolicyTest.java	(date 1592314856756)
@@ -0,0 +1,80 @@
+package tests.UnitTests.Policies;
+
+import Domain.Policies.Discounts.DiscountPolicy;
+import org.junit.Test;
+
+import static org.junit.Assert.*;
+
+public class DiscountPolicyTest {
+    // true
+    private String d1 = "0#p1#20#10/10/2020";
+    private String d2 = "1#p2#15#11/11/2020#2";
+    private String d3 = "2#p3#10#01/11/2020#10.2";
+    private String d4 = "10#2#" + d1 + "#" + d3;
+    private String d5 = "11#0";
+    private String d6 = "11#0##";
+    private String d7 = "11#2#" + d2 + "#" + d1;
+    private String d8 = "12#5#" + d1 + "#" + d2 + "#" + d3 + "#" + d4 + "#" + d7;
+
+    // false
+    private String d9 = "6#5#" + d1 + "#" + d2 + "#" + d3 + "#" + d4 + "#" + d7;
+    private String d10 = "0#5#" + d1 + "#" + d2 + "#" + d3 + "#" + d4 + "#" + d7;
+    private String d11 = "0#p1#20.5#10/10/2020";
+    private String d12 = "0#p1#20#10/13/2020";
+    private String d13 = "0#p1#20#/12/2020";
+    private String d14 = "10#3" + d1;
+
+    private String accepted = "Discounts{\n" +
+            "\t0. Discount on 'p1': 20% until 10/10/2020\n" +
+            "\t1. Discount on 'p2': 15% until 11/11/2020 if Amount >= 2\n" +
+            "\t2. Discount on 'p3': 10% until 01/11/2020 if Price >= 10.2\n" +
+            "\t3. AndDiscount{\n" +
+            "\t\tDiscount on 'p1': 20% until 10/10/2020\n" +
+            "\t\tDiscount on 'p3': 10% until 01/11/2020 if Price >= 10.2\n" +
+            "\t}\n" +
+            "\t4. OrDiscount{\n" +
+            "\t}\n" +
+            "\t5. OrDiscount{\n" +
+            "\t}\n" +
+            "\t6. OrDiscount{\n" +
+            "\t\tDiscount on 'p2': 15% until 11/11/2020 if Amount >= 2\n" +
+            "\t\tDiscount on 'p1': 20% until 10/10/2020\n" +
+            "\t}\n" +
+            "\t7. XorDiscount{\n" +
+            "\t\tDiscount on 'p1': 20% until 10/10/2020\n" +
+            "\t\tDiscount on 'p2': 15% until 11/11/2020 if Amount >= 2\n" +
+            "\t\tDiscount on 'p3': 10% until 01/11/2020 if Price >= 10.2\n" +
+            "\t\tAndDiscount{\n" +
+            "\t\t\tDiscount on 'p1': 20% until 10/10/2020\n" +
+            "\t\t\tDiscount on 'p3': 10% until 01/11/2020 if Price >= 10.2\n" +
+            "\t\t}\n" +
+            "\t\tOrDiscount{\n" +
+            "\t\t\tDiscount on 'p2': 15% until 11/11/2020 if Amount >= 2\n" +
+            "\t\t\tDiscount on 'p1': 20% until 10/10/2020\n" +
+            "\t\t}\n" +
+            "\t}\n" +
+            "}";
+
+
+    @Test
+    public void AddDiscounts() {
+        DiscountPolicy d = new DiscountPolicy();
+        assertTrue(d.addDiscount(d1));
+        assertTrue(d.addDiscount(d2));
+        assertTrue(d.addDiscount(d3));
+        assertTrue(d.addDiscount(d4));
+        assertTrue(d.addDiscount(d5));
+        assertTrue(d.addDiscount(d6));
+        assertTrue(d.addDiscount(d7));
+        assertTrue(d.addDiscount(d8));
+
+        assertFalse(d.addDiscount(d9));
+        assertFalse(d.addDiscount(d10));
+        assertFalse(d.addDiscount(d11));
+        assertFalse(d.addDiscount(d12));
+        assertFalse(d.addDiscount(d13));
+        assertFalse(d.addDiscount(d14));
+
+        assertEquals(d.toString(), accepted);
+    }
+}
Index: src/Domain/Store/StoreImp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Domain.Store;\n\nimport java.util.Collection;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport Domain.Logs.ErrorLogger;\nimport Domain.Logs.EventLogger;\nimport Domain.Store.workers.Creator;\nimport Domain.Store.workers.StoreManager_Imp;\nimport Domain.Store.workers.StoreOwner_Imp;\nimport Domain.info.ProductDetails;\nimport Domain.info.Question;\nimport Domain.info.StoreInfo;\nimport extornal.supply.Packet_Of_Prodacts;\n\npublic class StoreImp implements IStore {\n\tprivate String name;\n\tprivate Creator creator;\n\tprivate Store_Inventory inventory = new Store_Inventory();\n\tprivate Map<String, StoreOwner_Imp> Owners = new HashMap<String, StoreOwner_Imp>();\n\tprivate Map<String, StoreManager_Imp> Managers = new HashMap<String, StoreManager_Imp>();\n\tprivate String address;\n\tprivate int rating;\n\t\n\tprivate Store_Purchase_History purchaseHistory = new Store_Purchase_History();\n\tprivate Map<Product, List<Discount>> discounts = new HashMap<Product, List<Discount>>();\n\tprivate Map<Integer, Question> questions = new HashMap<Integer, Question>();\n\n\tpublic StoreImp(String name, Collection<Product> products, String address, int rating) {\n\n\t\tthis.name = name;\n\t\tinventory.recive_item(new Packet_Of_Prodacts(products));\n\t\t// this.products = products;\n\t\tthis.address = address;\n\t\tthis.rating = rating;\n\t\tEventLogger.GetInstance().Add_Log(this.toString() + \"- new Store is created\");\n\t}\n\n\tpublic StoreImp(String name, String address, int rating) {\n\t\tthis.name = name;\n\t\tthis.address = address;\n\t\tthis.rating = rating;\n\t\tEventLogger.GetInstance().Add_Log(this.toString() + \"- new Store is created without items\");\n\n\t}\n\n\tpublic StoreImp(StoreInfo store) {\n\t\tname = store.name;\n\t\taddress = store.address;\n\t\trating = store.rating;\n\t\tEventLogger.GetInstance().Add_Log(this.toString() + \"- new Store is created without itmes\");\n\n\t}\n\n\tpublic void myCreator(Creator c) {\n\t\tcreator = c;\n\t}\n\n\t// ----------------------------------------------------------------------------------------my\n\t// info\n\tpublic Creator getCreator() {\n\t\treturn creator;\n\t}\n\n\tpublic String getName() {\n\t\treturn name;\n\t}\n\n\tpublic Collection<Product> getProducts() {\n\t\treturn inventory.items.values();\n\t}\n\n\tpublic List<ProductDetails> getProductsDetails() {\n\t\treturn ProductDetails.adapteProdactList(inventory.items.values());\n\t}\n\n\tpublic String getAddress() {\n\t\treturn address;\n\t}\n\n\tpublic int getRating() {\n\t\treturn rating;\n\t}\n\n\tpublic StoreInfo getMyInfo() {\n\t\treturn new StoreInfo(name, address, rating, getProductsDetails());\n\t}\n\n\t// ----------------------------------------------------------------------------------------\n\t// workers\n\tpublic Collection<StoreOwner_Imp> getOwners() {\n\t\treturn Owners.values();\n\t}\n\n\tpublic Collection<StoreManager_Imp> getManagers() {\n\t\treturn Managers.values();\n\t}\n\n\t@Override\n\tpublic List<StorePurchase> viewPurchaseHistory() {\n\n\t\treturn purchaseHistory.PastPurchase;\n\t}\n\n\t@Override\n\tpublic boolean fireManager(String user) {\n\t\tEventLogger.GetInstance().Add_Log(this.toString() + \"- fire manager from store\");\n\t\tif(Managers.containsKey(user) && Owners.containsKey(user))\n\t\t\tErrorLogger.GetInstance().Add_Log(this.toString() + \"- fatel error worker is owner and manager\");\n\t\tif(Managers.containsKey(user)) {\n\t\t\tif(Managers.get(user).getfire())\n\t\t\treturn Managers.remove(user) != null;\n\t\t\t\n\t\t}\n\t\tif(Owners.containsKey(user)) {\n\t\t\tif(Owners.get(user).getfire())\n\t\t\treturn Owners.remove(user) != null;\n\t\t}\n\t\t\n\t\treturn false;\n\t}\n\n//\t@Override\n//\tpublic boolean fireOwner(StoreOwner_Imp user) {\n//\t\tEventLogger.GetInstance().Add_Log(this.toString() + \"- fire Owner from store\");\n//\t\treturn Owners.remove(user.getName()) != null;\n//\t}\n\n\t@Override\n\tpublic boolean appointManager(StoreManager_Imp worker) {\n\t\tif (Managers.containsKey(worker.getName()) || Owners.containsKey(worker.getName())) {\n\t\t\tErrorLogger.GetInstance().Add_Log(this.toString() + \"cant have 2 workers with same names\");\n\t\t\treturn false;\n\t\t}\n\t\tEventLogger.GetInstance().Add_Log(this.toString() + \"- appoint new manager in store\");\n\t\treturn Managers.put(worker.getName(), worker) != null;\n\t}\n\n\t@Override\n\tpublic boolean appointOwner(StoreOwner_Imp worker) {\n\t\tif (Managers.containsKey(worker.getName()) || Owners.containsKey(worker.getName())) {\n\t\t\tErrorLogger.GetInstance().Add_Log(this.toString() + \"cant have 2 workers with same names\");\n\t\t\treturn false;\n\t\t}\n\t\tEventLogger.GetInstance().Add_Log(this.toString() + \"- appoint new manager in store\");\n\t\treturn Owners.put(worker.getName(), worker) != null;\n\t}\n\n\tpublic boolean editManagerPermesions(String managername, List<String> permesions) {\n\t\tStoreManager_Imp m = Managers.get(managername);\n\t\tif (m != null) {\n\t\t\tEventLogger.GetInstance().Add_Log(this.toString() + \"- edit manager permesions\");\n\t\t\treturn m.getNewPermesions(permesions);\n\t\t}\n\t\tErrorLogger.GetInstance().Add_Log(this.toString() + \"edit manager manager dont exsist\");\n\n\t\treturn false;\n\t}\n\n//-------------------------------------------------------------------------- products --\t\n\n\t@Override\n\tpublic boolean editProduct(String OLD_p, Product NEW_p) {\n\t\tEventLogger.GetInstance().Add_Log(this.toString() + \"- edit item\");\n\n\t\treturn inventory.editProduct(OLD_p, NEW_p);\n\t}\n\n\t@Override\n\tpublic boolean removeProduct(String pName) {\n\t\tEventLogger.GetInstance().Add_Log(this.toString() + \"-remove product\");\n\n\t\treturn inventory.removeProduct(pName);\n\t}\n\n\tpublic boolean addProduct(Product p) {\n\n\t\tif (!p.getStore().getName().equals(name)) {\n\t\t\tErrorLogger.GetInstance().Add_Log(this.toString() + \"add product - product store not currect\");\n\n\t\t\treturn false;\n\t\t}\n\t\tEventLogger.GetInstance().Add_Log(this.toString() + \"-add product\");\n\n\t\treturn inventory.recive_item(new Packet_Of_Prodacts(p));\n\t}\n\n\tpublic boolean addProduct(ProductDetails p) {\n\t\tEventLogger.GetInstance().Add_Log(this.toString() + \"-add product\");\n\n\t\treturn inventory.recive_item(p);\n\t}\n\n\tpublic Product findProductByName(String name) {\n\t\treturn inventory.items.get(name);\n\n\t}\n\n\tpublic ProductDetails findProductDetailsByName(String name) {\n\t\tif (inventory.items.containsKey(name))\n\t\t\treturn new ProductDetails(inventory.items.get(name), inventory.items.get(name).getAmount());\n\t\treturn null;\n\t}\n\n\tpublic List<Product> findProductByCategory(String category) {\n\t\treturn inventory.findProductByCategory(category);\n\n\t}\n\n\tpublic List<ProductDetails> findProductDetailsByCategory(String category) {\n\t\treturn ProductDetails.adapteProdactList(inventory.findProductByCategory(category));\n\n\t}\n\n\tpublic List<Product> findProductByKeyword(String keyword) {\n\t\treturn inventory.findProductByKeyword(keyword);\n\n\t}\n\n\tpublic List<ProductDetails> findProductDetailsByKeyword(String keyword) {\n\t\treturn ProductDetails.adapteProdactList(inventory.findProductByKeyword(keyword));\n\n\t}\n\n\tpublic Boolean CheckItemAvailable(ProductDetails item) {\n\t\tif (findProductByName(item.getName()) == null)\n\t\t\treturn false;\n\t\tif (findProductByName(item.getName()).getAmount() > item.getAmount())\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n// ----------------------------------------------------buying\n\n\tpublic double getPrice(String item) {\n\t\tif(findProductByName(item)== null)\n\t\t\tErrorLogger.GetInstance().Add_Log(this.toString() + \"- cant find item to calc price\");\n\t\t\t\n\t\t//TODO add discount type 1 here\n\n\t\treturn findProductByName(item).getPrice();\n\t}\n\n\t@Override\n\tsynchronized public Product TakeItem(String name, int amount) {\n\t\tProduct takeout = null;\n\t\tProduct temp = findProductByName(name);\n\t\tif(temp == null) {\n\t\t\tErrorLogger.GetInstance().Add_Log(this.toString() + \"-takeitem cant find proudct\");\n\t\t\treturn null;\n\t\t}\n\t\tif (temp.getAmount() > amount) {\n\t\t\tEventLogger.GetInstance().Add_Log(this.toString() +\"- taking out products full amount\");\n\t\t\ttakeout = new Product(name, temp.getCategory(), temp.getKeyWords(), temp.getPrice(), amount, this);\n\t\t\ttemp.removeAmount(amount);\n\t\t} else {\n\t\t\tEventLogger.GetInstance().Add_Log(this.toString() +\"- taking out products not full amount\");\n\t\t\ttakeout = new Product(name, temp.getCategory(), temp.getKeyWords(), temp.getPrice(), temp.getAmount(),\n\t\t\t\t\tthis);\n\t\t\ttemp.removeAmount(temp.getAmount());\n\t\t}\n\t\treturn takeout;\n\t}\n\n\tpublic boolean addPurchase(StorePurchase p)\n\t{\n\t\tpurchaseHistory.PastPurchase.add(p);\n\t\treturn true;\n\t}\n\t\n\tpublic List<Discount> getDiscounts(String name) {\n\t\tProduct p = findProductByName(name);\n\t\treturn discounts.get(p);\n\n\t}\n\n\t\n\t// --------------------------------------------------- questions\n\tpublic Collection<Question> getQuestions() {\n\n\t\treturn questions.values();\n\t}\n\n\tpublic boolean respondToQuestion(String ansewer, int qustionID) {\n\t\tquestions.get(qustionID).addAnsewers(ansewer);\n\t\treturn true;\n\n\t}\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/Store/StoreImp.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Domain/Store/StoreImp.java	(date 1592314856744)
@@ -1,12 +1,11 @@
 package Domain.Store;
 
-import java.util.Collection;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
+import java.util.*;
 
 import Domain.Logs.ErrorLogger;
 import Domain.Logs.EventLogger;
+import Domain.Policies.Acquisitions.AcquisitionPolicy;
+import Domain.Policies.Discounts.DiscountPolicy;
 import Domain.Store.workers.Creator;
 import Domain.Store.workers.StoreManager_Imp;
 import Domain.Store.workers.StoreOwner_Imp;
@@ -16,111 +15,111 @@
 import extornal.supply.Packet_Of_Prodacts;
 
 public class StoreImp implements IStore {
-	private String name;
-	private Creator creator;
-	private Store_Inventory inventory = new Store_Inventory();
-	private Map<String, StoreOwner_Imp> Owners = new HashMap<String, StoreOwner_Imp>();
-	private Map<String, StoreManager_Imp> Managers = new HashMap<String, StoreManager_Imp>();
-	private String address;
-	private int rating;
-	
-	private Store_Purchase_History purchaseHistory = new Store_Purchase_History();
-	private Map<Product, List<Discount>> discounts = new HashMap<Product, List<Discount>>();
-	private Map<Integer, Question> questions = new HashMap<Integer, Question>();
+    private String name;
+    private Creator creator;
+    private Store_Inventory inventory = new Store_Inventory();
+    private Map<String, StoreOwner_Imp> Owners = new HashMap<String, StoreOwner_Imp>();
+    private Map<String, StoreManager_Imp> Managers = new HashMap<String, StoreManager_Imp>();
+    private String address;
+    private int rating;
+    private DiscountPolicy discounts = new DiscountPolicy();
+    private AcquisitionPolicy acquisitions = new AcquisitionPolicy();
+
+    private Store_Purchase_History purchaseHistory = new Store_Purchase_History();
+    private Map<Integer, Question> questions = new HashMap<Integer, Question>();
 
-	public StoreImp(String name, Collection<Product> products, String address, int rating) {
+    public StoreImp(String name, Collection<Product> products, String address, int rating) {
 
-		this.name = name;
-		inventory.recive_item(new Packet_Of_Prodacts(products));
-		// this.products = products;
-		this.address = address;
-		this.rating = rating;
-		EventLogger.GetInstance().Add_Log(this.toString() + "- new Store is created");
-	}
+        this.name = name;
+        inventory.recive_item(new Packet_Of_Prodacts(products));
+        // this.products = products;
+        this.address = address;
+        this.rating = rating;
+        EventLogger.GetInstance().Add_Log(this.toString() + "- new Store is created");
+    }
 
-	public StoreImp(String name, String address, int rating) {
-		this.name = name;
-		this.address = address;
-		this.rating = rating;
-		EventLogger.GetInstance().Add_Log(this.toString() + "- new Store is created without items");
+    public StoreImp(String name, String address, int rating) {
+        this.name = name;
+        this.address = address;
+        this.rating = rating;
+        EventLogger.GetInstance().Add_Log(this.toString() + "- new Store is created without items");
 
-	}
+    }
 
-	public StoreImp(StoreInfo store) {
-		name = store.name;
-		address = store.address;
-		rating = store.rating;
-		EventLogger.GetInstance().Add_Log(this.toString() + "- new Store is created without itmes");
+    public StoreImp(StoreInfo store) {
+        name = store.name;
+        address = store.address;
+        rating = store.rating;
+        EventLogger.GetInstance().Add_Log(this.toString() + "- new Store is created without itmes");
 
-	}
+    }
 
-	public void myCreator(Creator c) {
-		creator = c;
-	}
+    public void myCreator(Creator c) {
+        creator = c;
+    }
 
-	// ----------------------------------------------------------------------------------------my
-	// info
-	public Creator getCreator() {
-		return creator;
-	}
+    // ----------------------------------------------------------------------------------------my
+    // info
+    public Creator getCreator() {
+        return creator;
+    }
 
-	public String getName() {
-		return name;
-	}
+    public String getName() {
+        return name;
+    }
 
-	public Collection<Product> getProducts() {
-		return inventory.items.values();
-	}
+    public Collection<Product> getProducts() {
+        return inventory.items.values();
+    }
 
-	public List<ProductDetails> getProductsDetails() {
-		return ProductDetails.adapteProdactList(inventory.items.values());
-	}
+    public List<ProductDetails> getProductsDetails() {
+        return ProductDetails.adapteProdactList(inventory.items.values());
+    }
 
-	public String getAddress() {
-		return address;
-	}
+    public String getAddress() {
+        return address;
+    }
 
-	public int getRating() {
-		return rating;
-	}
+    public int getRating() {
+        return rating;
+    }
 
-	public StoreInfo getMyInfo() {
-		return new StoreInfo(name, address, rating, getProductsDetails());
-	}
+    public StoreInfo getMyInfo() {
+        return new StoreInfo(name, address, rating, getProductsDetails());
+    }
 
-	// ----------------------------------------------------------------------------------------
-	// workers
-	public Collection<StoreOwner_Imp> getOwners() {
-		return Owners.values();
-	}
+    // ---------------------------------------------------------------------------------workers
+    public Collection<StoreOwner_Imp> getOwners() {
+        return Owners.values();
+    }
 
-	public Collection<StoreManager_Imp> getManagers() {
-		return Managers.values();
-	}
+    public Collection<StoreManager_Imp> getManagers() {
+        return Managers.values();
+    }
 
-	@Override
-	public List<StorePurchase> viewPurchaseHistory() {
+    @Override
+    public List<StorePurchase> viewPurchaseHistory() {
 
-		return purchaseHistory.PastPurchase;
-	}
+        return purchaseHistory.PastPurchase;
+    }
 
-	@Override
-	public boolean fireManager(String user) {
-		EventLogger.GetInstance().Add_Log(this.toString() + "- fire manager from store");
-		if(Managers.containsKey(user) && Owners.containsKey(user))
-			ErrorLogger.GetInstance().Add_Log(this.toString() + "- fatel error worker is owner and manager");
-		if(Managers.containsKey(user)) {
-			if(Managers.get(user).getfire())
-			return Managers.remove(user) != null;
-			
-		}
-		if(Owners.containsKey(user)) {
-			if(Owners.get(user).getfire())
-			return Owners.remove(user) != null;
-		}
-		
-		return false;
-	}
+    @Override
+    public boolean fireManager(String user) {
+        EventLogger.GetInstance().Add_Log(this.toString() + "- fire manager from store");
+        if (Managers.containsKey(user) && Owners.containsKey(user))
+            ErrorLogger.GetInstance().Add_Log(this.toString() + "- fatel error worker is owner and manager");
+        if (Managers.containsKey(user)) {
+            if (Managers.get(user).getfire())
+                return Managers.remove(user) != null && CheckTegrati_HaveOwners();
+
+        }
+        if (Owners.containsKey(user)) {
+            if (Owners.get(user).getfire())
+                return Owners.remove(user) != null && CheckTegrati_HaveOwners();
+        }
+
+        return false;
+    }
 
 //	@Override
 //	public boolean fireOwner(StoreOwner_Imp user) {
@@ -128,166 +127,214 @@
 //		return Owners.remove(user.getName()) != null;
 //	}
 
-	@Override
-	public boolean appointManager(StoreManager_Imp worker) {
-		if (Managers.containsKey(worker.getName()) || Owners.containsKey(worker.getName())) {
-			ErrorLogger.GetInstance().Add_Log(this.toString() + "cant have 2 workers with same names");
-			return false;
-		}
-		EventLogger.GetInstance().Add_Log(this.toString() + "- appoint new manager in store");
-		return Managers.put(worker.getName(), worker) != null;
-	}
+    @Override
+    public boolean appointManager(StoreManager_Imp worker) {
+        if (Managers.containsKey(worker.getName()) || Owners.containsKey(worker.getName())) {
+            ErrorLogger.GetInstance().Add_Log(this.toString() + "cant have 2 workers with same names");
+            return false;
+        }
+        EventLogger.GetInstance().Add_Log(this.toString() + "- appoint new manager in store");
+        return Managers.put(worker.getName(), worker) != null && CheckTegrati_HaveOwners();
+    }
 
-	@Override
-	public boolean appointOwner(StoreOwner_Imp worker) {
-		if (Managers.containsKey(worker.getName()) || Owners.containsKey(worker.getName())) {
-			ErrorLogger.GetInstance().Add_Log(this.toString() + "cant have 2 workers with same names");
-			return false;
-		}
-		EventLogger.GetInstance().Add_Log(this.toString() + "- appoint new manager in store");
-		return Owners.put(worker.getName(), worker) != null;
-	}
+    @Override
+    public boolean appointOwner(StoreOwner_Imp worker) {
+        if (Managers.containsKey(worker.getName()) || Owners.containsKey(worker.getName())) {
+            ErrorLogger.GetInstance().Add_Log(this.toString() + "cant have 2 workers with same names");
+            return false;
+        }
+        EventLogger.GetInstance().Add_Log(this.toString() + "- appoint new manager in store");
+        return Owners.put(worker.getName(), worker) != null && CheckTegrati_HaveOwners();
+    }
 
-	public boolean editManagerPermesions(String managername, List<String> permesions) {
-		StoreManager_Imp m = Managers.get(managername);
-		if (m != null) {
-			EventLogger.GetInstance().Add_Log(this.toString() + "- edit manager permesions");
-			return m.getNewPermesions(permesions);
-		}
-		ErrorLogger.GetInstance().Add_Log(this.toString() + "edit manager manager dont exsist");
+    public boolean editManagerPermesions(String managername, List<String> permesions) {
+        StoreManager_Imp m = Managers.get(managername);
+        if (m != null) {
+            EventLogger.GetInstance().Add_Log(this.toString() + "- edit manager permesions");
+            return m.getNewPermesions(permesions);
+        }
+        ErrorLogger.GetInstance().Add_Log(this.toString() + "edit manager manager dont exsist");
 
-		return false;
-	}
+        return false;
+    }
 
 //-------------------------------------------------------------------------- products --	
 
-	@Override
-	public boolean editProduct(String OLD_p, Product NEW_p) {
-		EventLogger.GetInstance().Add_Log(this.toString() + "- edit item");
+    @Override
+    public boolean editProduct(String OLD_p, Product NEW_p) {
+        EventLogger.GetInstance().Add_Log(this.toString() + "- edit item");
 
-		return inventory.editProduct(OLD_p, NEW_p);
-	}
+        return inventory.editProduct(OLD_p, NEW_p);
+    }
 
-	@Override
-	public boolean removeProduct(String pName) {
-		EventLogger.GetInstance().Add_Log(this.toString() + "-remove product");
+    @Override
+    public boolean removeProduct(String pName) {
+        EventLogger.GetInstance().Add_Log(this.toString() + "-remove product");
 
-		return inventory.removeProduct(pName);
-	}
+        return inventory.removeProduct(pName);
+    }
 
-	public boolean addProduct(Product p) {
+    public boolean addProduct(Product p) {
 
-		if (!p.getStore().getName().equals(name)) {
-			ErrorLogger.GetInstance().Add_Log(this.toString() + "add product - product store not currect");
-
-			return false;
-		}
-		EventLogger.GetInstance().Add_Log(this.toString() + "-add product");
+//		if (!p.getStore().getName().equals(name)) {
+//			ErrorLogger.GetInstance().Add_Log(this.toString() + "add product - product store not currect");
+//
+//			return false;
+//		}
+        EventLogger.GetInstance().Add_Log(this.toString() + "-add product");
 
-		return inventory.recive_item(new Packet_Of_Prodacts(p));
-	}
+        return inventory.recive_item(new Packet_Of_Prodacts(p));
+    }
 
-	public boolean addProduct(ProductDetails p) {
-		EventLogger.GetInstance().Add_Log(this.toString() + "-add product");
+    public boolean addProduct(ProductDetails p) {
+        EventLogger.GetInstance().Add_Log(this.toString() + "-add product");
 
-		return inventory.recive_item(p);
-	}
+        return inventory.recive_item(p);
+    }
 
-	public Product findProductByName(String name) {
-		return inventory.items.get(name);
+    public Product findProductByName(String name) {
+        return inventory.getItem(name);
 
-	}
+    }
 
-	public ProductDetails findProductDetailsByName(String name) {
-		if (inventory.items.containsKey(name))
-			return new ProductDetails(inventory.items.get(name), inventory.items.get(name).getAmount());
-		return null;
-	}
+    public ProductDetails findProductDetailsByName(String name) {
+        return inventory.findProductDetailsByName(name);
+//		if (inventory.items.containsKey(name))
+//			return new ProductDetails(inventory.items.get(name), inventory.items.get(name).getAmount());
+//		return null;
+    }
 
-	public List<Product> findProductByCategory(String category) {
-		return inventory.findProductByCategory(category);
+    public List<Product> findProductByCategory(String category) {
+        return inventory.findProductByCategory(category);
 
-	}
+    }
 
-	public List<ProductDetails> findProductDetailsByCategory(String category) {
-		return ProductDetails.adapteProdactList(inventory.findProductByCategory(category));
+    public List<ProductDetails> findProductDetailsByCategory(String category) {
+        return ProductDetails.adapteProdactList(inventory.findProductByCategory(category));
 
-	}
+    }
 
-	public List<Product> findProductByKeyword(String keyword) {
-		return inventory.findProductByKeyword(keyword);
+    public List<Product> findProductByKeyword(String keyword) {
+        return inventory.findProductByKeyword(keyword);
 
-	}
+    }
 
-	public List<ProductDetails> findProductDetailsByKeyword(String keyword) {
-		return ProductDetails.adapteProdactList(inventory.findProductByKeyword(keyword));
+    public List<ProductDetails> findProductDetailsByKeyword(String keyword) {
+        return ProductDetails.adapteProdactList(inventory.findProductByKeyword(keyword));
 
-	}
+    }
 
-	public Boolean CheckItemAvailable(ProductDetails item) {
-		if (findProductByName(item.getName()) == null)
-			return false;
-		if (findProductByName(item.getName()).getAmount() > item.getAmount())
-			return true;
+    public Boolean CheckItemAvailable(ProductDetails item) {
+        if (findProductByName(item.getName()) == null)
+            return false;
+        if (findProductByName(item.getName()).getAmount() > item.getAmount())
+            return true;
 
-		return false;
-	}
+        return false;
+    }
 
+    public boolean CheckAcquisitions(List<ProductDetails> products) {
+        return acquisitions.canPurchase(products);
+    }
+
 // ----------------------------------------------------buying
 
-	public double getPrice(String item) {
-		if(findProductByName(item)== null)
-			ErrorLogger.GetInstance().Add_Log(this.toString() + "- cant find item to calc price");
-			
-		//TODO add discount type 1 here
+    public double getPrice(List<ProductDetails> items) {
 
-		return findProductByName(item).getPrice();
-	}
+        for (ProductDetails PD : items) {
+            if (PD.getStoreName() != this.name)
+                ErrorLogger.GetInstance().Add_Log(this.toString() + "- calculating price for product in wrong store");
+        }
+        return discounts.applyDiscounts(items);
+    }
 
-	@Override
-	synchronized public Product TakeItem(String name, int amount) {
-		Product takeout = null;
-		Product temp = findProductByName(name);
-		if(temp == null) {
-			ErrorLogger.GetInstance().Add_Log(this.toString() + "-takeitem cant find proudct");
-			return null;
-		}
-		if (temp.getAmount() > amount) {
-			EventLogger.GetInstance().Add_Log(this.toString() +"- taking out products full amount");
-			takeout = new Product(name, temp.getCategory(), temp.getKeyWords(), temp.getPrice(), amount, this);
-			temp.removeAmount(amount);
-		} else {
-			EventLogger.GetInstance().Add_Log(this.toString() +"- taking out products not full amount");
-			takeout = new Product(name, temp.getCategory(), temp.getKeyWords(), temp.getPrice(), temp.getAmount(),
-					this);
-			temp.removeAmount(temp.getAmount());
-		}
-		return takeout;
-	}
+    @Override
+    synchronized public Product TakeItem(String name, int amount) {
+        Product takeout = null;
+        Product temp = findProductByName(name);
+        if (temp == null) {
+            ErrorLogger.GetInstance().Add_Log(this.toString() + "-takeitem cant find proudct");
+            return null;
+        }
+        if (temp.getAmount() > amount) {
+            EventLogger.GetInstance().Add_Log(this.toString() + "- taking out products full amount");
+            takeout = new Product(name, temp.getCategory(), temp.getKeyWords(), temp.getPrice(), amount, this.name);
+            temp.removeAmount(amount);
+        } else {
+            EventLogger.GetInstance().Add_Log(this.toString() + "- taking out products not full amount");
+            takeout = new Product(name, temp.getCategory(), temp.getKeyWords(), temp.getPrice(), temp.getAmount(),
+                    this.name);
+            temp.removeAmount(temp.getAmount());
+        }
+        return takeout;
+    }
 
-	public boolean addPurchase(StorePurchase p)
-	{
-		purchaseHistory.PastPurchase.add(p);
-		return true;
-	}
-	
-	public List<Discount> getDiscounts(String name) {
-		Product p = findProductByName(name);
-		return discounts.get(p);
+    public boolean addPurchase(StorePurchase p) {
+        purchaseHistory.PastPurchase.add(p);
+        return true;
+    }
+
+    public String getDiscounts(String name) {
+       return discounts.toString();
 
-	}
+    }
+
+    // ----------------------------------------------------discount
+    public boolean addDiscount(String discount) {
+        return discounts.addDiscount(discount);
+    }
+
+    public boolean removeDiscount(int discountID) {
+        return discounts.removeDiscount(discountID);
+    }
 
-	
-	// --------------------------------------------------- questions
-	public Collection<Question> getQuestions() {
+
+    // --------------------------------------------------- questions
+    public Collection<Question> getQuestions() {
 
-		return questions.values();
-	}
+        return questions.values();
+    }
 
-	public boolean respondToQuestion(String ansewer, int qustionID) {
-		questions.get(qustionID).addAnsewers(ansewer);
-		return true;
+    public boolean respondToQuestion(String ansewer, int qustionID) {
+        questions.get(qustionID).addAnsewers(ansewer);
+        return true;
 
-	}
+    }
 
+    boolean CheckTegrati_HaveOwners() {
+        return creator != null || Owners.values().size() > 0;
+    }
+
+
+    public boolean addacquisition(String acquisition) {
+        return acquisitions.addAcquisitionPolicy(acquisition);
+    }
+
+    public boolean removeacquisition(int acquisitionID) {
+        return acquisitions.removeAcquisition(acquisitionID);
+    }
+
+
+    @Override
+    public boolean equals(Object o) {
+        if (this == o) return true;
+        if (o == null || getClass() != o.getClass()) return false;
+        StoreImp storeImp = (StoreImp) o;
+        return //getRating() == storeImp.getRating() &&
+                Objects.equals(getName(), storeImp.getName()) //&&
+                /*Objects.equals(getCreator(), storeImp.getCreator()) &&
+                Objects.equals(inventory, storeImp.inventory) &&
+                Objects.equals(getOwners(), storeImp.getOwners()) &&
+                Objects.equals(getManagers(), storeImp.getManagers()) &&
+                Objects.equals(getAddress(), storeImp.getAddress()) &&
+                Objects.equals(discounts, storeImp.discounts) &&
+                Objects.equals(acquisitions, storeImp.acquisitions) &&
+                Objects.equals(purchaseHistory, storeImp.purchaseHistory) &&
+                Objects.equals(getQuestions(), storeImp.getQuestions())*/;
+    }
+
+    @Override
+    public int hashCode() {
+        return Objects.hash(getName(), getCreator(), inventory, getOwners(), getManagers(), getAddress(), getRating(), discounts, acquisitions, purchaseHistory, getQuestions());
+    }
 }
Index: src/Domain/Store/IStore.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Domain.Store;\n\nimport java.util.Collection;\nimport java.util.List;\n\nimport Domain.Store.workers.StoreManager_Imp;\nimport Domain.Store.workers.StoreOwner_Imp;\nimport Domain.info.ProductDetails;\n\npublic interface IStore {\n\tpublic String getName();\n\n\tpublic Collection<Product> getProducts();\n\n\tpublic String getAddress();\n\n\tpublic boolean addProduct(Product p);\n\n\tpublic Product findProductByName(String name);\n\n\tpublic List<Product> findProductByCategory(String category);\n\n\tpublic List<Product> findProductByKeyword(String keyword);\n\n\tpublic int getRating();\n\n\tpublic List<StorePurchase> viewPurchaseHistory() ;\n\n\tpublic Boolean CheckItemAvailable(ProductDetails items);\n\n\tpublic double getPrice(String item);\n\n\tpublic Product TakeItem(String name, int amout);\n\n\tpublic List<Discount> getDiscounts(String name);\n\n\tboolean removeProduct(String pName);\n\n\tboolean editProduct(String OLD_p, Product NEW_p);\n\n\tboolean appointManager(StoreManager_Imp user);\n\n\tboolean appointOwner(StoreOwner_Imp user);\n\n\n\n\tboolean fireManager(String user);\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/Store/IStore.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Domain/Store/IStore.java	(date 1592314856740)
@@ -28,11 +28,11 @@
 
 	public Boolean CheckItemAvailable(ProductDetails items);
 
-	public double getPrice(String item);
+	public double getPrice(List<ProductDetails> item);
 
 	public Product TakeItem(String name, int amout);
 
-	public List<Discount> getDiscounts(String name);
+	public String getDiscounts(String name);
 
 	boolean removeProduct(String pName);
 
Index: src/Domain/store_System/Security/PassProtocol_Imp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Domain.store_System.Security;\n\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\nimport java.util.HashMap;\n\npublic final class PassProtocol_Imp implements PasswordProtocol{\n    public static PassProtocol_Imp Instance=null;\n    public static HashMap<String,String> table;\n    public static MessageDigest messageDigest;\n\n    private PassProtocol_Imp(){\n        table= new HashMap<>();\n        try {\n            messageDigest = MessageDigest.getInstance(\"SHA-256\");\n        } catch (NoSuchAlgorithmException e) {\n            System.out.println(\"Error: creating hash function\");\n        }\n    }\n\n    @Override\n    public boolean addRegistry(String id, String password) {\n        if(table.containsKey(id))\n            return false;\n        messageDigest.update(password.getBytes());\n        table.put(id,new String(messageDigest.digest()));\n        return true;\n    }\n\n    @Override\n    public boolean login(String id, String password) {\n        messageDigest.update(password.getBytes());\n        String pass=new String(messageDigest.digest());\n        if(!table.containsKey(id))\n            return false;\n        return table.get(id).equals(pass);\n    }\n\n    @Override\n    public boolean deleteRegistry(String id, String password) {\n        if(login(id,password)) {\n            table.remove(id);\n            return true;\n        }\n        return false;\n    }\n\n    public static PassProtocol_Imp getInstance() {\n        if (Instance == null) {\n            Instance = new PassProtocol_Imp();\n        }\n        return Instance;\n    }\n\n    public void reset() {\n        Instance = null;    //TODO: temp\n    }\n}\n
===================================================================
--- src/Domain/store_System/Security/PassProtocol_Imp.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/extornal/Security/PassProtocol_Imp.java	(date 1592314856744)
@@ -1,4 +1,4 @@
-package Domain.store_System.Security;
+package extornal.Security;
 
 import java.security.MessageDigest;
 import java.security.NoSuchAlgorithmException;
Index: src/Domain/store_System/Security/PasswordProtocol.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Domain.store_System.Security;\n\npublic interface PasswordProtocol {\n        boolean addRegistry(String id,String password);\n        boolean login(String id,String password);\n        boolean deleteRegistry(String id,String password);\n        void reset();\n}\n
===================================================================
--- src/Domain/store_System/Security/PasswordProtocol.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/extornal/Security/PasswordProtocol.java	(date 1592314856744)
@@ -1,4 +1,4 @@
-package Domain.store_System.Security;
+package extornal.Security;
 
 public interface PasswordProtocol {
         boolean addRegistry(String id,String password);
Index: src/Domain/Store/StorePurchase.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Domain.Store;\r\n\r\nimport java.util.LinkedList;\r\nimport java.util.List;\r\n\r\nimport Domain.info.ProductDetails;\r\nimport extornal.payment.PaymentMethed;\r\n\r\npublic class StorePurchase {\r\n\r\n\tprivate double price;\r\n\tprivate List<ProductDetails> items;\r\n\tprivate List<Discount> discounts;\r\n\t//private Acquisition transaction;\r\n\t//private PaymentMethed payMethed;\r\n\tprivate String store;\r\n\r\n\tpublic StorePurchase(List<ProductDetails> items, String store,double price,List<Discount> discounts) {\r\n\t\tthis.items = items;\r\n\t\tthis.store = store;\r\n\t\tthis.price = price;\r\n\t\tdiscounts = new LinkedList<Discount>(); \r\n\t\tdiscounts.addAll(Discount.Copy(discounts));\r\n\t\t//CalcPrice_AndFindDiscouns();\r\n\t}\r\n\r\n//--------getters\r\n\r\n\tpublic double getPrice() {\r\n\t\treturn price;\r\n\t}\r\n\r\n\tpublic List<ProductDetails> getItems() {\r\n\t\tList<ProductDetails> items = new LinkedList<ProductDetails>();\r\n\t\tfor (ProductDetails pd : this.items) {\r\n\t\t\titems.add(ProductDetails.Copy(pd));\r\n\t\t}\r\n\t\treturn items;\r\n\t}\r\n\r\n\tpublic List<Discount> getDiscounts() {\r\n\t\tList<Discount> discounts = new LinkedList<Discount>();\r\n\t\tfor (Discount dis : this.discounts) {\r\n\t\t\tdiscounts.add(Discount.Copy(dis));\r\n\t\t}\r\n\t\treturn discounts;\r\n\t}\r\n\r\n\tpublic Acquisition getTransaction() {\r\n\t\treturn null;//TODO Acquisition.Copy(transaction);\r\n\t}\r\n\r\n\tpublic PaymentMethed getPayMethed() {\r\n\t\treturn null;//TODO payMethed;\r\n\t}\r\n\tpublic String get_Store_Name() {\r\n\t\treturn store;\r\n\t}\r\n//----------- fucntions\r\n\r\n//\tprivate void CalcPrice_AndFindDiscouns() {\r\n//\t\tprice = 0;\r\n//\t\tfor (ProductDetails pd : items) {\r\n//\t\t\tdouble add = 0;\r\n//\t\t\tadd += store.getPrice(pd.getName()) * pd.getAmount();\r\n//\t\t\tList<Discount> discounts = store.getDiscounts(pd.getName());\r\n//\t\t\tdiscounts.addAll(discounts);\r\n//\t\t\tfor (Discount discount : discounts) {\r\n//\t\t\t\tadd = discount.implamentDis(add);\r\n//\t\t\t}\r\n//\t\t\tprice += add;\r\n//\t\t}\r\n//\t}\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/Store/StorePurchase.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Domain/Store/StorePurchase.java	(date 1592314856744)
@@ -2,6 +2,7 @@
 
 import java.util.LinkedList;
 import java.util.List;
+import java.util.Objects;
 
 import Domain.info.ProductDetails;
 import extornal.payment.PaymentMethed;
@@ -10,17 +11,15 @@
 
 	private double price;
 	private List<ProductDetails> items;
-	private List<Discount> discounts;
 	//private Acquisition transaction;
 	//private PaymentMethed payMethed;
 	private String store;
 
-	public StorePurchase(List<ProductDetails> items, String store,double price,List<Discount> discounts) {
+	public StorePurchase(List<ProductDetails> items, String store,double price) {
 		this.items = items;
 		this.store = store;
 		this.price = price;
-		discounts = new LinkedList<Discount>(); 
-		discounts.addAll(Discount.Copy(discounts));
+
 		//CalcPrice_AndFindDiscouns();
 	}
 
@@ -38,17 +37,8 @@
 		return items;
 	}
 
-	public List<Discount> getDiscounts() {
-		List<Discount> discounts = new LinkedList<Discount>();
-		for (Discount dis : this.discounts) {
-			discounts.add(Discount.Copy(dis));
-		}
-		return discounts;
-	}
 
-	public Acquisition getTransaction() {
-		return null;//TODO Acquisition.Copy(transaction);
-	}
+
 
 	public PaymentMethed getPayMethed() {
 		return null;//TODO payMethed;
@@ -73,4 +63,18 @@
 //	}
 
 
+	@Override
+	public boolean equals(Object o) {
+		if (this == o) return true;
+		if (o == null || getClass() != o.getClass()) return false;
+		StorePurchase that = (StorePurchase) o;
+		return Double.compare(that.getPrice(), getPrice()) == 0 &&
+				Objects.equals(getItems(), that.getItems()) &&
+				Objects.equals(store, that.store);
+	}
+
+	@Override
+	public int hashCode() {
+		return Objects.hash(getPrice(), getItems(), store);
+	}
 }
Index: src/Domain/Store/Purchase.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Domain.Store;\n\nimport java.util.LinkedList;\nimport java.util.List;\n\nimport Domain.info.ProductDetails;\nimport extornal.payment.PaymentMethed;\n\npublic class Purchase {\n\n\tprivate double price;\n\tprivate List<ProductDetails> items;\n\tprivate List<Discount> discounts;\n\tprivate Acquisition transaction;\n\tprivate PaymentMethed payMethed;\n\tprivate StoreImp store;\n\n\tpublic Purchase(List<ProductDetails> items, StoreImp store) {\n\t\tthis.items = items;\n\t\tthis.store = store;\n\t\tdiscounts = new LinkedList<Discount>(); \n\t\tCalcPrice_AndFindDiscouns();\n\t}\n\n//--------getters\n\n\tpublic double getPrice() {\n\t\treturn price;\n\t}\n\n\tpublic List<ProductDetails> getItems() {\n\t\tList<ProductDetails> items = new LinkedList<ProductDetails>();\n\t\tfor (ProductDetails pd : this.items) {\n\t\t\titems.add(ProductDetails.Copy(pd));\n\t\t}\n\t\treturn items;\n\t}\n\n\tpublic List<Discount> getDiscounts() {\n\t\tList<Discount> discounts = new LinkedList<Discount>();\n\t\tfor (Discount dis : this.discounts) {\n\t\t\tdiscounts.add(Discount.Copy(dis));\n\t\t}\n\t\treturn discounts;\n\t}\n\n\tpublic Acquisition getTransaction() {\n\t\treturn Acquisition.Copy(transaction);\n\t}\n\n\n\n\tpublic PaymentMethed getPayMethed() {\n\t\treturn payMethed;\n\t}\n//----------- fucntions\n\n\tprivate void CalcPrice_AndFindDiscouns() {\n\t\tprice = 0;\n\t\tfor (ProductDetails pd : items) {\n\t\t\tdouble add = 0;\n\t\t\tadd += store.getPrice(pd.getName()) * pd.getAmount();\n\t\t\tList<Discount> discounts = store.getDiscounts(pd.getName());\n\t\t\tdiscounts.addAll(discounts);\n\t\t\tfor (Discount discount : discounts) {\n\t\t\t\tadd = discount.implamentDis(add);\n\t\t\t}\n\t\t\tprice += add;\n\t\t}\n\t}\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/Store/Purchase.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Domain/Store/Purchase.java	(date 1592314856744)
@@ -10,16 +10,13 @@
 
 	private double price;
 	private List<ProductDetails> items;
-	private List<Discount> discounts;
-	private Acquisition transaction;
 	private PaymentMethed payMethed;
 	private StoreImp store;
 
-	public Purchase(List<ProductDetails> items, StoreImp store) {
+	public Purchase(List<ProductDetails> items, StoreImp store,double price) {
 		this.items = items;
 		this.store = store;
-		discounts = new LinkedList<Discount>(); 
-		CalcPrice_AndFindDiscouns();
+		this.price = price;
 	}
 
 //--------getters
@@ -36,17 +33,7 @@
 		return items;
 	}
 
-	public List<Discount> getDiscounts() {
-		List<Discount> discounts = new LinkedList<Discount>();
-		for (Discount dis : this.discounts) {
-			discounts.add(Discount.Copy(dis));
-		}
-		return discounts;
-	}
 
-	public Acquisition getTransaction() {
-		return Acquisition.Copy(transaction);
-	}
 
 
 
@@ -55,17 +42,5 @@
 	}
 //----------- fucntions
 
-	private void CalcPrice_AndFindDiscouns() {
-		price = 0;
-		for (ProductDetails pd : items) {
-			double add = 0;
-			add += store.getPrice(pd.getName()) * pd.getAmount();
-			List<Discount> discounts = store.getDiscounts(pd.getName());
-			discounts.addAll(discounts);
-			for (Discount discount : discounts) {
-				add = discount.implamentDis(add);
-			}
-			price += add;
-		}
-	}
+
 }
Index: src/Domain/Store/IProduct.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Domain.Store;\n\nimport java.util.List;\n\npublic interface IProduct {\n    public String getName();\n    public List<String> getCategory();\n    public List<String> getKeyWords();\n    public double getPrice();\n    public int getRating();\n    public StoreImp getStore();\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/Store/IProduct.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Domain/Store/IProduct.java	(date 1592314856740)
@@ -8,5 +8,5 @@
     public List<String> getKeyWords();
     public double getPrice();
     public int getRating();
-    public StoreImp getStore();
+    //public String getStore();
 }
Index: src/Domain/Store/workers/StoreOwner_Imp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Domain.Store.workers;\n\nimport Domain.Logs.ErrorLogger;\nimport Domain.Logs.EventLogger;\nimport Domain.RedClasses.IUser;\nimport Domain.Store.Product;\nimport Domain.Store.StoreImp;\nimport Domain.Store.StorePurchase;\nimport Domain.Store.workers.appoints.Appoint_Owner;\nimport Domain.info.ProductDetails;\nimport Domain.info.Question;\nimport Domain.store_System.Roles.Registered;\n\nimport java.util.Collection;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class StoreOwner_Imp implements  Store_role {\n\tprivate Registered user;\n\tprotected Appoint_Owner myJob = new Appoint_Owner();\n//\tprotected StoreImp store;\n//\tprivate Store_role boss;\n\tprotected String workername = \"\";\n\t // the Owner who appointed current owner, null for original store owner\n\tprotected Map<String, Store_role> OwnerAppointeis;// Owners who got appointed by current owner, for future use\n\tprotected Map<String, Store_role> ManagerAppointeis;// managers who got appointed by current owner\n\t// -------------------------------------------------------------------------Contractors\n\n\tprotected StoreOwner_Imp() {\n\t}\n\n\tpublic StoreOwner_Imp(Store_role creator, String myname) {\n\t\tworkername = myname;\n\t\tmyJob.grantor= creator;\n\t\tmyJob.store = creator.getStore();\n\t\tOwnerAppointeis = new HashMap<String, Store_role>();\n\t\tManagerAppointeis = new HashMap<String, Store_role>();\n\t\tEventLogger.GetInstance().Add_Log(this.toString() + \"- Created Owner\");\n\t}\n\n\t@Override\n\tpublic StoreImp getStore() {\n\t\treturn myJob.store;\n\t}\n\n\t// ---------------------------------------------store action\n\t@Override\n\tpublic boolean addItem(Product item) {\n\t\tEventLogger.GetInstance().Add_Log(this.toString() + \"Owner add item\");\n\t\treturn myJob.store.addProduct(item);\n\n\t}\n\n\t@Override\n\tpublic boolean addItem(ProductDetails item) {\n\t\tEventLogger.GetInstance().Add_Log(this.toString() + \"-Owner add item\");\n\t\treturn myJob.store.addProduct(item);\n\t}\n\n\t@Override\n\tpublic boolean editItem(String OLD_item, Product NEW_item) {\n\t\tEventLogger.GetInstance().Add_Log(this.toString() + \"-Owner edit item\");\n\t\treturn myJob.store.editProduct(OLD_item, NEW_item);\n\t}\n\n\t@Override\n\tpublic boolean removeItem(String prodactname) {\n\t\tEventLogger.GetInstance().Add_Log(this.toString() + \"-Owner remove item\");\n\t\treturn myJob.store.removeProduct(prodactname);\n\t}\n\n\t@Override\n\tpublic List<StorePurchase> getPurchaseHistory() {\n\t\treturn myJob.store.viewPurchaseHistory();\n\n\t}\n\n\t@Override\n\tpublic Collection<Question> viewQuestions() {\n\t\treturn myJob.store.getQuestions();\n\t}\n\n\t@Override\n\tpublic boolean giveRespond(String ansewr, int qustionID) {\n\t\tEventLogger.GetInstance().Add_Log(this.toString() + \"-Owner gives Respond\");\n\t\treturn myJob.store.respondToQuestion(ansewr, qustionID);\n\t}\n\n\t// ------------------------------------------------------------Role actions\n\n\t@Override\n\tpublic boolean appointOwner(IUser user) {\n\t\tStore_role newRole = new StoreOwner_Imp(this, user.getName());\n\t\tif (user.appointAsOwner(newRole)) {\n\t\t\tmyJob.store.appointOwner((StoreOwner_Imp) newRole);\n\t\t\tOwnerAppointeis.put(user.getName(), newRole);\n\t\t\tEventLogger.GetInstance().Add_Log(this.toString() + \"Owner appoint new Owner\");\n\t\t\treturn true;\n\t\t}\n\t\tErrorLogger.GetInstance().Add_Log(this.toString() + \"Owner Failed to appoint new Owner\");\n\t\treturn false;\n\t}\n\n\t@Override\n\tpublic boolean appointManager(IUser user) {\n\t\tStore_role newRole = new StoreManager_Imp(this, user.getName());\n\t\tif (user.appointAsManager(newRole)) {\n\t\t\tmyJob.store.appointManager((StoreManager_Imp) newRole);\n\t\t\tManagerAppointeis.put(user.getName(), newRole);\n\t\t\tEventLogger.GetInstance().Add_Log(this.toString() + \"Owner appoint new Manager\");\n\t\t\treturn true;\n\t\t}\n\t\tErrorLogger.GetInstance().Add_Log(this.toString() + \"Owner Failed to appoint new Manager\");\n\t\treturn false;\n\t}\n\n\t@Override\n\tpublic boolean fire(String manager) {\n\t\tEventLogger.GetInstance().Add_Log(this.toString() + \"Owner fire worker\");\n\n\t\treturn myJob.store.fireManager(manager);\n\n\t}\n\n\t@Override\n\tpublic boolean getfire() {\n\t\tmyJob.grantor.IgotFire(workername);\n\t\treturn user.getFired(myJob.store.getName());\n\t}\n\n\t@Override\n\tpublic boolean IgotFire(String worker) {\n\t\tif (OwnerAppointeis.containsKey(worker)) {\n\t\t\tOwnerAppointeis.remove(worker);\n\t\t\treturn true;\n\t\t}\n\t\tif (ManagerAppointeis.containsKey(worker)) {\n\t\t\tManagerAppointeis.remove(worker);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t@Override\n\tpublic boolean editManagerPermesions(String managername, List<String> permesions) {\n\t\tEventLogger.GetInstance().Add_Log(this.toString() + \"-Owner changed other manager permesions\");\n\t\treturn myJob.store.editManagerPermesions(managername, permesions);\n\t}\n\n\t@Override\n\tpublic boolean canPromoteToOwner() {\n\t\treturn false;\n\t}\n\n\t@Override\n\tpublic boolean getNewPermesions(List<String> Permesions) {\n\t\tErrorLogger.GetInstance().Add_Log(this.toString()+ \"someone try to change my permsions\");\n\t\treturn false;\n\t}\n\n\t@Override\n\tpublic String getName() {\n\n\t\treturn workername;\n\t}\n\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/Store/workers/StoreOwner_Imp.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Domain/Store/workers/StoreOwner_Imp.java	(date 1592314856744)
@@ -2,7 +2,6 @@
 
 import Domain.Logs.ErrorLogger;
 import Domain.Logs.EventLogger;
-import Domain.RedClasses.IUser;
 import Domain.Store.Product;
 import Domain.Store.StoreImp;
 import Domain.Store.StorePurchase;
@@ -27,15 +26,15 @@
 	protected Map<String, Store_role> ManagerAppointeis;// managers who got appointed by current owner
 	// -------------------------------------------------------------------------Contractors
 
-	protected StoreOwner_Imp() {
-	}
+	public StoreOwner_Imp(){}
 
-	public StoreOwner_Imp(Store_role creator, String myname) {
-		workername = myname;
+	public StoreOwner_Imp(Store_role creator, Registered myname) {
+		user = myname;
+		workername = myname.getId();
 		myJob.grantor= creator;
 		myJob.store = creator.getStore();
-		OwnerAppointeis = new HashMap<String, Store_role>();
-		ManagerAppointeis = new HashMap<String, Store_role>();
+		OwnerAppointeis = new HashMap<>();
+		ManagerAppointeis = new HashMap<>();
 		EventLogger.GetInstance().Add_Log(this.toString() + "- Created Owner");
 	}
 
@@ -89,12 +88,26 @@
 
 	// ------------------------------------------------------------Role actions
 
+	//TODO delete
+//	@Override
+//	public boolean appointOwner(IUser user) {
+//		StoreOwner_Imp newRole = new StoreOwner_Imp(this, user.getName());
+//		if (user.appointAsOwner(newRole)) {
+//			myJob.store.appointOwner(newRole);
+//			OwnerAppointeis.put(user.getName(), newRole);
+//			EventLogger.GetInstance().Add_Log(this.toString() + "Owner appoint new Owner");
+//			return true;
+//		}
+//		ErrorLogger.GetInstance().Add_Log(this.toString() + "Owner Failed to appoint new Owner");
+//		return false;
+//	}
+
 	@Override
-	public boolean appointOwner(IUser user) {
-		Store_role newRole = new StoreOwner_Imp(this, user.getName());
+	public boolean appointOwner(Registered user) {
+		StoreOwner_Imp newRole = new StoreOwner_Imp(this, user);
 		if (user.appointAsOwner(newRole)) {
-			myJob.store.appointOwner((StoreOwner_Imp) newRole);
-			OwnerAppointeis.put(user.getName(), newRole);
+			myJob.store.appointOwner(newRole);
+			OwnerAppointeis.put(user.getId(), newRole);
 			EventLogger.GetInstance().Add_Log(this.toString() + "Owner appoint new Owner");
 			return true;
 		}
@@ -102,12 +115,26 @@
 		return false;
 	}
 
+	//TODO delete
+//	@Override
+//	public boolean appointManager(IUser user) {
+//		StoreManager_Imp newRole = new StoreManager_Imp(this, user.getName());
+//		if (user.appointAsManager(newRole)) {
+//			myJob.store.appointManager(newRole);
+//			ManagerAppointeis.put(user.getName(), newRole);
+//			EventLogger.GetInstance().Add_Log(this.toString() + "Owner appoint new Manager");
+//			return true;
+//		}
+//		ErrorLogger.GetInstance().Add_Log(this.toString() + "Owner Failed to appoint new Manager");
+//		return false;
+//	}
+
 	@Override
-	public boolean appointManager(IUser user) {
-		Store_role newRole = new StoreManager_Imp(this, user.getName());
+	public boolean appointManager(Registered user) {
+		StoreManager_Imp newRole = new StoreManager_Imp(this, user);
 		if (user.appointAsManager(newRole)) {
-			myJob.store.appointManager((StoreManager_Imp) newRole);
-			ManagerAppointeis.put(user.getName(), newRole);
+			myJob.store.appointManager(newRole);
+			ManagerAppointeis.put(user.getId(), newRole);
 			EventLogger.GetInstance().Add_Log(this.toString() + "Owner appoint new Manager");
 			return true;
 		}
@@ -129,15 +156,16 @@
 		return user.getFired(myJob.store.getName());
 	}
 
+	//when someone you appoint gets fired and he notify you
 	@Override
 	public boolean IgotFire(String worker) {
 		if (OwnerAppointeis.containsKey(worker)) {
 			OwnerAppointeis.remove(worker);
-			return true;
+			return CheckTegrati_ImMangaer()&&true;
 		}
 		if (ManagerAppointeis.containsKey(worker)) {
 			ManagerAppointeis.remove(worker);
-			return true;
+			return CheckTegrati_ImMangaer()&&true;
 		}
 		return false;
 	}
@@ -159,12 +187,35 @@
 		return false;
 	}
 
+	@Override
+	public boolean addDiscount(String discount) {
+		return getStore().addDiscount(discount);
+	}
+
+	@Override
+	public boolean removeDiscount(int discountID) {
+		return getStore().removeDiscount(discountID);
+	}
+
 	@Override
 	public String getName() {
 
 		return workername;
 	}
 
+	@Override
+	public boolean addacquisition(String acquisition) {
+		return getStore().addacquisition(acquisition);
+	}
+
+	@Override
+	public boolean removeacquisition(int acquisitionID) {
+		return getStore().removeacquisition(acquisitionID);
+	}
 
+	public boolean CheckTegrati_ImMangaer() {
+		return user!=null;
+
+	}
 
 }
Index: src/Domain/RedClasses/IshoppingCart.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Domain.RedClasses;\n\n\nimport java.util.Collection;\nimport java.util.List;\n\nimport Domain.Store.Product;\nimport Domain.info.ProductDetails;\n\npublic interface IshoppingCart {\n    public Collection<shoppingBasket> getBaskets();\n    public double  CalcPrice();\n   // public boolean addBasket(shoppingBasket b);\n    public List<ProductDetails> allProductsInCart();\n    //public shoppingBasket findBasket(StoreImp s);\n    public List<Product> getItems();\n}\n
===================================================================
--- src/Domain/RedClasses/IshoppingCart.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Domain/UserClasses/IshoppingCart.java	(date 1592314856744)
@@ -1,4 +1,4 @@
-package Domain.RedClasses;
+package Domain.UserClasses;
 
 
 import java.util.Collection;
@@ -8,10 +8,10 @@
 import Domain.info.ProductDetails;
 
 public interface IshoppingCart {
-    public Collection<shoppingBasket> getBaskets();
-    public double  CalcPrice();
+     Collection<shoppingBasket> getBaskets();
+     double  CalcPrice();
    // public boolean addBasket(shoppingBasket b);
-    public List<ProductDetails> allProductsInCart();
+     List<ProductDetails> allProductsInCart();
     //public shoppingBasket findBasket(StoreImp s);
-    public List<Product> getItems();
+     List<Product> getItems();
 }
Index: src/Domain/UserClasses/shoppingBasket.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/UserClasses/shoppingBasket.java	(date 1592314856744)
+++ src/Domain/UserClasses/shoppingBasket.java	(date 1592314856744)
@@ -0,0 +1,114 @@
+package Domain.UserClasses;
+
+import java.util.*;
+
+import Domain.Store.Discount;
+import Domain.Store.Product;
+import Domain.Store.StoreImp;
+import Domain.Store.StorePurchase;
+import Domain.info.ProductDetails;
+
+public class shoppingBasket implements IshoppingBasket {
+
+
+    //      productName - amount
+    private Map<String, Integer> Item_holder;
+    private StoreImp store;
+
+    public shoppingBasket(StoreImp store) {
+        this.store = store;
+        Item_holder = new HashMap<>();
+    }
+
+    public boolean addProduct(String name, int amount) {
+        if(store.findProductByName(name)== null)
+            return false;
+        if (store.findProductByName(name) != null)
+            if (Item_holder.containsKey(name)) {
+                Item_holder.replace(name, Item_holder.get(name) + amount);
+            } else {
+                Item_holder.put(name, amount);
+            }
+        return true;
+    }
+
+    public int removeProduct(String name, int num) {
+        if (Item_holder.containsKey(name)) {
+            int current = Item_holder.get(name);
+            if (current > num) {
+                Item_holder.replace(name, current - num);
+                return num;
+            } else {
+                Item_holder.remove(name);
+                return current;
+            }
+        }
+        return 0;
+
+    }
+
+    public StoreImp getStore() {
+        return store;
+    }
+
+    public List<ProductDetails> getProducts() {
+        List<ProductDetails> output = new LinkedList<ProductDetails>();
+        for (String name : Item_holder.keySet()) {
+            output.add(new ProductDetails(store.findProductByName(name), Item_holder.get(name)));
+        }
+        return output;
+    }
+
+    public double CalcPrice() {
+        List<ProductDetails> products = getProducts();
+        return store.getPrice(products);
+    }
+
+    public List<Product> getItems() {
+        List<Product> output = new LinkedList<Product>();
+        for (String item : Item_holder.keySet()) {
+            output.add(store.TakeItem(item, Item_holder.get(item)));
+        }
+        return output;
+    }
+
+
+    public StorePurchase Complet_Purchase() {
+
+        StorePurchase SP = new StorePurchase(getProducts(), store.getName(), CalcPrice());
+        store.addPurchase(SP);
+        return SP;
+    }
+
+    public boolean CheckItemAvailable() {
+        for (ProductDetails details : getProducts()) {
+            // StoreImp s = s
+            if (!store.CheckItemAvailable(details)) {
+                return false;
+            }
+        }
+        return true;
+    }
+
+    public boolean CheckAcquisitions() {
+        if (!store.CheckAcquisitions(getProducts()))
+            return false;
+        return true;
+
+    }
+
+    @Override
+    public boolean equals(Object o) {
+        if (this == o) return true;
+        if (o == null || getClass() != o.getClass()) return false;
+        shoppingBasket that = (shoppingBasket) o;
+        boolean b1 =  Objects.equals(Item_holder, that.Item_holder);
+        boolean b2 =  Objects.equals(getStore(), that.getStore());
+        return b1 && b2;
+    }
+
+    @Override
+    public int hashCode() {
+        return Objects.hash(Item_holder, getStore());
+    }
+}
Index: src/Domain/Store/workers/Store_role.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Domain.Store.workers;\r\n\r\nimport java.util.Collection;\r\nimport java.util.List;\r\n\r\nimport Domain.RedClasses.IUser;\r\nimport Domain.Store.Product;\r\nimport Domain.Store.StoreImp;\r\nimport Domain.Store.StorePurchase;\r\nimport Domain.info.ProductDetails;\r\nimport Domain.info.Question;\r\n\r\npublic interface Store_role {\r\n\tboolean addItem(Product item);\r\n\r\n\tboolean addItem(ProductDetails item);\r\n\r\n\tboolean appointOwner(IUser user);\r\n\r\n\tboolean appointManager(IUser user);\r\n\r\n\tboolean fire(String manager);\r\n\r\n\tboolean editItem(String OLD_item, Product NEW_item);\r\n\r\n\tboolean removeItem(String prodactname);\r\n\r\n\tpublic List<StorePurchase> getPurchaseHistory();\r\n\r\n\tboolean editManagerPermesions(String managername, List<String> permesions);\r\n\r\n\tpublic Collection<Question> viewQuestions();\r\n\r\n\tboolean giveRespond(String ansewr, int qustionID);\r\n\r\n\tboolean canPromoteToOwner();\r\n\r\n\tpublic StoreImp getStore();\r\n\r\n\tboolean getfire();\r\n\r\n\tboolean IgotFire(String worker);\r\n\r\n\tboolean getNewPermesions(List<String> Permesions);\r\n\r\n\tpublic String getName();\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/Store/workers/Store_role.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Domain/Store/workers/Store_role.java	(date 1592314856744)
@@ -3,46 +3,57 @@
 import java.util.Collection;
 import java.util.List;
 
-import Domain.RedClasses.IUser;
 import Domain.Store.Product;
 import Domain.Store.StoreImp;
 import Domain.Store.StorePurchase;
 import Domain.info.ProductDetails;
 import Domain.info.Question;
+import Domain.store_System.Roles.Registered;
 
 public interface Store_role {
-	boolean addItem(Product item);
+    boolean addItem(Product item);
 
-	boolean addItem(ProductDetails item);
+    boolean addItem(ProductDetails item);
 
-	boolean appointOwner(IUser user);
+   // boolean appointOwner(IUser user);
+
+    boolean appointOwner(Registered user);
 
-	boolean appointManager(IUser user);
+  //  boolean appointManager(IUser user);
+
+    boolean appointManager(Registered user);
 
-	boolean fire(String manager);
+    boolean fire(String manager);
 
-	boolean editItem(String OLD_item, Product NEW_item);
+    boolean editItem(String OLD_item, Product NEW_item);
 
-	boolean removeItem(String prodactname);
+    boolean removeItem(String prodactname);
 
-	public List<StorePurchase> getPurchaseHistory();
+    List<StorePurchase> getPurchaseHistory();
 
-	boolean editManagerPermesions(String managername, List<String> permesions);
+    boolean editManagerPermesions(String managername, List<String> permesions);
 
-	public Collection<Question> viewQuestions();
+    Collection<Question> viewQuestions();
 
-	boolean giveRespond(String ansewr, int qustionID);
+    boolean giveRespond(String ansewr, int qustionID);
 
-	boolean canPromoteToOwner();
+    boolean canPromoteToOwner();
 
-	public StoreImp getStore();
+    StoreImp getStore();
 
-	boolean getfire();
+    boolean getfire();
 
-	boolean IgotFire(String worker);
+    boolean IgotFire(String worker);
 
-	boolean getNewPermesions(List<String> Permesions);
+    boolean getNewPermesions(List<String> Permesions);
 
-	public String getName();
+    boolean addDiscount(String discount);
+
+    boolean removeDiscount(int discountID);
 
+    String getName();
+
+    boolean addacquisition(String acquisition);
+
+    boolean removeacquisition(int acquisitionID);
 }
Index: src/Domain/UserClasses/shoppingCart.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/UserClasses/shoppingCart.java	(date 1592314856744)
+++ src/Domain/UserClasses/shoppingCart.java	(date 1592314856744)
@@ -0,0 +1,102 @@
+package Domain.UserClasses;
+
+
+import Domain.Store.Product;
+import Domain.Store.StoreImp;
+import Domain.info.ProductDetails;
+import Domain.store_System.System;
+
+import java.util.*;
+
+public class shoppingCart implements IshoppingCart {
+    Map<String, shoppingBasket> baskets;
+
+    public shoppingCart() {
+        baskets = new HashMap<>();
+    }
+
+    public Collection<shoppingBasket> getBaskets() {
+        return baskets.values();
+    }
+
+    public List<ProductDetails> allProductsInCart() {
+        List<ProductDetails> output = new LinkedList<ProductDetails>();
+        for (shoppingBasket basket : baskets.values()) {
+            output.addAll(basket.getProducts());
+        }
+        return output;
+    }
+
+    public shoppingBasket findBasket(String name) {
+        if (baskets.containsKey(name))
+            return baskets.get(name);
+        //else
+        StoreImp store = System.getInstance().getStoreDetails(name);
+        if(store == null)
+            return null;
+        baskets.put(name, new shoppingBasket(store));
+        if (!CheckTegrati_CartPerStore())
+            return null;
+        return baskets.get(name);
+
+    }
+
+    public int removeItem(String Storename, String Itemname, int amount) {
+        IshoppingBasket basket = baskets.get(Storename);
+        if (basket == null)
+            return 0;
+        return basket.removeProduct(Itemname, amount);
+    }
+
+    @Override
+    public double CalcPrice() {
+        double cost = 0;
+        for (shoppingBasket basket : baskets.values()) {
+            cost += basket.CalcPrice();
+        }
+        return cost;
+    }
+
+    @Override
+    public List<Product> getItems() {
+        List<Product> takeout = new LinkedList<Product>();
+        for (shoppingBasket basket : baskets.values()) {
+            takeout.addAll(basket.getItems());
+        }
+        return takeout;
+    }
+
+    public UserPurchase Complet_Purchase() {
+        UserPurchase p = new UserPurchase();
+        for (shoppingBasket basket : baskets.values()) {
+            p.eachPurchase.add(basket.Complet_Purchase());
+        }
+        return p;
+    }
+
+    //-------------------------------------------------------Tegrati
+    public boolean CheckTegrati_CartPerStore() {
+//        for (shoppingBasket b : baskets.values()) {
+//            if (baskets.keySet().contains(b.getStore().getName()) && b.equals(baskets.get(b.getStore().getName())))
+//                return false;
+//        }
+        return true;
+    }
+
+    public boolean CheckItemAvailable() {
+        for (shoppingBasket SB : baskets.values()) {
+            if (!SB.CheckItemAvailable())
+                return false;
+        }
+        return true;
+
+    }
+
+    public boolean CheckAcquisitions() {
+        for (shoppingBasket SB : baskets.values()) {
+            if(!SB.CheckAcquisitions())
+                return false;
+        }
+        return true;
+    }
+}
Index: src/Domain/RedClasses/User_Purchase_History.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Domain.RedClasses;\r\n\r\nimport java.util.LinkedList;\r\nimport java.util.List;\r\n\r\npublic class User_Purchase_History {\r\n\tpublic List<UserPurchase> history = new  LinkedList<UserPurchase>();\r\n}\r\n
===================================================================
--- src/Domain/RedClasses/User_Purchase_History.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Domain/UserClasses/User_Purchase_History.java	(date 1592314856744)
@@ -1,4 +1,4 @@
-package Domain.RedClasses;
+package Domain.UserClasses;
 
 import java.util.LinkedList;
 import java.util.List;
Index: src/Domain/Store/workers/StoreManager_Imp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Domain.Store.workers;\r\n\r\nimport Domain.Logs.EventLogger;\r\nimport Domain.RedClasses.IUser;\r\nimport Domain.Store.Product;\r\nimport Domain.Store.StoreImp;\r\nimport Domain.Store.StorePurchase;\r\nimport Domain.Store.workers.appoints.Appoint_manager;\r\nimport Domain.info.MangaerPermesions;\r\nimport Domain.info.ProductDetails;\r\nimport Domain.info.Question;\r\nimport Domain.store_System.Roles.Registered;\r\n\r\nimport java.util.*;\r\n\r\npublic class StoreManager_Imp implements Store_role {\r\n\tprivate Registered user;\r\n\tprotected Appoint_manager MyJob = new Appoint_manager();\r\n//\tprotected StoreImp store;\r\n//\tprivate Store_role boss;\r\n\tprotected String workername = \"\";\r\n\t // the Owner who appointed current owner, null for original store owner\r\n\tprotected Map<String, Store_role> OwnerAppointeis;// Owners who got appointed by current owner, for future use\r\n\tprotected Map<String, Store_role> ManagerAppointeis;// managers who got appointed by current owner\r\n\tprivate List<String> permisions = new LinkedList<String>();\r\n\t// -------------------------------------------------------------------------Contractors\r\n\r\n\tpublic StoreManager_Imp(Store_role creator, String myname) {\r\n\t\tworkername = myname;\r\n\t\tMyJob.grantor= creator;\r\n\t\tMyJob.store = creator.getStore();\r\n\t\tOwnerAppointeis = new HashMap<String, Store_role>();\r\n\t\tManagerAppointeis = new HashMap<String, Store_role>();\r\n\t\tthis.permisions.addAll(MangaerPermesions.defult_permesions);\r\n\t\tEventLogger.GetInstance().Add_Log(this.toString() + \"- Created Manager\");\r\n\t}\r\n\r\n\tpublic StoreManager_Imp(Store_role creator, String myname, List<String> permisions) {\r\n\t\tworkername = myname;\r\n\t\tMyJob.grantor= creator;\r\n\t\tMyJob.store = creator.getStore();\r\n\t\tOwnerAppointeis = new HashMap<String, Store_role>();\r\n\t\tManagerAppointeis = new HashMap<String, Store_role>();\r\n\t\tthis.permisions.addAll(permisions);\r\n\t\tEventLogger.GetInstance().Add_Log(this.toString() + \"- Created Manager\");\r\n\t}\r\n\r\n\t@Override\r\n\tpublic StoreImp getStore() {\r\n\r\n\t\treturn MyJob.store;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic String getName() {\r\n\t\treturn workername;\r\n\t}\r\n\t// ---------------------------------------------store action\r\n\t@Override\r\n\tpublic boolean addItem(Product item) {\r\n\t\tif (!permisions.contains(\"addItem\"))\r\n\t\t\treturn false;\r\n\r\n\t\treturn MyJob.store.addProduct(item);\r\n\r\n\t}\r\n\r\n\t@Override\r\n\tpublic boolean addItem(ProductDetails item) {\r\n\t\tif (!permisions.contains(\"addItem\"))\r\n\t\t\treturn false;\r\n\t\treturn MyJob.store.addProduct(item);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic boolean editItem(String OLD_item, Product NEW_item) {\r\n\t\tif (!permisions.contains(\"editItem\"))\r\n\t\t\treturn false;\r\n\t\treturn MyJob.store.editProduct(OLD_item, NEW_item);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic boolean removeItem(String prodactname) {\r\n\t\tif (!permisions.contains(\"removeItem\"))\r\n\t\t\treturn false;\r\n\t\treturn MyJob.store.removeProduct(prodactname);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic List<StorePurchase> getPurchaseHistory() {\r\n\t\tif (!permisions.contains(\"getPurchaseHistory\"))\r\n\t\t\treturn null;\r\n\t\treturn MyJob.store.viewPurchaseHistory();\r\n\r\n\t}\r\n\r\n\t@Override\r\n\tpublic Collection<Question> viewQuestions() {\r\n\t\tif (!permisions.contains(\"viewQuestions\"))\r\n\t\t\treturn null;\r\n\t\treturn MyJob.store.getQuestions();\r\n\t}\r\n\r\n\t@Override\r\n\tpublic boolean giveRespond(String ansewr, int qustionID) {\r\n\t\tif (!permisions.contains(\"giveRespond\"))\r\n\t\t\treturn false;\r\n\r\n\t\treturn MyJob.store.respondToQuestion(ansewr, qustionID);\r\n\t}\r\n\r\n\t// ------------------------------------------------------------Role actions\r\n\r\n\t@Override\r\n\tpublic boolean appointOwner(IUser user) {\r\n\t\tif (!permisions.contains(\"appointOwner\"))\r\n\t\t\treturn false;\r\n\t\tStore_role newRole = new StoreOwner_Imp(this, user.getName());\r\n\t\tif (user.appointAsOwner(newRole)) {\r\n\t\t\tMyJob.store.appointOwner((StoreOwner_Imp) newRole);\r\n\t\t\tOwnerAppointeis.put(user.getName(), newRole);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic boolean appointManager(IUser user) {\r\n\t\tif (!permisions.contains(\"appointManager\"))\r\n\t\t\treturn false;\r\n\t\tStore_role newRole = new StoreManager_Imp(this, user.getName() );\r\n\t\tif (user.appointAsManager(newRole)) {\r\n\t\t\tMyJob.store.appointManager((StoreManager_Imp) newRole);\r\n\t\t\tManagerAppointeis.put(user.getName(), newRole);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic boolean fire(String manager) {\r\n\t\tif (!permisions.contains(\"fire\"))\r\n\t\t\treturn false;\r\n\t\treturn MyJob.store.fireManager(manager);\r\n\t\t//return manager.getFired(store.getName());\r\n\t}\r\n\t\r\n\t@Override\r\n\tpublic boolean getfire() {\r\n\t\tMyJob.grantor.IgotFire(workername);\r\n\t\treturn user.getFired(MyJob.store.getName());\r\n\t}\r\n\r\n\t@Override\r\n\tpublic boolean IgotFire(String worker) {\r\n\t\tif (!permisions.contains(\"appointOwner\") || !permisions.contains(\"appointManager\"))\r\n\t\t\treturn false;\r\n\t\tif (OwnerAppointeis.containsKey(worker)) {\r\n\t\t\tOwnerAppointeis.remove(worker);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (ManagerAppointeis.containsKey(worker)) {\r\n\t\t\tManagerAppointeis.remove(worker);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic boolean editManagerPermesions(String managername, List<String> permesions) {\r\n\t\tif (!permisions.contains(\"editManagerPermesions\"))\r\n\t\t\treturn false;\r\n\r\n\t\treturn MyJob.store.editManagerPermesions(managername, permesions);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic boolean getNewPermesions(List<String> permesions)\r\n\t{\r\n\t\tEventLogger.GetInstance().Add_Log(this.toString() + \"- my Permesions have changed\");\r\n\t\tthis.permisions = (new LinkedList<String>());\r\n\t\tthis.permisions.addAll(permesions);\r\n\t\treturn true;\r\n\t\t\r\n\t}\r\n\t\r\n\t@Override\r\n\tpublic boolean canPromoteToOwner() {\r\n\t\treturn true;\r\n\t}\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/Store/workers/StoreManager_Imp.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Domain/Store/workers/StoreManager_Imp.java	(date 1592314856744)
@@ -1,7 +1,7 @@
 package Domain.Store.workers;
 
+import Domain.Logs.ErrorLogger;
 import Domain.Logs.EventLogger;
-import Domain.RedClasses.IUser;
 import Domain.Store.Product;
 import Domain.Store.StoreImp;
 import Domain.Store.StorePurchase;
@@ -14,179 +14,239 @@
 import java.util.*;
 
 public class StoreManager_Imp implements Store_role {
-	private Registered user;
-	protected Appoint_manager MyJob = new Appoint_manager();
-//	protected StoreImp store;
-//	private Store_role boss;
-	protected String workername = "";
-	 // the Owner who appointed current owner, null for original store owner
-	protected Map<String, Store_role> OwnerAppointeis;// Owners who got appointed by current owner, for future use
-	protected Map<String, Store_role> ManagerAppointeis;// managers who got appointed by current owner
-	private List<String> permisions = new LinkedList<String>();
-	// -------------------------------------------------------------------------Contractors
+    private Registered user;
+    protected Appoint_manager MyJob = new Appoint_manager();
+    protected String worker_name = "";
+    // the Owner who appointed current owner, null for original store owner
+    protected Map<String, Store_role> Owner_Appointees;// Owners who got appointed by current owner, for future use
+    protected Map<String, Store_role> Manager_Appointees;// managers who got appointed by current owner
+    private List<String> permission = new LinkedList<String>();
+    // -------------------------------------------------------------------------Contractors
 
-	public StoreManager_Imp(Store_role creator, String myname) {
-		workername = myname;
-		MyJob.grantor= creator;
-		MyJob.store = creator.getStore();
-		OwnerAppointeis = new HashMap<String, Store_role>();
-		ManagerAppointeis = new HashMap<String, Store_role>();
-		this.permisions.addAll(MangaerPermesions.defult_permesions);
-		EventLogger.GetInstance().Add_Log(this.toString() + "- Created Manager");
-	}
+    public StoreManager_Imp(Store_role creator, Registered myname) {
+        user = myname;
+        worker_name = myname.getId();
+        MyJob.grantor = creator;
+        MyJob.store = creator.getStore();
+        Owner_Appointees = new HashMap<>();
+        Manager_Appointees = new HashMap<>();
+        this.permission.addAll(MangaerPermesions.defult_permesions);
+        EventLogger.GetInstance().Add_Log(this.toString() + "- Created Manager");
+    }
 
-	public StoreManager_Imp(Store_role creator, String myname, List<String> permisions) {
-		workername = myname;
-		MyJob.grantor= creator;
-		MyJob.store = creator.getStore();
-		OwnerAppointeis = new HashMap<String, Store_role>();
-		ManagerAppointeis = new HashMap<String, Store_role>();
-		this.permisions.addAll(permisions);
-		EventLogger.GetInstance().Add_Log(this.toString() + "- Created Manager");
-	}
+    public StoreManager_Imp(Store_role creator, String myname, List<String> permisions) {
+        worker_name = myname;
+        MyJob.grantor = creator;
+        MyJob.store = creator.getStore();
+        Owner_Appointees = new HashMap<String, Store_role>();
+        Manager_Appointees = new HashMap<String, Store_role>();
+        this.permission.addAll(permisions);
+        EventLogger.GetInstance().Add_Log(this.toString() + "- Created Manager");
+    }
 
-	@Override
-	public StoreImp getStore() {
+    @Override
+    public StoreImp getStore() {
 
-		return MyJob.store;
-	}
+        return MyJob.store;
+    }
 
-	@Override
-	public String getName() {
-		return workername;
-	}
-	// ---------------------------------------------store action
-	@Override
-	public boolean addItem(Product item) {
-		if (!permisions.contains("addItem"))
-			return false;
+    @Override
+    public String getName() {
+        return worker_name;
+    }
+
+    // ---------------------------------------------store action
+    @Override
+    public boolean addItem(Product item) {
+        if (!permission.contains("addItem"))
+            return false;
 
-		return MyJob.store.addProduct(item);
+        return MyJob.store.addProduct(item);
 
-	}
+    }
 
-	@Override
-	public boolean addItem(ProductDetails item) {
-		if (!permisions.contains("addItem"))
-			return false;
-		return MyJob.store.addProduct(item);
-	}
+    @Override
+    public boolean addItem(ProductDetails item) {
+        if (!permission.contains("addItem"))
+            return false;
+        return MyJob.store.addProduct(item);
+    }
 
-	@Override
-	public boolean editItem(String OLD_item, Product NEW_item) {
-		if (!permisions.contains("editItem"))
-			return false;
-		return MyJob.store.editProduct(OLD_item, NEW_item);
-	}
+    @Override
+    public boolean editItem(String OLD_item, Product NEW_item) {
+        if (!permission.contains("editItem"))
+            return false;
+        return MyJob.store.editProduct(OLD_item, NEW_item);
+    }
 
-	@Override
-	public boolean removeItem(String prodactname) {
-		if (!permisions.contains("removeItem"))
-			return false;
-		return MyJob.store.removeProduct(prodactname);
-	}
+    @Override
+    public boolean removeItem(String prodactname) {
+        if (!permission.contains("removeItem"))
+            return false;
+        return MyJob.store.removeProduct(prodactname);
+    }
 
-	@Override
-	public List<StorePurchase> getPurchaseHistory() {
-		if (!permisions.contains("getPurchaseHistory"))
-			return null;
-		return MyJob.store.viewPurchaseHistory();
+    @Override
+    public List<StorePurchase> getPurchaseHistory() {
+        if (!permission.contains("getPurchaseHistory"))
+            return null;
+        return MyJob.store.viewPurchaseHistory();
 
-	}
+    }
 
-	@Override
-	public Collection<Question> viewQuestions() {
-		if (!permisions.contains("viewQuestions"))
-			return null;
-		return MyJob.store.getQuestions();
-	}
+    @Override
+    public Collection<Question> viewQuestions() {
+        if (!permission.contains("viewQuestions"))
+            return null;
+        return MyJob.store.getQuestions();
+    }
 
-	@Override
-	public boolean giveRespond(String ansewr, int qustionID) {
-		if (!permisions.contains("giveRespond"))
-			return false;
+    @Override
+    public boolean giveRespond(String ansewr, int qustionID) {
+        if (!permission.contains("giveRespond"))
+            return false;
 
-		return MyJob.store.respondToQuestion(ansewr, qustionID);
-	}
+        return MyJob.store.respondToQuestion(ansewr, qustionID);
+    }
 
-	// ------------------------------------------------------------Role actions
+    // ------------------------------------------------------------Role actions
 
-	@Override
-	public boolean appointOwner(IUser user) {
-		if (!permisions.contains("appointOwner"))
-			return false;
-		Store_role newRole = new StoreOwner_Imp(this, user.getName());
-		if (user.appointAsOwner(newRole)) {
-			MyJob.store.appointOwner((StoreOwner_Imp) newRole);
-			OwnerAppointeis.put(user.getName(), newRole);
-			return true;
-		}
-		return false;
-	}
+//	@Override
+//	public boolean appointOwner(IUser user) {
+//		if (!permission.contains("appointOwner"))
+//			return false;
+//		Store_role newRole = new StoreOwner_Imp(this, user.getName());
+//		if (user.appointAsOwner(newRole)) {
+//			MyJob.store.appointOwner((StoreOwner_Imp) newRole);
+//			Owner_Appointees.put(user.getName(), newRole);
+//			return true;
+//		}
+//		return false;
+//	}
+
+    @Override
+    public boolean appointOwner(Registered user) {
+        Store_role newRole = new StoreOwner_Imp(this, user);
+        if (user.appointAsOwner(newRole)) {
+            MyJob.store.appointOwner((StoreOwner_Imp) newRole);
+            Owner_Appointees.put(user.getId(), newRole);
+            EventLogger.GetInstance().Add_Log(this.toString() + "Owner appoint new Owner");
+            return true;
+        }
+        ErrorLogger.GetInstance().Add_Log(this.toString() + "Owner Failed to appoint new Owner");
+        return false;
+    }
 
-	@Override
-	public boolean appointManager(IUser user) {
-		if (!permisions.contains("appointManager"))
-			return false;
-		Store_role newRole = new StoreManager_Imp(this, user.getName() );
-		if (user.appointAsManager(newRole)) {
-			MyJob.store.appointManager((StoreManager_Imp) newRole);
-			ManagerAppointeis.put(user.getName(), newRole);
-			return true;
-		}
-		return false;
-	}
+//	@Override
+//	public boolean appointManager(IUser user) {
+//		if (!permission.contains("appointManager"))
+//			return false;
+//		Store_role newRole = new StoreManager_Imp(this, user.getName() );
+//		if (user.appointAsManager(newRole)) {
+//			MyJob.store.appointManager((StoreManager_Imp) newRole);
+//			Manager_Appointees.put(user.getName(), newRole);
+//			return true;
+//		}
+//		return false;
+//	}
+
+    @Override
+    public boolean appointManager(Registered user) {
+        Store_role newRole = new StoreManager_Imp(this, user);
+        if (user.appointAsManager(newRole)) {
+            MyJob.store.appointManager((StoreManager_Imp) newRole);
+            Manager_Appointees.put(user.getId(), newRole);
+            EventLogger.GetInstance().Add_Log(this.toString() + "Owner appoint new Manager");
+            return true;
+        }
+        ErrorLogger.GetInstance().Add_Log(this.toString() + "Owner Failed to appoint new Manager");
+        return false;
+    }
 
-	@Override
-	public boolean fire(String manager) {
-		if (!permisions.contains("fire"))
-			return false;
-		return MyJob.store.fireManager(manager);
-		//return manager.getFired(store.getName());
-	}
-	
-	@Override
-	public boolean getfire() {
-		MyJob.grantor.IgotFire(workername);
-		return user.getFired(MyJob.store.getName());
-	}
+    @Override
+    public boolean fire(String manager) {
+        if (!permission.contains("fire"))
+            return false;
+        return MyJob.store.fireManager(manager);
+        //return manager.getFired(store.getName());
+    }
+
+    @Override
+    public boolean getfire() {
+        MyJob.grantor.IgotFire(worker_name);
+        return user.getFired(MyJob.store.getName());
+    }
 
-	@Override
-	public boolean IgotFire(String worker) {
-		if (!permisions.contains("appointOwner") || !permisions.contains("appointManager"))
-			return false;
-		if (OwnerAppointeis.containsKey(worker)) {
-			OwnerAppointeis.remove(worker);
-			return true;
-		}
-		if (ManagerAppointeis.containsKey(worker)) {
-			ManagerAppointeis.remove(worker);
-			return true;
-		}
-		return false;
-	}
+    @Override
+    public boolean IgotFire(String worker) {
+        if (!permission.contains("appointOwner") || !permission.contains("appointManager"))
+            return false;
+        if (Owner_Appointees.containsKey(worker)) {
+            Owner_Appointees.remove(worker);
+            return CheckTegrati_ImMangaer() && true;
+        }
+        if (Manager_Appointees.containsKey(worker)) {
+            Manager_Appointees.remove(worker);
+            return CheckTegrati_ImMangaer() && true;
+        }
+        return false;
+    }
 
-	@Override
-	public boolean editManagerPermesions(String managername, List<String> permesions) {
-		if (!permisions.contains("editManagerPermesions"))
-			return false;
+    @Override
+    public boolean editManagerPermesions(String managername, List<String> permesions) {
+        if (!permission.contains("editManagerPermesions"))
+            return false;
 
-		return MyJob.store.editManagerPermesions(managername, permesions);
-	}
+        return MyJob.store.editManagerPermesions(managername, permesions);
+    }
 
-	@Override
-	public boolean getNewPermesions(List<String> permesions)
-	{
-		EventLogger.GetInstance().Add_Log(this.toString() + "- my Permesions have changed");
-		this.permisions = (new LinkedList<String>());
-		this.permisions.addAll(permesions);
-		return true;
-		
-	}
-	
-	@Override
-	public boolean canPromoteToOwner() {
-		return true;
-	}
+    @Override
+    public boolean getNewPermesions(List<String> permesions) {
+        EventLogger.GetInstance().Add_Log(this.toString() + "- my Permesions have changed");
+        this.permission = (new LinkedList<String>());
+        this.permission.addAll(permesions);
+        return true;
+
+    }
+
+    //------------------------------------------------------------
+    @Override
+    public boolean addDiscount(String discount) {
+        if (!permission.contains("addDiscount"))
+            return false;
+        return getStore().addDiscount(discount);
+    }
+
+    @Override
+    public boolean removeDiscount(int discountID) {
+        if (!permission.contains("removeDiscount"))
+            return false;
+        return getStore().removeDiscount(discountID);
+    }
+
+
+    @Override
+    public boolean addacquisition(String acquisition) {
+        if (!permission.contains("addacquisition"))
+            return false;
+        return getStore().addacquisition(acquisition);
+    }
+
+    @Override
+    public boolean removeacquisition(int acquisitionID) {
+        if (!permission.contains("removeacquisition"))
+            return false;
+        return getStore().removeacquisition(acquisitionID);
+    }
+
+    @Override
+    public boolean canPromoteToOwner() {
+        return CheckTegrati_ImMangaer() && true;
+    }
+
+    public boolean CheckTegrati_ImMangaer() {
+        return user != null;
+
+    }
 
 }
Index: src/Domain/UserClasses/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/UserClasses/User.java	(date 1592314856744)
+++ src/Domain/UserClasses/User.java	(date 1592314856744)
@@ -0,0 +1,433 @@
+package Domain.UserClasses;
+
+import Domain.Logs.EventLogger;
+import Domain.Notifier.Notifier;
+import Domain.Store.Product;
+import Domain.Store.StoreImp;
+import Domain.Store.StorePurchase;
+import Domain.Store.workers.Creator;
+import Domain.Store.workers.Store_role;
+import Domain.info.ProductDetails;
+import Domain.info.Question;
+import Domain.info.StoreInfo;
+import Domain.store_System.Roles.Member;
+import Domain.store_System.Roles.Registered;
+import Domain.store_System.Roles.System_Manager;
+import Domain.store_System.System;
+import tests.AcceptanceTests.auxiliary.StoreDetails;
+
+import java.util.Collection;
+import java.util.LinkedList;
+import java.util.List;
+import java.util.Map;
+
+public class User implements IUser {
+
+    private shoppingCart cart;
+    // imps of new classs digram
+    private Registered profile = null;
+    private Member logInstanse = null;
+    private System_Manager sysMangaer = null;
+    // ---- dont need to be here
+
+    // TODO move this to register and call it from member system role
+
+    public User() {
+        cart = new shoppingCart();
+    }
+
+    //delte this
+    public User(String address, int creditCardNum) {
+        cart = new shoppingCart();
+    }
+
+    // ------------------------------ user
+    public boolean login(String id, String password) {
+        if (profile != null)
+            return false;
+
+
+        profile = System.getInstance().login(id, password, this);
+        logInstanse = System.getInstance().getLogInstase(id, password);
+        sysMangaer = System.getInstance().ImManeger(id, password);
+
+        return profile != null;
+
+    }
+
+//	public List<StoreImp> watchAllStores() {
+//		return System.getInstance().getAllStores();
+//	}
+
+    // TODO rewrite this fucntion
+    // adding a product to a basket. if the product exists add 1 to the amount of
+    // the product in the basket
+    public boolean saveProductInBasket(String productName, String storeName, int amount) {
+        shoppingBasket basket = cart.findBasket(storeName);
+        if (basket == null)
+            return false;
+        return basket.addProduct(productName, amount);
+        //return true;
+
+    }
+
+    // removing at most amount of num of a product from the basket
+    public int deleteProductInBasket(String productName, String storeName, int num) {
+        EventLogger.GetInstance().Add_Log(this.toString() + "- remove item from cart");
+        return cart.removeItem(storeName, productName, num);
+
+    }
+
+    public List<ProductDetails> getProductsInCart() {
+        return cart.allProductsInCart();
+    }
+
+    public boolean logout() {
+        if (profile == null || logInstanse == null)
+            return false;
+        profile.LogLogout(this);
+        profile = null;
+        logInstanse = null;
+        System.getInstance().logout(this);
+
+        return true;
+//		if (system_role instanceof Member) {
+//			system_role = new Guest();
+//			return true;
+//		}
+//		return false;
+    }
+
+    public boolean openStore(String storename, String address, int rating) {
+
+        Notifier.getInstance().update("abc", "abc" +" openning a store! (From server)");
+
+        StoreImp mystore = logInstanse.OpenStore(new StoreInfo(storename, address, rating));
+        if (profile == null) {
+            EventLogger.GetInstance().Add_Log(this.toString() + "- trying to open store while not login");
+            return false;
+        }
+        EventLogger.GetInstance().Add_Log(this.toString() + "- opening store");
+        profile.store_roles.put(mystore.getName(), new Creator(mystore));
+        return mystore != null;
+    }
+
+    public boolean openStore(StoreInfo store) {
+
+        Notifier.getInstance().update("abc", "abc" +" openning a store! (From server)");
+
+        StoreImp mystore = logInstanse.OpenStore(store);
+        if (profile == null || mystore == null) {
+            EventLogger.GetInstance().Add_Log(this.toString() + "- trying to open store while not login");
+            return false;
+        }
+        EventLogger.GetInstance().Add_Log(this.toString() + "- opening store");
+
+        profile.store_roles.put(mystore.getName(), new Creator(mystore));
+        return mystore != null;
+
+    }
+
+    public List<UserPurchase> getPurchaseHistory() {
+        if (profile == null)
+            return null;
+
+        return profile.getPurchesHistory();
+    }
+
+    public void Complet_Purchase(double price) {
+        UserPurchase purchase = cart.Complet_Purchase();
+        purchase.TotalePrice = price;
+        if (profile != null) {
+            profile.getPurchesHistory().add(purchase);
+        }
+
+    }
+
+    // -------------------------------------------------- store info
+
+    public shoppingCart getCart() {
+        return cart;
+    }
+
+    public Collection<ProductDetails> watchProductsInStore(String name) {
+        return System.getInstance().getProductsFromStore(name);
+    }
+    // --------------------------------------------------------------- store actions
+
+    public boolean addProduct(String storeName, Product p) {
+//TODO add fail
+        if (profile == null)
+            return false;
+        Store_role role = profile.store_roles.get(storeName);
+        if (role == null)
+            return false;
+        return role.addItem(p);
+    }
+
+    public boolean editProduct(String storeName, String prodactname, Product newdetail) {
+        if (profile == null)
+            return false;
+        Store_role role = profile.store_roles.get(storeName);
+        if (role == null)
+            return false;
+        return role.editItem(prodactname, newdetail);
+    }
+
+    public boolean removeProduct(String storeName, String prodactname) {
+
+        if (profile == null)
+            return false;
+        Store_role role = profile.store_roles.get(storeName);
+        if (role == null)
+            return false;
+        return role.removeItem(prodactname);
+    }
+
+    //	public boolean appointOwner(String storeName, String username, String otherPassword) {
+//		if (profile == null)
+//			return false;
+//		User appointee = System.getInstance().getMember(username, otherPassword);
+//		if(appointee == null)
+//			return false;
+//		return profile.store_roles.get(storeName).appointOwner(appointee);
+//	}
+    public boolean appointOwner(String storeName, String hisusername) {
+        if (profile == null)
+            return false;
+        Registered appointee = System.getInstance().getUserProfile(hisusername);
+        if (appointee == null)
+            return false;
+        return profile.store_roles.get(storeName).appointOwner(appointee);
+    }
+
+    @Override
+    public boolean appointAsOwner(Store_role role) {
+        if (profile == null || profile.store_roles.containsKey(role.getStore().getName())
+                && !profile.store_roles.get(role.getStore().getName()).canPromoteToOwner()) {
+            return false;
+        }
+        profile.store_roles.remove(role.getStore().getName());
+        profile.store_roles.put(role.getStore().getName(), role);
+        return true;
+
+    }
+
+    public boolean appointManager(String storeName, String username) {
+
+        if (profile == null)
+            return false;
+        Registered appointee = System.getInstance().getUserProfile(username);
+        if (appointee == null)
+            return false;
+        Map<String, Store_role> store_roles = profile.store_roles;
+        if (store_roles.get(storeName) == null)
+            return false;
+        return store_roles.get(storeName).appointManager(appointee);
+
+    }
+
+    @Override
+    public boolean appointAsManager(Store_role role) {
+        // TODO this is the same as appoint owner
+        if (profile == null)
+            return false;
+        Map<String, Store_role> store_roles = profile.store_roles;
+        if (store_roles.containsKey(role.getStore().getName())
+                && !store_roles.get(role.getStore().getName()).canPromoteToOwner()) {
+            return false;
+        }
+        store_roles.remove(role.getStore().getName());
+        store_roles.put(role.getStore().getName(), role);
+        return true;
+    }
+
+    public boolean fireManager(String storeName, String username) {
+        Map<String, Store_role> store_roles = profile.store_roles;
+        if (store_roles.get(storeName) == null)
+            return false;
+        return store_roles.get(storeName).fire(username);
+    }
+
+    @Override
+    public boolean getFired(String store) {
+        Map<String, Store_role> store_roles = profile.store_roles;
+        if (store_roles.get(store) == null)
+            return false;
+        return store_roles.remove(store) != null;
+    }
+
+    public boolean addDiscount(String discount, String store) {
+        Map<String, Store_role> store_roles = profile.store_roles;
+        if (store_roles.get(store) == null)
+            return false;
+        return store_roles.get(store).addDiscount(discount);
+    }
+
+    public boolean removeDiscount(int discountID, String store) {
+        Map<String, Store_role> store_roles = profile.store_roles;
+        if (store_roles.get(store) == null)
+            return false;
+        return store_roles.get(store).removeDiscount(discountID);
+    }
+
+    public boolean addacquisition(String acquisition, String storeName) {
+        Map<String, Store_role> store_roles = profile.store_roles;
+        if (store_roles.get(storeName) == null)
+            return false;
+        return store_roles.get(storeName).addacquisition(acquisition);
+    }
+
+    public boolean removeacquisition(int acquisitionID, String storeName) {
+        Map<String, Store_role> store_roles = profile.store_roles;
+        if (store_roles.get(storeName) == null)
+            return false;
+        return store_roles.get(storeName).removeacquisition(acquisitionID);
+    }
+
+    private String last_store_looked_at = "";
+
+    public Collection<Question> viewQuestions(String storeName) {
+        last_store_looked_at = storeName;
+        Map<String, Store_role> store_roles = profile.store_roles;
+        return store_roles.get(storeName).viewQuestions();
+    }
+
+    public boolean giveRespond(String ansewr, int qustionID) {
+        Map<String, Store_role> store_roles = profile.store_roles;
+        return store_roles.get(last_store_looked_at).giveRespond(ansewr, qustionID);
+    }
+
+    public List<StorePurchase> ViewAquistionHistory(String storeName) {
+        if (sysMangaer != null)
+            return sysMangaer.getPurchaseHistory(storeName);
+        Map<String, Store_role> store_roles = profile.store_roles;
+        return store_roles.get(storeName).getPurchaseHistory();
+    }
+
+    public List<UserPurchase> ViewAquistionHistoryOfUser(String username) {
+        if (sysMangaer != null)
+            return sysMangaer.getPurchaseHistoryofUser(username);
+        return null;
+    }
+
+    public boolean editManagerPermesions(String storename, String managername, List<String> permesions) {
+        Map<String, Store_role> store_roles = profile.store_roles;
+        EventLogger.GetInstance().Add_Log(this.toString() + "- editing managerPermesions");
+        return store_roles.get(storename).editManagerPermesions(managername, permesions);
+    }
+
+
+    // Static -
+    // ------------------------------------------------------------------------------------------------------------------
+
+    static public boolean register(String id, String password) {
+        return System.getInstance().register(id, password);
+    }
+
+    static public StoreDetails watchStoreDetails(String name) {
+        StoreImp store = System.getInstance().getStoreDetails(name);
+        if (store == null)
+            return null;
+        return new StoreDetails(store);
+    }
+
+    static public StoreInfo watchStoreInfo(String storeName) {
+        StoreImp store = System.getInstance().getStoreDetails(storeName);
+        if (store == null)
+            return null;
+        return store.getMyInfo();
+    }
+
+    static public List<ProductDetails> searchProductsByName(String name) {
+        return System.getInstance().searchProductsByName(name);
+    }
+
+    static public ProductDetails searchProductByName(String name, String store) {
+        return System.getInstance().searchProductByName(name, store);
+    }
+
+    static public List<ProductDetails> searchProductsByCategory(String category) {
+        return System.getInstance().searchProductsByCategory(category);
+    }
+
+    static public List<ProductDetails> searchProductsByKeyword(String keyword) {
+        return System.getInstance().searchProductsByKeyword(keyword);
+    }
+
+    static public List<ProductDetails> filterByPrice(double minPrice, double maxPrice) {
+
+        List<ProductDetails> output = new LinkedList<ProductDetails>();
+        for (StoreImp store : System.getInstance().getAllStores()) {
+            for (Product product : store.getProducts()) {
+                if (product.getPrice() <= maxPrice && product.getPrice() >= minPrice)
+                    output.add(new ProductDetails(product, product.getAmount()));
+            }
+        }
+
+        return output;
+    }
+
+    static public List<ProductDetails> filterByRating(int minRating, int maxRating) {
+        List<ProductDetails> output = new LinkedList<ProductDetails>();
+        for (StoreImp store : System.getInstance().getAllStores()) {
+            for (Product product : store.getProducts()) {
+                if (product.getRating() <= maxRating && product.getRating() >= minRating)
+                    output.add(new ProductDetails(product, product.getAmount()));
+            }
+        }
+        return output;
+        // return System.getInstance().filterByRating( min, max);
+    }
+
+    static public List<ProductDetails> filterByCategory(String category) {
+        List<ProductDetails> output = new LinkedList<ProductDetails>();
+        for (StoreImp store : System.getInstance().getAllStores()) {
+            for (Product product : store.getProducts()) {
+                if (product.getCategory().contains(category))
+                    output.add(new ProductDetails(product, product.getAmount()));
+            }
+        }
+        return output;
+        // return System.getInstance().filterByCategory(category);
+    }
+
+    static public List<ProductDetails> filterByStoreRating(int minRating, int maxRating) {
+        List<ProductDetails> output = new LinkedList<ProductDetails>();
+        for (StoreImp store : System.getInstance().getAllStores()) {
+            if (store.getRating() > minRating && store.getRating() < maxRating)
+                for (Product product : store.getProducts()) {
+                    output.add(new ProductDetails(product, product.getAmount()));
+                }
+        }
+        return output;
+        // return System.getInstance().filterByStoreRating( min, max);
+    }
+
+    @Override
+    public String getName() {
+        // TODO Auto-generated method stub
+        if (profile == null)
+            return "Error still no name";
+        return profile.getId();
+    }
+
+    public List<String> storeOwned() {
+        if (profile != null)
+            return profile.storesOwned();
+
+        return new LinkedList<>();
+    }
+
+
+    public boolean CheckItemAvailableA() {
+        return cart.CheckItemAvailable();
+
+    }
+
+    public boolean CheckAcquisitions() {
+        return cart.CheckAcquisitions();
+    }
+
+
+}
Index: src/Domain/UserClasses/IshoppingBasket.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/UserClasses/IshoppingBasket.java	(date 1592314856744)
+++ src/Domain/UserClasses/IshoppingBasket.java	(date 1592314856744)
@@ -0,0 +1,20 @@
+package Domain.UserClasses;
+
+import java.util.List;
+
+import Domain.Store.Product;
+import Domain.Store.StoreImp;
+import Domain.info.ProductDetails;
+
+public interface IshoppingBasket {
+	 boolean addProduct(String name, int amount);
+
+	 int removeProduct(String name, int num);
+
+	 StoreImp getStore();
+
+	 List<ProductDetails> getProducts();
+	 double CalcPrice();
+	 List<Product> getItems();
+
+}
Index: src/Domain/UserClasses/UserPurchase.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/UserClasses/UserPurchase.java	(date 1592314856744)
+++ src/Domain/UserClasses/UserPurchase.java	(date 1592314856744)
@@ -0,0 +1,27 @@
+package Domain.UserClasses;
+
+import java.util.LinkedList;
+import java.util.List;
+import java.util.Objects;
+
+import Domain.Store.StorePurchase;
+
+public class UserPurchase {
+
+	public List<StorePurchase> eachPurchase = new LinkedList<StorePurchase>();
+	public double TotalePrice = 0;
+
+	@Override
+	public boolean equals(Object o) {
+		if (this == o) return true;
+		if (o == null || getClass() != o.getClass()) return false;
+		UserPurchase that = (UserPurchase) o;
+		return Double.compare(that.TotalePrice, TotalePrice) == 0 &&
+				Objects.equals(eachPurchase, that.eachPurchase);
+	}
+
+	@Override
+	public int hashCode() {
+		return Objects.hash(eachPurchase, TotalePrice);
+	}
+}
Index: src/Domain/RedClasses/IUser.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Domain.RedClasses;\n\nimport java.util.List;\n\nimport Domain.Store.workers.Store_role;\n\npublic interface IUser {\n//   // public boolean register(String id, String password);\n//    public boolean login(String id, String password);\n//   // public StoreImp watchStoreDetails(String name);\n//    public List<StoreImp> watchAllStores();\n//    public Collection<Product> watchProductsInStore(String name);\n//    //public List<Product> searchProductsByName(String name);\n//   // public List<Product> searchProductsByCategory(String category);\n//    //public List<Product> searchProductsByKeyword(String keyword);\n//    //public List<Product> filterByPrice(List<Product> base , int min , int max);\n//    //public List<Product> filterByRating(List<Product> base , int min , int max);\n//    //public List<Product> filterByCategory(List<Product> base , String category);\n//    //public List<Product> filterByStoreRating(List<Product> base , int min, int max);\n//    public boolean saveProductInBasket(String productName , String storeName);\n//    //ublic List<ProductDetails> getProductsInCart();\n//    public int deleteProductInBasket(String productName , String storeName,int num);\n//   // public boolean purchase();\n//    public boolean logout();\n//    public boolean openStore(String name, String address, int rating);\n//    public List<shoppingCart> watchHistory();\n//    public boolean isOwner();\n//    public boolean isManager();\n//    public boolean isRegistered();\n//    public shoppingCart getCart();\n    public List<UserPurchase> getPurchaseHistory();\n\n\tpublic boolean getFired(String store);\n\n\tpublic boolean appointAsOwner(Store_role newRole);\n\n\tpublic boolean appointAsManager(Store_role newRole);\n\n\tpublic String getName();\n\n//\tpublic boolean appointAsOwner(Store_role creator, String store);\n}\n
===================================================================
--- src/Domain/RedClasses/IUser.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Domain/UserClasses/IUser.java	(date 1592314856744)
@@ -1,4 +1,4 @@
-package Domain.RedClasses;
+package Domain.UserClasses;
 
 import java.util.List;
 
@@ -28,15 +28,15 @@
 //    public boolean isManager();
 //    public boolean isRegistered();
 //    public shoppingCart getCart();
-    public List<UserPurchase> getPurchaseHistory();
+     List<UserPurchase> getPurchaseHistory();
 
-	public boolean getFired(String store);
+	 boolean getFired(String store);
 
-	public boolean appointAsOwner(Store_role newRole);
+	 boolean appointAsOwner(Store_role newRole);
 
-	public boolean appointAsManager(Store_role newRole);
+	 boolean appointAsManager(Store_role newRole);
 
-	public String getName();
+	 String getName();
 
 //	public boolean appointAsOwner(Store_role creator, String store);
 }
Index: src/Domain/Notifier/Notifier.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/Notifier/Notifier.java	(date 1592314856740)
+++ src/Domain/Notifier/Notifier.java	(date 1592314856740)
@@ -0,0 +1,29 @@
+package Domain.Notifier;
+
+import java.util.Observable;
+
+public class Notifier extends Observable {
+
+    private static Notifier notifier = new Notifier();
+
+    private Notifier() {}
+
+    public static Notifier getInstance(){
+        return notifier;
+    }
+
+
+    /*public void update(String msg){
+        notifier.notifyObservers(msg);
+    }
+
+    public void update(int gustID, String msg){
+        notifier.notifyObservers(msg);
+    } */
+
+    public void update(String userName, String msg){
+        notifier.setChanged();
+        notifier.notifyObservers(userName + "!@!" + msg);
+    }
+
+}
Index: src/Domain/Policies/BasePolicy.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/Policies/BasePolicy.java	(date 1592314856740)
+++ src/Domain/Policies/BasePolicy.java	(date 1592314856740)
@@ -0,0 +1,22 @@
+package Domain.Policies;
+
+import java.util.Arrays;
+import java.util.Collections;
+import java.util.List;
+import java.util.Stack;
+
+/**
+ * class that contains utils for the parsers on policies classes
+ */
+
+public class BasePolicy {
+    protected static String REGEX = "#";
+
+    protected static Stack<String> stringSplitToStack(String str, String regex) {
+        List<String> lst = Arrays.asList(str.split(regex));
+        Collections.reverse(lst);
+        Stack<String> stack = new Stack<>();
+        stack.addAll(lst);
+        return stack;
+    }
+}
Index: src/Domain/Policies/Discounts/XorDiscount.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/Policies/Discounts/XorDiscount.java	(date 1592314856740)
+++ src/Domain/Policies/Discounts/XorDiscount.java	(date 1592314856740)
@@ -0,0 +1,18 @@
+package Domain.Policies.Discounts;
+
+import java.util.List;
+
+class XorDiscount extends CompositeDiscount {
+    XorDiscount(List<Discount> discounts) {
+        // use or instead of xor because we need at least one
+        // xor should apply only one discount, so we choose the max discount
+        super(discounts, Boolean::logicalOr, false, Math::max);
+    }
+
+    @Override
+    public String toString() {
+        return "XorDiscount{" +
+                super.toString().replace("\n", "\n\t") +
+                "\n\t}";
+    }
+}
Index: src/Domain/Policies/Discounts/VisibleDiscount.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/Policies/Discounts/VisibleDiscount.java	(date 1592314856740)
+++ src/Domain/Policies/Discounts/VisibleDiscount.java	(date 1592314856740)
@@ -0,0 +1,60 @@
+package Domain.Policies.Discounts;
+
+import Domain.info.ProductDetails;
+
+import java.time.LocalDate;
+import java.time.format.DateTimeFormatter;
+import java.util.List;
+
+class VisibleDiscount implements Discount {
+    private static DateTimeFormatter format = DateTimeFormatter.ofPattern("dd/MM/yyyy");
+
+    protected String productName;
+    LocalDate expirationDate;
+    private int percentage;
+
+    VisibleDiscount(String productName, int percentage, LocalDate expirationDate) {
+        this.productName = productName;
+        this.percentage = percentage;
+        this.expirationDate = expirationDate;
+    }
+
+    /**
+     * returns the product 'productName' from 'products'
+     * returns null if doesn't exist
+     */
+    ProductDetails getDiscountProduct(List<ProductDetails> products) {
+        for (ProductDetails p : products) {
+            if (p.getName().equals(productName))
+                return p;
+        }
+        return null;
+    }
+
+    @Override
+    public boolean hasDiscount(List<ProductDetails> products) {
+        if (LocalDate.now().isAfter(expirationDate))
+            return false;
+        if (productName.equals("ALL"))
+            return true;
+        return getDiscountProduct(products) != null;
+    }
+
+    @Override
+    public double applyDiscount(List<ProductDetails> products) {
+        if (productName.equals("ALL")) {
+            double price = 0;
+            for (ProductDetails p : products)
+                price += p.getAmount() * p.getPrice();
+            return price * percentage;
+        }
+        ProductDetails p = getDiscountProduct(products);
+        return p == null ? 0 : p.getAmount() * p.getPrice() * percentage;
+    }
+
+    @Override
+    public String toString() {
+        return "Discount on '" + productName + "': " +
+                percentage + "% until " + expirationDate.format(format);
+    }
+}
Index: src/Domain/Policies/Discounts/DiscountPolicy.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/Policies/Discounts/DiscountPolicy.java	(date 1592314856740)
+++ src/Domain/Policies/Discounts/DiscountPolicy.java	(date 1592314856740)
@@ -0,0 +1,137 @@
+package Domain.Policies.Discounts;
+
+import Domain.Logs.ErrorLogger;
+import Domain.Policies.BasePolicy;
+import Domain.info.ProductDetails;
+
+import java.time.LocalDate;
+import java.time.format.DateTimeFormatter;
+import java.util.LinkedList;
+import java.util.List;
+import java.util.Stack;
+import java.util.concurrent.atomic.AtomicInteger;
+
+
+/*
+    this class get string in the following format that represent Discount
+    and parse it in order to create discounts objects.
+    Note: the formats are without spaces
+
+    simple discount format:
+        <type>#<product-name>#<percentage>#<exp-date>  [#<condition>]
+        where:
+        - <type>: 0 - visible
+                  1 - conditional amount
+                  2 - conditional price
+        - <product-name>: the name of the product
+        - <percentage>: integer between 0 to 100
+        - <exp-date>: date in format DD/MM/YYYY
+        - <condition>: only for conditional (amount if 1 and price if 2)
+
+    Composite discount format:
+        <type>#<number> (#<discount>)*
+        where:
+        - <type>: 10 - And
+                  11 - Or
+                  12 - Xor
+        - <discount>: discount in valid format
+        - <number>: how many discounts are
+        - * means repetition
+ */
+
+public class DiscountPolicy extends BasePolicy {
+    private static DateTimeFormatter format = DateTimeFormatter.ofPattern("dd/MM/yyyy");
+
+    private List<Discount> discounts;
+
+    public DiscountPolicy() {
+        this.discounts = new LinkedList<>();
+    }
+
+    private Discount discountFactory(Stack<String> params) throws Exception {
+        int type = Integer.parseInt(params.pop());
+        switch (type) {
+            case 0: //visible
+                return new VisibleDiscount(params.pop(), Integer.parseInt(params.pop()), toDate(params.pop()));
+
+            case 1: //conditional amount
+                return new ConditionalAmountDiscount(params.pop(), Integer.parseInt(params.pop()), toDate(params.pop()),
+                        Integer.parseInt(params.pop()));
+
+            case 2: //conditional price
+                return new ConditionalPriceDiscount(params.pop(), Integer.parseInt(params.pop()), toDate(params.pop()),
+                        Double.parseDouble(params.pop()));
+
+            case 10: //composite and
+                return new AndDiscount(parseDiscountList(params));
+
+            case 11: //composite or
+                return new OrDiscount(parseDiscountList(params));
+
+            case 12: //composite xor
+                return new XorDiscount(parseDiscountList(params));
+
+            default:
+                throw new Exception();
+        }
+    }
+
+    private List<Discount> parseDiscountList(Stack<String> params) throws Exception {
+        List<Discount> discountList = new LinkedList<>();
+        int n = Integer.parseInt(params.pop());
+        for (int i = 0; i < n; i++) {
+            discountList.add(discountFactory(params));
+        }
+        return discountList;
+    }
+
+    private LocalDate toDate(String date) {
+        return LocalDate.parse(date, format);
+    }
+
+    public boolean addDiscount(String discount) {
+        Discount d;
+        try {
+            d = discountFactory(stringSplitToStack(discount, REGEX));
+        } catch (Exception e) {
+            ErrorLogger.GetInstance().Add_Log("IN Discount" + " got wrong discount format");
+            return false;
+        }
+        discounts.add(d);
+        return true;
+    }
+
+    public boolean hasDiscounts(List<ProductDetails> products) {
+        return discounts.stream()
+                .map(d -> d.hasDiscount(products))
+                .reduce(false, Boolean::logicalOr);
+    }
+
+    public double applyDiscounts(List<ProductDetails> products) {
+        double totalPrice = products.stream().map(ProductDetails::getTotalPrice).reduce(0.0, Double::sum);
+        return totalPrice -
+                discounts.stream()
+                        .filter(d -> d.hasDiscount(products))
+                        .map(d -> d.applyDiscount(products))
+                        .reduce(0.0, Double::sum);
+    }
+
+    public boolean removeDiscount(int disNum) {
+        if (disNum >= 0 && disNum < discounts.size()) {
+            discounts.remove(disNum);
+            return true;
+        }
+        return false;
+    }
+
+    @Override
+    public String toString() {
+        AtomicInteger i = new AtomicInteger();
+        return "Discounts{" +
+                discounts.stream()
+                        .map(Discount::toString)
+                        .reduce("", (acc, cur) -> acc + "\n\t" + (i.getAndIncrement()) + ". " + cur) +
+                "\n}";
+    }
+
+}
Index: src/Domain/Policies/Discounts/AndDiscount.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/Policies/Discounts/AndDiscount.java	(date 1592314856740)
+++ src/Domain/Policies/Discounts/AndDiscount.java	(date 1592314856740)
@@ -0,0 +1,17 @@
+package Domain.Policies.Discounts;
+
+import java.util.List;
+
+class AndDiscount extends CompositeDiscount {
+
+    AndDiscount(List<Discount> discounts) {
+        super(discounts, Boolean::logicalAnd, true, Double::sum);
+    }
+
+    @Override
+    public String toString() {
+        return "AndDiscount{" +
+                super.toString().replace("\n", "\n\t") +
+                "\n\t}";
+    }
+}
Index: src/Domain/Policies/Discounts/CompositeDiscount.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/Policies/Discounts/CompositeDiscount.java	(date 1592314856740)
+++ src/Domain/Policies/Discounts/CompositeDiscount.java	(date 1592314856740)
@@ -0,0 +1,42 @@
+package Domain.Policies.Discounts;
+
+import Domain.info.ProductDetails;
+
+import java.util.List;
+import java.util.function.BinaryOperator;
+
+abstract class CompositeDiscount implements Discount {
+    protected List<Discount> discounts;
+    private BinaryOperator<Boolean> hasDiscountOperator;
+    private Boolean hasDiscountIdentity;
+    private BinaryOperator<Double> applyDiscountOperator;
+
+    CompositeDiscount(List<Discount> discounts, BinaryOperator<Boolean> hasDiscountOperator,
+                      Boolean hasDiscountIdentity, BinaryOperator<Double> applyDiscountOperator) {
+        this.discounts = discounts;
+        this.hasDiscountOperator = hasDiscountOperator;
+        this.hasDiscountIdentity = hasDiscountIdentity;
+        this.applyDiscountOperator = applyDiscountOperator;
+    }
+
+    @Override
+    public boolean hasDiscount(List<ProductDetails> products) {
+        return discounts.stream()
+                .map(d -> d.hasDiscount(products))
+                .reduce(hasDiscountIdentity, hasDiscountOperator);
+    }
+
+    @Override
+    public double applyDiscount(List<ProductDetails> products) {
+        return discounts.stream()
+                .filter(d -> d.hasDiscount(products))
+                .map(d -> d.applyDiscount(products))
+                .reduce(0.0, applyDiscountOperator);
+    }
+
+    @Override
+    public String toString() {
+        return discounts.stream().map(Discount::toString).reduce("", (acc, cur) -> acc + "\n\t" + cur);
+    }
+
+}
Index: src/Domain/Policies/Discounts/Discount.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/Policies/Discounts/Discount.java	(date 1592314856740)
+++ src/Domain/Policies/Discounts/Discount.java	(date 1592314856740)
@@ -0,0 +1,25 @@
+package Domain.Policies.Discounts;
+
+import Domain.info.ProductDetails;
+
+import java.util.List;
+
+interface Discount {
+    // at all discounts, productName can be 'ALL' to represent store discount
+
+    /**
+     * returns true if this discount can be applied on some or all of those products
+     * otherwise, return false.
+     */
+    boolean hasDiscount(List<ProductDetails> products);
+
+    /**
+     * apply this discount on the products.
+     * returns the difference that need to subtract from original price.
+     * <p>
+     * assumptions:
+     * * hasDiscount is true
+     * * products doesn't contain two products with same name
+     */
+    double applyDiscount(List<ProductDetails> products);
+}
Index: src/Domain/Policies/Discounts/ConditionalPriceDiscount.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/Policies/Discounts/ConditionalPriceDiscount.java	(date 1592314856740)
+++ src/Domain/Policies/Discounts/ConditionalPriceDiscount.java	(date 1592314856740)
@@ -0,0 +1,19 @@
+package Domain.Policies.Discounts;
+
+import java.time.LocalDate;
+
+class ConditionalPriceDiscount extends ConditionalDiscount {
+    private double minPrice;
+
+    ConditionalPriceDiscount(String productName, int percentage, LocalDate expirationDate, double minPrice) {
+        super(productName, percentage, expirationDate);
+        this.minPrice = minPrice;
+        this.condition = p -> p.getAmount() >= minPrice;
+    }
+
+    @Override
+    public String toString() {
+        return super.toString() +
+                " if Price >= " + minPrice;
+    }
+}
Index: src/Domain/Policies/Discounts/OrDiscount.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/Policies/Discounts/OrDiscount.java	(date 1592314856740)
+++ src/Domain/Policies/Discounts/OrDiscount.java	(date 1592314856740)
@@ -0,0 +1,17 @@
+package Domain.Policies.Discounts;
+
+import java.util.List;
+
+class OrDiscount extends CompositeDiscount {
+
+    OrDiscount(List<Discount> discounts) {
+        super(discounts, Boolean::logicalOr, false, Double::sum);
+    }
+
+    @Override
+    public String toString() {
+        return "OrDiscount{" +
+                super.toString().replace("\n", "\n\t") +
+                "\n\t}";
+    }
+}
Index: src/Domain/Policies/Discounts/ConditionalAmountDiscount.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/Policies/Discounts/ConditionalAmountDiscount.java	(date 1592314856740)
+++ src/Domain/Policies/Discounts/ConditionalAmountDiscount.java	(date 1592314856740)
@@ -0,0 +1,19 @@
+package Domain.Policies.Discounts;
+
+import java.time.LocalDate;
+
+class ConditionalAmountDiscount extends ConditionalDiscount {
+    private int minAmount;
+
+    ConditionalAmountDiscount(String productName, int percentage, LocalDate expirationDate, int minAmount) {
+        super(productName, percentage, expirationDate);
+        this.minAmount = minAmount;
+        this.condition = p -> p.getAmount() >= minAmount;
+    }
+
+    @Override
+    public String toString() {
+        return super.toString() +
+                " if Amount >= " + minAmount;
+    }
+}
Index: src/Domain/Policies/Discounts/ConditionalDiscount.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/Policies/Discounts/ConditionalDiscount.java	(date 1592314856740)
+++ src/Domain/Policies/Discounts/ConditionalDiscount.java	(date 1592314856740)
@@ -0,0 +1,25 @@
+package Domain.Policies.Discounts;
+
+import Domain.info.ProductDetails;
+
+import java.time.LocalDate;
+import java.util.List;
+import java.util.function.Function;
+
+abstract class ConditionalDiscount extends VisibleDiscount {
+    Function<ProductDetails, Boolean> condition;
+
+    ConditionalDiscount(String productName, int percentage, LocalDate expirationDate) {
+        super(productName, percentage, expirationDate);
+    }
+
+    @Override
+    public boolean hasDiscount(List<ProductDetails> products) {
+        if (LocalDate.now().isAfter(expirationDate))
+            return false;
+        if (productName.equals("ALL"))
+            return true;
+        ProductDetails p = getDiscountProduct(products);
+        return p != null && condition.apply(p);
+    }
+}
Index: src/Domain/Policies/Acquisitions/Acquisition.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/Policies/Acquisitions/Acquisition.java	(date 1592314856740)
+++ src/Domain/Policies/Acquisitions/Acquisition.java	(date 1592314856740)
@@ -0,0 +1,17 @@
+package Domain.Policies.Acquisitions;
+
+import Domain.info.ProductDetails;
+
+import java.util.List;
+
+public interface Acquisition {
+    // at all acquisitions, productName can be 'ALL' to represent store condition
+
+
+    /**
+     * returns true if this discount can be applied on some or all of those products
+     * otherwise, return false.
+     */
+    boolean canPurchase(List<ProductDetails> products);
+
+}
Index: src/Domain/Policies/Acquisitions/AcqMaxAmount.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/Policies/Acquisitions/AcqMaxAmount.java	(date 1592314856740)
+++ src/Domain/Policies/Acquisitions/AcqMaxAmount.java	(date 1592314856740)
@@ -0,0 +1,25 @@
+package Domain.Policies.Acquisitions;
+
+import Domain.info.ProductDetails;
+
+import java.util.List;
+
+class AcqMaxAmount extends AcqAmountCondition {
+
+    AcqMaxAmount(String productName, int amount) {
+        super(productName, amount);
+    }
+
+    @Override
+    public boolean canPurchase(List<ProductDetails> products) {
+        if (productName.equals("ALL"))
+            return getTotalAmount(products) <= amount;
+        ProductDetails p = findProduct(products);
+        return p != null && p.getAmount() <= amount;
+    }
+
+    @Override
+    public String toString() {
+        return "Max. " + super.toString();
+    }
+}
Index: src/Domain/store_System/System.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Domain.store_System;\n\nimport Domain.Logs.ErrorLogger;\nimport Domain.Logs.EventLogger;\nimport Domain.RedClasses.IshoppingBasket;\nimport Domain.RedClasses.User;\nimport Domain.RedClasses.shoppingCart;\nimport Domain.Store.*;\nimport Domain.info.ProductDetails;\nimport Domain.info.StoreInfo;\nimport Domain.store_System.Roles.Member;\nimport Domain.store_System.Roles.Registered;\nimport Domain.store_System.Roles.System_Manager;\nimport Domain.store_System.Security.PassProtocol_Imp;\nimport Domain.store_System.Security.PasswordProtocol;\nimport extornal.payment.MyPaymentSystem;\nimport extornal.payment.MyPaymentSystem_Driver;\nimport extornal.payment.PaymentMethed;\nimport extornal.supply.MySupplySystem;\nimport extornal.supply.MySupplySystem_Driver;\nimport extornal.supply.Supplyer;\n\nimport java.util.*;\n\npublic class System implements ISystem {\n\n\tprivate boolean init = false;\n\tprivate System_Manager manager = null;\n\tprivate int TempGuestID = 1;\n\tprivate Map<Integer, User> guest = new HashMap<>();\n\tprivate Map<String, Registered> membersprofiles = new HashMap<>();\n\tprivate Map<String, Member> onlinemember = new HashMap<>();\n\tprivate PasswordProtocol myProtocol = PassProtocol_Imp.getInstance();\n\tprivate Map<String, StoreImp> stores = new HashMap<String, StoreImp>();\n\tprivate List<MyPair<String, List<shoppingCart>>> order = new LinkedList<>();\n\tprivate MyPaymentSystem paymentdriver = new MyPaymentSystem_Driver();\n\tprivate MySupplySystem supplydriver = new MySupplySystem_Driver();\n\n\tprivate static System instance = null;\n\n\tpublic static System getInstance() {\n\t\tif (instance == null) {\n\t\t\tinstance = new System();\n\t\t}\n\t\treturn instance;\n\t}\n\n\t// ----------------------------------init\n\tpublic System_Manager ImManeger(String id, String password) {\n\n\t\tif (manager != null && (!(id.compareTo(manager.name) == 0) || !myProtocol.login(id, password))) {\n\t\t\treturn null;\n\t\t}\n\n\t\tEventLogger.GetInstance().Add_Log(this.toString() + \"-manager login\");\n\t\treturn manager;\n\t}\n\n\tpublic boolean init(String username, String password) {\n\n\t\tif (init) {\n\t\t\tErrorLogger.GetInstance().Add_Log(this.toString() + \"- system trying to init 2nd time\");\n\t\t\treturn false;\n\t\t}\n\t\tEventLogger.GetInstance().Add_Log(this.toString() + \"- system init\");\n\t\tinit = true;\n\t\tint guestId = ImNew();\n\t\tUser guest = getGuest(guestId);\n\t\tUser.register(username, password);\n\t\tmanager = new System_Manager(username);\n\t\tguest.login(username, password);\n\n\t\treturn true;\n\n\t}\n\n\tpublic void resetSystem(){\n\t\tmyProtocol.reset();\n\t\tinstance = null;\t//\tTODO: temp\n\t}\n    \n\t// ---------------------------------- users\n\tpublic void removeUser(String username, String password) {\n\t\t//TODO temp\n\t\tmembersprofiles.remove(username);\n\t\tmyProtocol.deleteRegistry(username, password);\n\t}\n\n\tpublic int ImNew() {\n\t\tEventLogger.GetInstance().Add_Log(this.toString() + \"- new guest\");\n\t\tTempGuestID++;\n\t\tguest.put(TempGuestID, new User());\n\t\treturn TempGuestID;\n\t}\n\n\tpublic User getGuest(int id) {\n\t\tEventLogger.GetInstance().Add_Log(this.toString() + \"- new guest\");\n\t\treturn guest.get(id);\n\t}\n\n\tpublic boolean register(String id, String password) {\n\t\tif (!myProtocol.addRegistry(id, password)) {\n\t\t\tErrorLogger.GetInstance().Add_Log(this.toString() + \"- failed to register\");\n\t\t\treturn false;\n\t\t}\n\n\t\tEventLogger.GetInstance().Add_Log(this.toString() + \"- new register\");\n\t\tmembersprofiles.put(id, new Registered(id));\n\t\treturn true;\n\t}\n\n\tpublic Registered login(String id, String password, User user) {\n\t\tif (!myProtocol.login(id, password)) {\n\t\t\tErrorLogger.GetInstance().Add_Log(this.toString() + \"- failed to login\");\n\t\t\treturn null;\n\t\t}\n\n\t\tRegistered Profile = membersprofiles.get(id);\n\t\tif (Profile == null) {\n\t\t\tErrorLogger.GetInstance().Add_Log(this.toString() + \"- register dont exsist fatal error\");\n\t\t\treturn null;\n\t\t}\n\t\tProfile.LogLogin(user);\n\t\tonlinemember.put(id, new Member(user));\n\t\tEventLogger.GetInstance().Add_Log(this.toString() + \"- user login\");\n\t\treturn Profile;\n\n\t}\n\n\tpublic User getMember(String myusername, String myPassword) {\n\t\tif (!myProtocol.login(myusername, myPassword))\n\t\t\treturn null;\n\t\tif (onlinemember.containsKey(myusername))\n\t\t\treturn onlinemember.get(myusername).getUser();\n\t\treturn null;\n\t}\n\n\tpublic boolean logout(User user) {\n\t\tEventLogger.GetInstance().Add_Log(this.toString() + \"user went offline\");\n\t\treturn onlinemember.remove(user.getName()) != null;\n\n\t}\n\n\tpublic Registered getUser(String username) {\n\n\t\treturn membersprofiles.get(username);\n\t}\n\n\tpublic Member getLogInstase(String id, String password) {\n\t\tif (!myProtocol.login(id, password))\n\t\t\treturn null;\n\t\tif (onlinemember.containsKey(id))\n\t\t\treturn onlinemember.get(id);\n\t\treturn null;\n\t}\n\n\t// TODO need to delete one of thouse\n\tpublic User getMember(int guestId) {\n\t\tUser u = guest.get(guestId);\n\t\tif (onlinemember.containsKey(u.getName()))\n\t\t\treturn u;\n\t\treturn null;\n\t}\n\n\t// -------------------------------Store\n\tpublic StoreImp openStore(StoreInfo store) {\n\t\tif (stores.containsKey(store.name))\n\t\t\treturn null;\n\n\t\tStoreImp newStore = new StoreImp(store);\n\t\tstores.put(store.name, newStore);\n\t\treturn newStore;\n\t}\n\n\t// TODO delete one of thouse functions\n\tpublic StoreImp openStore(String name, String address, int rating) {\n\t\tStoreInfo store = new StoreInfo(name, address, rating);\n\t\tif (stores.containsKey(store.name))\n\t\t\treturn null;\n\n\t\tStoreImp newStore = new StoreImp(store);\n\t\tstores.put(store.name, newStore);\n\t\treturn newStore;\n\t}\n\n\tpublic boolean fillStore(List<Product> Products) {\n\t\tboolean output = true;\n\t\tEventLogger.GetInstance().Add_Log(this.toString() + \"- returning product to store\");\n\t\tfor (Product product : Products) {\n\t\t\toutput = output & product.getStore().addProduct(product);\n\t\t}\n\t\treturn output;\n\t}\n\n\tpublic StoreImp getStoreDetails(String name) {\n\t\tif (stores.containsKey(name))\n\t\t\treturn stores.get(name);\n\n\t\treturn null;\n\t}\n\n\tpublic Collection<ProductDetails> getProductsFromStore(String name) {\n\t\tif (stores.containsKey(name))\n\t\t\treturn stores.get(name).getProductsDetails();\n\n\t\treturn null;\n\n\t}\n\n\tpublic List<IshoppingBasket> orderHistory(IStore store) {\n\n\t\tList<IshoppingBasket> baskets = new LinkedList<>();\n\n\t\tfor (MyPair<String, List<shoppingCart>> pair : order) {\n\t\t\tList<shoppingCart> carts = pair.getValue();\n\n\t\t\tfor (shoppingCart cart : carts) {\n\t\t\t\tfor (IshoppingBasket basket : cart.getBaskets()) {\n\t\t\t\t\tif (basket.getStore() == store) {\n\t\t\t\t\t\tbaskets.add(basket);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn baskets;\n\t}\n\n\tpublic Collection<StoreImp> getAllStores() {\n\t\treturn stores.values();\n\t}\n\n\tpublic List<StorePurchase> getPurchaseHistory(String storeName) {\n\t\treturn stores.get(storeName).viewPurchaseHistory();\n\n\t}\n\n\t// ------------------------------ find products\n\tpublic List<ProductDetails> searchProductsByName(String name) {\n\t\tList<ProductDetails> toReturn = new LinkedList<>();\n\t\tfor (StoreImp s : stores.values()) {\n\t\t\tProductDetails toAdd = s.findProductDetailsByName(name);\n\t\t\tif (toAdd != null) {\n\t\t\t\ttoReturn.add(toAdd);\n\t\t\t}\n\t\t}\n\t\treturn toReturn;\n\t}\n\n\tpublic List<ProductDetails> searchProductsByCategory(String category) {\n\t\tList<ProductDetails> toReturn = new LinkedList<>();\n\t\tfor (StoreImp s : stores.values()) {\n\t\t\tList<ProductDetails> toAdd = s.findProductDetailsByCategory(category);\n\t\t\ttoReturn.addAll(toAdd);\n\t\t\t// concat2(toReturn, toAdd);\n\t\t}\n\t\treturn toReturn;\n\t}\n\n\tpublic List<ProductDetails> searchProductsByKeyword(String keyword) {\n\t\tList<ProductDetails> toReturn = new LinkedList<>();\n\t\tfor (StoreImp s : stores.values()) {\n\t\t\tList<ProductDetails> toAdd = s.findProductDetailsByKeyword(keyword);\n\t\t\ttoReturn.addAll(toAdd);\n\t\t\t// concat2(toReturn, toAdd);\n\t\t}\n\t\treturn toReturn;\n\t}\n\n\tpublic List<Product> filterByPrice(List<Product> base, double min, double max) {\n\t\tList<Product> toReturn = new LinkedList<>();\n\t\tfor (Product p : base) {\n\t\t\tif (p.getPrice() >= min & p.getPrice() <= max) {\n\t\t\t\ttoReturn.add(p);\n\t\t\t}\n\t\t}\n\t\treturn toReturn;\n\t}\n\n\tpublic List<Product> filterByRating(List<Product> base, int min, int max) {\n\t\tList<Product> toReturn = new LinkedList<>();\n\t\tfor (Product p : base) {\n\t\t\tif (p.getRating() >= min & p.getRating() <= max) {\n\t\t\t\ttoReturn.add(p);\n\t\t\t}\n\t\t}\n\t\treturn toReturn;\n\t}\n\n\tpublic List<Product> filterByCategory(List<Product> base, String category) {\n\t\tList<Product> toReturn = new LinkedList<>();\n\t\tfor (Product p : base) {\n\t\t\tif (p.getCategory().equals(category)) {\n\t\t\t\ttoReturn.add(p);\n\t\t\t}\n\t\t}\n\t\treturn toReturn;\n\t}\n\n\tpublic List<Product> filterByStoreRating(List<Product> base, int min, int max) {\n\t\tList<Product> toReturn = new LinkedList<>();\n\t\tfor (Product p : base) {\n\t\t\tif (p.getStore().getRating() >= min & p.getStore().getRating() <= max) {\n\t\t\t\ttoReturn.add(p);\n\t\t\t}\n\t\t}\n\t\treturn toReturn;\n\t}\n\n\t// ------------------------purchase\n\n\tpublic PaymentMethed navigatePayment() {\n\t\treturn paymentdriver.getPaymentMethed();\n\t}\n\n\tpublic Supplyer navigateSupply() {\n\t\treturn supplydriver.getSupplayer();\n\n\t}\n\n\t// @Override\n\tpublic boolean CheckItemAvailableA(List<ProductDetails> items) {\n\t\tfor (ProductDetails details : items) {\n\t\t\t// StoreImp s = s\n\t\t\tif (!getStoreDetails(details.getStoreName()).CheckItemAvailable(details)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n//-------------------------------------------------------\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/store_System/System.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Domain/store_System/System.java	(date 1592314856744)
@@ -2,17 +2,17 @@
 
 import Domain.Logs.ErrorLogger;
 import Domain.Logs.EventLogger;
-import Domain.RedClasses.IshoppingBasket;
-import Domain.RedClasses.User;
-import Domain.RedClasses.shoppingCart;
 import Domain.Store.*;
+import Domain.UserClasses.IshoppingBasket;
+import Domain.UserClasses.User;
+import Domain.UserClasses.shoppingCart;
 import Domain.info.ProductDetails;
 import Domain.info.StoreInfo;
 import Domain.store_System.Roles.Member;
 import Domain.store_System.Roles.Registered;
 import Domain.store_System.Roles.System_Manager;
-import Domain.store_System.Security.PassProtocol_Imp;
-import Domain.store_System.Security.PasswordProtocol;
+import extornal.Security.PassProtocol_Imp;
+import extornal.Security.PasswordProtocol;
 import extornal.payment.MyPaymentSystem;
 import extornal.payment.MyPaymentSystem_Driver;
 import extornal.payment.PaymentMethed;
@@ -24,310 +24,338 @@
 
 public class System implements ISystem {
 
-	private boolean init = false;
-	private System_Manager manager = null;
-	private int TempGuestID = 1;
-	private Map<Integer, User> guest = new HashMap<>();
-	private Map<String, Registered> membersprofiles = new HashMap<>();
-	private Map<String, Member> onlinemember = new HashMap<>();
-	private PasswordProtocol myProtocol = PassProtocol_Imp.getInstance();
-	private Map<String, StoreImp> stores = new HashMap<String, StoreImp>();
-	private List<MyPair<String, List<shoppingCart>>> order = new LinkedList<>();
-	private MyPaymentSystem paymentdriver = new MyPaymentSystem_Driver();
-	private MySupplySystem supplydriver = new MySupplySystem_Driver();
+    private boolean init = false;
+    private System_Manager manager = null;
+    private int TempGuestID = 1;
+    private Map<Integer, User> guest = new HashMap<>();
+    private Map<String, Registered> membersprofiles = new HashMap<>();
+    private Map<String, Member> onlinemember = new HashMap<>();
+    private PasswordProtocol myProtocol = PassProtocol_Imp.getInstance();
+    private Map<String, StoreImp> stores = new HashMap<String, StoreImp>();
+    private List<MyPair<String, List<shoppingCart>>> order = new LinkedList<>();
+    private MyPaymentSystem paymentdriver = new MyPaymentSystem_Driver();
+    private MySupplySystem supplydriver = new MySupplySystem_Driver();
 
-	private static System instance = null;
+    private static System instance = null;
 
-	public static System getInstance() {
-		if (instance == null) {
-			instance = new System();
-		}
-		return instance;
-	}
+    public static System getInstance() {
+        if (instance == null) {
+            instance = new System();
+        }
+        return instance;
+    }
 
-	// ----------------------------------init
-	public System_Manager ImManeger(String id, String password) {
+    // ----------------------------------init
+    public System_Manager ImManeger(String id, String password) {
 
-		if (manager != null && (!(id.compareTo(manager.name) == 0) || !myProtocol.login(id, password))) {
-			return null;
-		}
+        if (manager != null && (!(id.compareTo(manager.name) == 0) || !myProtocol.login(id, password))) {
+            return null;
+        }
 
-		EventLogger.GetInstance().Add_Log(this.toString() + "-manager login");
-		return manager;
-	}
+        EventLogger.GetInstance().Add_Log(this.toString() + "-manager login");
+        return manager;
+    }
 
-	public boolean init(String username, String password) {
+    public boolean init(String username, String password) {
 
-		if (init) {
-			ErrorLogger.GetInstance().Add_Log(this.toString() + "- system trying to init 2nd time");
-			return false;
-		}
-		EventLogger.GetInstance().Add_Log(this.toString() + "- system init");
-		init = true;
-		int guestId = ImNew();
-		User guest = getGuest(guestId);
-		User.register(username, password);
-		manager = new System_Manager(username);
-		guest.login(username, password);
+        if (init) {
+            ErrorLogger.GetInstance().Add_Log(this.toString() + "- system trying to init 2nd time");
+            return false;
+        }
+        EventLogger.GetInstance().Add_Log(this.toString() + "- system init");
+        init = true;
+        int guestId = ImNew();
+        User guest = getGuest(guestId);
+        User.register(username, password);
+        manager = new System_Manager(username);
+        guest.login(username, password);
 
-		return true;
+        return true;
 
-	}
+    }
 
-	public void resetSystem(){
-		myProtocol.reset();
-		instance = null;	//	TODO: temp
-	}
-    
-	// ---------------------------------- users
-	public void removeUser(String username, String password) {
-		//TODO temp
-		membersprofiles.remove(username);
-		myProtocol.deleteRegistry(username, password);
-	}
+    public void resetSystem() {
+        myProtocol.reset();
+        instance = null;    //	TODO: temp
+    }
+
+    // ---------------------------------- users
+    public void removeUser(String username, String password) {
+        //TODO temp
+        membersprofiles.remove(username);
+        myProtocol.deleteRegistry(username, password);
+    }
 
-	public int ImNew() {
-		EventLogger.GetInstance().Add_Log(this.toString() + "- new guest");
-		TempGuestID++;
-		guest.put(TempGuestID, new User());
-		return TempGuestID;
-	}
+    public int ImNew() {
+        EventLogger.GetInstance().Add_Log(this.toString() + "- new guest");
+        TempGuestID++;
+        guest.put(TempGuestID, new User());
+        return TempGuestID;
+    }
 
-	public User getGuest(int id) {
-		EventLogger.GetInstance().Add_Log(this.toString() + "- new guest");
-		return guest.get(id);
-	}
+    public User getGuest(int id) {
+        EventLogger.GetInstance().Add_Log(this.toString() + "- new guest");
+        return guest.get(id);
+    }
 
-	public boolean register(String id, String password) {
-		if (!myProtocol.addRegistry(id, password)) {
-			ErrorLogger.GetInstance().Add_Log(this.toString() + "- failed to register");
-			return false;
-		}
+    public boolean register(String id, String password) {
+        if (!myProtocol.addRegistry(id, password)) {
+            ErrorLogger.GetInstance().Add_Log(this.toString() + "- failed to register");
+            return false;
+        }
 
-		EventLogger.GetInstance().Add_Log(this.toString() + "- new register");
-		membersprofiles.put(id, new Registered(id));
-		return true;
-	}
+        EventLogger.GetInstance().Add_Log(this.toString() + "- new register");
+        membersprofiles.put(id, new Registered(id));
+        return true;
+    }
 
-	public Registered login(String id, String password, User user) {
-		if (!myProtocol.login(id, password)) {
-			ErrorLogger.GetInstance().Add_Log(this.toString() + "- failed to login");
-			return null;
-		}
+    public Registered login(String id, String password, User user) {
+        if (!myProtocol.login(id, password)) {
+            ErrorLogger.GetInstance().Add_Log(this.toString() + "- failed to login");
+            return null;
+        }
 
-		Registered Profile = membersprofiles.get(id);
-		if (Profile == null) {
-			ErrorLogger.GetInstance().Add_Log(this.toString() + "- register dont exsist fatal error");
-			return null;
-		}
-		Profile.LogLogin(user);
-		onlinemember.put(id, new Member(user));
-		EventLogger.GetInstance().Add_Log(this.toString() + "- user login");
-		return Profile;
+        Registered Profile = membersprofiles.get(id);
+        if (Profile == null) {
+            ErrorLogger.GetInstance().Add_Log(this.toString() + "- register dont exsist fatal error");
+            return null;
+        }
+        Profile.LogLogin(user);
+        onlinemember.put(id, new Member(user));
+        EventLogger.GetInstance().Add_Log(this.toString() + "- user login");
+        if (onlinemember.size() > 1 && !CheckTegrati_oneManager()) {
+            return null;
+        }
+        return Profile;
 
-	}
+    }
 
-	public User getMember(String myusername, String myPassword) {
-		if (!myProtocol.login(myusername, myPassword))
-			return null;
-		if (onlinemember.containsKey(myusername))
-			return onlinemember.get(myusername).getUser();
-		return null;
-	}
+    public User getMember(String myusername, String myPassword) {
+        if (!myProtocol.login(myusername, myPassword))
+            return null;
+        if (onlinemember.containsKey(myusername))
+            return onlinemember.get(myusername).getUser();
+        return null;
+    }
 
-	public boolean logout(User user) {
-		EventLogger.GetInstance().Add_Log(this.toString() + "user went offline");
-		return onlinemember.remove(user.getName()) != null;
+    public boolean logout(User user) {
+        EventLogger.GetInstance().Add_Log(this.toString() + "user went offline");
+        Member m = onlinemember.remove(user.getName());
+        if (m != null && !CheckTegrati_oneManager()) {
+            onlinemember.put(user.getName(), m);
+            return false;
+        }
+        return m != null;
 
-	}
+    }
 
-	public Registered getUser(String username) {
+    public Registered getUserProfile(String username) {
 
-		return membersprofiles.get(username);
-	}
+        return membersprofiles.get(username);
+    }
 
-	public Member getLogInstase(String id, String password) {
-		if (!myProtocol.login(id, password))
-			return null;
-		if (onlinemember.containsKey(id))
-			return onlinemember.get(id);
-		return null;
-	}
+    public Member getLogInstase(String id, String password) {
+        if (!myProtocol.login(id, password))
+            return null;
+        if (onlinemember.containsKey(id))
+            return onlinemember.get(id);
+        return null;
+    }
 
-	// TODO need to delete one of thouse
-	public User getMember(int guestId) {
-		User u = guest.get(guestId);
-		if (onlinemember.containsKey(u.getName()))
-			return u;
-		return null;
-	}
+    // TODO need to delete one of thouse
+    public User getMember(int guestId) {
+        User u = guest.get(guestId);
+        if (onlinemember.containsKey(u.getName()))
+            return u;
+        return null;
+    }
 
-	// -------------------------------Store
-	public StoreImp openStore(StoreInfo store) {
-		if (stores.containsKey(store.name))
-			return null;
+    // -------------------------------Store
+    public StoreImp openStore(StoreInfo store) {
+        if (stores.containsKey(store.name))
+            return null;
 
-		StoreImp newStore = new StoreImp(store);
-		stores.put(store.name, newStore);
-		return newStore;
-	}
+        StoreImp newStore = new StoreImp(store);
+        stores.put(store.name, newStore);
+        return newStore;
+    }
 
-	// TODO delete one of thouse functions
-	public StoreImp openStore(String name, String address, int rating) {
-		StoreInfo store = new StoreInfo(name, address, rating);
-		if (stores.containsKey(store.name))
-			return null;
+    // TODO delete one of thouse functions
+    public StoreImp openStore(String name, String address, int rating) {
+        StoreInfo store = new StoreInfo(name, address, rating);
+        if (stores.containsKey(store.name))
+            return null;
 
-		StoreImp newStore = new StoreImp(store);
-		stores.put(store.name, newStore);
-		return newStore;
-	}
+        StoreImp newStore = new StoreImp(store);
+        stores.put(store.name, newStore);
+        return newStore;
+    }
 
-	public boolean fillStore(List<Product> Products) {
-		boolean output = true;
-		EventLogger.GetInstance().Add_Log(this.toString() + "- returning product to store");
-		for (Product product : Products) {
-			output = output & product.getStore().addProduct(product);
-		}
-		return output;
-	}
+
+    public boolean fillStore(List<Product> Products) {
+        boolean output = true;
+        EventLogger.GetInstance().Add_Log(this.toString() + "- returning product to store");
+        for (Product product : Products) {
+            output = output & getStoreDetails(product.getStore()).addProduct(product);
+        }
+        return output;
+    }
 
-	public StoreImp getStoreDetails(String name) {
-		if (stores.containsKey(name))
-			return stores.get(name);
+    public StoreImp getStoreDetails(String name) {
+        if (stores.containsKey(name))
+            return stores.get(name);
 
-		return null;
-	}
+        return null;
+    }
 
-	public Collection<ProductDetails> getProductsFromStore(String name) {
-		if (stores.containsKey(name))
-			return stores.get(name).getProductsDetails();
+    public Collection<ProductDetails> getProductsFromStore(String name) {
+        if (stores.containsKey(name))
+            return stores.get(name).getProductsDetails();
 
-		return null;
+        return null;
 
-	}
+    }
 
-	public List<IshoppingBasket> orderHistory(IStore store) {
+    public List<IshoppingBasket> orderHistory(IStore store) {
 
-		List<IshoppingBasket> baskets = new LinkedList<>();
+        List<IshoppingBasket> baskets = new LinkedList<>();
 
-		for (MyPair<String, List<shoppingCart>> pair : order) {
-			List<shoppingCart> carts = pair.getValue();
+        for (MyPair<String, List<shoppingCart>> pair : order) {
+            List<shoppingCart> carts = pair.getValue();
 
-			for (shoppingCart cart : carts) {
-				for (IshoppingBasket basket : cart.getBaskets()) {
-					if (basket.getStore() == store) {
-						baskets.add(basket);
-					}
-				}
-			}
-		}
-		return baskets;
-	}
+            for (shoppingCart cart : carts) {
+                for (IshoppingBasket basket : cart.getBaskets()) {
+                    if (basket.getStore() == store) {
+                        baskets.add(basket);
+                    }
+                }
+            }
+        }
+        return baskets;
+    }
 
-	public Collection<StoreImp> getAllStores() {
-		return stores.values();
-	}
+    public Collection<StoreImp> getAllStores() {
+        return stores.values();
+    }
 
-	public List<StorePurchase> getPurchaseHistory(String storeName) {
-		return stores.get(storeName).viewPurchaseHistory();
+    public List<StorePurchase> getPurchaseHistory(String storeName) {
+        return stores.get(storeName).viewPurchaseHistory();
 
-	}
+    }
 
-	// ------------------------------ find products
-	public List<ProductDetails> searchProductsByName(String name) {
-		List<ProductDetails> toReturn = new LinkedList<>();
-		for (StoreImp s : stores.values()) {
-			ProductDetails toAdd = s.findProductDetailsByName(name);
-			if (toAdd != null) {
-				toReturn.add(toAdd);
-			}
-		}
-		return toReturn;
-	}
+    // ------------------------------ find products
+    public List<ProductDetails> searchProductsByName(String name) {
+        List<ProductDetails> toReturn = new LinkedList<>();
+        for (StoreImp s : stores.values()) {
+            ProductDetails toAdd = s.findProductDetailsByName(name);
+            if (toAdd != null) {
+                toReturn.add(toAdd);
+            }
+        }
+        return toReturn;
+    }
+
+    public ProductDetails searchProductByName(String name, String Store) {
+        ProductDetails toReturn = null;
+        for (StoreImp s : stores.values()) {
+            if (!s.getName().equals(Store)) {
+                continue;
+            }
+
+            ProductDetails product = s.findProductDetailsByName(name);
+            if (product != null) {
+                return product;
+            }
+        }
+        return toReturn;
+    }
 
-	public List<ProductDetails> searchProductsByCategory(String category) {
-		List<ProductDetails> toReturn = new LinkedList<>();
-		for (StoreImp s : stores.values()) {
-			List<ProductDetails> toAdd = s.findProductDetailsByCategory(category);
-			toReturn.addAll(toAdd);
-			// concat2(toReturn, toAdd);
-		}
-		return toReturn;
-	}
+    public List<ProductDetails> searchProductsByCategory(String category) {
+        List<ProductDetails> toReturn = new LinkedList<>();
+        for (StoreImp s : stores.values()) {
+            List<ProductDetails> toAdd = s.findProductDetailsByCategory(category);
+            toReturn.addAll(toAdd);
+            // concat2(toReturn, toAdd);
+        }
+        return toReturn;
+    }
 
-	public List<ProductDetails> searchProductsByKeyword(String keyword) {
-		List<ProductDetails> toReturn = new LinkedList<>();
-		for (StoreImp s : stores.values()) {
-			List<ProductDetails> toAdd = s.findProductDetailsByKeyword(keyword);
-			toReturn.addAll(toAdd);
-			// concat2(toReturn, toAdd);
-		}
-		return toReturn;
-	}
+    public List<ProductDetails> searchProductsByKeyword(String keyword) {
+        List<ProductDetails> toReturn = new LinkedList<>();
+        for (StoreImp s : stores.values()) {
+            List<ProductDetails> toAdd = s.findProductDetailsByKeyword(keyword);
+            toReturn.addAll(toAdd);
+            // concat2(toReturn, toAdd);
+        }
+        return toReturn;
+    }
 
-	public List<Product> filterByPrice(List<Product> base, double min, double max) {
-		List<Product> toReturn = new LinkedList<>();
-		for (Product p : base) {
-			if (p.getPrice() >= min & p.getPrice() <= max) {
-				toReturn.add(p);
-			}
-		}
-		return toReturn;
-	}
+    public List<Product> filterByPrice(List<Product> base, double min, double max) {
+        List<Product> toReturn = new LinkedList<>();
+        for (Product p : base) {
+            if (p.getPrice() >= min & p.getPrice() <= max) {
+                toReturn.add(p);
+            }
+        }
+        return toReturn;
+    }
 
-	public List<Product> filterByRating(List<Product> base, int min, int max) {
-		List<Product> toReturn = new LinkedList<>();
-		for (Product p : base) {
-			if (p.getRating() >= min & p.getRating() <= max) {
-				toReturn.add(p);
-			}
-		}
-		return toReturn;
-	}
-
-	public List<Product> filterByCategory(List<Product> base, String category) {
-		List<Product> toReturn = new LinkedList<>();
-		for (Product p : base) {
-			if (p.getCategory().equals(category)) {
-				toReturn.add(p);
-			}
-		}
-		return toReturn;
-	}
+    public List<Product> filterByRating(List<Product> base, int min, int max) {
+        List<Product> toReturn = new LinkedList<>();
+        for (Product p : base) {
+            if (p.getRating() >= min & p.getRating() <= max) {
+                toReturn.add(p);
+            }
+        }
+        return toReturn;
+    }
 
-	public List<Product> filterByStoreRating(List<Product> base, int min, int max) {
-		List<Product> toReturn = new LinkedList<>();
-		for (Product p : base) {
-			if (p.getStore().getRating() >= min & p.getStore().getRating() <= max) {
-				toReturn.add(p);
-			}
-		}
-		return toReturn;
-	}
+//    public List<Product> filterByCategory(List<Product> base, String category) {
+//        List<Product> toReturn = new LinkedList<>();
+//        for (Product p : base) {
+//            if (p.getCategory().equals(category)) {
+//                toReturn.add(p);
+//            }
+//        }
+//        return toReturn;
+//    }
+
+//    public List<Product> filterByStoreRating(List<Product> base, int min, int max) {
+//        List<Product> toReturn = new LinkedList<>();
+//        for (Product p : base) {
+//            if (p.getStore().getRating() >= min & p.getStore().getRating() <= max) {
+//                toReturn.add(p);
+//            }
+//        }
+//        return toReturn;
+//    }
 
-	// ------------------------purchase
+    // ------------------------purchase
 
-	public PaymentMethed navigatePayment() {
-		return paymentdriver.getPaymentMethed();
-	}
+    public PaymentMethed navigatePayment() {
+        return paymentdriver.getPaymentMethed();
+    }
 
-	public Supplyer navigateSupply() {
-		return supplydriver.getSupplayer();
+    public Supplyer navigateSupply() {
+        return supplydriver.getSupplayer();
 
-	}
+    }
 
-	// @Override
-	public boolean CheckItemAvailableA(List<ProductDetails> items) {
-		for (ProductDetails details : items) {
-			// StoreImp s = s
-			if (!getStoreDetails(details.getStoreName()).CheckItemAvailable(details)) {
-				return false;
-			}
-		}
-		return true;
-	}
+    // @Override
+//    public boolean CheckItemAvailableA(List<ProductDetails> items) {
+//        for (ProductDetails details : items) {
+//            // StoreImp s = s
+//            if (!getStoreDetails(details.getStoreName()).CheckItemAvailable(details)) {
+//                return false;
+//            }
+//        }
+//        return true;
+//    }
+
 
-//-------------------------------------------------------
+    //-------------------------------------------------------Tegrati
+    public boolean CheckTegrati_oneManager() {
+        return manager != null && getUserProfile(manager.name) != null;
 
+    }
 }
Index: src/Domain/Policies/Acquisitions/AcqMinAmount.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/Policies/Acquisitions/AcqMinAmount.java	(date 1592314856740)
+++ src/Domain/Policies/Acquisitions/AcqMinAmount.java	(date 1592314856740)
@@ -0,0 +1,25 @@
+package Domain.Policies.Acquisitions;
+
+import Domain.info.ProductDetails;
+
+import java.util.List;
+
+class AcqMinAmount extends AcqAmountCondition {
+
+    AcqMinAmount(String productName, int amount) {
+        super(productName, amount);
+    }
+
+    @Override
+    public boolean canPurchase(List<ProductDetails> products) {
+        if (productName.equals("ALL"))
+            return getTotalAmount(products) >= amount;
+        ProductDetails p = findProduct(products);
+        return p != null && p.getAmount() >= amount;
+    }
+
+    @Override
+    public String toString() {
+        return "Min. " + super.toString();
+    }
+}
Index: src/Domain/Policies/Acquisitions/AcqAmountCondition.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/Policies/Acquisitions/AcqAmountCondition.java	(date 1592314856740)
+++ src/Domain/Policies/Acquisitions/AcqAmountCondition.java	(date 1592314856740)
@@ -0,0 +1,34 @@
+package Domain.Policies.Acquisitions;
+
+import Domain.info.ProductDetails;
+
+import java.util.List;
+
+abstract class AcqAmountCondition implements Acquisition {
+    // productName can be 'ALL' to represent store condition
+    protected String productName;
+    protected int amount;
+
+    AcqAmountCondition(String productName, int amount) {
+        this.productName = productName;
+        this.amount = amount;
+    }
+
+    ProductDetails findProduct(List<ProductDetails> products) {
+        for (ProductDetails p : products) {
+            if (p.getName().equals(productName))
+                return p;
+        }
+        return null;
+    }
+
+    int getTotalAmount(List<ProductDetails> products) {
+        return products.stream().map(ProductDetails::getAmount).reduce(0, Integer::sum);
+    }
+
+    @Override
+    public String toString() {
+        return "amount of '" + productName + "' is " + amount;
+    }
+
+}
Index: src/Domain/store_System/Roles/System_Manager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Domain.store_System.Roles;\n\nimport java.util.List;\n\nimport Domain.RedClasses.UserPurchase;\nimport Domain.Store.StorePurchase;\nimport Domain.store_System.System;\n\npublic class System_Manager {// extends Member {\n\tpublic String name;\n\n\tpublic System_Manager(String username) {\n\t\tname = username;\n\t}\n\n\tpublic List<StorePurchase> getPurchaseHistory(String storeName) {\n\t\treturn System.getInstance().getPurchaseHistory(storeName);\n\t\t// return null;\n\t}\n\n\tpublic List<UserPurchase> getPurchaseHistoryofUser(String username) {\n\t\treturn System.getInstance().getUser(username).getPurchesHistory();\n\t}\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/store_System/Roles/System_Manager.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Domain/store_System/Roles/System_Manager.java	(date 1592314856744)
@@ -2,7 +2,7 @@
 
 import java.util.List;
 
-import Domain.RedClasses.UserPurchase;
+import Domain.UserClasses.UserPurchase;
 import Domain.Store.StorePurchase;
 import Domain.store_System.System;
 
@@ -19,6 +19,6 @@
 	}
 
 	public List<UserPurchase> getPurchaseHistoryofUser(String username) {
-		return System.getInstance().getUser(username).getPurchesHistory();
+		return System.getInstance().getUserProfile(username).getPurchesHistory();
 	}
 }
Index: src/Domain/Policies/Acquisitions/XorAcq.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/Policies/Acquisitions/XorAcq.java	(date 1592314856740)
+++ src/Domain/Policies/Acquisitions/XorAcq.java	(date 1592314856740)
@@ -0,0 +1,16 @@
+package Domain.Policies.Acquisitions;
+
+import java.util.List;
+
+class XorAcq extends CompositeAcq {
+    XorAcq(List<Acquisition> acquisitions) {
+        super(acquisitions, Boolean::logicalXor, false);
+    }
+
+    @Override
+    public String toString() {
+        return "XorAcquisition{" +
+                super.toString().replace("\n", "\n\t") +
+                "\n\t}";
+    }
+}
Index: src/Domain/Policies/Acquisitions/OrAcq.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/Policies/Acquisitions/OrAcq.java	(date 1592314856740)
+++ src/Domain/Policies/Acquisitions/OrAcq.java	(date 1592314856740)
@@ -0,0 +1,16 @@
+package Domain.Policies.Acquisitions;
+
+import java.util.List;
+
+class OrAcq extends CompositeAcq {
+    OrAcq(List<Acquisition> acquisitions) {
+        super(acquisitions, Boolean::logicalOr, false);
+    }
+
+    @Override
+    public String toString() {
+        return "OrAcquisition{" +
+                super.toString().replace("\n", "\n\t") +
+                "\n\t}";
+    }
+}
Index: src/Domain/store_System/Roles/Member.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Domain.store_System.Roles;\n\nimport Domain.RedClasses.User;\nimport Domain.Store.StoreImp;\nimport Domain.info.StoreInfo;\nimport Domain.store_System.System;\n\npublic class Member implements System_Role {\n\t// private Registered registered;\n\tprivate User user;\n//    public Member(Registered registered) {\n//        this.registered = registered;\n//    }\n\n\tpublic Member(User user) {\n\t\tthis.user = user;\n\t}\n\n\tpublic User getUser() {\n\t\treturn user;\n\t}\n//\tpublic Registered getRegistered() {\n//        return registered;\n//    }\n\n\tpublic StoreImp OpenStore(StoreInfo store) {\n\t\treturn System.getInstance().openStore(store);\n\t}\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/store_System/Roles/Member.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Domain/store_System/Roles/Member.java	(date 1592314856744)
@@ -1,6 +1,6 @@
 package Domain.store_System.Roles;
 
-import Domain.RedClasses.User;
+import Domain.UserClasses.User;
 import Domain.Store.StoreImp;
 import Domain.info.StoreInfo;
 import Domain.store_System.System;
Index: src/Domain/store_System/Roles/Registered.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Domain.store_System.Roles;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport Domain.RedClasses.User;\nimport Domain.RedClasses.UserPurchase;\nimport Domain.RedClasses.User_Purchase_History;\nimport Domain.Store.workers.Store_role;\n\npublic class Registered {\n\tprivate String id;\n\tprivate User_Purchase_History history = new User_Purchase_History();\n\t//private List<Purchase> myPurcase = new LinkedList<Purchase>();\n\tpublic Map<String, Store_role> store_roles = new HashMap<String, Store_role>();\n\n\tpublic Registered(String id) {\n\t\tthis.id = id;\n\n\t}\n\n\tpublic String getId() {\n\t\treturn id;\n\t}\n\n\tpublic void LogLogin(User user) {\n\t\t// TODO Auto-generated method stub\n\n\t}\n\n\tpublic void LogHistory(UserPurchase p) {\n\t\thistory.history.add(p);\n\t}\n\n\tpublic List<UserPurchase> getPurchesHistory() {\n\t\treturn history.history;\n\t}\n\n\tpublic void LogLogout(User user) {\n\t\t// TODO Auto-generated method stub\n\n\t}\n\n\tpublic boolean getFired(String name) {\n\t\treturn store_roles.remove(name) != null;\n\n\t}\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/store_System/Roles/Registered.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Domain/store_System/Roles/Registered.java	(date 1592314856744)
@@ -1,50 +1,98 @@
 package Domain.store_System.Roles;
 
 import java.util.HashMap;
+import java.util.LinkedList;
 import java.util.List;
 import java.util.Map;
 
-import Domain.RedClasses.User;
-import Domain.RedClasses.UserPurchase;
-import Domain.RedClasses.User_Purchase_History;
+import Domain.Store.workers.StoreManager_Imp;
+import Domain.UserClasses.User;
+import Domain.UserClasses.UserPurchase;
+import Domain.UserClasses.User_Purchase_History;
+import Domain.Store.workers.StoreOwner_Imp;
 import Domain.Store.workers.Store_role;
+import Domain.store_System.System;
 
 public class Registered {
-	private String id;
-	private User_Purchase_History history = new User_Purchase_History();
-	//private List<Purchase> myPurcase = new LinkedList<Purchase>();
-	public Map<String, Store_role> store_roles = new HashMap<String, Store_role>();
+    private String id;
+    private User_Purchase_History history = new User_Purchase_History();
+    //private List<Purchase> myPurcase = new LinkedList<Purchase>();
+    public Map<String, Store_role> store_roles = new HashMap<String, Store_role>();
 
-	public Registered(String id) {
-		this.id = id;
+    public Registered(String id) {
+        this.id = id;
 
-	}
+    }
 
-	public String getId() {
-		return id;
-	}
+    public String getId() {
+        return id;
+    }
 
-	public void LogLogin(User user) {
-		// TODO Auto-generated method stub
+    public void LogLogin(User user) {
+        // TODO Auto-generated method stub
 
-	}
+    }
 
-	public void LogHistory(UserPurchase p) {
-		history.history.add(p);
-	}
+    public void LogHistory(UserPurchase p) {
+        history.history.add(p);
+    }
 
-	public List<UserPurchase> getPurchesHistory() {
-		return history.history;
-	}
+    public List<UserPurchase> getPurchesHistory() {
+        return history.history;
+    }
 
-	public void LogLogout(User user) {
-		// TODO Auto-generated method stub
+    public void LogLogout(User user) {
+        // TODO Auto-generated method stub
 
-	}
+    }
 
-	public boolean getFired(String name) {
-		return store_roles.remove(name) != null;
+    public boolean getFired(String name) {
+        return store_roles.remove(name) != null;
+    }
+
+    public List<String> storesOwned() {
+        List<String> stores = new LinkedList<>();
+
+        store_roles.forEach((store, role) -> {
+            if (role instanceof StoreOwner_Imp || role instanceof StoreManager_Imp) {
+                stores.add(store);
+            }
+        });
+
+        return stores;
+    }
+
+
+    public boolean appointAsOwner(Store_role role) {
+        if(store_roles.containsKey(role.getStore().getName())){
+            if(store_roles.get(role.getStore().getName()) instanceof StoreOwner_Imp){
+                return false; // already owner
+            }
+        }
+
+        store_roles.remove(role.getStore().getName());
+        store_roles.put(role.getStore().getName(), role);
+        return true;
+
+    }
+
+    public boolean appointAsManager(Store_role role) {
+
+        if (store_roles.containsKey(role.getStore().getName())
+                && !store_roles.get(role.getStore().getName()).canPromoteToOwner()) {
+            return false;
+        }
 
-	}
+        if(store_roles.containsKey(role.getStore().getName())){
+            if(store_roles.get(role.getStore().getName()) instanceof StoreManager_Imp){
+                return false; // already manager
+            }
+        }
+
+        store_roles.remove(role.getStore().getName());
+        store_roles.put(role.getStore().getName(), role);
+        return true;
+    }
+
 
 }
Index: src/Domain/Policies/Acquisitions/CompositeAcq.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/Policies/Acquisitions/CompositeAcq.java	(date 1592314856740)
+++ src/Domain/Policies/Acquisitions/CompositeAcq.java	(date 1592314856740)
@@ -0,0 +1,31 @@
+package Domain.Policies.Acquisitions;
+
+import Domain.info.ProductDetails;
+
+import java.util.List;
+import java.util.function.BinaryOperator;
+
+abstract class CompositeAcq implements Acquisition {
+    private List<Acquisition> acquisitions;
+    private BinaryOperator<Boolean> canPurchaseOperator;
+    private Boolean canPurchaseIdentity;
+
+    CompositeAcq(List<Acquisition> acquisitions, BinaryOperator<Boolean> canPurchaseOperator, Boolean canPurchaseIdentity) {
+        this.acquisitions = acquisitions;
+        this.canPurchaseOperator = canPurchaseOperator;
+        this.canPurchaseIdentity = canPurchaseIdentity;
+    }
+
+    @Override
+    public boolean canPurchase(List<ProductDetails> products) {
+        return acquisitions.stream()
+                .map(acquisition -> acquisition.canPurchase(products))
+                .reduce(canPurchaseIdentity, canPurchaseOperator);
+    }
+
+    @Override
+    public String toString() {
+        return acquisitions.stream().map(Acquisition::toString).reduce("", (acc, cur) -> acc + "\n\t" + cur);
+    }
+
+}
Index: src/Domain/Policies/Acquisitions/AcquisitionPolicy.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/Policies/Acquisitions/AcquisitionPolicy.java	(date 1592314856740)
+++ src/Domain/Policies/Acquisitions/AcquisitionPolicy.java	(date 1592314856740)
@@ -0,0 +1,111 @@
+package Domain.Policies.Acquisitions;
+
+import Domain.Policies.BasePolicy;
+import Domain.info.ProductDetails;
+
+import java.util.LinkedList;
+import java.util.List;
+import java.util.Stack;
+import java.util.concurrent.atomic.AtomicInteger;
+
+
+/*
+    this class get string in the following format that represent Acquisition
+    and parse it in order to create Acquisition objects.
+    Note: the formats are without spaces
+
+    simple Acquisition format:
+        <type>#<product-name>#<condition>
+        where:
+        - <type>: 0 - min amount
+                  1 - max amount
+        - <product-name>: the name of the product
+        - <condition>: according to type
+                        0/1 - min/max amount
+
+    Composite Acquisition format:
+        <type>#<number> (#<acquisition>)*
+        where:
+        - <type>: 10 - And
+                  11 - Or
+                  12 - Xor
+        - <discount>: acquisition in valid format
+        - <number>: how many acquisitions are
+        - * means repetition
+ */
+
+public class AcquisitionPolicy extends BasePolicy {
+    private List<Acquisition> acquisitions;
+
+    public AcquisitionPolicy() {
+        this.acquisitions = new LinkedList<>();
+    }
+
+    private Acquisition acquisitionFactory(Stack<String> params) throws Exception {
+        int type = Integer.parseInt(params.pop());
+        switch (type) {
+            case 0: //min amount
+                return new AcqMinAmount(params.pop(), Integer.parseInt(params.pop()));
+
+            case 1: //max amount
+                return new AcqMaxAmount(params.pop(), Integer.parseInt(params.pop()));
+
+            case 10: //composite and
+                return new AndAcq(parseAcquisitionList(params));
+
+            case 11: //composite or
+                return new OrAcq(parseAcquisitionList(params));
+
+            case 12: //composite xor
+                return new XorAcq(parseAcquisitionList(params));
+
+            default:
+                throw new Exception();
+        }
+    }
+
+    private List<Acquisition> parseAcquisitionList(Stack<String> params) throws Exception {
+        List<Acquisition> acquisitionList = new LinkedList<>();
+        int n = Integer.parseInt(params.pop());
+        for (int i = 0; i < n; i++) {
+            acquisitionList.add(acquisitionFactory(params));
+        }
+        return acquisitionList;
+    }
+
+    public boolean addAcquisitionPolicy(String discount) {
+        Acquisition d;
+        try {
+            d = acquisitionFactory(stringSplitToStack(discount, REGEX));
+        } catch (Exception e) {
+            // error log "wrong format"
+            return false;
+        }
+        acquisitions.add(d);
+        return true;
+    }
+
+    public boolean canPurchase(List<ProductDetails> products) {
+        return acquisitions.stream()
+                .map(acquisition -> acquisition.canPurchase(products))
+                .reduce(true, Boolean::logicalAnd);
+    }
+
+    public boolean removeAcquisition(int acqNum) {
+        if (acqNum >= 0 && acqNum < acquisitions.size()) {
+            acquisitions.remove(acqNum);
+            return true;
+        }
+        return false;
+    }
+
+    @Override
+    public String toString() {
+        AtomicInteger i = new AtomicInteger();
+        return "Acquisition{" +
+                acquisitions.stream()
+                        .map(Acquisition::toString)
+                        .reduce("", (acc, cur) -> acc + "\n\t" + (i.getAndIncrement()) + ". " + cur) +
+                "\n}";
+    }
+}
Index: src/Domain/Policies/Acquisitions/AndAcq.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Domain/Policies/Acquisitions/AndAcq.java	(date 1592314856740)
+++ src/Domain/Policies/Acquisitions/AndAcq.java	(date 1592314856740)
@@ -0,0 +1,16 @@
+package Domain.Policies.Acquisitions;
+
+import java.util.List;
+
+class AndAcq extends CompositeAcq {
+    AndAcq(List<Acquisition> acquisitions) {
+        super(acquisitions, Boolean::logicalAnd, true);
+    }
+
+    @Override
+    public String toString() {
+        return "AndAcquisition{" +
+                super.toString().replace("\n", "\n\t") +
+                "\n\t}";
+    }
+}
Index: src/Service_Layer/userAddress.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Service_Layer/userAddress.java	(date 1592314856744)
+++ src/Service_Layer/userAddress.java	(date 1592314856744)
@@ -0,0 +1,27 @@
+package Service_Layer;
+
+import extornal.supply.Packet_Of_Prodacts;
+import extornal.supply.inventory;
+
+import java.util.LinkedList;
+import java.util.List;
+
+public class userAddress implements inventory {
+    public String address;
+
+    List<Packet_Of_Prodacts> packeges = new LinkedList<Packet_Of_Prodacts>();
+    public userAddress(String address){
+        this.address = address;
+    }
+
+
+    @Override
+    public boolean recive_item(Packet_Of_Prodacts pack) {
+        if (pack == null || pack.items == null || pack.items.isEmpty())
+            return false;
+        packeges.add(pack);
+
+        return true;
+
+    }
+}
Index: .idea/libraries/Maven__com_sun_mail_javax_mail_1_6_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__com_sun_mail_javax_mail_1_6_0.xml	(date 1592314856740)
+++ .idea/libraries/Maven__com_sun_mail_javax_mail_1_6_0.xml	(date 1592314856740)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.sun.mail:javax.mail:1.6.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/sun/mail/javax.mail/1.6.0/javax.mail-1.6.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/sun/mail/javax.mail/1.6.0/javax.mail-1.6.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/sun/mail/javax.mail/1.6.0/javax.mail-1.6.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__javax_javaee_api_8_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__javax_javaee_api_8_0.xml	(date 1592314856740)
+++ .idea/libraries/Maven__javax_javaee_api_8_0.xml	(date 1592314856740)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: javax:javaee-api:8.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/javax/javaee-api/8.0/javaee-api-8.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/javax/javaee-api/8.0/javaee-api-8.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/javax/javaee-api/8.0/javaee-api-8.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__javax_activation_activation_1_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__javax_activation_activation_1_1.xml	(date 1592314856740)
+++ .idea/libraries/Maven__javax_activation_activation_1_1.xml	(date 1592314856740)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: javax.activation:activation:1.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/javax/activation/activation/1.1/activation-1.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/javax/activation/activation/1.1/activation-1.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/javax/activation/activation/1.1/activation-1.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/encodings.xml	(date 1592314856740)
+++ .idea/encodings.xml	(date 1592314856740)
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding" addBOMForNewFiles="with NO BOM" />
+</project>
\ No newline at end of file
Index: README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- README.md	(date 1592314856740)
+++ README.md	(date 1592314856740)
@@ -0,0 +1,3 @@
+# OnlineStoreSystem
+
+Workshop course, 2020
Index: client/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- client/package.json	(date 1592314856660)
+++ client/package.json	(date 1592314856660)
@@ -0,0 +1,64 @@
+{
+  "name": "p-l",
+  "version": "0.1.0",
+  "private": true,
+  "dependencies": {
+    "@react-native-community/cli": "^4.8.0",
+    "@react-native-community/masked-view": "^0.1.10",
+    "@testing-library/jest-dom": "^4.2.4",
+    "@testing-library/react": "^9.5.0",
+    "@testing-library/user-event": "^7.2.1",
+    "arraybuffer-concat": "0.0.1",
+    "babel": "^6.23.0",
+    "bootstrap": "^4.4.1",
+    "expo": "^37.0.8",
+    "find-babel-config": "^1.2.0",
+    "react-native-reanimated": "^1.8.0",
+    "react-native-safe-area-context": "^0.7.3",
+    "react-native-screens": "^2.7.0",
+    "react-navigation": "^4.3.9",
+    "react-redux": "^7.2.0",
+    "react-router-dom": "^5.1.2",
+    "react-scripts": "3.4.1",
+    "reactstrap": "^8.4.1",
+    "redux": "^4.0.5",
+    "ws": "^7.2.5"
+  },
+  "scripts": {
+    "start": "react-scripts start",
+    "build": "react-scripts build",
+    "test": "react-scripts test",
+    "eject": "react-scripts eject"
+  },
+  "eslintConfig": {
+    "extends": "react-app"
+  },
+  "browserslist": {
+    "production": [
+      ">0.2%",
+      "not dead",
+      "not op_mini all"
+    ],
+    "development": [
+      "last 1 chrome version",
+      "last 1 firefox version",
+      "last 1 safari version"
+    ]
+  },
+  "devDependencies": {
+    "@babel/plugin-transform-flow-strip-types": "^7.9.0",
+    "@babel/preset-react": "^7.9.4",
+    "@babel/preset-typescript": "^7.9.0",
+    "babel-preset-env": "^1.7.0",
+    "babel-preset-react": "^6.24.1",
+    "bulma": "^0.8.2",
+    "node-sass": "^4.14.1",
+    "parcel": "^1.12.4",
+    "react": "^16.13.1",
+    "react-dom": "^16.13.1"
+  },
+  "optionalDependencies": {
+    "bufferutil": "^4.0.1",
+    "utf-8-validate": "^5.0.2"
+  }
+}
Index: client/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- client/README.md	(date 1592314856660)
+++ client/README.md	(date 1592314856660)
@@ -0,0 +1,68 @@
+This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).
+
+## Available Scripts
+
+In the project directory, you can run:
+
+### `npm start`
+
+Runs the app in the development mode.<br />
+Open [http://localhost:3000](http://localhost:3000) to view it in the browser.
+
+The page will reload if you make edits.<br />
+You will also see any lint errors in the console.
+
+### `npm test`
+
+Launches the test runner in the interactive watch mode.<br />
+See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.
+
+### `npm run build`
+
+Builds the app for production to the `build` folder.<br />
+It correctly bundles React in production mode and optimizes the build for the best performance.
+
+The build is minified and the filenames include the hashes.<br />
+Your app is ready to be deployed!
+
+See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.
+
+### `npm run eject`
+
+**Note: this is a one-way operation. Once you `eject`, you can’t go back!**
+
+If you aren’t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.
+
+Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you’re on your own.
+
+You don’t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn’t feel obligated to use this feature. However we understand that this tool wouldn’t be useful if you couldn’t customize it when you are ready for it.
+
+## Learn More
+
+You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).
+
+To learn React, check out the [React documentation](https://reactjs.org/).
+
+### Code Splitting
+
+This section has moved here: https://facebook.github.io/create-react-app/docs/code-splitting
+
+### Analyzing the Bundle Size
+
+This section has moved here: https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size
+
+### Making a Progressive Web App
+
+This section has moved here: https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app
+
+### Advanced Configuration
+
+This section has moved here: https://facebook.github.io/create-react-app/docs/advanced-configuration
+
+### Deployment
+
+This section has moved here: https://facebook.github.io/create-react-app/docs/deployment
+
+### `npm run build` fails to minify
+
+This section has moved here: https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify
Index: src/extornal/payment/MyPaymentSystem_Driver.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package extornal.payment;\r\n\r\nimport java.util.HashMap;\r\n\r\npublic class MyPaymentSystem_Driver implements MyPaymentSystem {\r\n\r\n\tprivate PaymentMethed current_supplyer = null;\r\n\r\n\tstatic HashMap<String, PaymentMethed> list = null;\r\n\tstatic {\r\n\t\tlist = new HashMap<String, PaymentMethed>();\r\n\t\tlist.put(Pay_pal.name, new Pay_pal());\r\n\t\tlist.put(Isracard.name, new Isracard());\r\n\t\t\r\n\t}\r\n\r\n\tpublic MyPaymentSystem_Driver()\r\n\t{\r\n\t\tcurrent_supplyer = list.get(Pay_pal.name);\r\n\t}\r\n\t\r\n\tpublic boolean pay(bankAccount card_num, int amount) {\r\n\t\tif (card_num == null || amount < 0)\r\n\t\t\treturn false;\r\n\t\tcurrent_supplyer.pay(card_num, amount);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic void changePaymentMethed(String name) {\r\n\t\tif (list.containsKey(name)) {\r\n\t\t\tcurrent_supplyer = list.get(name);\r\n\t\t\t// TODO add log\r\n\t\t\tSystem.out.println(\"ordering from \" + name);\r\n\t\t} else {\r\n\t\t\t// TODO add log\r\n\t\t\tSystem.out.println(\"supplyer \" + name + \" dont exsist\");\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t@Override\r\n\tpublic PaymentMethed getPaymentMethed() {\r\n\t\treturn current_supplyer;\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/extornal/payment/MyPaymentSystem_Driver.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/extornal/payment/MyPaymentSystem_Driver.java	(date 1592314856744)
@@ -19,7 +19,7 @@
 		current_supplyer = list.get(Pay_pal.name);
 	}
 	
-	public boolean pay(bankAccount card_num, int amount) {
+	public boolean pay(CreditCard card_num, int amount) {
 		if (card_num == null || amount < 0)
 			return false;
 		current_supplyer.pay(card_num, amount);
Index: client/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- client/.gitignore	(date 1592314856660)
+++ client/.gitignore	(date 1592314856660)
@@ -0,0 +1,23 @@
+# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.
+
+# dependencies
+/node_modules
+/.pnp
+.pnp.js
+
+# testing
+/coverage
+
+# production
+/build
+
+# misc
+.DS_Store
+.env.local
+.env.development.local
+.env.test.local
+.env.production.local
+
+npm-debug.log*
+yarn-debug.log*
+yarn-error.log*
Index: src/extornal/payment/MyPaymentSystem.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package extornal.payment;\r\n\r\npublic interface MyPaymentSystem {\r\n\t\r\n\tpublic PaymentMethed getPaymentMethed();\r\n\t\r\n\tpublic boolean pay(bankAccount card_num, int amount);\r\n\r\n\tpublic void changePaymentMethed(String name);\r\n\t\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/extornal/payment/MyPaymentSystem.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/extornal/payment/MyPaymentSystem.java	(date 1592314856744)
@@ -4,7 +4,7 @@
 	
 	public PaymentMethed getPaymentMethed();
 	
-	public boolean pay(bankAccount card_num, int amount);
+	public boolean pay(CreditCard card_num, int amount);
 
 	public void changePaymentMethed(String name);
 	
Index: src/extornal/payment/Pay_pal.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package extornal.payment;\r\n\r\npublic class Pay_pal implements PaymentMethed {\r\n\r\n\tpublic static final String name = \"Pay_pal\";\r\n\r\n\t@Override\r\n\tpublic boolean pay(bankAccount card_num, double amount) {\r\n\t\tcard_num.getMoney(amount);\r\n\t\tSystem.out.println(\"thank you for using \" + name);\r\n\t\tSystem.out.println(\"we will charge \" + String.valueOf(card_num) + String.valueOf(amount) + \"dollars\");\r\n\treturn true;\r\n\t}\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/extornal/payment/Pay_pal.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/extornal/payment/Pay_pal.java	(date 1592314856744)
@@ -1,16 +1,34 @@
 package extornal.payment;
 
+import Domain.Logs.EventLogger;
+
+import java.util.LinkedList;
+import java.util.List;
+
 public class Pay_pal implements PaymentMethed {
 
 	public static final String name = "Pay_pal";
 
+	private List<CreditCard> validCards;
+
+	public Pay_pal(){
+		validCards = new LinkedList<>();
+		validCards.add(new CreditCard("1234-4321-1234-4321", "06/23", "123", "yosi pil"));
+	}
+
+
 	@Override
-	public boolean pay(bankAccount card_num, double amount) {
-		card_num.getMoney(amount);
+	public boolean pay(CreditCard card_num, double amount) {
+		//card_num.getMoney(amount);
 		System.out.println("thank you for using " + name);
-		System.out.println("we will charge " + String.valueOf(card_num) + String.valueOf(amount) + "dollars");
-	return true;
-	}
+		if( validCards.contains(card_num)){
+			System.out.println("we will charge " + String.valueOf(card_num) + String.valueOf(amount) + "dollars");
+			return  true;
+		}
 
+		System.out.println("the card " + String.valueOf(card_num) + " is no a valid card!");
+		return false;
+	}
+
 
 }
Index: src/extornal/payment/PaymentMethed.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package extornal.payment;\r\n\r\npublic interface PaymentMethed {\r\n\r\n\tpublic boolean pay(bankAccount card_num, double amount);\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/extornal/payment/PaymentMethed.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/extornal/payment/PaymentMethed.java	(date 1592314856744)
@@ -2,5 +2,5 @@
 
 public interface PaymentMethed {
 
-	public boolean pay(bankAccount card_num, double amount);
+	public boolean pay(CreditCard card_num, double amount);
 }
Index: client/package-lock.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- client/package-lock.json	(date 1592314856660)
+++ client/package-lock.json	(date 1592314856660)
@@ -0,0 +1,20298 @@
+{
+  "name": "p-l",
+  "version": "0.1.0",
+  "lockfileVersion": 1,
+  "requires": true,
+  "dependencies": {
+    "@babel/code-frame": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.8.3.tgz",
+      "integrity": "sha512-a9gxpmdXtZEInkCSHUJDLHZVBgb1QS0jhss4cPP93EW7s+uC5bikET2twEF3KV+7rDblJcmNvTR7VJejqd2C2g==",
+      "requires": {
+        "@babel/highlight": "^7.8.3"
+      }
+    },
+    "@babel/compat-data": {
+      "version": "7.9.6",
+      "resolved": "https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.9.6.tgz",
+      "integrity": "sha512-5QPTrNen2bm7RBc7dsOmcA5hbrS4O2Vhmk5XOL4zWW/zD/hV0iinpefDlkm+tBBy8kDtFaaeEvmAqt+nURAV2g==",
+      "requires": {
+        "browserslist": "^4.11.1",
+        "invariant": "^2.2.4",
+        "semver": "^5.5.0"
+      },
+      "dependencies": {
+        "semver": {
+          "version": "5.7.1",
+          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
+          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ=="
+        }
+      }
+    },
+    "@babel/core": {
+      "version": "7.9.0",
+      "resolved": "https://registry.npmjs.org/@babel/core/-/core-7.9.0.tgz",
+      "integrity": "sha512-kWc7L0fw1xwvI0zi8OKVBuxRVefwGOrKSQMvrQ3dW+bIIavBY3/NpXmpjMy7bQnLgwgzWQZ8TlM57YHpHNHz4w==",
+      "requires": {
+        "@babel/code-frame": "^7.8.3",
+        "@babel/generator": "^7.9.0",
+        "@babel/helper-module-transforms": "^7.9.0",
+        "@babel/helpers": "^7.9.0",
+        "@babel/parser": "^7.9.0",
+        "@babel/template": "^7.8.6",
+        "@babel/traverse": "^7.9.0",
+        "@babel/types": "^7.9.0",
+        "convert-source-map": "^1.7.0",
+        "debug": "^4.1.0",
+        "gensync": "^1.0.0-beta.1",
+        "json5": "^2.1.2",
+        "lodash": "^4.17.13",
+        "resolve": "^1.3.2",
+        "semver": "^5.4.1",
+        "source-map": "^0.5.0"
+      },
+      "dependencies": {
+        "semver": {
+          "version": "5.7.1",
+          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
+          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ=="
+        }
+      }
+    },
+    "@babel/generator": {
+      "version": "7.9.6",
+      "resolved": "https://registry.npmjs.org/@babel/generator/-/generator-7.9.6.tgz",
+      "integrity": "sha512-+htwWKJbH2bL72HRluF8zumBxzuX0ZZUFl3JLNyoUjM/Ho8wnVpPXM6aUz8cfKDqQ/h7zHqKt4xzJteUosckqQ==",
+      "requires": {
+        "@babel/types": "^7.9.6",
+        "jsesc": "^2.5.1",
+        "lodash": "^4.17.13",
+        "source-map": "^0.5.0"
+      }
+    },
+    "@babel/helper-annotate-as-pure": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/helper-annotate-as-pure/-/helper-annotate-as-pure-7.8.3.tgz",
+      "integrity": "sha512-6o+mJrZBxOoEX77Ezv9zwW7WV8DdluouRKNY/IR5u/YTMuKHgugHOzYWlYvYLpLA9nPsQCAAASpCIbjI9Mv+Uw==",
+      "requires": {
+        "@babel/types": "^7.8.3"
+      }
+    },
+    "@babel/helper-builder-binary-assignment-operator-visitor": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/helper-builder-binary-assignment-operator-visitor/-/helper-builder-binary-assignment-operator-visitor-7.8.3.tgz",
+      "integrity": "sha512-5eFOm2SyFPK4Rh3XMMRDjN7lBH0orh3ss0g3rTYZnBQ+r6YPj7lgDyCvPphynHvUrobJmeMignBr6Acw9mAPlw==",
+      "requires": {
+        "@babel/helper-explode-assignable-expression": "^7.8.3",
+        "@babel/types": "^7.8.3"
+      }
+    },
+    "@babel/helper-builder-react-jsx": {
+      "version": "7.9.0",
+      "resolved": "https://registry.npmjs.org/@babel/helper-builder-react-jsx/-/helper-builder-react-jsx-7.9.0.tgz",
+      "integrity": "sha512-weiIo4gaoGgnhff54GQ3P5wsUQmnSwpkvU0r6ZHq6TzoSzKy4JxHEgnxNytaKbov2a9z/CVNyzliuCOUPEX3Jw==",
+      "requires": {
+        "@babel/helper-annotate-as-pure": "^7.8.3",
+        "@babel/types": "^7.9.0"
+      }
+    },
+    "@babel/helper-builder-react-jsx-experimental": {
+      "version": "7.9.5",
+      "resolved": "https://registry.npmjs.org/@babel/helper-builder-react-jsx-experimental/-/helper-builder-react-jsx-experimental-7.9.5.tgz",
+      "integrity": "sha512-HAagjAC93tk748jcXpZ7oYRZH485RCq/+yEv9SIWezHRPv9moZArTnkUNciUNzvwHUABmiWKlcxJvMcu59UwTg==",
+      "requires": {
+        "@babel/helper-annotate-as-pure": "^7.8.3",
+        "@babel/helper-module-imports": "^7.8.3",
+        "@babel/types": "^7.9.5"
+      }
+    },
+    "@babel/helper-compilation-targets": {
+      "version": "7.9.6",
+      "resolved": "https://registry.npmjs.org/@babel/helper-compilation-targets/-/helper-compilation-targets-7.9.6.tgz",
+      "integrity": "sha512-x2Nvu0igO0ejXzx09B/1fGBxY9NXQlBW2kZsSxCJft+KHN8t9XWzIvFxtPHnBOAXpVsdxZKZFbRUC8TsNKajMw==",
+      "requires": {
+        "@babel/compat-data": "^7.9.6",
+        "browserslist": "^4.11.1",
+        "invariant": "^2.2.4",
+        "levenary": "^1.1.1",
+        "semver": "^5.5.0"
+      },
+      "dependencies": {
+        "semver": {
+          "version": "5.7.1",
+          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
+          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ=="
+        }
+      }
+    },
+    "@babel/helper-create-class-features-plugin": {
+      "version": "7.9.6",
+      "resolved": "https://registry.npmjs.org/@babel/helper-create-class-features-plugin/-/helper-create-class-features-plugin-7.9.6.tgz",
+      "integrity": "sha512-6N9IeuyHvMBRyjNYOMJHrhwtu4WJMrYf8hVbEHD3pbbbmNOk1kmXSQs7bA4dYDUaIx4ZEzdnvo6NwC3WHd/Qow==",
+      "requires": {
+        "@babel/helper-function-name": "^7.9.5",
+        "@babel/helper-member-expression-to-functions": "^7.8.3",
+        "@babel/helper-optimise-call-expression": "^7.8.3",
+        "@babel/helper-plugin-utils": "^7.8.3",
+        "@babel/helper-replace-supers": "^7.9.6",
+        "@babel/helper-split-export-declaration": "^7.8.3"
+      }
+    },
+    "@babel/helper-create-regexp-features-plugin": {
+      "version": "7.8.8",
+      "resolved": "https://registry.npmjs.org/@babel/helper-create-regexp-features-plugin/-/helper-create-regexp-features-plugin-7.8.8.tgz",
+      "integrity": "sha512-LYVPdwkrQEiX9+1R29Ld/wTrmQu1SSKYnuOk3g0CkcZMA1p0gsNxJFj/3gBdaJ7Cg0Fnek5z0DsMULePP7Lrqg==",
+      "requires": {
+        "@babel/helper-annotate-as-pure": "^7.8.3",
+        "@babel/helper-regex": "^7.8.3",
+        "regexpu-core": "^4.7.0"
+      }
+    },
+    "@babel/helper-define-map": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/helper-define-map/-/helper-define-map-7.8.3.tgz",
+      "integrity": "sha512-PoeBYtxoZGtct3md6xZOCWPcKuMuk3IHhgxsRRNtnNShebf4C8YonTSblsK4tvDbm+eJAw2HAPOfCr+Q/YRG/g==",
+      "requires": {
+        "@babel/helper-function-name": "^7.8.3",
+        "@babel/types": "^7.8.3",
+        "lodash": "^4.17.13"
+      }
+    },
+    "@babel/helper-explode-assignable-expression": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/helper-explode-assignable-expression/-/helper-explode-assignable-expression-7.8.3.tgz",
+      "integrity": "sha512-N+8eW86/Kj147bO9G2uclsg5pwfs/fqqY5rwgIL7eTBklgXjcOJ3btzS5iM6AitJcftnY7pm2lGsrJVYLGjzIw==",
+      "requires": {
+        "@babel/traverse": "^7.8.3",
+        "@babel/types": "^7.8.3"
+      }
+    },
+    "@babel/helper-function-name": {
+      "version": "7.9.5",
+      "resolved": "https://registry.npmjs.org/@babel/helper-function-name/-/helper-function-name-7.9.5.tgz",
+      "integrity": "sha512-JVcQZeXM59Cd1qanDUxv9fgJpt3NeKUaqBqUEvfmQ+BCOKq2xUgaWZW2hr0dkbyJgezYuplEoh5knmrnS68efw==",
+      "requires": {
+        "@babel/helper-get-function-arity": "^7.8.3",
+        "@babel/template": "^7.8.3",
+        "@babel/types": "^7.9.5"
+      }
+    },
+    "@babel/helper-get-function-arity": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/helper-get-function-arity/-/helper-get-function-arity-7.8.3.tgz",
+      "integrity": "sha512-FVDR+Gd9iLjUMY1fzE2SR0IuaJToR4RkCDARVfsBBPSP53GEqSFjD8gNyxg246VUyc/ALRxFaAK8rVG7UT7xRA==",
+      "requires": {
+        "@babel/types": "^7.8.3"
+      }
+    },
+    "@babel/helper-hoist-variables": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/helper-hoist-variables/-/helper-hoist-variables-7.8.3.tgz",
+      "integrity": "sha512-ky1JLOjcDUtSc+xkt0xhYff7Z6ILTAHKmZLHPxAhOP0Nd77O+3nCsd6uSVYur6nJnCI029CrNbYlc0LoPfAPQg==",
+      "requires": {
+        "@babel/types": "^7.8.3"
+      }
+    },
+    "@babel/helper-member-expression-to-functions": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/helper-member-expression-to-functions/-/helper-member-expression-to-functions-7.8.3.tgz",
+      "integrity": "sha512-fO4Egq88utkQFjbPrSHGmGLFqmrshs11d46WI+WZDESt7Wu7wN2G2Iu+NMMZJFDOVRHAMIkB5SNh30NtwCA7RA==",
+      "requires": {
+        "@babel/types": "^7.8.3"
+      }
+    },
+    "@babel/helper-module-imports": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.8.3.tgz",
+      "integrity": "sha512-R0Bx3jippsbAEtzkpZ/6FIiuzOURPcMjHp+Z6xPe6DtApDJx+w7UYyOLanZqO8+wKR9G10s/FmHXvxaMd9s6Kg==",
+      "requires": {
+        "@babel/types": "^7.8.3"
+      }
+    },
+    "@babel/helper-module-transforms": {
+      "version": "7.9.0",
+      "resolved": "https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.9.0.tgz",
+      "integrity": "sha512-0FvKyu0gpPfIQ8EkxlrAydOWROdHpBmiCiRwLkUiBGhCUPRRbVD2/tm3sFr/c/GWFrQ/ffutGUAnx7V0FzT2wA==",
+      "requires": {
+        "@babel/helper-module-imports": "^7.8.3",
+        "@babel/helper-replace-supers": "^7.8.6",
+        "@babel/helper-simple-access": "^7.8.3",
+        "@babel/helper-split-export-declaration": "^7.8.3",
+        "@babel/template": "^7.8.6",
+        "@babel/types": "^7.9.0",
+        "lodash": "^4.17.13"
+      }
+    },
+    "@babel/helper-optimise-call-expression": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/helper-optimise-call-expression/-/helper-optimise-call-expression-7.8.3.tgz",
+      "integrity": "sha512-Kag20n86cbO2AvHca6EJsvqAd82gc6VMGule4HwebwMlwkpXuVqrNRj6CkCV2sKxgi9MyAUnZVnZ6lJ1/vKhHQ==",
+      "requires": {
+        "@babel/types": "^7.8.3"
+      }
+    },
+    "@babel/helper-plugin-utils": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.8.3.tgz",
+      "integrity": "sha512-j+fq49Xds2smCUNYmEHF9kGNkhbet6yVIBp4e6oeQpH1RUs/Ir06xUKzDjDkGcaaokPiTNs2JBWHjaE4csUkZQ=="
+    },
+    "@babel/helper-regex": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/helper-regex/-/helper-regex-7.8.3.tgz",
+      "integrity": "sha512-BWt0QtYv/cg/NecOAZMdcn/waj/5P26DR4mVLXfFtDokSR6fyuG0Pj+e2FqtSME+MqED1khnSMulkmGl8qWiUQ==",
+      "requires": {
+        "lodash": "^4.17.13"
+      }
+    },
+    "@babel/helper-remap-async-to-generator": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/helper-remap-async-to-generator/-/helper-remap-async-to-generator-7.8.3.tgz",
+      "integrity": "sha512-kgwDmw4fCg7AVgS4DukQR/roGp+jP+XluJE5hsRZwxCYGg+Rv9wSGErDWhlI90FODdYfd4xG4AQRiMDjjN0GzA==",
+      "requires": {
+        "@babel/helper-annotate-as-pure": "^7.8.3",
+        "@babel/helper-wrap-function": "^7.8.3",
+        "@babel/template": "^7.8.3",
+        "@babel/traverse": "^7.8.3",
+        "@babel/types": "^7.8.3"
+      }
+    },
+    "@babel/helper-replace-supers": {
+      "version": "7.9.6",
+      "resolved": "https://registry.npmjs.org/@babel/helper-replace-supers/-/helper-replace-supers-7.9.6.tgz",
+      "integrity": "sha512-qX+chbxkbArLyCImk3bWV+jB5gTNU/rsze+JlcF6Nf8tVTigPJSI1o1oBow/9Resa1yehUO9lIipsmu9oG4RzA==",
+      "requires": {
+        "@babel/helper-member-expression-to-functions": "^7.8.3",
+        "@babel/helper-optimise-call-expression": "^7.8.3",
+        "@babel/traverse": "^7.9.6",
+        "@babel/types": "^7.9.6"
+      }
+    },
+    "@babel/helper-simple-access": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/helper-simple-access/-/helper-simple-access-7.8.3.tgz",
+      "integrity": "sha512-VNGUDjx5cCWg4vvCTR8qQ7YJYZ+HBjxOgXEl7ounz+4Sn7+LMD3CFrCTEU6/qXKbA2nKg21CwhhBzO0RpRbdCw==",
+      "requires": {
+        "@babel/template": "^7.8.3",
+        "@babel/types": "^7.8.3"
+      }
+    },
+    "@babel/helper-split-export-declaration": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/helper-split-export-declaration/-/helper-split-export-declaration-7.8.3.tgz",
+      "integrity": "sha512-3x3yOeyBhW851hroze7ElzdkeRXQYQbFIb7gLK1WQYsw2GWDay5gAJNw1sWJ0VFP6z5J1whqeXH/WCdCjZv6dA==",
+      "requires": {
+        "@babel/types": "^7.8.3"
+      }
+    },
+    "@babel/helper-validator-identifier": {
+      "version": "7.9.5",
+      "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.9.5.tgz",
+      "integrity": "sha512-/8arLKUFq882w4tWGj9JYzRpAlZgiWUJ+dtteNTDqrRBz9Iguck9Rn3ykuBDoUwh2TO4tSAJlrxDUOXWklJe4g=="
+    },
+    "@babel/helper-wrap-function": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/helper-wrap-function/-/helper-wrap-function-7.8.3.tgz",
+      "integrity": "sha512-LACJrbUET9cQDzb6kG7EeD7+7doC3JNvUgTEQOx2qaO1fKlzE/Bf05qs9w1oXQMmXlPO65lC3Tq9S6gZpTErEQ==",
+      "requires": {
+        "@babel/helper-function-name": "^7.8.3",
+        "@babel/template": "^7.8.3",
+        "@babel/traverse": "^7.8.3",
+        "@babel/types": "^7.8.3"
+      }
+    },
+    "@babel/helpers": {
+      "version": "7.9.6",
+      "resolved": "https://registry.npmjs.org/@babel/helpers/-/helpers-7.9.6.tgz",
+      "integrity": "sha512-tI4bUbldloLcHWoRUMAj4g1bF313M/o6fBKhIsb3QnGVPwRm9JsNf/gqMkQ7zjqReABiffPV6RWj7hEglID5Iw==",
+      "requires": {
+        "@babel/template": "^7.8.3",
+        "@babel/traverse": "^7.9.6",
+        "@babel/types": "^7.9.6"
+      }
+    },
+    "@babel/highlight": {
+      "version": "7.9.0",
+      "resolved": "https://registry.npmjs.org/@babel/highlight/-/highlight-7.9.0.tgz",
+      "integrity": "sha512-lJZPilxX7Op3Nv/2cvFdnlepPXDxi29wxteT57Q965oc5R9v86ztx0jfxVrTcBk8C2kcPkkDa2Z4T3ZsPPVWsQ==",
+      "requires": {
+        "@babel/helper-validator-identifier": "^7.9.0",
+        "chalk": "^2.0.0",
+        "js-tokens": "^4.0.0"
+      }
+    },
+    "@babel/parser": {
+      "version": "7.9.6",
+      "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.9.6.tgz",
+      "integrity": "sha512-AoeIEJn8vt+d/6+PXDRPaksYhnlbMIiejioBZvvMQsOjW/JYK6k/0dKnvvP3EhK5GfMBWDPtrxRtegWdAcdq9Q=="
+    },
+    "@babel/plugin-external-helpers": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-external-helpers/-/plugin-external-helpers-7.8.3.tgz",
+      "integrity": "sha512-mx0WXDDiIl5DwzMtzWGRSPugXi9BxROS05GQrhLNbEamhBiicgn994ibwkyiBH+6png7bm/yA7AUsvHyCXi4Vw==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.3"
+      }
+    },
+    "@babel/plugin-proposal-async-generator-functions": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-async-generator-functions/-/plugin-proposal-async-generator-functions-7.8.3.tgz",
+      "integrity": "sha512-NZ9zLv848JsV3hs8ryEh7Uaz/0KsmPLqv0+PdkDJL1cJy0K4kOCFa8zc1E3mp+RHPQcpdfb/6GovEsW4VDrOMw==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.3",
+        "@babel/helper-remap-async-to-generator": "^7.8.3",
+        "@babel/plugin-syntax-async-generators": "^7.8.0"
+      }
+    },
+    "@babel/plugin-proposal-class-properties": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-class-properties/-/plugin-proposal-class-properties-7.8.3.tgz",
+      "integrity": "sha512-EqFhbo7IosdgPgZggHaNObkmO1kNUe3slaKu54d5OWvy+p9QIKOzK1GAEpAIsZtWVtPXUHSMcT4smvDrCfY4AA==",
+      "requires": {
+        "@babel/helper-create-class-features-plugin": "^7.8.3",
+        "@babel/helper-plugin-utils": "^7.8.3"
+      }
+    },
+    "@babel/plugin-proposal-decorators": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-decorators/-/plugin-proposal-decorators-7.8.3.tgz",
+      "integrity": "sha512-e3RvdvS4qPJVTe288DlXjwKflpfy1hr0j5dz5WpIYYeP7vQZg2WfAEIp8k5/Lwis/m5REXEteIz6rrcDtXXG7w==",
+      "requires": {
+        "@babel/helper-create-class-features-plugin": "^7.8.3",
+        "@babel/helper-plugin-utils": "^7.8.3",
+        "@babel/plugin-syntax-decorators": "^7.8.3"
+      }
+    },
+    "@babel/plugin-proposal-dynamic-import": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-dynamic-import/-/plugin-proposal-dynamic-import-7.8.3.tgz",
+      "integrity": "sha512-NyaBbyLFXFLT9FP+zk0kYlUlA8XtCUbehs67F0nnEg7KICgMc2mNkIeu9TYhKzyXMkrapZFwAhXLdnt4IYHy1w==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.3",
+        "@babel/plugin-syntax-dynamic-import": "^7.8.0"
+      }
+    },
+    "@babel/plugin-proposal-export-default-from": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-export-default-from/-/plugin-proposal-export-default-from-7.8.3.tgz",
+      "integrity": "sha512-PYtv2S2OdCdp7GSPDg5ndGZFm9DmWFvuLoS5nBxZCgOBggluLnhTScspJxng96alHQzPyrrHxvC9/w4bFuspeA==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.3",
+        "@babel/plugin-syntax-export-default-from": "^7.8.3"
+      }
+    },
+    "@babel/plugin-proposal-json-strings": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-json-strings/-/plugin-proposal-json-strings-7.8.3.tgz",
+      "integrity": "sha512-KGhQNZ3TVCQG/MjRbAUwuH+14y9q0tpxs1nWWs3pbSleRdDro9SAMMDyye8HhY1gqZ7/NqIc8SKhya0wRDgP1Q==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.3",
+        "@babel/plugin-syntax-json-strings": "^7.8.0"
+      }
+    },
+    "@babel/plugin-proposal-nullish-coalescing-operator": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-nullish-coalescing-operator/-/plugin-proposal-nullish-coalescing-operator-7.8.3.tgz",
+      "integrity": "sha512-TS9MlfzXpXKt6YYomudb/KU7nQI6/xnapG6in1uZxoxDghuSMZsPb6D2fyUwNYSAp4l1iR7QtFOjkqcRYcUsfw==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.3",
+        "@babel/plugin-syntax-nullish-coalescing-operator": "^7.8.0"
+      }
+    },
+    "@babel/plugin-proposal-numeric-separator": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-numeric-separator/-/plugin-proposal-numeric-separator-7.8.3.tgz",
+      "integrity": "sha512-jWioO1s6R/R+wEHizfaScNsAx+xKgwTLNXSh7tTC4Usj3ItsPEhYkEpU4h+lpnBwq7NBVOJXfO6cRFYcX69JUQ==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.3",
+        "@babel/plugin-syntax-numeric-separator": "^7.8.3"
+      }
+    },
+    "@babel/plugin-proposal-object-rest-spread": {
+      "version": "7.9.6",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-object-rest-spread/-/plugin-proposal-object-rest-spread-7.9.6.tgz",
+      "integrity": "sha512-Ga6/fhGqA9Hj+y6whNpPv8psyaK5xzrQwSPsGPloVkvmH+PqW1ixdnfJ9uIO06OjQNYol3PMnfmJ8vfZtkzF+A==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.3",
+        "@babel/plugin-syntax-object-rest-spread": "^7.8.0",
+        "@babel/plugin-transform-parameters": "^7.9.5"
+      }
+    },
+    "@babel/plugin-proposal-optional-catch-binding": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-optional-catch-binding/-/plugin-proposal-optional-catch-binding-7.8.3.tgz",
+      "integrity": "sha512-0gkX7J7E+AtAw9fcwlVQj8peP61qhdg/89D5swOkjYbkboA2CVckn3kiyum1DE0wskGb7KJJxBdyEBApDLLVdw==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.3",
+        "@babel/plugin-syntax-optional-catch-binding": "^7.8.0"
+      }
+    },
+    "@babel/plugin-proposal-optional-chaining": {
+      "version": "7.9.0",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-optional-chaining/-/plugin-proposal-optional-chaining-7.9.0.tgz",
+      "integrity": "sha512-NDn5tu3tcv4W30jNhmc2hyD5c56G6cXx4TesJubhxrJeCvuuMpttxr0OnNCqbZGhFjLrg+NIhxxC+BK5F6yS3w==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.3",
+        "@babel/plugin-syntax-optional-chaining": "^7.8.0"
+      }
+    },
+    "@babel/plugin-proposal-unicode-property-regex": {
+      "version": "7.8.8",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-unicode-property-regex/-/plugin-proposal-unicode-property-regex-7.8.8.tgz",
+      "integrity": "sha512-EVhjVsMpbhLw9ZfHWSx2iy13Q8Z/eg8e8ccVWt23sWQK5l1UdkoLJPN5w69UA4uITGBnEZD2JOe4QOHycYKv8A==",
+      "requires": {
+        "@babel/helper-create-regexp-features-plugin": "^7.8.8",
+        "@babel/helper-plugin-utils": "^7.8.3"
+      }
+    },
+    "@babel/plugin-syntax-async-generators": {
+      "version": "7.8.4",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-async-generators/-/plugin-syntax-async-generators-7.8.4.tgz",
+      "integrity": "sha512-tycmZxkGfZaxhMRbXlPXuVFpdWlXpir2W4AMhSJgRKzk/eDlIXOhb2LHWoLpDF7TEHylV5zNhykX6KAgHJmTNw==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.0"
+      }
+    },
+    "@babel/plugin-syntax-class-properties": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-class-properties/-/plugin-syntax-class-properties-7.8.3.tgz",
+      "integrity": "sha512-UcAyQWg2bAN647Q+O811tG9MrJ38Z10jjhQdKNAL8fsyPzE3cCN/uT+f55cFVY4aGO4jqJAvmqsuY3GQDwAoXg==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.3"
+      }
+    },
+    "@babel/plugin-syntax-decorators": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-decorators/-/plugin-syntax-decorators-7.8.3.tgz",
+      "integrity": "sha512-8Hg4dNNT9/LcA1zQlfwuKR8BUc/if7Q7NkTam9sGTcJphLwpf2g4S42uhspQrIrR+dpzE0dtTqBVFoHl8GtnnQ==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.3"
+      }
+    },
+    "@babel/plugin-syntax-dynamic-import": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-dynamic-import/-/plugin-syntax-dynamic-import-7.8.3.tgz",
+      "integrity": "sha512-5gdGbFon+PszYzqs83S3E5mpi7/y/8M9eC90MRTZfduQOYW76ig6SOSPNe41IG5LoP3FGBn2N0RjVDSQiS94kQ==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.0"
+      }
+    },
+    "@babel/plugin-syntax-export-default-from": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-export-default-from/-/plugin-syntax-export-default-from-7.8.3.tgz",
+      "integrity": "sha512-a1qnnsr73KLNIQcQlcQ4ZHxqqfBKM6iNQZW2OMTyxNbA2WC7SHWHtGVpFzWtQAuS2pspkWVzdEBXXx8Ik0Za4w==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.3"
+      }
+    },
+    "@babel/plugin-syntax-flow": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-flow/-/plugin-syntax-flow-7.8.3.tgz",
+      "integrity": "sha512-innAx3bUbA0KSYj2E2MNFSn9hiCeowOFLxlsuhXzw8hMQnzkDomUr9QCD7E9VF60NmnG1sNTuuv6Qf4f8INYsg==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.3"
+      }
+    },
+    "@babel/plugin-syntax-json-strings": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-json-strings/-/plugin-syntax-json-strings-7.8.3.tgz",
+      "integrity": "sha512-lY6kdGpWHvjoe2vk4WrAapEuBR69EMxZl+RoGRhrFGNYVK8mOPAW8VfbT/ZgrFbXlDNiiaxQnAtgVCZ6jv30EA==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.0"
+      }
+    },
+    "@babel/plugin-syntax-jsx": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-jsx/-/plugin-syntax-jsx-7.8.3.tgz",
+      "integrity": "sha512-WxdW9xyLgBdefoo0Ynn3MRSkhe5tFVxxKNVdnZSh318WrG2e2jH+E9wd/++JsqcLJZPfz87njQJ8j2Upjm0M0A==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.3"
+      }
+    },
+    "@babel/plugin-syntax-nullish-coalescing-operator": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-nullish-coalescing-operator/-/plugin-syntax-nullish-coalescing-operator-7.8.3.tgz",
+      "integrity": "sha512-aSff4zPII1u2QD7y+F8oDsz19ew4IGEJg9SVW+bqwpwtfFleiQDMdzA/R+UlWDzfnHFCxxleFT0PMIrR36XLNQ==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.0"
+      }
+    },
+    "@babel/plugin-syntax-numeric-separator": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-numeric-separator/-/plugin-syntax-numeric-separator-7.8.3.tgz",
+      "integrity": "sha512-H7dCMAdN83PcCmqmkHB5dtp+Xa9a6LKSvA2hiFBC/5alSHxM5VgWZXFqDi0YFe8XNGT6iCa+z4V4zSt/PdZ7Dw==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.3"
+      }
+    },
+    "@babel/plugin-syntax-object-rest-spread": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-object-rest-spread/-/plugin-syntax-object-rest-spread-7.8.3.tgz",
+      "integrity": "sha512-XoqMijGZb9y3y2XskN+P1wUGiVwWZ5JmoDRwx5+3GmEplNyVM2s2Dg8ILFQm8rWM48orGy5YpI5Bl8U1y7ydlA==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.0"
+      }
+    },
+    "@babel/plugin-syntax-optional-catch-binding": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-optional-catch-binding/-/plugin-syntax-optional-catch-binding-7.8.3.tgz",
+      "integrity": "sha512-6VPD0Pc1lpTqw0aKoeRTMiB+kWhAoT24PA+ksWSBrFtl5SIRVpZlwN3NNPQjehA2E/91FV3RjLWoVTglWcSV3Q==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.0"
+      }
+    },
+    "@babel/plugin-syntax-optional-chaining": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-optional-chaining/-/plugin-syntax-optional-chaining-7.8.3.tgz",
+      "integrity": "sha512-KoK9ErH1MBlCPxV0VANkXW2/dw4vlbGDrFgz8bmUsBGYkFRcbRwMh6cIJubdPrkxRwuGdtCk0v/wPTKbQgBjkg==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.0"
+      }
+    },
+    "@babel/plugin-syntax-top-level-await": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-top-level-await/-/plugin-syntax-top-level-await-7.8.3.tgz",
+      "integrity": "sha512-kwj1j9lL/6Wd0hROD3b/OZZ7MSrZLqqn9RAZ5+cYYsflQ9HZBIKCUkr3+uL1MEJ1NePiUbf98jjiMQSv0NMR9g==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.3"
+      }
+    },
+    "@babel/plugin-syntax-typescript": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-typescript/-/plugin-syntax-typescript-7.8.3.tgz",
+      "integrity": "sha512-GO1MQ/SGGGoiEXY0e0bSpHimJvxqB7lktLLIq2pv8xG7WZ8IMEle74jIe1FhprHBWjwjZtXHkycDLZXIWM5Wfg==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.3"
+      }
+    },
+    "@babel/plugin-transform-arrow-functions": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-arrow-functions/-/plugin-transform-arrow-functions-7.8.3.tgz",
+      "integrity": "sha512-0MRF+KC8EqH4dbuITCWwPSzsyO3HIWWlm30v8BbbpOrS1B++isGxPnnuq/IZvOX5J2D/p7DQalQm+/2PnlKGxg==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.3"
+      }
+    },
+    "@babel/plugin-transform-async-to-generator": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-async-to-generator/-/plugin-transform-async-to-generator-7.8.3.tgz",
+      "integrity": "sha512-imt9tFLD9ogt56Dd5CI/6XgpukMwd/fLGSrix2httihVe7LOGVPhyhMh1BU5kDM7iHD08i8uUtmV2sWaBFlHVQ==",
+      "requires": {
+        "@babel/helper-module-imports": "^7.8.3",
+        "@babel/helper-plugin-utils": "^7.8.3",
+        "@babel/helper-remap-async-to-generator": "^7.8.3"
+      }
+    },
+    "@babel/plugin-transform-block-scoped-functions": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-block-scoped-functions/-/plugin-transform-block-scoped-functions-7.8.3.tgz",
+      "integrity": "sha512-vo4F2OewqjbB1+yaJ7k2EJFHlTP3jR634Z9Cj9itpqNjuLXvhlVxgnjsHsdRgASR8xYDrx6onw4vW5H6We0Jmg==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.3"
+      }
+    },
+    "@babel/plugin-transform-block-scoping": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-block-scoping/-/plugin-transform-block-scoping-7.8.3.tgz",
+      "integrity": "sha512-pGnYfm7RNRgYRi7bids5bHluENHqJhrV4bCZRwc5GamaWIIs07N4rZECcmJL6ZClwjDz1GbdMZFtPs27hTB06w==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.3",
+        "lodash": "^4.17.13"
+      }
+    },
+    "@babel/plugin-transform-classes": {
+      "version": "7.9.5",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-classes/-/plugin-transform-classes-7.9.5.tgz",
+      "integrity": "sha512-x2kZoIuLC//O5iA7PEvecB105o7TLzZo8ofBVhP79N+DO3jaX+KYfww9TQcfBEZD0nikNyYcGB1IKtRq36rdmg==",
+      "requires": {
+        "@babel/helper-annotate-as-pure": "^7.8.3",
+        "@babel/helper-define-map": "^7.8.3",
+        "@babel/helper-function-name": "^7.9.5",
+        "@babel/helper-optimise-call-expression": "^7.8.3",
+        "@babel/helper-plugin-utils": "^7.8.3",
+        "@babel/helper-replace-supers": "^7.8.6",
+        "@babel/helper-split-export-declaration": "^7.8.3",
+        "globals": "^11.1.0"
+      }
+    },
+    "@babel/plugin-transform-computed-properties": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-computed-properties/-/plugin-transform-computed-properties-7.8.3.tgz",
+      "integrity": "sha512-O5hiIpSyOGdrQZRQ2ccwtTVkgUDBBiCuK//4RJ6UfePllUTCENOzKxfh6ulckXKc0DixTFLCfb2HVkNA7aDpzA==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.3"
+      }
+    },
+    "@babel/plugin-transform-destructuring": {
+      "version": "7.9.5",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-destructuring/-/plugin-transform-destructuring-7.9.5.tgz",
+      "integrity": "sha512-j3OEsGel8nHL/iusv/mRd5fYZ3DrOxWC82x0ogmdN/vHfAP4MYw+AFKYanzWlktNwikKvlzUV//afBW5FTp17Q==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.3"
+      }
+    },
+    "@babel/plugin-transform-dotall-regex": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-dotall-regex/-/plugin-transform-dotall-regex-7.8.3.tgz",
+      "integrity": "sha512-kLs1j9Nn4MQoBYdRXH6AeaXMbEJFaFu/v1nQkvib6QzTj8MZI5OQzqmD83/2jEM1z0DLilra5aWO5YpyC0ALIw==",
+      "requires": {
+        "@babel/helper-create-regexp-features-plugin": "^7.8.3",
+        "@babel/helper-plugin-utils": "^7.8.3"
+      }
+    },
+    "@babel/plugin-transform-duplicate-keys": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-duplicate-keys/-/plugin-transform-duplicate-keys-7.8.3.tgz",
+      "integrity": "sha512-s8dHiBUbcbSgipS4SMFuWGqCvyge5V2ZeAWzR6INTVC3Ltjig/Vw1G2Gztv0vU/hRG9X8IvKvYdoksnUfgXOEQ==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.3"
+      }
+    },
+    "@babel/plugin-transform-exponentiation-operator": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-exponentiation-operator/-/plugin-transform-exponentiation-operator-7.8.3.tgz",
+      "integrity": "sha512-zwIpuIymb3ACcInbksHaNcR12S++0MDLKkiqXHl3AzpgdKlFNhog+z/K0+TGW+b0w5pgTq4H6IwV/WhxbGYSjQ==",
+      "requires": {
+        "@babel/helper-builder-binary-assignment-operator-visitor": "^7.8.3",
+        "@babel/helper-plugin-utils": "^7.8.3"
+      }
+    },
+    "@babel/plugin-transform-flow-strip-types": {
+      "version": "7.9.0",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-flow-strip-types/-/plugin-transform-flow-strip-types-7.9.0.tgz",
+      "integrity": "sha512-7Qfg0lKQhEHs93FChxVLAvhBshOPQDtJUTVHr/ZwQNRccCm4O9D79r9tVSoV8iNwjP1YgfD+e/fgHcPkN1qEQg==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.3",
+        "@babel/plugin-syntax-flow": "^7.8.3"
+      }
+    },
+    "@babel/plugin-transform-for-of": {
+      "version": "7.9.0",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-for-of/-/plugin-transform-for-of-7.9.0.tgz",
+      "integrity": "sha512-lTAnWOpMwOXpyDx06N+ywmF3jNbafZEqZ96CGYabxHrxNX8l5ny7dt4bK/rGwAh9utyP2b2Hv7PlZh1AAS54FQ==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.3"
+      }
+    },
+    "@babel/plugin-transform-function-name": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-function-name/-/plugin-transform-function-name-7.8.3.tgz",
+      "integrity": "sha512-rO/OnDS78Eifbjn5Py9v8y0aR+aSYhDhqAwVfsTl0ERuMZyr05L1aFSCJnbv2mmsLkit/4ReeQ9N2BgLnOcPCQ==",
+      "requires": {
+        "@babel/helper-function-name": "^7.8.3",
+        "@babel/helper-plugin-utils": "^7.8.3"
+      }
+    },
+    "@babel/plugin-transform-literals": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-literals/-/plugin-transform-literals-7.8.3.tgz",
+      "integrity": "sha512-3Tqf8JJ/qB7TeldGl+TT55+uQei9JfYaregDcEAyBZ7akutriFrt6C/wLYIer6OYhleVQvH/ntEhjE/xMmy10A==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.3"
+      }
+    },
+    "@babel/plugin-transform-member-expression-literals": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-member-expression-literals/-/plugin-transform-member-expression-literals-7.8.3.tgz",
+      "integrity": "sha512-3Wk2EXhnw+rP+IDkK6BdtPKsUE5IeZ6QOGrPYvw52NwBStw9V1ZVzxgK6fSKSxqUvH9eQPR3tm3cOq79HlsKYA==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.3"
+      }
+    },
+    "@babel/plugin-transform-modules-amd": {
+      "version": "7.9.6",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-amd/-/plugin-transform-modules-amd-7.9.6.tgz",
+      "integrity": "sha512-zoT0kgC3EixAyIAU+9vfaUVKTv9IxBDSabgHoUCBP6FqEJ+iNiN7ip7NBKcYqbfUDfuC2mFCbM7vbu4qJgOnDw==",
+      "requires": {
+        "@babel/helper-module-transforms": "^7.9.0",
+        "@babel/helper-plugin-utils": "^7.8.3",
+        "babel-plugin-dynamic-import-node": "^2.3.3"
+      }
+    },
+    "@babel/plugin-transform-modules-commonjs": {
+      "version": "7.9.6",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-commonjs/-/plugin-transform-modules-commonjs-7.9.6.tgz",
+      "integrity": "sha512-7H25fSlLcn+iYimmsNe3uK1at79IE6SKW9q0/QeEHTMC9MdOZ+4bA+T1VFB5fgOqBWoqlifXRzYD0JPdmIrgSQ==",
+      "requires": {
+        "@babel/helper-module-transforms": "^7.9.0",
+        "@babel/helper-plugin-utils": "^7.8.3",
+        "@babel/helper-simple-access": "^7.8.3",
+        "babel-plugin-dynamic-import-node": "^2.3.3"
+      }
+    },
+    "@babel/plugin-transform-modules-systemjs": {
+      "version": "7.9.6",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-systemjs/-/plugin-transform-modules-systemjs-7.9.6.tgz",
+      "integrity": "sha512-NW5XQuW3N2tTHim8e1b7qGy7s0kZ2OH3m5octc49K1SdAKGxYxeIx7hiIz05kS1R2R+hOWcsr1eYwcGhrdHsrg==",
+      "requires": {
+        "@babel/helper-hoist-variables": "^7.8.3",
+        "@babel/helper-module-transforms": "^7.9.0",
+        "@babel/helper-plugin-utils": "^7.8.3",
+        "babel-plugin-dynamic-import-node": "^2.3.3"
+      }
+    },
+    "@babel/plugin-transform-modules-umd": {
+      "version": "7.9.0",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-umd/-/plugin-transform-modules-umd-7.9.0.tgz",
+      "integrity": "sha512-uTWkXkIVtg/JGRSIABdBoMsoIeoHQHPTL0Y2E7xf5Oj7sLqwVsNXOkNk0VJc7vF0IMBsPeikHxFjGe+qmwPtTQ==",
+      "requires": {
+        "@babel/helper-module-transforms": "^7.9.0",
+        "@babel/helper-plugin-utils": "^7.8.3"
+      }
+    },
+    "@babel/plugin-transform-named-capturing-groups-regex": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-named-capturing-groups-regex/-/plugin-transform-named-capturing-groups-regex-7.8.3.tgz",
+      "integrity": "sha512-f+tF/8UVPU86TrCb06JoPWIdDpTNSGGcAtaD9mLP0aYGA0OS0j7j7DHJR0GTFrUZPUU6loZhbsVZgTh0N+Qdnw==",
+      "requires": {
+        "@babel/helper-create-regexp-features-plugin": "^7.8.3"
+      }
+    },
+    "@babel/plugin-transform-new-target": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-new-target/-/plugin-transform-new-target-7.8.3.tgz",
+      "integrity": "sha512-QuSGysibQpyxexRyui2vca+Cmbljo8bcRckgzYV4kRIsHpVeyeC3JDO63pY+xFZ6bWOBn7pfKZTqV4o/ix9sFw==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.3"
+      }
+    },
+    "@babel/plugin-transform-object-assign": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-object-assign/-/plugin-transform-object-assign-7.8.3.tgz",
+      "integrity": "sha512-i3LuN8tPDqUCRFu3dkzF2r1Nx0jp4scxtm7JxtIqI9he9Vk20YD+/zshdzR9JLsoBMlJlNR82a62vQExNEVx/Q==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.3"
+      }
+    },
+    "@babel/plugin-transform-object-super": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-object-super/-/plugin-transform-object-super-7.8.3.tgz",
+      "integrity": "sha512-57FXk+gItG/GejofIyLIgBKTas4+pEU47IXKDBWFTxdPd7F80H8zybyAY7UoblVfBhBGs2EKM+bJUu2+iUYPDQ==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.3",
+        "@babel/helper-replace-supers": "^7.8.3"
+      }
+    },
+    "@babel/plugin-transform-parameters": {
+      "version": "7.9.5",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-parameters/-/plugin-transform-parameters-7.9.5.tgz",
+      "integrity": "sha512-0+1FhHnMfj6lIIhVvS4KGQJeuhe1GI//h5uptK4PvLt+BGBxsoUJbd3/IW002yk//6sZPlFgsG1hY6OHLcy6kA==",
+      "requires": {
+        "@babel/helper-get-function-arity": "^7.8.3",
+        "@babel/helper-plugin-utils": "^7.8.3"
+      }
+    },
+    "@babel/plugin-transform-property-literals": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-property-literals/-/plugin-transform-property-literals-7.8.3.tgz",
+      "integrity": "sha512-uGiiXAZMqEoQhRWMK17VospMZh5sXWg+dlh2soffpkAl96KAm+WZuJfa6lcELotSRmooLqg0MWdH6UUq85nmmg==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.3"
+      }
+    },
+    "@babel/plugin-transform-react-constant-elements": {
+      "version": "7.9.0",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-constant-elements/-/plugin-transform-react-constant-elements-7.9.0.tgz",
+      "integrity": "sha512-wXMXsToAUOxJuBBEHajqKLFWcCkOSLshTI2ChCFFj1zDd7od4IOxiwLCOObNUvOpkxLpjIuaIdBMmNt6ocCPAw==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.3"
+      }
+    },
+    "@babel/plugin-transform-react-display-name": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-display-name/-/plugin-transform-react-display-name-7.8.3.tgz",
+      "integrity": "sha512-3Jy/PCw8Fe6uBKtEgz3M82ljt+lTg+xJaM4og+eyu83qLT87ZUSckn0wy7r31jflURWLO83TW6Ylf7lyXj3m5A==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.3"
+      }
+    },
+    "@babel/plugin-transform-react-jsx": {
+      "version": "7.9.4",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx/-/plugin-transform-react-jsx-7.9.4.tgz",
+      "integrity": "sha512-Mjqf3pZBNLt854CK0C/kRuXAnE6H/bo7xYojP+WGtX8glDGSibcwnsWwhwoSuRg0+EBnxPC1ouVnuetUIlPSAw==",
+      "requires": {
+        "@babel/helper-builder-react-jsx": "^7.9.0",
+        "@babel/helper-builder-react-jsx-experimental": "^7.9.0",
+        "@babel/helper-plugin-utils": "^7.8.3",
+        "@babel/plugin-syntax-jsx": "^7.8.3"
+      }
+    },
+    "@babel/plugin-transform-react-jsx-development": {
+      "version": "7.9.0",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx-development/-/plugin-transform-react-jsx-development-7.9.0.tgz",
+      "integrity": "sha512-tK8hWKrQncVvrhvtOiPpKrQjfNX3DtkNLSX4ObuGcpS9p0QrGetKmlySIGR07y48Zft8WVgPakqd/bk46JrMSw==",
+      "requires": {
+        "@babel/helper-builder-react-jsx-experimental": "^7.9.0",
+        "@babel/helper-plugin-utils": "^7.8.3",
+        "@babel/plugin-syntax-jsx": "^7.8.3"
+      }
+    },
+    "@babel/plugin-transform-react-jsx-self": {
+      "version": "7.9.0",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx-self/-/plugin-transform-react-jsx-self-7.9.0.tgz",
+      "integrity": "sha512-K2ObbWPKT7KUTAoyjCsFilOkEgMvFG+y0FqOl6Lezd0/13kMkkjHskVsZvblRPj1PHA44PrToaZANrryppzTvQ==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.3",
+        "@babel/plugin-syntax-jsx": "^7.8.3"
+      }
+    },
+    "@babel/plugin-transform-react-jsx-source": {
+      "version": "7.9.0",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx-source/-/plugin-transform-react-jsx-source-7.9.0.tgz",
+      "integrity": "sha512-K6m3LlSnTSfRkM6FcRk8saNEeaeyG5k7AVkBU2bZK3+1zdkSED3qNdsWrUgQBeTVD2Tp3VMmerxVO2yM5iITmw==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.3",
+        "@babel/plugin-syntax-jsx": "^7.8.3"
+      }
+    },
+    "@babel/plugin-transform-regenerator": {
+      "version": "7.8.7",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-regenerator/-/plugin-transform-regenerator-7.8.7.tgz",
+      "integrity": "sha512-TIg+gAl4Z0a3WmD3mbYSk+J9ZUH6n/Yc57rtKRnlA/7rcCvpekHXe0CMZHP1gYp7/KLe9GHTuIba0vXmls6drA==",
+      "requires": {
+        "regenerator-transform": "^0.14.2"
+      }
+    },
+    "@babel/plugin-transform-reserved-words": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-reserved-words/-/plugin-transform-reserved-words-7.8.3.tgz",
+      "integrity": "sha512-mwMxcycN3omKFDjDQUl+8zyMsBfjRFr0Zn/64I41pmjv4NJuqcYlEtezwYtw9TFd9WR1vN5kiM+O0gMZzO6L0A==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.3"
+      }
+    },
+    "@babel/plugin-transform-runtime": {
+      "version": "7.9.0",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-runtime/-/plugin-transform-runtime-7.9.0.tgz",
+      "integrity": "sha512-pUu9VSf3kI1OqbWINQ7MaugnitRss1z533436waNXp+0N3ur3zfut37sXiQMxkuCF4VUjwZucen/quskCh7NHw==",
+      "requires": {
+        "@babel/helper-module-imports": "^7.8.3",
+        "@babel/helper-plugin-utils": "^7.8.3",
+        "resolve": "^1.8.1",
+        "semver": "^5.5.1"
+      },
+      "dependencies": {
+        "semver": {
+          "version": "5.7.1",
+          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
+          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ=="
+        }
+      }
+    },
+    "@babel/plugin-transform-shorthand-properties": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-shorthand-properties/-/plugin-transform-shorthand-properties-7.8.3.tgz",
+      "integrity": "sha512-I9DI6Odg0JJwxCHzbzW08ggMdCezoWcuQRz3ptdudgwaHxTjxw5HgdFJmZIkIMlRymL6YiZcped4TTCB0JcC8w==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.3"
+      }
+    },
+    "@babel/plugin-transform-spread": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-spread/-/plugin-transform-spread-7.8.3.tgz",
+      "integrity": "sha512-CkuTU9mbmAoFOI1tklFWYYbzX5qCIZVXPVy0jpXgGwkplCndQAa58s2jr66fTeQnA64bDox0HL4U56CFYoyC7g==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.3"
+      }
+    },
+    "@babel/plugin-transform-sticky-regex": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-sticky-regex/-/plugin-transform-sticky-regex-7.8.3.tgz",
+      "integrity": "sha512-9Spq0vGCD5Bb4Z/ZXXSK5wbbLFMG085qd2vhL1JYu1WcQ5bXqZBAYRzU1d+p79GcHs2szYv5pVQCX13QgldaWw==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.3",
+        "@babel/helper-regex": "^7.8.3"
+      }
+    },
+    "@babel/plugin-transform-template-literals": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-template-literals/-/plugin-transform-template-literals-7.8.3.tgz",
+      "integrity": "sha512-820QBtykIQOLFT8NZOcTRJ1UNuztIELe4p9DCgvj4NK+PwluSJ49we7s9FB1HIGNIYT7wFUJ0ar2QpCDj0escQ==",
+      "requires": {
+        "@babel/helper-annotate-as-pure": "^7.8.3",
+        "@babel/helper-plugin-utils": "^7.8.3"
+      }
+    },
+    "@babel/plugin-transform-typeof-symbol": {
+      "version": "7.8.4",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-typeof-symbol/-/plugin-transform-typeof-symbol-7.8.4.tgz",
+      "integrity": "sha512-2QKyfjGdvuNfHsb7qnBBlKclbD4CfshH2KvDabiijLMGXPHJXGxtDzwIF7bQP+T0ysw8fYTtxPafgfs/c1Lrqg==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.3"
+      }
+    },
+    "@babel/plugin-transform-typescript": {
+      "version": "7.9.6",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-typescript/-/plugin-transform-typescript-7.9.6.tgz",
+      "integrity": "sha512-8OvsRdvpt3Iesf2qsAn+YdlwAJD7zJ+vhFZmDCa4b8dTp7MmHtKk5FF2mCsGxjZwuwsy/yIIay/nLmxST1ctVQ==",
+      "requires": {
+        "@babel/helper-create-class-features-plugin": "^7.9.6",
+        "@babel/helper-plugin-utils": "^7.8.3",
+        "@babel/plugin-syntax-typescript": "^7.8.3"
+      }
+    },
+    "@babel/plugin-transform-unicode-regex": {
+      "version": "7.8.3",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-unicode-regex/-/plugin-transform-unicode-regex-7.8.3.tgz",
+      "integrity": "sha512-+ufgJjYdmWfSQ+6NS9VGUR2ns8cjJjYbrbi11mZBTaWm+Fui/ncTLFF28Ei1okavY+xkojGr1eJxNsWYeA5aZw==",
+      "requires": {
+        "@babel/helper-create-regexp-features-plugin": "^7.8.3",
+        "@babel/helper-plugin-utils": "^7.8.3"
+      }
+    },
+    "@babel/preset-env": {
+      "version": "7.9.6",
+      "resolved": "https://registry.npmjs.org/@babel/preset-env/-/preset-env-7.9.6.tgz",
+      "integrity": "sha512-0gQJ9RTzO0heXOhzftog+a/WyOuqMrAIugVYxMYf83gh1CQaQDjMtsOpqOwXyDL/5JcWsrCm8l4ju8QC97O7EQ==",
+      "requires": {
+        "@babel/compat-data": "^7.9.6",
+        "@babel/helper-compilation-targets": "^7.9.6",
+        "@babel/helper-module-imports": "^7.8.3",
+        "@babel/helper-plugin-utils": "^7.8.3",
+        "@babel/plugin-proposal-async-generator-functions": "^7.8.3",
+        "@babel/plugin-proposal-dynamic-import": "^7.8.3",
+        "@babel/plugin-proposal-json-strings": "^7.8.3",
+        "@babel/plugin-proposal-nullish-coalescing-operator": "^7.8.3",
+        "@babel/plugin-proposal-numeric-separator": "^7.8.3",
+        "@babel/plugin-proposal-object-rest-spread": "^7.9.6",
+        "@babel/plugin-proposal-optional-catch-binding": "^7.8.3",
+        "@babel/plugin-proposal-optional-chaining": "^7.9.0",
+        "@babel/plugin-proposal-unicode-property-regex": "^7.8.3",
+        "@babel/plugin-syntax-async-generators": "^7.8.0",
+        "@babel/plugin-syntax-dynamic-import": "^7.8.0",
+        "@babel/plugin-syntax-json-strings": "^7.8.0",
+        "@babel/plugin-syntax-nullish-coalescing-operator": "^7.8.0",
+        "@babel/plugin-syntax-numeric-separator": "^7.8.0",
+        "@babel/plugin-syntax-object-rest-spread": "^7.8.0",
+        "@babel/plugin-syntax-optional-catch-binding": "^7.8.0",
+        "@babel/plugin-syntax-optional-chaining": "^7.8.0",
+        "@babel/plugin-syntax-top-level-await": "^7.8.3",
+        "@babel/plugin-transform-arrow-functions": "^7.8.3",
+        "@babel/plugin-transform-async-to-generator": "^7.8.3",
+        "@babel/plugin-transform-block-scoped-functions": "^7.8.3",
+        "@babel/plugin-transform-block-scoping": "^7.8.3",
+        "@babel/plugin-transform-classes": "^7.9.5",
+        "@babel/plugin-transform-computed-properties": "^7.8.3",
+        "@babel/plugin-transform-destructuring": "^7.9.5",
+        "@babel/plugin-transform-dotall-regex": "^7.8.3",
+        "@babel/plugin-transform-duplicate-keys": "^7.8.3",
+        "@babel/plugin-transform-exponentiation-operator": "^7.8.3",
+        "@babel/plugin-transform-for-of": "^7.9.0",
+        "@babel/plugin-transform-function-name": "^7.8.3",
+        "@babel/plugin-transform-literals": "^7.8.3",
+        "@babel/plugin-transform-member-expression-literals": "^7.8.3",
+        "@babel/plugin-transform-modules-amd": "^7.9.6",
+        "@babel/plugin-transform-modules-commonjs": "^7.9.6",
+        "@babel/plugin-transform-modules-systemjs": "^7.9.6",
+        "@babel/plugin-transform-modules-umd": "^7.9.0",
+        "@babel/plugin-transform-named-capturing-groups-regex": "^7.8.3",
+        "@babel/plugin-transform-new-target": "^7.8.3",
+        "@babel/plugin-transform-object-super": "^7.8.3",
+        "@babel/plugin-transform-parameters": "^7.9.5",
+        "@babel/plugin-transform-property-literals": "^7.8.3",
+        "@babel/plugin-transform-regenerator": "^7.8.7",
+        "@babel/plugin-transform-reserved-words": "^7.8.3",
+        "@babel/plugin-transform-shorthand-properties": "^7.8.3",
+        "@babel/plugin-transform-spread": "^7.8.3",
+        "@babel/plugin-transform-sticky-regex": "^7.8.3",
+        "@babel/plugin-transform-template-literals": "^7.8.3",
+        "@babel/plugin-transform-typeof-symbol": "^7.8.4",
+        "@babel/plugin-transform-unicode-regex": "^7.8.3",
+        "@babel/preset-modules": "^0.1.3",
+        "@babel/types": "^7.9.6",
+        "browserslist": "^4.11.1",
+        "core-js-compat": "^3.6.2",
+        "invariant": "^2.2.2",
+        "levenary": "^1.1.1",
+        "semver": "^5.5.0"
+      },
+      "dependencies": {
+        "semver": {
+          "version": "5.7.1",
+          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
+          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ=="
+        }
+      }
+    },
+    "@babel/preset-modules": {
+      "version": "0.1.3",
+      "resolved": "https://registry.npmjs.org/@babel/preset-modules/-/preset-modules-0.1.3.tgz",
+      "integrity": "sha512-Ra3JXOHBq2xd56xSF7lMKXdjBn3T772Y1Wet3yWnkDly9zHvJki029tAFzvAAK5cf4YV3yoxuP61crYRol6SVg==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.0.0",
+        "@babel/plugin-proposal-unicode-property-regex": "^7.4.4",
+        "@babel/plugin-transform-dotall-regex": "^7.4.4",
+        "@babel/types": "^7.4.4",
+        "esutils": "^2.0.2"
+      }
+    },
+    "@babel/preset-react": {
+      "version": "7.9.4",
+      "resolved": "https://registry.npmjs.org/@babel/preset-react/-/preset-react-7.9.4.tgz",
+      "integrity": "sha512-AxylVB3FXeOTQXNXyiuAQJSvss62FEotbX2Pzx3K/7c+MKJMdSg6Ose6QYllkdCFA8EInCJVw7M/o5QbLuA4ZQ==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.3",
+        "@babel/plugin-transform-react-display-name": "^7.8.3",
+        "@babel/plugin-transform-react-jsx": "^7.9.4",
+        "@babel/plugin-transform-react-jsx-development": "^7.9.0",
+        "@babel/plugin-transform-react-jsx-self": "^7.9.0",
+        "@babel/plugin-transform-react-jsx-source": "^7.9.0"
+      }
+    },
+    "@babel/preset-typescript": {
+      "version": "7.9.0",
+      "resolved": "https://registry.npmjs.org/@babel/preset-typescript/-/preset-typescript-7.9.0.tgz",
+      "integrity": "sha512-S4cueFnGrIbvYJgwsVFKdvOmpiL0XGw9MFW9D0vgRys5g36PBhZRL8NX8Gr2akz8XRtzq6HuDXPD/1nniagNUg==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.8.3",
+        "@babel/plugin-transform-typescript": "^7.9.0"
+      }
+    },
+    "@babel/register": {
+      "version": "7.9.0",
+      "resolved": "https://registry.npmjs.org/@babel/register/-/register-7.9.0.tgz",
+      "integrity": "sha512-Tv8Zyi2J2VRR8g7pC5gTeIN8Ihultbmk0ocyNz8H2nEZbmhp1N6q0A1UGsQbDvGP/sNinQKUHf3SqXwqjtFv4Q==",
+      "requires": {
+        "find-cache-dir": "^2.0.0",
+        "lodash": "^4.17.13",
+        "make-dir": "^2.1.0",
+        "pirates": "^4.0.0",
+        "source-map-support": "^0.5.16"
+      }
+    },
+    "@babel/runtime": {
+      "version": "7.9.6",
+      "resolved": "https://registry.npmjs.org/@babel/runtime/-/runtime-7.9.6.tgz",
+      "integrity": "sha512-64AF1xY3OAkFHqOb9s4jpgk1Mm5vDZ4L3acHvAml+53nO1XbXLuDodsVpO4OIUsmemlUHMxNdYMNJmsvOwLrvQ==",
+      "requires": {
+        "regenerator-runtime": "^0.13.4"
+      }
+    },
+    "@babel/runtime-corejs3": {
+      "version": "7.9.6",
+      "resolved": "https://registry.npmjs.org/@babel/runtime-corejs3/-/runtime-corejs3-7.9.6.tgz",
+      "integrity": "sha512-6toWAfaALQjt3KMZQc6fABqZwUDDuWzz+cAfPhqyEnzxvdWOAkjwPNxgF8xlmo7OWLsSjaKjsskpKHRLaMArOA==",
+      "requires": {
+        "core-js-pure": "^3.0.0",
+        "regenerator-runtime": "^0.13.4"
+      }
+    },
+    "@babel/template": {
+      "version": "7.8.6",
+      "resolved": "https://registry.npmjs.org/@babel/template/-/template-7.8.6.tgz",
+      "integrity": "sha512-zbMsPMy/v0PWFZEhQJ66bqjhH+z0JgMoBWuikXybgG3Gkd/3t5oQ1Rw2WQhnSrsOmsKXnZOx15tkC4qON/+JPg==",
+      "requires": {
+        "@babel/code-frame": "^7.8.3",
+        "@babel/parser": "^7.8.6",
+        "@babel/types": "^7.8.6"
+      }
+    },
+    "@babel/traverse": {
+      "version": "7.9.6",
+      "resolved": "https://registry.npmjs.org/@babel/traverse/-/traverse-7.9.6.tgz",
+      "integrity": "sha512-b3rAHSjbxy6VEAvlxM8OV/0X4XrG72zoxme6q1MOoe2vd0bEc+TwayhuC1+Dfgqh1QEG+pj7atQqvUprHIccsg==",
+      "requires": {
+        "@babel/code-frame": "^7.8.3",
+        "@babel/generator": "^7.9.6",
+        "@babel/helper-function-name": "^7.9.5",
+        "@babel/helper-split-export-declaration": "^7.8.3",
+        "@babel/parser": "^7.9.6",
+        "@babel/types": "^7.9.6",
+        "debug": "^4.1.0",
+        "globals": "^11.1.0",
+        "lodash": "^4.17.13"
+      }
+    },
+    "@babel/types": {
+      "version": "7.9.6",
+      "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.9.6.tgz",
+      "integrity": "sha512-qxXzvBO//jO9ZnoasKF1uJzHd2+M6Q2ZPIVfnFps8JJvXy0ZBbwbNOmE6SGIY5XOY6d1Bo5lb9d9RJ8nv3WSeA==",
+      "requires": {
+        "@babel/helper-validator-identifier": "^7.9.5",
+        "lodash": "^4.17.13",
+        "to-fast-properties": "^2.0.0"
+      }
+    },
+    "@cnakazawa/watch": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/@cnakazawa/watch/-/watch-1.0.4.tgz",
+      "integrity": "sha512-v9kIhKwjeZThiWrLmj0y17CWoyddASLj9O2yvbZkbvw/N3rWOYy9zkV66ursAoVr0mV15bL8g0c4QZUE6cdDoQ==",
+      "requires": {
+        "exec-sh": "^0.3.2",
+        "minimist": "^1.2.0"
+      }
+    },
+    "@csstools/convert-colors": {
+      "version": "1.4.0",
+      "resolved": "https://registry.npmjs.org/@csstools/convert-colors/-/convert-colors-1.4.0.tgz",
+      "integrity": "sha512-5a6wqoJV/xEdbRNKVo6I4hO3VjyDq//8q2f9I6PBAvMesJHFauXDorcNCsr9RzvsZnaWi5NYCcfyqP1QeFHFbw=="
+    },
+    "@csstools/normalize.css": {
+      "version": "10.1.0",
+      "resolved": "https://registry.npmjs.org/@csstools/normalize.css/-/normalize.css-10.1.0.tgz",
+      "integrity": "sha512-ij4wRiunFfaJxjB0BdrYHIH8FxBJpOwNPhhAcunlmPdXudL1WQV1qoP9un6JsEBAgQH+7UXyyjh0g7jTxXK6tg=="
+    },
+    "@expo/vector-icons": {
+      "version": "10.1.0",
+      "resolved": "https://registry.npmjs.org/@expo/vector-icons/-/vector-icons-10.1.0.tgz",
+      "integrity": "sha512-6ikFslHORJgsb8wKeSgXYfZNNXsiTb3yQf5xaNyGUCYg4zqE7VchdhnH9yZKTI3Lu16jna52pHQZl+3jcOSAbQ==",
+      "requires": {
+        "lodash": "^4.17.4"
+      }
+    },
+    "@expo/websql": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/@expo/websql/-/websql-1.0.1.tgz",
+      "integrity": "sha1-//DPnBuqH3D54dZYt8OaQg2bEKk=",
+      "requires": {
+        "argsarray": "^0.0.1",
+        "immediate": "^3.2.2",
+        "noop-fn": "^1.0.0",
+        "pouchdb-collections": "^1.0.1",
+        "tiny-queue": "^0.2.1"
+      }
+    },
+    "@hapi/address": {
+      "version": "2.1.4",
+      "resolved": "https://registry.npmjs.org/@hapi/address/-/address-2.1.4.tgz",
+      "integrity": "sha512-QD1PhQk+s31P1ixsX0H0Suoupp3VMXzIVMSwobR3F3MSUO2YCV0B7xqLcUw/Bh8yuvd3LhpyqLQWTNcRmp6IdQ=="
+    },
+    "@hapi/bourne": {
+      "version": "1.3.2",
+      "resolved": "https://registry.npmjs.org/@hapi/bourne/-/bourne-1.3.2.tgz",
+      "integrity": "sha512-1dVNHT76Uu5N3eJNTYcvxee+jzX4Z9lfciqRRHCU27ihbUcYi+iSc2iml5Ke1LXe1SyJCLA0+14Jh4tXJgOppA=="
+    },
+    "@hapi/hoek": {
+      "version": "8.5.1",
+      "resolved": "https://registry.npmjs.org/@hapi/hoek/-/hoek-8.5.1.tgz",
+      "integrity": "sha512-yN7kbciD87WzLGc5539Tn0sApjyiGHAJgKvG9W8C7O+6c7qmoQMfVs0W4bX17eqz6C78QJqqFrtgdK5EWf6Qow=="
+    },
+    "@hapi/joi": {
+      "version": "15.1.1",
+      "resolved": "https://registry.npmjs.org/@hapi/joi/-/joi-15.1.1.tgz",
+      "integrity": "sha512-entf8ZMOK8sc+8YfeOlM8pCfg3b5+WZIKBfUaaJT8UsjAAPjartzxIYm3TIbjvA4u+u++KbcXD38k682nVHDAQ==",
+      "requires": {
+        "@hapi/address": "2.x.x",
+        "@hapi/bourne": "1.x.x",
+        "@hapi/hoek": "8.x.x",
+        "@hapi/topo": "3.x.x"
+      }
+    },
+    "@hapi/topo": {
+      "version": "3.1.6",
+      "resolved": "https://registry.npmjs.org/@hapi/topo/-/topo-3.1.6.tgz",
+      "integrity": "sha512-tAag0jEcjwH+P2quUfipd7liWCNX2F8NvYjQp2wtInsZxnMlypdw0FtAOLxtvvkO+GSRRbmNi8m/5y42PQJYCQ==",
+      "requires": {
+        "@hapi/hoek": "^8.3.0"
+      }
+    },
+    "@iarna/toml": {
+      "version": "2.2.5",
+      "resolved": "https://registry.npmjs.org/@iarna/toml/-/toml-2.2.5.tgz",
+      "integrity": "sha512-trnsAYxU3xnS1gPHPyU961coFyLkh4gAD/0zQ5mymY4yOZ+CYvsPqUbOFSw0aDM4y0tV7tiFxL/1XfXPNC6IPg==",
+      "dev": true
+    },
+    "@jest/console": {
+      "version": "24.9.0",
+      "resolved": "https://registry.npmjs.org/@jest/console/-/console-24.9.0.tgz",
+      "integrity": "sha512-Zuj6b8TnKXi3q4ymac8EQfc3ea/uhLeCGThFqXeC8H9/raaH8ARPUTdId+XyGd03Z4In0/VjD2OYFcBF09fNLQ==",
+      "requires": {
+        "@jest/source-map": "^24.9.0",
+        "chalk": "^2.0.1",
+        "slash": "^2.0.0"
+      }
+    },
+    "@jest/core": {
+      "version": "24.9.0",
+      "resolved": "https://registry.npmjs.org/@jest/core/-/core-24.9.0.tgz",
+      "integrity": "sha512-Fogg3s4wlAr1VX7q+rhV9RVnUv5tD7VuWfYy1+whMiWUrvl7U3QJSJyWcDio9Lq2prqYsZaeTv2Rz24pWGkJ2A==",
+      "requires": {
+        "@jest/console": "^24.7.1",
+        "@jest/reporters": "^24.9.0",
+        "@jest/test-result": "^24.9.0",
+        "@jest/transform": "^24.9.0",
+        "@jest/types": "^24.9.0",
+        "ansi-escapes": "^3.0.0",
+        "chalk": "^2.0.1",
+        "exit": "^0.1.2",
+        "graceful-fs": "^4.1.15",
+        "jest-changed-files": "^24.9.0",
+        "jest-config": "^24.9.0",
+        "jest-haste-map": "^24.9.0",
+        "jest-message-util": "^24.9.0",
+        "jest-regex-util": "^24.3.0",
+        "jest-resolve": "^24.9.0",
+        "jest-resolve-dependencies": "^24.9.0",
+        "jest-runner": "^24.9.0",
+        "jest-runtime": "^24.9.0",
+        "jest-snapshot": "^24.9.0",
+        "jest-util": "^24.9.0",
+        "jest-validate": "^24.9.0",
+        "jest-watcher": "^24.9.0",
+        "micromatch": "^3.1.10",
+        "p-each-series": "^1.0.0",
+        "realpath-native": "^1.1.0",
+        "rimraf": "^2.5.4",
+        "slash": "^2.0.0",
+        "strip-ansi": "^5.0.0"
+      },
+      "dependencies": {
+        "ansi-escapes": {
+          "version": "3.2.0",
+          "resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-3.2.0.tgz",
+          "integrity": "sha512-cBhpre4ma+U0T1oM5fXg7Dy1Jw7zzwv7lt/GoCpr+hDQJoYnKVPLL4dCvSEFMmQurOQvSrwT7SL/DAlhBI97RQ=="
+        }
+      }
+    },
+    "@jest/environment": {
+      "version": "24.9.0",
+      "resolved": "https://registry.npmjs.org/@jest/environment/-/environment-24.9.0.tgz",
+      "integrity": "sha512-5A1QluTPhvdIPFYnO3sZC3smkNeXPVELz7ikPbhUj0bQjB07EoE9qtLrem14ZUYWdVayYbsjVwIiL4WBIMV4aQ==",
+      "requires": {
+        "@jest/fake-timers": "^24.9.0",
+        "@jest/transform": "^24.9.0",
+        "@jest/types": "^24.9.0",
+        "jest-mock": "^24.9.0"
+      }
+    },
+    "@jest/fake-timers": {
+      "version": "24.9.0",
+      "resolved": "https://registry.npmjs.org/@jest/fake-timers/-/fake-timers-24.9.0.tgz",
+      "integrity": "sha512-eWQcNa2YSwzXWIMC5KufBh3oWRIijrQFROsIqt6v/NS9Io/gknw1jsAC9c+ih/RQX4A3O7SeWAhQeN0goKhT9A==",
+      "requires": {
+        "@jest/types": "^24.9.0",
+        "jest-message-util": "^24.9.0",
+        "jest-mock": "^24.9.0"
+      }
+    },
+    "@jest/reporters": {
+      "version": "24.9.0",
+      "resolved": "https://registry.npmjs.org/@jest/reporters/-/reporters-24.9.0.tgz",
+      "integrity": "sha512-mu4X0yjaHrffOsWmVLzitKmmmWSQ3GGuefgNscUSWNiUNcEOSEQk9k3pERKEQVBb0Cnn88+UESIsZEMH3o88Gw==",
+      "requires": {
+        "@jest/environment": "^24.9.0",
+        "@jest/test-result": "^24.9.0",
+        "@jest/transform": "^24.9.0",
+        "@jest/types": "^24.9.0",
+        "chalk": "^2.0.1",
+        "exit": "^0.1.2",
+        "glob": "^7.1.2",
+        "istanbul-lib-coverage": "^2.0.2",
+        "istanbul-lib-instrument": "^3.0.1",
+        "istanbul-lib-report": "^2.0.4",
+        "istanbul-lib-source-maps": "^3.0.1",
+        "istanbul-reports": "^2.2.6",
+        "jest-haste-map": "^24.9.0",
+        "jest-resolve": "^24.9.0",
+        "jest-runtime": "^24.9.0",
+        "jest-util": "^24.9.0",
+        "jest-worker": "^24.6.0",
+        "node-notifier": "^5.4.2",
+        "slash": "^2.0.0",
+        "source-map": "^0.6.0",
+        "string-length": "^2.0.0"
+      },
+      "dependencies": {
+        "source-map": {
+          "version": "0.6.1",
+          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
+          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="
+        }
+      }
+    },
+    "@jest/source-map": {
+      "version": "24.9.0",
+      "resolved": "https://registry.npmjs.org/@jest/source-map/-/source-map-24.9.0.tgz",
+      "integrity": "sha512-/Xw7xGlsZb4MJzNDgB7PW5crou5JqWiBQaz6xyPd3ArOg2nfn/PunV8+olXbbEZzNl591o5rWKE9BRDaFAuIBg==",
+      "requires": {
+        "callsites": "^3.0.0",
+        "graceful-fs": "^4.1.15",
+        "source-map": "^0.6.0"
+      },
+      "dependencies": {
+        "callsites": {
+          "version": "3.1.0",
+          "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",
+          "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ=="
+        },
+        "source-map": {
+          "version": "0.6.1",
+          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
+          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="
+        }
+      }
+    },
+    "@jest/test-result": {
+      "version": "24.9.0",
+      "resolved": "https://registry.npmjs.org/@jest/test-result/-/test-result-24.9.0.tgz",
+      "integrity": "sha512-XEFrHbBonBJ8dGp2JmF8kP/nQI/ImPpygKHwQ/SY+es59Z3L5PI4Qb9TQQMAEeYsThG1xF0k6tmG0tIKATNiiA==",
+      "requires": {
+        "@jest/console": "^24.9.0",
+        "@jest/types": "^24.9.0",
+        "@types/istanbul-lib-coverage": "^2.0.0"
+      }
+    },
+    "@jest/test-sequencer": {
+      "version": "24.9.0",
+      "resolved": "https://registry.npmjs.org/@jest/test-sequencer/-/test-sequencer-24.9.0.tgz",
+      "integrity": "sha512-6qqsU4o0kW1dvA95qfNog8v8gkRN9ph6Lz7r96IvZpHdNipP2cBcb07J1Z45mz/VIS01OHJ3pY8T5fUY38tg4A==",
+      "requires": {
+        "@jest/test-result": "^24.9.0",
+        "jest-haste-map": "^24.9.0",
+        "jest-runner": "^24.9.0",
+        "jest-runtime": "^24.9.0"
+      }
+    },
+    "@jest/transform": {
+      "version": "24.9.0",
+      "resolved": "https://registry.npmjs.org/@jest/transform/-/transform-24.9.0.tgz",
+      "integrity": "sha512-TcQUmyNRxV94S0QpMOnZl0++6RMiqpbH/ZMccFB/amku6Uwvyb1cjYX7xkp5nGNkbX4QPH/FcB6q1HBTHynLmQ==",
+      "requires": {
+        "@babel/core": "^7.1.0",
+        "@jest/types": "^24.9.0",
+        "babel-plugin-istanbul": "^5.1.0",
+        "chalk": "^2.0.1",
+        "convert-source-map": "^1.4.0",
+        "fast-json-stable-stringify": "^2.0.0",
+        "graceful-fs": "^4.1.15",
+        "jest-haste-map": "^24.9.0",
+        "jest-regex-util": "^24.9.0",
+        "jest-util": "^24.9.0",
+        "micromatch": "^3.1.10",
+        "pirates": "^4.0.1",
+        "realpath-native": "^1.1.0",
+        "slash": "^2.0.0",
+        "source-map": "^0.6.1",
+        "write-file-atomic": "2.4.1"
+      },
+      "dependencies": {
+        "source-map": {
+          "version": "0.6.1",
+          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
+          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="
+        }
+      }
+    },
+    "@jest/types": {
+      "version": "24.9.0",
+      "resolved": "https://registry.npmjs.org/@jest/types/-/types-24.9.0.tgz",
+      "integrity": "sha512-XKK7ze1apu5JWQ5eZjHITP66AX+QsLlbaJRBGYr8pNzwcAE2JVkwnf0yqjHTsDRcjR0mujy/NmZMXw5kl+kGBw==",
+      "requires": {
+        "@types/istanbul-lib-coverage": "^2.0.0",
+        "@types/istanbul-reports": "^1.1.1",
+        "@types/yargs": "^13.0.0"
+      }
+    },
+    "@mrmlnc/readdir-enhanced": {
+      "version": "2.2.1",
+      "resolved": "https://registry.npmjs.org/@mrmlnc/readdir-enhanced/-/readdir-enhanced-2.2.1.tgz",
+      "integrity": "sha512-bPHp6Ji8b41szTOcaP63VlnbbO5Ny6dwAATtY6JTjh5N2OLrb5Qk/Th5cRkRQhkWCt+EJsYrNB0MiL+Gpn6e3g==",
+      "requires": {
+        "call-me-maybe": "^1.0.1",
+        "glob-to-regexp": "^0.3.0"
+      }
+    },
+    "@nodelib/fs.stat": {
+      "version": "1.1.3",
+      "resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-1.1.3.tgz",
+      "integrity": "sha512-shAmDyaQC4H92APFoIaVDHCx5bStIocgvbwQyxPRrbUY20V1EYTbSDchWbuwlMG3V17cprZhA6+78JfB+3DTPw=="
+    },
+    "@parcel/fs": {
+      "version": "1.11.0",
+      "resolved": "https://registry.npmjs.org/@parcel/fs/-/fs-1.11.0.tgz",
+      "integrity": "sha512-86RyEqULbbVoeo8OLcv+LQ1Vq2PKBAvWTU9fCgALxuCTbbs5Ppcvll4Vr+Ko1AnmMzja/k++SzNAwJfeQXVlpA==",
+      "dev": true,
+      "requires": {
+        "@parcel/utils": "^1.11.0",
+        "mkdirp": "^0.5.1",
+        "rimraf": "^2.6.2"
+      }
+    },
+    "@parcel/logger": {
+      "version": "1.11.1",
+      "resolved": "https://registry.npmjs.org/@parcel/logger/-/logger-1.11.1.tgz",
+      "integrity": "sha512-9NF3M6UVeP2udOBDILuoEHd8VrF4vQqoWHEafymO1pfSoOMfxrSJZw1MfyAAIUN/IFp9qjcpDCUbDZB+ioVevA==",
+      "dev": true,
+      "requires": {
+        "@parcel/workers": "^1.11.0",
+        "chalk": "^2.1.0",
+        "grapheme-breaker": "^0.3.2",
+        "ora": "^2.1.0",
+        "strip-ansi": "^4.0.0"
+      },
+      "dependencies": {
+        "ansi-regex": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz",
+          "integrity": "sha1-7QMXwyIGT3lGbAKWa922Bas32Zg=",
+          "dev": true
+        },
+        "cli-cursor": {
+          "version": "2.1.0",
+          "resolved": "https://registry.npmjs.org/cli-cursor/-/cli-cursor-2.1.0.tgz",
+          "integrity": "sha1-s12sN2R5+sw+lHR9QdDQ9SOP/LU=",
+          "dev": true,
+          "requires": {
+            "restore-cursor": "^2.0.0"
+          }
+        },
+        "cli-spinners": {
+          "version": "1.3.1",
+          "resolved": "https://registry.npmjs.org/cli-spinners/-/cli-spinners-1.3.1.tgz",
+          "integrity": "sha512-1QL4544moEsDVH9T/l6Cemov/37iv1RtoKf7NJ04A60+4MREXNfx/QvavbH6QoGdsD4N4Mwy49cmaINR/o2mdg==",
+          "dev": true
+        },
+        "mimic-fn": {
+          "version": "1.2.0",
+          "resolved": "https://registry.npmjs.org/mimic-fn/-/mimic-fn-1.2.0.tgz",
+          "integrity": "sha512-jf84uxzwiuiIVKiOLpfYk7N46TSy8ubTonmneY9vrpHNAnp0QBt2BxWV9dO3/j+BoVAb+a5G6YDPW3M5HOdMWQ==",
+          "dev": true
+        },
+        "onetime": {
+          "version": "2.0.1",
+          "resolved": "https://registry.npmjs.org/onetime/-/onetime-2.0.1.tgz",
+          "integrity": "sha1-BnQoIw/WdEOyeUsiu6UotoZ5YtQ=",
+          "dev": true,
+          "requires": {
+            "mimic-fn": "^1.0.0"
+          }
+        },
+        "ora": {
+          "version": "2.1.0",
+          "resolved": "https://registry.npmjs.org/ora/-/ora-2.1.0.tgz",
+          "integrity": "sha512-hNNlAd3gfv/iPmsNxYoAPLvxg7HuPozww7fFonMZvL84tP6Ox5igfk5j/+a9rtJJwqMgKK+JgWsAQik5o0HTLA==",
+          "dev": true,
+          "requires": {
+            "chalk": "^2.3.1",
+            "cli-cursor": "^2.1.0",
+            "cli-spinners": "^1.1.0",
+            "log-symbols": "^2.2.0",
+            "strip-ansi": "^4.0.0",
+            "wcwidth": "^1.0.1"
+          }
+        },
+        "restore-cursor": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/restore-cursor/-/restore-cursor-2.0.0.tgz",
+          "integrity": "sha1-n37ih/gv0ybU/RYpI9YhKe7g368=",
+          "dev": true,
+          "requires": {
+            "onetime": "^2.0.0",
+            "signal-exit": "^3.0.2"
+          }
+        },
+        "strip-ansi": {
+          "version": "4.0.0",
+          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",
+          "integrity": "sha1-qEeQIusaw2iocTibY1JixQXuNo8=",
+          "dev": true,
+          "requires": {
+            "ansi-regex": "^3.0.0"
+          }
+        }
+      }
+    },
+    "@parcel/utils": {
+      "version": "1.11.0",
+      "resolved": "https://registry.npmjs.org/@parcel/utils/-/utils-1.11.0.tgz",
+      "integrity": "sha512-cA3p4jTlaMeOtAKR/6AadanOPvKeg8VwgnHhOyfi0yClD0TZS/hi9xu12w4EzA/8NtHu0g6o4RDfcNjqN8l1AQ==",
+      "dev": true
+    },
+    "@parcel/watcher": {
+      "version": "1.12.1",
+      "resolved": "https://registry.npmjs.org/@parcel/watcher/-/watcher-1.12.1.tgz",
+      "integrity": "sha512-od+uCtCxC/KoNQAIE1vWx1YTyKYY+7CTrxBJPRh3cDWw/C0tCtlBMVlrbplscGoEpt6B27KhJDCv82PBxOERNA==",
+      "dev": true,
+      "requires": {
+        "@parcel/utils": "^1.11.0",
+        "chokidar": "^2.1.5"
+      },
+      "dependencies": {
+        "binary-extensions": {
+          "version": "1.13.1",
+          "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-1.13.1.tgz",
+          "integrity": "sha512-Un7MIEDdUC5gNpcGDV97op1Ywk748MpHcFTHoYs6qnj1Z3j7I53VG3nwZhKzoBZmbdRNnb6WRdFlwl7tSDuZGw==",
+          "dev": true
+        },
+        "chokidar": {
+          "version": "2.1.8",
+          "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-2.1.8.tgz",
+          "integrity": "sha512-ZmZUazfOzf0Nve7duiCKD23PFSCs4JPoYyccjUFF3aQkQadqBhfzhjkwBH2mNOG9cTBwhamM37EIsIkZw3nRgg==",
+          "dev": true,
+          "requires": {
+            "anymatch": "^2.0.0",
+            "async-each": "^1.0.1",
+            "braces": "^2.3.2",
+            "fsevents": "^1.2.7",
+            "glob-parent": "^3.1.0",
+            "inherits": "^2.0.3",
+            "is-binary-path": "^1.0.0",
+            "is-glob": "^4.0.0",
+            "normalize-path": "^3.0.0",
+            "path-is-absolute": "^1.0.0",
+            "readdirp": "^2.2.1",
+            "upath": "^1.1.1"
+          }
+        },
+        "fsevents": {
+          "version": "1.2.13",
+          "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-1.2.13.tgz",
+          "integrity": "sha512-oWb1Z6mkHIskLzEJ/XWX0srkpkTQ7vaopMQkyaEIoq0fmtFVxOthb8cCxeT+p3ynTdkk/RZwbgG4brR5BeWECw==",
+          "dev": true,
+          "optional": true,
+          "requires": {
+            "bindings": "^1.5.0",
+            "nan": "^2.12.1"
+          }
+        },
+        "glob-parent": {
+          "version": "3.1.0",
+          "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-3.1.0.tgz",
+          "integrity": "sha1-nmr2KZ2NO9K9QEMIMr0RPfkGxa4=",
+          "dev": true,
+          "requires": {
+            "is-glob": "^3.1.0",
+            "path-dirname": "^1.0.0"
+          },
+          "dependencies": {
+            "is-glob": {
+              "version": "3.1.0",
+              "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-3.1.0.tgz",
+              "integrity": "sha1-e6WuJCF4BKxwcHuWkiVnSGzD6Eo=",
+              "dev": true,
+              "requires": {
+                "is-extglob": "^2.1.0"
+              }
+            }
+          }
+        },
+        "is-binary-path": {
+          "version": "1.0.1",
+          "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-1.0.1.tgz",
+          "integrity": "sha1-dfFmQrSA8YenEcgUFh/TpKdlWJg=",
+          "dev": true,
+          "requires": {
+            "binary-extensions": "^1.0.0"
+          }
+        },
+        "normalize-path": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",
+          "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==",
+          "dev": true
+        },
+        "readable-stream": {
+          "version": "2.3.7",
+          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
+          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
+          "dev": true,
+          "requires": {
+            "core-util-is": "~1.0.0",
+            "inherits": "~2.0.3",
+            "isarray": "~1.0.0",
+            "process-nextick-args": "~2.0.0",
+            "safe-buffer": "~5.1.1",
+            "string_decoder": "~1.1.1",
+            "util-deprecate": "~1.0.1"
+          }
+        },
+        "readdirp": {
+          "version": "2.2.1",
+          "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-2.2.1.tgz",
+          "integrity": "sha512-1JU/8q+VgFZyxwrJ+SVIOsh+KywWGpds3NTqikiKpDMZWScmAYyKIgqkO+ARvNWJfXeXR1zxz7aHF4u4CyH6vQ==",
+          "dev": true,
+          "requires": {
+            "graceful-fs": "^4.1.11",
+            "micromatch": "^3.1.10",
+            "readable-stream": "^2.0.2"
+          }
+        },
+        "string_decoder": {
+          "version": "1.1.1",
+          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
+          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
+          "dev": true,
+          "requires": {
+            "safe-buffer": "~5.1.0"
+          }
+        }
+      }
+    },
+    "@parcel/workers": {
+      "version": "1.11.0",
+      "resolved": "https://registry.npmjs.org/@parcel/workers/-/workers-1.11.0.tgz",
+      "integrity": "sha512-USSjRAAQYsZFlv43FUPdD+jEGML5/8oLF0rUzPQTtK4q9kvaXr49F5ZplyLz5lox78cLZ0TxN2bIDQ1xhOkulQ==",
+      "dev": true,
+      "requires": {
+        "@parcel/utils": "^1.11.0",
+        "physical-cpu-count": "^2.0.0"
+      }
+    },
+    "@react-native-community/cli": {
+      "version": "4.8.0",
+      "resolved": "https://registry.npmjs.org/@react-native-community/cli/-/cli-4.8.0.tgz",
+      "integrity": "sha512-z4qHfxtoTxKhQ0V9B02a82IxBkEBH5FfKnaJn9WL5Tf4SmE91ER8ZNVEWNr97S4TCFVYDrpM7iKnrYpNi/ciYQ==",
+      "requires": {
+        "@hapi/joi": "^15.0.3",
+        "@react-native-community/cli-debugger-ui": "^4.8.0",
+        "@react-native-community/cli-tools": "^4.8.0",
+        "@react-native-community/cli-types": "^4.8.0",
+        "chalk": "^3.0.0",
+        "command-exists": "^1.2.8",
+        "commander": "^2.19.0",
+        "compression": "^1.7.1",
+        "connect": "^3.6.5",
+        "cosmiconfig": "^5.1.0",
+        "deepmerge": "^3.2.0",
+        "envinfo": "^7.1.0",
+        "errorhandler": "^1.5.0",
+        "execa": "^1.0.0",
+        "find-up": "^4.1.0",
+        "fs-extra": "^8.1.0",
+        "glob": "^7.1.3",
+        "graceful-fs": "^4.1.3",
+        "inquirer": "^3.0.6",
+        "leven": "^3.1.0",
+        "lodash": "^4.17.15",
+        "metro": "^0.58.0",
+        "metro-config": "^0.58.0",
+        "metro-core": "^0.58.0",
+        "metro-react-native-babel-transformer": "^0.58.0",
+        "minimist": "^1.2.0",
+        "mkdirp": "^0.5.1",
+        "node-stream-zip": "^1.9.1",
+        "open": "^6.2.0",
+        "ora": "^3.4.0",
+        "pretty-format": "^25.2.0",
+        "semver": "^6.3.0",
+        "serve-static": "^1.13.1",
+        "shell-quote": "1.6.1",
+        "strip-ansi": "^5.2.0",
+        "sudo-prompt": "^9.0.0",
+        "wcwidth": "^1.0.1",
+        "ws": "^1.1.0"
+      },
+      "dependencies": {
+        "@jest/types": {
+          "version": "25.5.0",
+          "resolved": "https://registry.npmjs.org/@jest/types/-/types-25.5.0.tgz",
+          "integrity": "sha512-OXD0RgQ86Tu3MazKo8bnrkDRaDXXMGUqd+kTtLtK1Zb7CRzQcaSRPPPV37SvYTdevXEBVxe0HXylEjs8ibkmCw==",
+          "requires": {
+            "@types/istanbul-lib-coverage": "^2.0.0",
+            "@types/istanbul-reports": "^1.1.1",
+            "@types/yargs": "^15.0.0",
+            "chalk": "^3.0.0"
+          }
+        },
+        "@types/yargs": {
+          "version": "15.0.4",
+          "resolved": "https://registry.npmjs.org/@types/yargs/-/yargs-15.0.4.tgz",
+          "integrity": "sha512-9T1auFmbPZoxHz0enUFlUuKRy3it01R+hlggyVUMtnCTQRunsQYifnSGb8hET4Xo8yiC0o0r1paW3ud5+rbURg==",
+          "requires": {
+            "@types/yargs-parser": "*"
+          }
+        },
+        "ansi-escapes": {
+          "version": "3.2.0",
+          "resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-3.2.0.tgz",
+          "integrity": "sha512-cBhpre4ma+U0T1oM5fXg7Dy1Jw7zzwv7lt/GoCpr+hDQJoYnKVPLL4dCvSEFMmQurOQvSrwT7SL/DAlhBI97RQ=="
+        },
+        "ansi-regex": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz",
+          "integrity": "sha1-7QMXwyIGT3lGbAKWa922Bas32Zg="
+        },
+        "ansi-styles": {
+          "version": "4.2.1",
+          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.2.1.tgz",
+          "integrity": "sha512-9VGjrMsG1vePxcSweQsN20KY/c4zN0h9fLjqAbwbPfahM3t+NL+M9HC8xeXG2I8pX5NoamTGNuomEUFI7fcUjA==",
+          "requires": {
+            "@types/color-name": "^1.1.1",
+            "color-convert": "^2.0.1"
+          }
+        },
+        "chalk": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/chalk/-/chalk-3.0.0.tgz",
+          "integrity": "sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==",
+          "requires": {
+            "ansi-styles": "^4.1.0",
+            "supports-color": "^7.1.0"
+          }
+        },
+        "chardet": {
+          "version": "0.4.2",
+          "resolved": "https://registry.npmjs.org/chardet/-/chardet-0.4.2.tgz",
+          "integrity": "sha1-tUc7M9yXxCTl2Y3IfVXU2KKci/I="
+        },
+        "cli-cursor": {
+          "version": "2.1.0",
+          "resolved": "https://registry.npmjs.org/cli-cursor/-/cli-cursor-2.1.0.tgz",
+          "integrity": "sha1-s12sN2R5+sw+lHR9QdDQ9SOP/LU=",
+          "requires": {
+            "restore-cursor": "^2.0.0"
+          }
+        },
+        "color-convert": {
+          "version": "2.0.1",
+          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
+          "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
+          "requires": {
+            "color-name": "~1.1.4"
+          }
+        },
+        "color-name": {
+          "version": "1.1.4",
+          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
+          "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA=="
+        },
+        "external-editor": {
+          "version": "2.2.0",
+          "resolved": "https://registry.npmjs.org/external-editor/-/external-editor-2.2.0.tgz",
+          "integrity": "sha512-bSn6gvGxKt+b7+6TKEv1ZycHleA7aHhRHyAqJyp5pbUFuYYNIzpZnQDk7AsYckyWdEnTeAnay0aCy2aV6iTk9A==",
+          "requires": {
+            "chardet": "^0.4.0",
+            "iconv-lite": "^0.4.17",
+            "tmp": "^0.0.33"
+          }
+        },
+        "figures": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/figures/-/figures-2.0.0.tgz",
+          "integrity": "sha1-OrGi0qYsi/tDGgyUy3l6L84nyWI=",
+          "requires": {
+            "escape-string-regexp": "^1.0.5"
+          }
+        },
+        "find-up": {
+          "version": "4.1.0",
+          "resolved": "https://registry.npmjs.org/find-up/-/find-up-4.1.0.tgz",
+          "integrity": "sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==",
+          "requires": {
+            "locate-path": "^5.0.0",
+            "path-exists": "^4.0.0"
+          }
+        },
+        "has-flag": {
+          "version": "4.0.0",
+          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
+          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ=="
+        },
+        "inquirer": {
+          "version": "3.3.0",
+          "resolved": "https://registry.npmjs.org/inquirer/-/inquirer-3.3.0.tgz",
+          "integrity": "sha512-h+xtnyk4EwKvFWHrUYsWErEVR+igKtLdchu+o0Z1RL7VU/jVMFbYir2bp6bAj8efFNxWqHX0dIss6fJQ+/+qeQ==",
+          "requires": {
+            "ansi-escapes": "^3.0.0",
+            "chalk": "^2.0.0",
+            "cli-cursor": "^2.1.0",
+            "cli-width": "^2.0.0",
+            "external-editor": "^2.0.4",
+            "figures": "^2.0.0",
+            "lodash": "^4.3.0",
+            "mute-stream": "0.0.7",
+            "run-async": "^2.2.0",
+            "rx-lite": "^4.0.8",
+            "rx-lite-aggregates": "^4.0.8",
+            "string-width": "^2.1.0",
+            "strip-ansi": "^4.0.0",
+            "through": "^2.3.6"
+          },
+          "dependencies": {
+            "ansi-styles": {
+              "version": "3.2.1",
+              "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
+              "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
+              "requires": {
+                "color-convert": "^1.9.0"
+              }
+            },
+            "chalk": {
+              "version": "2.4.2",
+              "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
+              "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
+              "requires": {
+                "ansi-styles": "^3.2.1",
+                "escape-string-regexp": "^1.0.5",
+                "supports-color": "^5.3.0"
+              }
+            },
+            "color-convert": {
+              "version": "1.9.3",
+              "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
+              "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
+              "requires": {
+                "color-name": "1.1.3"
+              }
+            },
+            "color-name": {
+              "version": "1.1.3",
+              "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
+              "integrity": "sha1-p9BVi9icQveV3UIyj3QIMcpTvCU="
+            },
+            "has-flag": {
+              "version": "3.0.0",
+              "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
+              "integrity": "sha1-tdRU3CGZriJWmfNGfloH87lVuv0="
+            },
+            "strip-ansi": {
+              "version": "4.0.0",
+              "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",
+              "integrity": "sha1-qEeQIusaw2iocTibY1JixQXuNo8=",
+              "requires": {
+                "ansi-regex": "^3.0.0"
+              }
+            },
+            "supports-color": {
+              "version": "5.5.0",
+              "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
+              "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
+              "requires": {
+                "has-flag": "^3.0.0"
+              }
+            }
+          }
+        },
+        "is-fullwidth-code-point": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
+          "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8="
+        },
+        "locate-path": {
+          "version": "5.0.0",
+          "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-5.0.0.tgz",
+          "integrity": "sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==",
+          "requires": {
+            "p-locate": "^4.1.0"
+          }
+        },
+        "mimic-fn": {
+          "version": "1.2.0",
+          "resolved": "https://registry.npmjs.org/mimic-fn/-/mimic-fn-1.2.0.tgz",
+          "integrity": "sha512-jf84uxzwiuiIVKiOLpfYk7N46TSy8ubTonmneY9vrpHNAnp0QBt2BxWV9dO3/j+BoVAb+a5G6YDPW3M5HOdMWQ=="
+        },
+        "mute-stream": {
+          "version": "0.0.7",
+          "resolved": "https://registry.npmjs.org/mute-stream/-/mute-stream-0.0.7.tgz",
+          "integrity": "sha1-MHXOk7whuPq0PhvE2n6BFe0ee6s="
+        },
+        "onetime": {
+          "version": "2.0.1",
+          "resolved": "https://registry.npmjs.org/onetime/-/onetime-2.0.1.tgz",
+          "integrity": "sha1-BnQoIw/WdEOyeUsiu6UotoZ5YtQ=",
+          "requires": {
+            "mimic-fn": "^1.0.0"
+          }
+        },
+        "open": {
+          "version": "6.4.0",
+          "resolved": "https://registry.npmjs.org/open/-/open-6.4.0.tgz",
+          "integrity": "sha512-IFenVPgF70fSm1keSd2iDBIDIBZkroLeuffXq+wKTzTJlBpesFWojV9lb8mzOfaAzM1sr7HQHuO0vtV0zYekGg==",
+          "requires": {
+            "is-wsl": "^1.1.0"
+          }
+        },
+        "p-limit": {
+          "version": "2.3.0",
+          "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz",
+          "integrity": "sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==",
+          "requires": {
+            "p-try": "^2.0.0"
+          }
+        },
+        "p-locate": {
+          "version": "4.1.0",
+          "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-4.1.0.tgz",
+          "integrity": "sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==",
+          "requires": {
+            "p-limit": "^2.2.0"
+          }
+        },
+        "p-try": {
+          "version": "2.2.0",
+          "resolved": "https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz",
+          "integrity": "sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ=="
+        },
+        "path-exists": {
+          "version": "4.0.0",
+          "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
+          "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w=="
+        },
+        "pretty-format": {
+          "version": "25.5.0",
+          "resolved": "https://registry.npmjs.org/pretty-format/-/pretty-format-25.5.0.tgz",
+          "integrity": "sha512-kbo/kq2LQ/A/is0PQwsEHM7Ca6//bGPPvU6UnsdDRSKTWxT/ru/xb88v4BJf6a69H+uTytOEsTusT9ksd/1iWQ==",
+          "requires": {
+            "@jest/types": "^25.5.0",
+            "ansi-regex": "^5.0.0",
+            "ansi-styles": "^4.0.0",
+            "react-is": "^16.12.0"
+          },
+          "dependencies": {
+            "ansi-regex": {
+              "version": "5.0.0",
+              "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.0.tgz",
+              "integrity": "sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f/lg=="
+            }
+          }
+        },
+        "restore-cursor": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/restore-cursor/-/restore-cursor-2.0.0.tgz",
+          "integrity": "sha1-n37ih/gv0ybU/RYpI9YhKe7g368=",
+          "requires": {
+            "onetime": "^2.0.0",
+            "signal-exit": "^3.0.2"
+          }
+        },
+        "shell-quote": {
+          "version": "1.6.1",
+          "resolved": "https://registry.npmjs.org/shell-quote/-/shell-quote-1.6.1.tgz",
+          "integrity": "sha1-9HgZSczkAmlxJ0MOo7PFR29IF2c=",
+          "requires": {
+            "array-filter": "~0.0.0",
+            "array-map": "~0.0.0",
+            "array-reduce": "~0.0.0",
+            "jsonify": "~0.0.0"
+          }
+        },
+        "string-width": {
+          "version": "2.1.1",
+          "resolved": "https://registry.npmjs.org/string-width/-/string-width-2.1.1.tgz",
+          "integrity": "sha512-nOqH59deCq9SRHlxq1Aw85Jnt4w6KvLKqWVik6oA9ZklXLNIOlqg4F2yrT1MVaTjAqvVwdfeZ7w7aCvJD7ugkw==",
+          "requires": {
+            "is-fullwidth-code-point": "^2.0.0",
+            "strip-ansi": "^4.0.0"
+          },
+          "dependencies": {
+            "strip-ansi": {
+              "version": "4.0.0",
+              "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",
+              "integrity": "sha1-qEeQIusaw2iocTibY1JixQXuNo8=",
+              "requires": {
+                "ansi-regex": "^3.0.0"
+              }
+            }
+          }
+        },
+        "supports-color": {
+          "version": "7.1.0",
+          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.1.0.tgz",
+          "integrity": "sha512-oRSIpR8pxT1Wr2FquTNnGet79b3BWljqOuoW/h4oBhxJ/HUbX5nX6JSruTkvXDCFMwDPvsaTTbvMLKZWSy0R5g==",
+          "requires": {
+            "has-flag": "^4.0.0"
+          }
+        },
+        "ws": {
+          "version": "1.1.5",
+          "resolved": "https://registry.npmjs.org/ws/-/ws-1.1.5.tgz",
+          "integrity": "sha512-o3KqipXNUdS7wpQzBHSe180lBGO60SoK0yVo3CYJgb2MkobuWuBX6dhkYP5ORCLd55y+SaflMOV5fqAB53ux4w==",
+          "requires": {
+            "options": ">=0.0.5",
+            "ultron": "1.0.x"
+          }
+        }
+      }
+    },
+    "@react-native-community/cli-debugger-ui": {
+      "version": "4.8.0",
+      "resolved": "https://registry.npmjs.org/@react-native-community/cli-debugger-ui/-/cli-debugger-ui-4.8.0.tgz",
+      "integrity": "sha512-Eq9lHINDXiBAwmFRCMN8jeKk6FTDnTxAfITkjPUNNTj7q3K+fH/oyOMJjxbIZbryIJY6g+g/ln6vsS2WzISNYQ==",
+      "requires": {
+        "serve-static": "^1.13.1"
+      }
+    },
+    "@react-native-community/cli-tools": {
+      "version": "4.8.0",
+      "resolved": "https://registry.npmjs.org/@react-native-community/cli-tools/-/cli-tools-4.8.0.tgz",
+      "integrity": "sha512-voXGruhYyyhCbEYM2uZ54dMZcBgXFFcQxVK3nLwJDG9nSQGObZInj9Zf76ix5qGnvKKGWIGUcbmRhyLpAzTXuQ==",
+      "requires": {
+        "chalk": "^3.0.0",
+        "lodash": "^4.17.15",
+        "mime": "^2.4.1",
+        "node-fetch": "^2.6.0",
+        "open": "^6.2.0",
+        "shell-quote": "1.6.1"
+      },
+      "dependencies": {
+        "ansi-styles": {
+          "version": "4.2.1",
+          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.2.1.tgz",
+          "integrity": "sha512-9VGjrMsG1vePxcSweQsN20KY/c4zN0h9fLjqAbwbPfahM3t+NL+M9HC8xeXG2I8pX5NoamTGNuomEUFI7fcUjA==",
+          "requires": {
+            "@types/color-name": "^1.1.1",
+            "color-convert": "^2.0.1"
+          }
+        },
+        "chalk": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/chalk/-/chalk-3.0.0.tgz",
+          "integrity": "sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==",
+          "requires": {
+            "ansi-styles": "^4.1.0",
+            "supports-color": "^7.1.0"
+          }
+        },
+        "color-convert": {
+          "version": "2.0.1",
+          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
+          "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
+          "requires": {
+            "color-name": "~1.1.4"
+          }
+        },
+        "color-name": {
+          "version": "1.1.4",
+          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
+          "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA=="
+        },
+        "has-flag": {
+          "version": "4.0.0",
+          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
+          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ=="
+        },
+        "node-fetch": {
+          "version": "2.6.0",
+          "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.6.0.tgz",
+          "integrity": "sha512-8dG4H5ujfvFiqDmVu9fQ5bOHUC15JMjMY/Zumv26oOvvVJjM67KF8koCWIabKQ1GJIa9r2mMZscBq/TbdOcmNA=="
+        },
+        "open": {
+          "version": "6.4.0",
+          "resolved": "https://registry.npmjs.org/open/-/open-6.4.0.tgz",
+          "integrity": "sha512-IFenVPgF70fSm1keSd2iDBIDIBZkroLeuffXq+wKTzTJlBpesFWojV9lb8mzOfaAzM1sr7HQHuO0vtV0zYekGg==",
+          "requires": {
+            "is-wsl": "^1.1.0"
+          }
+        },
+        "shell-quote": {
+          "version": "1.6.1",
+          "resolved": "https://registry.npmjs.org/shell-quote/-/shell-quote-1.6.1.tgz",
+          "integrity": "sha1-9HgZSczkAmlxJ0MOo7PFR29IF2c=",
+          "requires": {
+            "array-filter": "~0.0.0",
+            "array-map": "~0.0.0",
+            "array-reduce": "~0.0.0",
+            "jsonify": "~0.0.0"
+          }
+        },
+        "supports-color": {
+          "version": "7.1.0",
+          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.1.0.tgz",
+          "integrity": "sha512-oRSIpR8pxT1Wr2FquTNnGet79b3BWljqOuoW/h4oBhxJ/HUbX5nX6JSruTkvXDCFMwDPvsaTTbvMLKZWSy0R5g==",
+          "requires": {
+            "has-flag": "^4.0.0"
+          }
+        }
+      }
+    },
+    "@react-native-community/cli-types": {
+      "version": "4.8.0",
+      "resolved": "https://registry.npmjs.org/@react-native-community/cli-types/-/cli-types-4.8.0.tgz",
+      "integrity": "sha512-gkjQdmzskQJdddVNRBATa7rWMbamD2j4B7w9shbg20tIBYoh/tgHdkgiLqZQSfBKa8HqrAkeCJTYaT1oV4oReQ=="
+    },
+    "@react-native-community/masked-view": {
+      "version": "0.1.10",
+      "resolved": "https://registry.npmjs.org/@react-native-community/masked-view/-/masked-view-0.1.10.tgz",
+      "integrity": "sha512-rk4sWFsmtOw8oyx8SD3KSvawwaK7gRBSEIy2TAwURyGt+3TizssXP1r8nx3zY+R7v2vYYHXZ+k2/GULAT/bcaQ=="
+    },
+    "@react-navigation/core": {
+      "version": "3.7.6",
+      "resolved": "https://registry.npmjs.org/@react-navigation/core/-/core-3.7.6.tgz",
+      "integrity": "sha512-loYFIn0Boy7C+vYxwcqsBVRFRO1EizZJErdutE6/3Jw6dbzz3Bnzupbw5hckZNB16GckacMwGoepZNIK51IIcg==",
+      "requires": {
+        "hoist-non-react-statics": "^3.3.2",
+        "path-to-regexp": "^1.8.0",
+        "query-string": "^6.11.1",
+        "react-is": "^16.13.0"
+      },
+      "dependencies": {
+        "isarray": {
+          "version": "0.0.1",
+          "resolved": "https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz",
+          "integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8="
+        },
+        "path-to-regexp": {
+          "version": "1.8.0",
+          "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-1.8.0.tgz",
+          "integrity": "sha512-n43JRhlUKUAlibEJhPeir1ncUID16QnEjNpwzNdO3Lm4ywrBpBZ5oLD0I6br9evr1Y9JTqwRtAh7JLoOzAQdVA==",
+          "requires": {
+            "isarray": "0.0.1"
+          }
+        },
+        "query-string": {
+          "version": "6.12.1",
+          "resolved": "https://registry.npmjs.org/query-string/-/query-string-6.12.1.tgz",
+          "integrity": "sha512-OHj+zzfRMyj3rmo/6G8a5Ifvw3AleL/EbcHMD27YA31Q+cO5lfmQxECkImuNVjcskLcvBRVHNAB3w6udMs1eAA==",
+          "requires": {
+            "decode-uri-component": "^0.2.0",
+            "split-on-first": "^1.0.0",
+            "strict-uri-encode": "^2.0.0"
+          }
+        },
+        "strict-uri-encode": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/strict-uri-encode/-/strict-uri-encode-2.0.0.tgz",
+          "integrity": "sha1-ucczDHBChi9rFC3CdLvMWGbONUY="
+        }
+      }
+    },
+    "@react-navigation/native": {
+      "version": "3.7.13",
+      "resolved": "https://registry.npmjs.org/@react-navigation/native/-/native-3.7.13.tgz",
+      "integrity": "sha512-M6v1bLz0WbQmlPKF3WKBEZDGQ3CaqmzQULGs7XWtQe+f03VEbeX+kCkr/J6hw+rsgAy9Nwr4mGCPPQhF2pa7Yw==",
+      "requires": {
+        "hoist-non-react-statics": "^3.3.2",
+        "react-native-safe-area-view": "^0.14.9"
+      }
+    },
+    "@sheerun/mutationobserver-shim": {
+      "version": "0.3.3",
+      "resolved": "https://registry.npmjs.org/@sheerun/mutationobserver-shim/-/mutationobserver-shim-0.3.3.tgz",
+      "integrity": "sha512-DetpxZw1fzPD5xUBrIAoplLChO2VB8DlL5Gg+I1IR9b2wPqYIca2WSUxL5g1vLeR4MsQq1NeWriXAVffV+U1Fw=="
+    },
+    "@svgr/babel-plugin-add-jsx-attribute": {
+      "version": "4.2.0",
+      "resolved": "https://registry.npmjs.org/@svgr/babel-plugin-add-jsx-attribute/-/babel-plugin-add-jsx-attribute-4.2.0.tgz",
+      "integrity": "sha512-j7KnilGyZzYr/jhcrSYS3FGWMZVaqyCG0vzMCwzvei0coIkczuYMcniK07nI0aHJINciujjH11T72ICW5eL5Ig=="
+    },
+    "@svgr/babel-plugin-remove-jsx-attribute": {
+      "version": "4.2.0",
+      "resolved": "https://registry.npmjs.org/@svgr/babel-plugin-remove-jsx-attribute/-/babel-plugin-remove-jsx-attribute-4.2.0.tgz",
+      "integrity": "sha512-3XHLtJ+HbRCH4n28S7y/yZoEQnRpl0tvTZQsHqvaeNXPra+6vE5tbRliH3ox1yZYPCxrlqaJT/Mg+75GpDKlvQ=="
+    },
+    "@svgr/babel-plugin-remove-jsx-empty-expression": {
+      "version": "4.2.0",
+      "resolved": "https://registry.npmjs.org/@svgr/babel-plugin-remove-jsx-empty-expression/-/babel-plugin-remove-jsx-empty-expression-4.2.0.tgz",
+      "integrity": "sha512-yTr2iLdf6oEuUE9MsRdvt0NmdpMBAkgK8Bjhl6epb+eQWk6abBaX3d65UZ3E3FWaOwePyUgNyNCMVG61gGCQ7w=="
+    },
+    "@svgr/babel-plugin-replace-jsx-attribute-value": {
+      "version": "4.2.0",
+      "resolved": "https://registry.npmjs.org/@svgr/babel-plugin-replace-jsx-attribute-value/-/babel-plugin-replace-jsx-attribute-value-4.2.0.tgz",
+      "integrity": "sha512-U9m870Kqm0ko8beHawRXLGLvSi/ZMrl89gJ5BNcT452fAjtF2p4uRzXkdzvGJJJYBgx7BmqlDjBN/eCp5AAX2w=="
+    },
+    "@svgr/babel-plugin-svg-dynamic-title": {
+      "version": "4.3.3",
+      "resolved": "https://registry.npmjs.org/@svgr/babel-plugin-svg-dynamic-title/-/babel-plugin-svg-dynamic-title-4.3.3.tgz",
+      "integrity": "sha512-w3Be6xUNdwgParsvxkkeZb545VhXEwjGMwExMVBIdPQJeyMQHqm9Msnb2a1teHBqUYL66qtwfhNkbj1iarCG7w=="
+    },
+    "@svgr/babel-plugin-svg-em-dimensions": {
+      "version": "4.2.0",
+      "resolved": "https://registry.npmjs.org/@svgr/babel-plugin-svg-em-dimensions/-/babel-plugin-svg-em-dimensions-4.2.0.tgz",
+      "integrity": "sha512-C0Uy+BHolCHGOZ8Dnr1zXy/KgpBOkEUYY9kI/HseHVPeMbluaX3CijJr7D4C5uR8zrc1T64nnq/k63ydQuGt4w=="
+    },
+    "@svgr/babel-plugin-transform-react-native-svg": {
+      "version": "4.2.0",
+      "resolved": "https://registry.npmjs.org/@svgr/babel-plugin-transform-react-native-svg/-/babel-plugin-transform-react-native-svg-4.2.0.tgz",
+      "integrity": "sha512-7YvynOpZDpCOUoIVlaaOUU87J4Z6RdD6spYN4eUb5tfPoKGSF9OG2NuhgYnq4jSkAxcpMaXWPf1cePkzmqTPNw=="
+    },
+    "@svgr/babel-plugin-transform-svg-component": {
+      "version": "4.2.0",
+      "resolved": "https://registry.npmjs.org/@svgr/babel-plugin-transform-svg-component/-/babel-plugin-transform-svg-component-4.2.0.tgz",
+      "integrity": "sha512-hYfYuZhQPCBVotABsXKSCfel2slf/yvJY8heTVX1PCTaq/IgASq1IyxPPKJ0chWREEKewIU/JMSsIGBtK1KKxw=="
+    },
+    "@svgr/babel-preset": {
+      "version": "4.3.3",
+      "resolved": "https://registry.npmjs.org/@svgr/babel-preset/-/babel-preset-4.3.3.tgz",
+      "integrity": "sha512-6PG80tdz4eAlYUN3g5GZiUjg2FMcp+Wn6rtnz5WJG9ITGEF1pmFdzq02597Hn0OmnQuCVaBYQE1OVFAnwOl+0A==",
+      "requires": {
+        "@svgr/babel-plugin-add-jsx-attribute": "^4.2.0",
+        "@svgr/babel-plugin-remove-jsx-attribute": "^4.2.0",
+        "@svgr/babel-plugin-remove-jsx-empty-expression": "^4.2.0",
+        "@svgr/babel-plugin-replace-jsx-attribute-value": "^4.2.0",
+        "@svgr/babel-plugin-svg-dynamic-title": "^4.3.3",
+        "@svgr/babel-plugin-svg-em-dimensions": "^4.2.0",
+        "@svgr/babel-plugin-transform-react-native-svg": "^4.2.0",
+        "@svgr/babel-plugin-transform-svg-component": "^4.2.0"
+      }
+    },
+    "@svgr/core": {
+      "version": "4.3.3",
+      "resolved": "https://registry.npmjs.org/@svgr/core/-/core-4.3.3.tgz",
+      "integrity": "sha512-qNuGF1QON1626UCaZamWt5yedpgOytvLj5BQZe2j1k1B8DUG4OyugZyfEwBeXozCUwhLEpsrgPrE+eCu4fY17w==",
+      "requires": {
+        "@svgr/plugin-jsx": "^4.3.3",
+        "camelcase": "^5.3.1",
+        "cosmiconfig": "^5.2.1"
+      }
+    },
+    "@svgr/hast-util-to-babel-ast": {
+      "version": "4.3.2",
+      "resolved": "https://registry.npmjs.org/@svgr/hast-util-to-babel-ast/-/hast-util-to-babel-ast-4.3.2.tgz",
+      "integrity": "sha512-JioXclZGhFIDL3ddn4Kiq8qEqYM2PyDKV0aYno8+IXTLuYt6TOgHUbUAAFvqtb0Xn37NwP0BTHglejFoYr8RZg==",
+      "requires": {
+        "@babel/types": "^7.4.4"
+      }
+    },
+    "@svgr/plugin-jsx": {
+      "version": "4.3.3",
+      "resolved": "https://registry.npmjs.org/@svgr/plugin-jsx/-/plugin-jsx-4.3.3.tgz",
+      "integrity": "sha512-cLOCSpNWQnDB1/v+SUENHH7a0XY09bfuMKdq9+gYvtuwzC2rU4I0wKGFEp1i24holdQdwodCtDQdFtJiTCWc+w==",
+      "requires": {
+        "@babel/core": "^7.4.5",
+        "@svgr/babel-preset": "^4.3.3",
+        "@svgr/hast-util-to-babel-ast": "^4.3.2",
+        "svg-parser": "^2.0.0"
+      }
+    },
+    "@svgr/plugin-svgo": {
+      "version": "4.3.1",
+      "resolved": "https://registry.npmjs.org/@svgr/plugin-svgo/-/plugin-svgo-4.3.1.tgz",
+      "integrity": "sha512-PrMtEDUWjX3Ea65JsVCwTIXuSqa3CG9px+DluF1/eo9mlDrgrtFE7NE/DjdhjJgSM9wenlVBzkzneSIUgfUI/w==",
+      "requires": {
+        "cosmiconfig": "^5.2.1",
+        "merge-deep": "^3.0.2",
+        "svgo": "^1.2.2"
+      }
+    },
+    "@svgr/webpack": {
+      "version": "4.3.3",
+      "resolved": "https://registry.npmjs.org/@svgr/webpack/-/webpack-4.3.3.tgz",
+      "integrity": "sha512-bjnWolZ6KVsHhgyCoYRFmbd26p8XVbulCzSG53BDQqAr+JOAderYK7CuYrB3bDjHJuF6LJ7Wrr42+goLRV9qIg==",
+      "requires": {
+        "@babel/core": "^7.4.5",
+        "@babel/plugin-transform-react-constant-elements": "^7.0.0",
+        "@babel/preset-env": "^7.4.5",
+        "@babel/preset-react": "^7.0.0",
+        "@svgr/core": "^4.3.3",
+        "@svgr/plugin-jsx": "^4.3.3",
+        "@svgr/plugin-svgo": "^4.3.1",
+        "loader-utils": "^1.2.3"
+      }
+    },
+    "@testing-library/dom": {
+      "version": "6.16.0",
+      "resolved": "https://registry.npmjs.org/@testing-library/dom/-/dom-6.16.0.tgz",
+      "integrity": "sha512-lBD88ssxqEfz0wFL6MeUyyWZfV/2cjEZZV3YRpb2IoJRej/4f1jB0TzqIOznTpfR1r34CNesrubxwIlAQ8zgPA==",
+      "requires": {
+        "@babel/runtime": "^7.8.4",
+        "@sheerun/mutationobserver-shim": "^0.3.2",
+        "@types/testing-library__dom": "^6.12.1",
+        "aria-query": "^4.0.2",
+        "dom-accessibility-api": "^0.3.0",
+        "pretty-format": "^25.1.0",
+        "wait-for-expect": "^3.0.2"
+      },
+      "dependencies": {
+        "@jest/types": {
+          "version": "25.5.0",
+          "resolved": "https://registry.npmjs.org/@jest/types/-/types-25.5.0.tgz",
+          "integrity": "sha512-OXD0RgQ86Tu3MazKo8bnrkDRaDXXMGUqd+kTtLtK1Zb7CRzQcaSRPPPV37SvYTdevXEBVxe0HXylEjs8ibkmCw==",
+          "requires": {
+            "@types/istanbul-lib-coverage": "^2.0.0",
+            "@types/istanbul-reports": "^1.1.1",
+            "@types/yargs": "^15.0.0",
+            "chalk": "^3.0.0"
+          }
+        },
+        "@types/yargs": {
+          "version": "15.0.4",
+          "resolved": "https://registry.npmjs.org/@types/yargs/-/yargs-15.0.4.tgz",
+          "integrity": "sha512-9T1auFmbPZoxHz0enUFlUuKRy3it01R+hlggyVUMtnCTQRunsQYifnSGb8hET4Xo8yiC0o0r1paW3ud5+rbURg==",
+          "requires": {
+            "@types/yargs-parser": "*"
+          }
+        },
+        "ansi-styles": {
+          "version": "4.2.1",
+          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.2.1.tgz",
+          "integrity": "sha512-9VGjrMsG1vePxcSweQsN20KY/c4zN0h9fLjqAbwbPfahM3t+NL+M9HC8xeXG2I8pX5NoamTGNuomEUFI7fcUjA==",
+          "requires": {
+            "@types/color-name": "^1.1.1",
+            "color-convert": "^2.0.1"
+          }
+        },
+        "aria-query": {
+          "version": "4.0.2",
+          "resolved": "https://registry.npmjs.org/aria-query/-/aria-query-4.0.2.tgz",
+          "integrity": "sha512-S1G1V790fTaigUSM/Gd0NngzEfiMy9uTUfMyHhKhVyy4cH5O/eTuR01ydhGL0z4Za1PXFTRGH3qL8VhUQuEO5w==",
+          "requires": {
+            "@babel/runtime": "^7.7.4",
+            "@babel/runtime-corejs3": "^7.7.4"
+          }
+        },
+        "chalk": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/chalk/-/chalk-3.0.0.tgz",
+          "integrity": "sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==",
+          "requires": {
+            "ansi-styles": "^4.1.0",
+            "supports-color": "^7.1.0"
+          }
+        },
+        "color-convert": {
+          "version": "2.0.1",
+          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
+          "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
+          "requires": {
+            "color-name": "~1.1.4"
+          }
+        },
+        "color-name": {
+          "version": "1.1.4",
+          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
+          "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA=="
+        },
+        "has-flag": {
+          "version": "4.0.0",
+          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
+          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ=="
+        },
+        "pretty-format": {
+          "version": "25.5.0",
+          "resolved": "https://registry.npmjs.org/pretty-format/-/pretty-format-25.5.0.tgz",
+          "integrity": "sha512-kbo/kq2LQ/A/is0PQwsEHM7Ca6//bGPPvU6UnsdDRSKTWxT/ru/xb88v4BJf6a69H+uTytOEsTusT9ksd/1iWQ==",
+          "requires": {
+            "@jest/types": "^25.5.0",
+            "ansi-regex": "^5.0.0",
+            "ansi-styles": "^4.0.0",
+            "react-is": "^16.12.0"
+          }
+        },
+        "supports-color": {
+          "version": "7.1.0",
+          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.1.0.tgz",
+          "integrity": "sha512-oRSIpR8pxT1Wr2FquTNnGet79b3BWljqOuoW/h4oBhxJ/HUbX5nX6JSruTkvXDCFMwDPvsaTTbvMLKZWSy0R5g==",
+          "requires": {
+            "has-flag": "^4.0.0"
+          }
+        }
+      }
+    },
+    "@testing-library/jest-dom": {
+      "version": "4.2.4",
+      "resolved": "https://registry.npmjs.org/@testing-library/jest-dom/-/jest-dom-4.2.4.tgz",
+      "integrity": "sha512-j31Bn0rQo12fhCWOUWy9fl7wtqkp7In/YP2p5ZFyRuiiB9Qs3g+hS4gAmDWONbAHcRmVooNJ5eOHQDCOmUFXHg==",
+      "requires": {
+        "@babel/runtime": "^7.5.1",
+        "chalk": "^2.4.1",
+        "css": "^2.2.3",
+        "css.escape": "^1.5.1",
+        "jest-diff": "^24.0.0",
+        "jest-matcher-utils": "^24.0.0",
+        "lodash": "^4.17.11",
+        "pretty-format": "^24.0.0",
+        "redent": "^3.0.0"
+      }
+    },
+    "@testing-library/react": {
+      "version": "9.5.0",
+      "resolved": "https://registry.npmjs.org/@testing-library/react/-/react-9.5.0.tgz",
+      "integrity": "sha512-di1b+D0p+rfeboHO5W7gTVeZDIK5+maEgstrZbWZSSvxDyfDRkkyBE1AJR5Psd6doNldluXlCWqXriUfqu/9Qg==",
+      "requires": {
+        "@babel/runtime": "^7.8.4",
+        "@testing-library/dom": "^6.15.0",
+        "@types/testing-library__react": "^9.1.2"
+      }
+    },
+    "@testing-library/user-event": {
+      "version": "7.2.1",
+      "resolved": "https://registry.npmjs.org/@testing-library/user-event/-/user-event-7.2.1.tgz",
+      "integrity": "sha512-oZ0Ib5I4Z2pUEcoo95cT1cr6slco9WY7yiPpG+RGNkj8YcYgJnM7pXmYmorNOReh8MIGcKSqXyeGjxnr8YiZbA=="
+    },
+    "@types/babel__core": {
+      "version": "7.1.7",
+      "resolved": "https://registry.npmjs.org/@types/babel__core/-/babel__core-7.1.7.tgz",
+      "integrity": "sha512-RL62NqSFPCDK2FM1pSDH0scHpJvsXtZNiYlMB73DgPBaG1E38ZYVL+ei5EkWRbr+KC4YNiAUNBnRj+bgwpgjMw==",
+      "requires": {
+        "@babel/parser": "^7.1.0",
+        "@babel/types": "^7.0.0",
+        "@types/babel__generator": "*",
+        "@types/babel__template": "*",
+        "@types/babel__traverse": "*"
+      }
+    },
+    "@types/babel__generator": {
+      "version": "7.6.1",
+      "resolved": "https://registry.npmjs.org/@types/babel__generator/-/babel__generator-7.6.1.tgz",
+      "integrity": "sha512-bBKm+2VPJcMRVwNhxKu8W+5/zT7pwNEqeokFOmbvVSqGzFneNxYcEBro9Ac7/N9tlsaPYnZLK8J1LWKkMsLAew==",
+      "requires": {
+        "@babel/types": "^7.0.0"
+      }
+    },
+    "@types/babel__template": {
+      "version": "7.0.2",
+      "resolved": "https://registry.npmjs.org/@types/babel__template/-/babel__template-7.0.2.tgz",
+      "integrity": "sha512-/K6zCpeW7Imzgab2bLkLEbz0+1JlFSrUMdw7KoIIu+IUdu51GWaBZpd3y1VXGVXzynvGa4DaIaxNZHiON3GXUg==",
+      "requires": {
+        "@babel/parser": "^7.1.0",
+        "@babel/types": "^7.0.0"
+      }
+    },
+    "@types/babel__traverse": {
+      "version": "7.0.11",
+      "resolved": "https://registry.npmjs.org/@types/babel__traverse/-/babel__traverse-7.0.11.tgz",
+      "integrity": "sha512-ddHK5icION5U6q11+tV2f9Mo6CZVuT8GJKld2q9LqHSZbvLbH34Kcu2yFGckZut453+eQU6btIA3RihmnRgI+Q==",
+      "requires": {
+        "@babel/types": "^7.3.0"
+      }
+    },
+    "@types/color-name": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/@types/color-name/-/color-name-1.1.1.tgz",
+      "integrity": "sha512-rr+OQyAjxze7GgWrSaJwydHStIhHq2lvY3BOC2Mj7KnzI7XK0Uw1TOOdI9lDoajEbSWLiYgoo4f1R51erQfhPQ=="
+    },
+    "@types/eslint-visitor-keys": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/@types/eslint-visitor-keys/-/eslint-visitor-keys-1.0.0.tgz",
+      "integrity": "sha512-OCutwjDZ4aFS6PB1UZ988C4YgwlBHJd6wCeQqaLdmadZ/7e+w79+hbMUFC1QXDNCmdyoRfAFdm0RypzwR+Qpag=="
+    },
+    "@types/events": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/@types/events/-/events-3.0.0.tgz",
+      "integrity": "sha512-EaObqwIvayI5a8dCzhFrjKzVwKLxjoG9T6Ppd5CEo07LRKfQ8Yokw54r5+Wq7FaBQ+yXRvQAYPrHwya1/UFt9g=="
+    },
+    "@types/fbemitter": {
+      "version": "2.0.32",
+      "resolved": "https://registry.npmjs.org/@types/fbemitter/-/fbemitter-2.0.32.tgz",
+      "integrity": "sha1-jtIE2g9U6cjq7DGx7skeJRMtCCw="
+    },
+    "@types/glob": {
+      "version": "7.1.1",
+      "resolved": "https://registry.npmjs.org/@types/glob/-/glob-7.1.1.tgz",
+      "integrity": "sha512-1Bh06cbWJUHMC97acuD6UMG29nMt0Aqz1vF3guLfG+kHHJhy3AyohZFFxYk2f7Q1SQIrNwvncxAE0N/9s70F2w==",
+      "requires": {
+        "@types/events": "*",
+        "@types/minimatch": "*",
+        "@types/node": "*"
+      }
+    },
+    "@types/invariant": {
+      "version": "2.2.32",
+      "resolved": "https://registry.npmjs.org/@types/invariant/-/invariant-2.2.32.tgz",
+      "integrity": "sha512-WjY4WVFaehHv+TOgm+dS3UI559NvsPGFz/C0nIo7KOOdC+HeC7Y3/yLzdJYQ3+oFQaTXrOVm7cNtIgMataIDVg=="
+    },
+    "@types/istanbul-lib-coverage": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/@types/istanbul-lib-coverage/-/istanbul-lib-coverage-2.0.1.tgz",
+      "integrity": "sha512-hRJD2ahnnpLgsj6KWMYSrmXkM3rm2Dl1qkx6IOFD5FnuNPXJIG5L0dhgKXCYTRMGzU4n0wImQ/xfmRc4POUFlg=="
+    },
+    "@types/istanbul-lib-report": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/@types/istanbul-lib-report/-/istanbul-lib-report-3.0.0.tgz",
+      "integrity": "sha512-plGgXAPfVKFoYfa9NpYDAkseG+g6Jr294RqeqcqDixSbU34MZVJRi/P+7Y8GDpzkEwLaGZZOpKIEmeVZNtKsrg==",
+      "requires": {
+        "@types/istanbul-lib-coverage": "*"
+      }
+    },
+    "@types/istanbul-reports": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/@types/istanbul-reports/-/istanbul-reports-1.1.1.tgz",
+      "integrity": "sha512-UpYjBi8xefVChsCoBpKShdxTllC9pwISirfoZsUa2AAdQg/Jd2KQGtSbw+ya7GPo7x/wAPlH6JBhKhAsXUEZNA==",
+      "requires": {
+        "@types/istanbul-lib-coverage": "*",
+        "@types/istanbul-lib-report": "*"
+      }
+    },
+    "@types/json-schema": {
+      "version": "7.0.4",
+      "resolved": "https://registry.npmjs.org/@types/json-schema/-/json-schema-7.0.4.tgz",
+      "integrity": "sha512-8+KAKzEvSUdeo+kmqnKrqgeE+LcA0tjYWFY7RPProVYwnqDjukzO+3b6dLD56rYX5TdWejnEOLJYOIeh4CXKuA=="
+    },
+    "@types/lodash": {
+      "version": "4.14.150",
+      "resolved": "https://registry.npmjs.org/@types/lodash/-/lodash-4.14.150.tgz",
+      "integrity": "sha512-kMNLM5JBcasgYscD9x/Gvr6lTAv2NVgsKtet/hm93qMyf/D1pt+7jeEZklKJKxMVmXjxbRVQQGfqDSfipYCO6w=="
+    },
+    "@types/lodash.zipobject": {
+      "version": "4.1.6",
+      "resolved": "https://registry.npmjs.org/@types/lodash.zipobject/-/lodash.zipobject-4.1.6.tgz",
+      "integrity": "sha512-30khEHqHWaLgMZR35wtkg07OmHiNiDQyor0SK7oj8Sy05tg6jDjPmJybeZ64WKeFZUEgs1tdJwdT0xUl+2qUgQ==",
+      "requires": {
+        "@types/lodash": "*"
+      }
+    },
+    "@types/minimatch": {
+      "version": "3.0.3",
+      "resolved": "https://registry.npmjs.org/@types/minimatch/-/minimatch-3.0.3.tgz",
+      "integrity": "sha512-tHq6qdbT9U1IRSGf14CL0pUlULksvY9OZ+5eEgl1N7t+OA3tGvNpxJCzuKQlsNgCVwbAs670L1vcVQi8j9HjnA=="
+    },
+    "@types/node": {
+      "version": "13.13.4",
+      "resolved": "https://registry.npmjs.org/@types/node/-/node-13.13.4.tgz",
+      "integrity": "sha512-x26ur3dSXgv5AwKS0lNfbjpCakGIduWU1DU91Zz58ONRWrIKGunmZBNv4P7N+e27sJkiGDsw/3fT4AtsqQBrBA=="
+    },
+    "@types/parse-json": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/@types/parse-json/-/parse-json-4.0.0.tgz",
+      "integrity": "sha512-//oorEZjL6sbPcKUaCdIGlIUeH26mgzimjBB77G6XRgnDl/L5wOnpyBGRe/Mmf5CVW3PwEBE1NjiMZ/ssFh4wA=="
+    },
+    "@types/prop-types": {
+      "version": "15.7.3",
+      "resolved": "https://registry.npmjs.org/@types/prop-types/-/prop-types-15.7.3.tgz",
+      "integrity": "sha512-KfRL3PuHmqQLOG+2tGpRO26Ctg+Cq1E01D2DMriKEATHgWLfeNDmq9e29Q9WIky0dQ3NPkd1mzYH8Lm936Z9qw=="
+    },
+    "@types/q": {
+      "version": "1.5.2",
+      "resolved": "https://registry.npmjs.org/@types/q/-/q-1.5.2.tgz",
+      "integrity": "sha512-ce5d3q03Ex0sy4R14722Rmt6MT07Ua+k4FwDfdcToYJcMKNtRVQvJ6JCAPdAmAnbRb6CsX6aYb9m96NGod9uTw=="
+    },
+    "@types/qs": {
+      "version": "6.9.2",
+      "resolved": "https://registry.npmjs.org/@types/qs/-/qs-6.9.2.tgz",
+      "integrity": "sha512-a9bDi4Z3zCZf4Lv1X/vwnvbbDYSNz59h3i3KdyuYYN+YrLjSeJD0dnphdULDfySvUv6Exy/O0K6wX/kQpnPQ+A=="
+    },
+    "@types/react": {
+      "version": "16.9.34",
+      "resolved": "https://registry.npmjs.org/@types/react/-/react-16.9.34.tgz",
+      "integrity": "sha512-8AJlYMOfPe1KGLKyHpflCg5z46n0b5DbRfqDksxBLBTUpB75ypDBAO9eCUcjNwE6LCUslwTz00yyG/X9gaVtow==",
+      "requires": {
+        "@types/prop-types": "*",
+        "csstype": "^2.2.0"
+      }
+    },
+    "@types/react-dom": {
+      "version": "16.9.7",
+      "resolved": "https://registry.npmjs.org/@types/react-dom/-/react-dom-16.9.7.tgz",
+      "integrity": "sha512-GHTYhM8/OwUCf254WO5xqR/aqD3gC9kSTLpopWGpQLpnw23jk44RvMHsyUSEplvRJZdHxhJGMMLF0kCPYHPhQA==",
+      "requires": {
+        "@types/react": "*"
+      }
+    },
+    "@types/stack-utils": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/@types/stack-utils/-/stack-utils-1.0.1.tgz",
+      "integrity": "sha512-l42BggppR6zLmpfU6fq9HEa2oGPEI8yrSPL3GITjfRInppYFahObbIQOQK3UGxEnyQpltZLaPe75046NOZQikw=="
+    },
+    "@types/testing-library__dom": {
+      "version": "6.14.0",
+      "resolved": "https://registry.npmjs.org/@types/testing-library__dom/-/testing-library__dom-6.14.0.tgz",
+      "integrity": "sha512-sMl7OSv0AvMOqn1UJ6j1unPMIHRXen0Ita1ujnMX912rrOcawe4f7wu0Zt9GIQhBhJvH2BaibqFgQ3lP+Pj2hA==",
+      "requires": {
+        "pretty-format": "^24.3.0"
+      }
+    },
+    "@types/testing-library__react": {
+      "version": "9.1.3",
+      "resolved": "https://registry.npmjs.org/@types/testing-library__react/-/testing-library__react-9.1.3.tgz",
+      "integrity": "sha512-iCdNPKU3IsYwRK9JieSYAiX0+aYDXOGAmrC/3/M7AqqSDKnWWVv07X+Zk1uFSL7cMTUYzv4lQRfohucEocn5/w==",
+      "requires": {
+        "@types/react-dom": "*",
+        "@types/testing-library__dom": "*",
+        "pretty-format": "^25.1.0"
+      },
+      "dependencies": {
+        "@jest/types": {
+          "version": "25.5.0",
+          "resolved": "https://registry.npmjs.org/@jest/types/-/types-25.5.0.tgz",
+          "integrity": "sha512-OXD0RgQ86Tu3MazKo8bnrkDRaDXXMGUqd+kTtLtK1Zb7CRzQcaSRPPPV37SvYTdevXEBVxe0HXylEjs8ibkmCw==",
+          "requires": {
+            "@types/istanbul-lib-coverage": "^2.0.0",
+            "@types/istanbul-reports": "^1.1.1",
+            "@types/yargs": "^15.0.0",
+            "chalk": "^3.0.0"
+          }
+        },
+        "@types/yargs": {
+          "version": "15.0.4",
+          "resolved": "https://registry.npmjs.org/@types/yargs/-/yargs-15.0.4.tgz",
+          "integrity": "sha512-9T1auFmbPZoxHz0enUFlUuKRy3it01R+hlggyVUMtnCTQRunsQYifnSGb8hET4Xo8yiC0o0r1paW3ud5+rbURg==",
+          "requires": {
+            "@types/yargs-parser": "*"
+          }
+        },
+        "ansi-styles": {
+          "version": "4.2.1",
+          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.2.1.tgz",
+          "integrity": "sha512-9VGjrMsG1vePxcSweQsN20KY/c4zN0h9fLjqAbwbPfahM3t+NL+M9HC8xeXG2I8pX5NoamTGNuomEUFI7fcUjA==",
+          "requires": {
+            "@types/color-name": "^1.1.1",
+            "color-convert": "^2.0.1"
+          }
+        },
+        "chalk": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/chalk/-/chalk-3.0.0.tgz",
+          "integrity": "sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==",
+          "requires": {
+            "ansi-styles": "^4.1.0",
+            "supports-color": "^7.1.0"
+          }
+        },
+        "color-convert": {
+          "version": "2.0.1",
+          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
+          "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
+          "requires": {
+            "color-name": "~1.1.4"
+          }
+        },
+        "color-name": {
+          "version": "1.1.4",
+          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
+          "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA=="
+        },
+        "has-flag": {
+          "version": "4.0.0",
+          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
+          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ=="
+        },
+        "pretty-format": {
+          "version": "25.5.0",
+          "resolved": "https://registry.npmjs.org/pretty-format/-/pretty-format-25.5.0.tgz",
+          "integrity": "sha512-kbo/kq2LQ/A/is0PQwsEHM7Ca6//bGPPvU6UnsdDRSKTWxT/ru/xb88v4BJf6a69H+uTytOEsTusT9ksd/1iWQ==",
+          "requires": {
+            "@jest/types": "^25.5.0",
+            "ansi-regex": "^5.0.0",
+            "ansi-styles": "^4.0.0",
+            "react-is": "^16.12.0"
+          }
+        },
+        "supports-color": {
+          "version": "7.1.0",
+          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.1.0.tgz",
+          "integrity": "sha512-oRSIpR8pxT1Wr2FquTNnGet79b3BWljqOuoW/h4oBhxJ/HUbX5nX6JSruTkvXDCFMwDPvsaTTbvMLKZWSy0R5g==",
+          "requires": {
+            "has-flag": "^4.0.0"
+          }
+        }
+      }
+    },
+    "@types/websql": {
+      "version": "0.0.27",
+      "resolved": "https://registry.npmjs.org/@types/websql/-/websql-0.0.27.tgz",
+      "integrity": "sha1-Yhpman8CAY58u0q6uVaiVzbCfXE="
+    },
+    "@types/yargs": {
+      "version": "13.0.8",
+      "resolved": "https://registry.npmjs.org/@types/yargs/-/yargs-13.0.8.tgz",
+      "integrity": "sha512-XAvHLwG7UQ+8M4caKIH0ZozIOYay5fQkAgyIXegXT9jPtdIGdhga+sUEdAr1CiG46aB+c64xQEYyEzlwWVTNzA==",
+      "requires": {
+        "@types/yargs-parser": "*"
+      }
+    },
+    "@types/yargs-parser": {
+      "version": "15.0.0",
+      "resolved": "https://registry.npmjs.org/@types/yargs-parser/-/yargs-parser-15.0.0.tgz",
+      "integrity": "sha512-FA/BWv8t8ZWJ+gEOnLLd8ygxH/2UFbAvgEonyfN6yWGLKc7zVjbpl2Y4CTjid9h2RfgPP6SEt6uHwEOply00yw=="
+    },
+    "@typescript-eslint/eslint-plugin": {
+      "version": "2.30.0",
+      "resolved": "https://registry.npmjs.org/@typescript-eslint/eslint-plugin/-/eslint-plugin-2.30.0.tgz",
+      "integrity": "sha512-PGejii0qIZ9Q40RB2jIHyUpRWs1GJuHP1pkoCiaeicfwO9z7Fx03NQzupuyzAmv+q9/gFNHu7lo1ByMXe8PNyg==",
+      "requires": {
+        "@typescript-eslint/experimental-utils": "2.30.0",
+        "functional-red-black-tree": "^1.0.1",
+        "regexpp": "^3.0.0",
+        "tsutils": "^3.17.1"
+      }
+    },
+    "@typescript-eslint/experimental-utils": {
+      "version": "2.30.0",
+      "resolved": "https://registry.npmjs.org/@typescript-eslint/experimental-utils/-/experimental-utils-2.30.0.tgz",
+      "integrity": "sha512-L3/tS9t+hAHksy8xuorhOzhdefN0ERPDWmR9CclsIGOUqGKy6tqc/P+SoXeJRye5gazkuPO0cK9MQRnolykzkA==",
+      "requires": {
+        "@types/json-schema": "^7.0.3",
+        "@typescript-eslint/typescript-estree": "2.30.0",
+        "eslint-scope": "^5.0.0",
+        "eslint-utils": "^2.0.0"
+      }
+    },
+    "@typescript-eslint/parser": {
+      "version": "2.30.0",
+      "resolved": "https://registry.npmjs.org/@typescript-eslint/parser/-/parser-2.30.0.tgz",
+      "integrity": "sha512-9kDOxzp0K85UnpmPJqUzdWaCNorYYgk1yZmf4IKzpeTlSAclnFsrLjfwD9mQExctLoLoGAUXq1co+fbr+3HeFw==",
+      "requires": {
+        "@types/eslint-visitor-keys": "^1.0.0",
+        "@typescript-eslint/experimental-utils": "2.30.0",
+        "@typescript-eslint/typescript-estree": "2.30.0",
+        "eslint-visitor-keys": "^1.1.0"
+      }
+    },
+    "@typescript-eslint/typescript-estree": {
+      "version": "2.30.0",
+      "resolved": "https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-2.30.0.tgz",
+      "integrity": "sha512-nI5WOechrA0qAhnr+DzqwmqHsx7Ulr/+0H7bWCcClDhhWkSyZR5BmTvnBEyONwJCTWHfc5PAQExX24VD26IAVw==",
+      "requires": {
+        "debug": "^4.1.1",
+        "eslint-visitor-keys": "^1.1.0",
+        "glob": "^7.1.6",
+        "is-glob": "^4.0.1",
+        "lodash": "^4.17.15",
+        "semver": "^6.3.0",
+        "tsutils": "^3.17.1"
+      }
+    },
+    "@unimodules/core": {
+      "version": "5.1.2",
+      "resolved": "https://registry.npmjs.org/@unimodules/core/-/core-5.1.2.tgz",
+      "integrity": "sha512-iCWEbzsNHqDfL6p8FyCGPnL2EW7vdgMJsNNSlWtM/gl8kePdqZMI7aOxTC4cdRS2xm0wzxuDBtpfJkzZsKINZg==",
+      "requires": {
+        "compare-versions": "^3.4.0"
+      }
+    },
+    "@unimodules/react-native-adapter": {
+      "version": "5.2.0",
+      "resolved": "https://registry.npmjs.org/@unimodules/react-native-adapter/-/react-native-adapter-5.2.0.tgz",
+      "integrity": "sha512-S3HMEeQbV6xs7ORRcxXFGMk38DAnxqNcZG9T8JkX/KGY9ILUUqTS/e68+d849B6beEeglNMcOxyjwlqjykN+FA==",
+      "requires": {
+        "invariant": "^2.2.4",
+        "lodash": "^4.5.0",
+        "prop-types": "^15.6.1"
+      }
+    },
+    "@webassemblyjs/ast": {
+      "version": "1.8.5",
+      "resolved": "https://registry.npmjs.org/@webassemblyjs/ast/-/ast-1.8.5.tgz",
+      "integrity": "sha512-aJMfngIZ65+t71C3y2nBBg5FFG0Okt9m0XEgWZ7Ywgn1oMAT8cNwx00Uv1cQyHtidq0Xn94R4TAywO+LCQ+ZAQ==",
+      "requires": {
+        "@webassemblyjs/helper-module-context": "1.8.5",
+        "@webassemblyjs/helper-wasm-bytecode": "1.8.5",
+        "@webassemblyjs/wast-parser": "1.8.5"
+      }
+    },
+    "@webassemblyjs/floating-point-hex-parser": {
+      "version": "1.8.5",
+      "resolved": "https://registry.npmjs.org/@webassemblyjs/floating-point-hex-parser/-/floating-point-hex-parser-1.8.5.tgz",
+      "integrity": "sha512-9p+79WHru1oqBh9ewP9zW95E3XAo+90oth7S5Re3eQnECGq59ly1Ri5tsIipKGpiStHsUYmY3zMLqtk3gTcOtQ=="
+    },
+    "@webassemblyjs/helper-api-error": {
+      "version": "1.8.5",
+      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-api-error/-/helper-api-error-1.8.5.tgz",
+      "integrity": "sha512-Za/tnzsvnqdaSPOUXHyKJ2XI7PDX64kWtURyGiJJZKVEdFOsdKUCPTNEVFZq3zJ2R0G5wc2PZ5gvdTRFgm81zA=="
+    },
+    "@webassemblyjs/helper-buffer": {
+      "version": "1.8.5",
+      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-buffer/-/helper-buffer-1.8.5.tgz",
+      "integrity": "sha512-Ri2R8nOS0U6G49Q86goFIPNgjyl6+oE1abW1pS84BuhP1Qcr5JqMwRFT3Ah3ADDDYGEgGs1iyb1DGX+kAi/c/Q=="
+    },
+    "@webassemblyjs/helper-code-frame": {
+      "version": "1.8.5",
+      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-code-frame/-/helper-code-frame-1.8.5.tgz",
+      "integrity": "sha512-VQAadSubZIhNpH46IR3yWO4kZZjMxN1opDrzePLdVKAZ+DFjkGD/rf4v1jap744uPVU6yjL/smZbRIIJTOUnKQ==",
+      "requires": {
+        "@webassemblyjs/wast-printer": "1.8.5"
+      }
+    },
+    "@webassemblyjs/helper-fsm": {
+      "version": "1.8.5",
+      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-fsm/-/helper-fsm-1.8.5.tgz",
+      "integrity": "sha512-kRuX/saORcg8se/ft6Q2UbRpZwP4y7YrWsLXPbbmtepKr22i8Z4O3V5QE9DbZK908dh5Xya4Un57SDIKwB9eow=="
+    },
+    "@webassemblyjs/helper-module-context": {
+      "version": "1.8.5",
+      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-module-context/-/helper-module-context-1.8.5.tgz",
+      "integrity": "sha512-/O1B236mN7UNEU4t9X7Pj38i4VoU8CcMHyy3l2cV/kIF4U5KoHXDVqcDuOs1ltkac90IM4vZdHc52t1x8Yfs3g==",
+      "requires": {
+        "@webassemblyjs/ast": "1.8.5",
+        "mamacro": "^0.0.3"
+      }
+    },
+    "@webassemblyjs/helper-wasm-bytecode": {
+      "version": "1.8.5",
+      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-wasm-bytecode/-/helper-wasm-bytecode-1.8.5.tgz",
+      "integrity": "sha512-Cu4YMYG3Ddl72CbmpjU/wbP6SACcOPVbHN1dI4VJNJVgFwaKf1ppeFJrwydOG3NDHxVGuCfPlLZNyEdIYlQ6QQ=="
+    },
+    "@webassemblyjs/helper-wasm-section": {
+      "version": "1.8.5",
+      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-wasm-section/-/helper-wasm-section-1.8.5.tgz",
+      "integrity": "sha512-VV083zwR+VTrIWWtgIUpqfvVdK4ff38loRmrdDBgBT8ADXYsEZ5mPQ4Nde90N3UYatHdYoDIFb7oHzMncI02tA==",
+      "requires": {
+        "@webassemblyjs/ast": "1.8.5",
+        "@webassemblyjs/helper-buffer": "1.8.5",
+        "@webassemblyjs/helper-wasm-bytecode": "1.8.5",
+        "@webassemblyjs/wasm-gen": "1.8.5"
+      }
+    },
+    "@webassemblyjs/ieee754": {
+      "version": "1.8.5",
+      "resolved": "https://registry.npmjs.org/@webassemblyjs/ieee754/-/ieee754-1.8.5.tgz",
+      "integrity": "sha512-aaCvQYrvKbY/n6wKHb/ylAJr27GglahUO89CcGXMItrOBqRarUMxWLJgxm9PJNuKULwN5n1csT9bYoMeZOGF3g==",
+      "requires": {
+        "@xtuc/ieee754": "^1.2.0"
+      }
+    },
+    "@webassemblyjs/leb128": {
+      "version": "1.8.5",
+      "resolved": "https://registry.npmjs.org/@webassemblyjs/leb128/-/leb128-1.8.5.tgz",
+      "integrity": "sha512-plYUuUwleLIziknvlP8VpTgO4kqNaH57Y3JnNa6DLpu/sGcP6hbVdfdX5aHAV716pQBKrfuU26BJK29qY37J7A==",
+      "requires": {
+        "@xtuc/long": "4.2.2"
+      }
+    },
+    "@webassemblyjs/utf8": {
+      "version": "1.8.5",
+      "resolved": "https://registry.npmjs.org/@webassemblyjs/utf8/-/utf8-1.8.5.tgz",
+      "integrity": "sha512-U7zgftmQriw37tfD934UNInokz6yTmn29inT2cAetAsaU9YeVCveWEwhKL1Mg4yS7q//NGdzy79nlXh3bT8Kjw=="
+    },
+    "@webassemblyjs/wasm-edit": {
+      "version": "1.8.5",
+      "resolved": "https://registry.npmjs.org/@webassemblyjs/wasm-edit/-/wasm-edit-1.8.5.tgz",
+      "integrity": "sha512-A41EMy8MWw5yvqj7MQzkDjU29K7UJq1VrX2vWLzfpRHt3ISftOXqrtojn7nlPsZ9Ijhp5NwuODuycSvfAO/26Q==",
+      "requires": {
+        "@webassemblyjs/ast": "1.8.5",
+        "@webassemblyjs/helper-buffer": "1.8.5",
+        "@webassemblyjs/helper-wasm-bytecode": "1.8.5",
+        "@webassemblyjs/helper-wasm-section": "1.8.5",
+        "@webassemblyjs/wasm-gen": "1.8.5",
+        "@webassemblyjs/wasm-opt": "1.8.5",
+        "@webassemblyjs/wasm-parser": "1.8.5",
+        "@webassemblyjs/wast-printer": "1.8.5"
+      }
+    },
+    "@webassemblyjs/wasm-gen": {
+      "version": "1.8.5",
+      "resolved": "https://registry.npmjs.org/@webassemblyjs/wasm-gen/-/wasm-gen-1.8.5.tgz",
+      "integrity": "sha512-BCZBT0LURC0CXDzj5FXSc2FPTsxwp3nWcqXQdOZE4U7h7i8FqtFK5Egia6f9raQLpEKT1VL7zr4r3+QX6zArWg==",
+      "requires": {
+        "@webassemblyjs/ast": "1.8.5",
+        "@webassemblyjs/helper-wasm-bytecode": "1.8.5",
+        "@webassemblyjs/ieee754": "1.8.5",
+        "@webassemblyjs/leb128": "1.8.5",
+        "@webassemblyjs/utf8": "1.8.5"
+      }
+    },
+    "@webassemblyjs/wasm-opt": {
+      "version": "1.8.5",
+      "resolved": "https://registry.npmjs.org/@webassemblyjs/wasm-opt/-/wasm-opt-1.8.5.tgz",
+      "integrity": "sha512-HKo2mO/Uh9A6ojzu7cjslGaHaUU14LdLbGEKqTR7PBKwT6LdPtLLh9fPY33rmr5wcOMrsWDbbdCHq4hQUdd37Q==",
+      "requires": {
+        "@webassemblyjs/ast": "1.8.5",
+        "@webassemblyjs/helper-buffer": "1.8.5",
+        "@webassemblyjs/wasm-gen": "1.8.5",
+        "@webassemblyjs/wasm-parser": "1.8.5"
+      }
+    },
+    "@webassemblyjs/wasm-parser": {
+      "version": "1.8.5",
+      "resolved": "https://registry.npmjs.org/@webassemblyjs/wasm-parser/-/wasm-parser-1.8.5.tgz",
+      "integrity": "sha512-pi0SYE9T6tfcMkthwcgCpL0cM9nRYr6/6fjgDtL6q/ZqKHdMWvxitRi5JcZ7RI4SNJJYnYNaWy5UUrHQy998lw==",
+      "requires": {
+        "@webassemblyjs/ast": "1.8.5",
+        "@webassemblyjs/helper-api-error": "1.8.5",
+        "@webassemblyjs/helper-wasm-bytecode": "1.8.5",
+        "@webassemblyjs/ieee754": "1.8.5",
+        "@webassemblyjs/leb128": "1.8.5",
+        "@webassemblyjs/utf8": "1.8.5"
+      }
+    },
+    "@webassemblyjs/wast-parser": {
+      "version": "1.8.5",
+      "resolved": "https://registry.npmjs.org/@webassemblyjs/wast-parser/-/wast-parser-1.8.5.tgz",
+      "integrity": "sha512-daXC1FyKWHF1i11obK086QRlsMsY4+tIOKgBqI1lxAnkp9xe9YMcgOxm9kLe+ttjs5aWV2KKE1TWJCN57/Btsg==",
+      "requires": {
+        "@webassemblyjs/ast": "1.8.5",
+        "@webassemblyjs/floating-point-hex-parser": "1.8.5",
+        "@webassemblyjs/helper-api-error": "1.8.5",
+        "@webassemblyjs/helper-code-frame": "1.8.5",
+        "@webassemblyjs/helper-fsm": "1.8.5",
+        "@xtuc/long": "4.2.2"
+      }
+    },
+    "@webassemblyjs/wast-printer": {
+      "version": "1.8.5",
+      "resolved": "https://registry.npmjs.org/@webassemblyjs/wast-printer/-/wast-printer-1.8.5.tgz",
+      "integrity": "sha512-w0U0pD4EhlnvRyeJzBqaVSJAo9w/ce7/WPogeXLzGkO6hzhr4GnQIZ4W4uUt5b9ooAaXPtnXlj0gzsXEOUNYMg==",
+      "requires": {
+        "@webassemblyjs/ast": "1.8.5",
+        "@webassemblyjs/wast-parser": "1.8.5",
+        "@xtuc/long": "4.2.2"
+      }
+    },
+    "@xtuc/ieee754": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/@xtuc/ieee754/-/ieee754-1.2.0.tgz",
+      "integrity": "sha512-DX8nKgqcGwsc0eJSqYt5lwP4DH5FlHnmuWWBRy7X0NcaGR0ZtuyeESgMwTYVEtxmsNGY+qit4QYT/MIYTOTPeA=="
+    },
+    "@xtuc/long": {
+      "version": "4.2.2",
+      "resolved": "https://registry.npmjs.org/@xtuc/long/-/long-4.2.2.tgz",
+      "integrity": "sha512-NuHqBY1PB/D8xU6s/thBgOAiAP7HOYDQ32+BFZILJ8ivkUkAHQnWfn6WhL79Owj1qmUnoN/YPhktdIoucipkAQ=="
+    },
+    "abab": {
+      "version": "2.0.3",
+      "resolved": "https://registry.npmjs.org/abab/-/abab-2.0.3.tgz",
+      "integrity": "sha512-tsFzPpcttalNjFBCFMqsKYQcWxxen1pgJR56by//QwvJc4/OUS3kPOOttx2tSIfjsylB0pYu7f5D3K1RCxUnUg=="
+    },
+    "abbrev": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/abbrev/-/abbrev-1.1.1.tgz",
+      "integrity": "sha512-nne9/IiQ/hzIhY6pdDnbBtz7DjPTKrY00P/zvPSm5pOFkl6xuGrGnXn/VtTNNfNtAfZ9/1RtehkszU9qcTii0Q==",
+      "dev": true
+    },
+    "absolute-path": {
+      "version": "0.0.0",
+      "resolved": "https://registry.npmjs.org/absolute-path/-/absolute-path-0.0.0.tgz",
+      "integrity": "sha1-p4di+9rftSl76ZsV01p4Wy8JW/c="
+    },
+    "accepts": {
+      "version": "1.3.7",
+      "resolved": "https://registry.npmjs.org/accepts/-/accepts-1.3.7.tgz",
+      "integrity": "sha512-Il80Qs2WjYlJIBNzNkK6KYqlVMTbZLXgHx2oT0pU/fjRHyEp+PEfEPY0R3WCwAGVOtauxh1hOxNgIf5bv7dQpA==",
+      "requires": {
+        "mime-types": "~2.1.24",
+        "negotiator": "0.6.2"
+      }
+    },
+    "acorn": {
+      "version": "7.1.1",
+      "resolved": "https://registry.npmjs.org/acorn/-/acorn-7.1.1.tgz",
+      "integrity": "sha512-add7dgA5ppRPxCFJoAGfMDi7PIBXq1RtGo7BhbLaxwrXPOmw8gq48Y9ozT01hUKy9byMjlR20EJhu5zlkErEkg=="
+    },
+    "acorn-globals": {
+      "version": "4.3.4",
+      "resolved": "https://registry.npmjs.org/acorn-globals/-/acorn-globals-4.3.4.tgz",
+      "integrity": "sha512-clfQEh21R+D0leSbUdWf3OcfqyaCSAQ8Ryq00bofSekfr9W8u1jyYZo6ir0xu9Gtcf7BjcHJpnbZH7JOCpP60A==",
+      "requires": {
+        "acorn": "^6.0.1",
+        "acorn-walk": "^6.0.1"
+      },
+      "dependencies": {
+        "acorn": {
+          "version": "6.4.1",
+          "resolved": "https://registry.npmjs.org/acorn/-/acorn-6.4.1.tgz",
+          "integrity": "sha512-ZVA9k326Nwrj3Cj9jlh3wGFutC2ZornPNARZwsNYqQYgN0EsV2d53w5RN/co65Ohn4sUAUtb1rSUAOD6XN9idA=="
+        }
+      }
+    },
+    "acorn-jsx": {
+      "version": "5.2.0",
+      "resolved": "https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.2.0.tgz",
+      "integrity": "sha512-HiUX/+K2YpkpJ+SzBffkM/AQ2YE03S0U1kjTLVpoJdhZMOWy8qvXVN9JdLqv2QsaQ6MPYQIuNmwD8zOiYUofLQ=="
+    },
+    "acorn-walk": {
+      "version": "6.2.0",
+      "resolved": "https://registry.npmjs.org/acorn-walk/-/acorn-walk-6.2.0.tgz",
+      "integrity": "sha512-7evsyfH1cLOCdAzZAd43Cic04yKydNx0cF+7tiA19p1XnLLPU4dpCQOqpjqwokFe//vS0QqfqqjCS2JkiIs0cA=="
+    },
+    "address": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/address/-/address-1.1.2.tgz",
+      "integrity": "sha512-aT6camzM4xEA54YVJYSqxz1kv4IHnQZRtThJJHhUMRExaU5spC7jX5ugSwTaTgJliIgs4VhZOk7htClvQ/LmRA=="
+    },
+    "adjust-sourcemap-loader": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/adjust-sourcemap-loader/-/adjust-sourcemap-loader-2.0.0.tgz",
+      "integrity": "sha512-4hFsTsn58+YjrU9qKzML2JSSDqKvN8mUGQ0nNIrfPi8hmIONT4L3uUaT6MKdMsZ9AjsU6D2xDkZxCkbQPxChrA==",
+      "requires": {
+        "assert": "1.4.1",
+        "camelcase": "5.0.0",
+        "loader-utils": "1.2.3",
+        "object-path": "0.11.4",
+        "regex-parser": "2.2.10"
+      },
+      "dependencies": {
+        "camelcase": {
+          "version": "5.0.0",
+          "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-5.0.0.tgz",
+          "integrity": "sha512-faqwZqnWxbxn+F1d399ygeamQNy3lPp/H9H6rNrqYh4FSVCtcY+3cub1MxA8o9mDd55mM8Aghuu/kuyYA6VTsA=="
+        },
+        "emojis-list": {
+          "version": "2.1.0",
+          "resolved": "https://registry.npmjs.org/emojis-list/-/emojis-list-2.1.0.tgz",
+          "integrity": "sha1-TapNnbAPmBmIDHn6RXrlsJof04k="
+        },
+        "json5": {
+          "version": "1.0.1",
+          "resolved": "https://registry.npmjs.org/json5/-/json5-1.0.1.tgz",
+          "integrity": "sha512-aKS4WQjPenRxiQsC93MNfjx+nbF4PAdYzmd/1JIj8HYzqfbu86beTuNgXDzPknWk0n0uARlyewZo4s++ES36Ow==",
+          "requires": {
+            "minimist": "^1.2.0"
+          }
+        },
+        "loader-utils": {
+          "version": "1.2.3",
+          "resolved": "https://registry.npmjs.org/loader-utils/-/loader-utils-1.2.3.tgz",
+          "integrity": "sha512-fkpz8ejdnEMG3s37wGL07iSBDg99O9D5yflE9RGNH3hRdx9SOwYfnGYdZOUIZitN8E+E2vkq3MUMYMvPYl5ZZA==",
+          "requires": {
+            "big.js": "^5.2.2",
+            "emojis-list": "^2.0.0",
+            "json5": "^1.0.1"
+          }
+        }
+      }
+    },
+    "aggregate-error": {
+      "version": "3.0.1",
+      "resolved": "https://registry.npmjs.org/aggregate-error/-/aggregate-error-3.0.1.tgz",
+      "integrity": "sha512-quoaXsZ9/BLNae5yiNoUz+Nhkwz83GhWwtYFglcjEQB2NDHCIpApbqXxIFnm4Pq/Nvhrsq5sYJFyohrrxnTGAA==",
+      "requires": {
+        "clean-stack": "^2.0.0",
+        "indent-string": "^4.0.0"
+      }
+    },
+    "ajv": {
+      "version": "6.12.2",
+      "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.2.tgz",
+      "integrity": "sha512-k+V+hzjm5q/Mr8ef/1Y9goCmlsK4I6Sm74teeyGvFk1XrOsbsKLjEdrvny42CZ+a8sXbk8KWpY/bDwS+FLL2UQ==",
+      "requires": {
+        "fast-deep-equal": "^3.1.1",
+        "fast-json-stable-stringify": "^2.0.0",
+        "json-schema-traverse": "^0.4.1",
+        "uri-js": "^4.2.2"
+      }
+    },
+    "ajv-errors": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/ajv-errors/-/ajv-errors-1.0.1.tgz",
+      "integrity": "sha512-DCRfO/4nQ+89p/RK43i8Ezd41EqdGIU4ld7nGF8OQ14oc/we5rEntLCUa7+jrn3nn83BosfwZA0wb4pon2o8iQ=="
+    },
+    "ajv-keywords": {
+      "version": "3.4.1",
+      "resolved": "https://registry.npmjs.org/ajv-keywords/-/ajv-keywords-3.4.1.tgz",
+      "integrity": "sha512-RO1ibKvd27e6FEShVFfPALuHI3WjSVNeK5FIsmme/LYRNxjKuNj+Dt7bucLa6NdSv3JcVTyMlm9kGR84z1XpaQ=="
+    },
+    "alphanum-sort": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/alphanum-sort/-/alphanum-sort-1.0.2.tgz",
+      "integrity": "sha1-l6ERlkmyEa0zaR2fn0hqjsn74KM="
+    },
+    "amdefine": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/amdefine/-/amdefine-1.0.1.tgz",
+      "integrity": "sha1-SlKCrBZHKek2Gbz9OtFR+BfOkfU=",
+      "dev": true
+    },
+    "ansi-colors": {
+      "version": "3.2.4",
+      "resolved": "https://registry.npmjs.org/ansi-colors/-/ansi-colors-3.2.4.tgz",
+      "integrity": "sha512-hHUXGagefjN2iRrID63xckIvotOXOojhQKWIPUZ4mNUZ9nLZW+7FMNoE1lOkEhNWYsx/7ysGIuJYCiMAA9FnrA=="
+    },
+    "ansi-escapes": {
+      "version": "4.3.1",
+      "resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-4.3.1.tgz",
+      "integrity": "sha512-JWF7ocqNrp8u9oqpgV+wH5ftbt+cfvv+PTjOvKLT3AdYly/LmORARfEVT1iyjwN+4MqE5UmVKoAdIBqeoCHgLA==",
+      "requires": {
+        "type-fest": "^0.11.0"
+      },
+      "dependencies": {
+        "type-fest": {
+          "version": "0.11.0",
+          "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.11.0.tgz",
+          "integrity": "sha512-OdjXJxnCN1AvyLSzeKIgXTXxV+99ZuXl3Hpo9XpJAv9MBcHrrJOQ5kV7ypXOuQie+AmWG25hLbiKdwYTifzcfQ=="
+        }
+      }
+    },
+    "ansi-html": {
+      "version": "0.0.7",
+      "resolved": "https://registry.npmjs.org/ansi-html/-/ansi-html-0.0.7.tgz",
+      "integrity": "sha1-gTWEAhliqenm/QOflA0S9WynhZ4="
+    },
+    "ansi-regex": {
+      "version": "5.0.0",
+      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.0.tgz",
+      "integrity": "sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f/lg=="
+    },
+    "ansi-styles": {
+      "version": "3.2.1",
+      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
+      "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
+      "requires": {
+        "color-convert": "^1.9.0"
+      }
+    },
+    "ansi-to-html": {
+      "version": "0.6.14",
+      "resolved": "https://registry.npmjs.org/ansi-to-html/-/ansi-to-html-0.6.14.tgz",
+      "integrity": "sha512-7ZslfB1+EnFSDO5Ju+ue5Y6It19DRnZXWv8jrGHgIlPna5Mh4jz7BV5jCbQneXNFurQcKoolaaAjHtgSBfOIuA==",
+      "dev": true,
+      "requires": {
+        "entities": "^1.1.2"
+      },
+      "dependencies": {
+        "entities": {
+          "version": "1.1.2",
+          "resolved": "https://registry.npmjs.org/entities/-/entities-1.1.2.tgz",
+          "integrity": "sha512-f2LZMYl1Fzu7YSBKg+RoROelpOaNrcGmE9AZubeDfrCEia483oW4MI4VyFd5VNHIgQ/7qm1I0wUHK1eJnn2y2w==",
+          "dev": true
+        }
+      }
+    },
+    "anymatch": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-2.0.0.tgz",
+      "integrity": "sha512-5teOsQWABXHHBFP9y3skS5P3d/WfWXpv3FUpy+LorMrNYaT9pI4oLMQX7jzQ2KklNpGpWHzdCXTDT2Y3XGlZBw==",
+      "requires": {
+        "micromatch": "^3.1.4",
+        "normalize-path": "^2.1.1"
+      }
+    },
+    "aproba": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/aproba/-/aproba-1.2.0.tgz",
+      "integrity": "sha512-Y9J6ZjXtoYh8RnXVCMOU/ttDmk1aBjunq9vO0ta5x85WDQiQfUF9sIPBITdbiiIVcBo03Hi3jMxigBtsddlXRw=="
+    },
+    "are-we-there-yet": {
+      "version": "1.1.5",
+      "resolved": "https://registry.npmjs.org/are-we-there-yet/-/are-we-there-yet-1.1.5.tgz",
+      "integrity": "sha512-5hYdAkZlcG8tOLujVDTgCT+uPX0VnpAH28gWsLfzpXYm7wP6mp5Q/gYyR7YQ0cKVJcXJnl3j2kpBan13PtQf6w==",
+      "dev": true,
+      "requires": {
+        "delegates": "^1.0.0",
+        "readable-stream": "^2.0.6"
+      },
+      "dependencies": {
+        "readable-stream": {
+          "version": "2.3.7",
+          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
+          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
+          "dev": true,
+          "requires": {
+            "core-util-is": "~1.0.0",
+            "inherits": "~2.0.3",
+            "isarray": "~1.0.0",
+            "process-nextick-args": "~2.0.0",
+            "safe-buffer": "~5.1.1",
+            "string_decoder": "~1.1.1",
+            "util-deprecate": "~1.0.1"
+          }
+        },
+        "string_decoder": {
+          "version": "1.1.1",
+          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
+          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
+          "dev": true,
+          "requires": {
+            "safe-buffer": "~5.1.0"
+          }
+        }
+      }
+    },
+    "argparse": {
+      "version": "1.0.10",
+      "resolved": "https://registry.npmjs.org/argparse/-/argparse-1.0.10.tgz",
+      "integrity": "sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==",
+      "requires": {
+        "sprintf-js": "~1.0.2"
+      }
+    },
+    "argsarray": {
+      "version": "0.0.1",
+      "resolved": "https://registry.npmjs.org/argsarray/-/argsarray-0.0.1.tgz",
+      "integrity": "sha1-bnIHtOzbObCviDA/pa4ivajfYcs="
+    },
+    "aria-query": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/aria-query/-/aria-query-3.0.0.tgz",
+      "integrity": "sha1-ZbP8wcoRVajJrmTW7uKX8V1RM8w=",
+      "requires": {
+        "ast-types-flow": "0.0.7",
+        "commander": "^2.11.0"
+      }
+    },
+    "arity-n": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/arity-n/-/arity-n-1.0.4.tgz",
+      "integrity": "sha1-2edrEXM+CFacCEeuezmyhgswt0U="
+    },
+    "arr-diff": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/arr-diff/-/arr-diff-4.0.0.tgz",
+      "integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
+    },
+    "arr-flatten": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/arr-flatten/-/arr-flatten-1.1.0.tgz",
+      "integrity": "sha512-L3hKV5R/p5o81R7O02IGnwpDmkp6E982XhtbuwSe3O4qOtMMMtodicASA1Cny2U+aCXcNpml+m4dPsvsJ3jatg=="
+    },
+    "arr-union": {
+      "version": "3.1.0",
+      "resolved": "https://registry.npmjs.org/arr-union/-/arr-union-3.1.0.tgz",
+      "integrity": "sha1-45sJrqne+Gao8gbiiK9jkZuuOcQ="
+    },
+    "array-equal": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/array-equal/-/array-equal-1.0.0.tgz",
+      "integrity": "sha1-jCpe8kcv2ep0KwTHenUJO6J1fJM="
+    },
+    "array-filter": {
+      "version": "0.0.1",
+      "resolved": "https://registry.npmjs.org/array-filter/-/array-filter-0.0.1.tgz",
+      "integrity": "sha1-fajPLiZijtcygDWB/SH2fKzS7uw="
+    },
+    "array-find-index": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/array-find-index/-/array-find-index-1.0.2.tgz",
+      "integrity": "sha1-3wEKoSh+Fku9pvlyOwqWoexBh6E=",
+      "dev": true
+    },
+    "array-flatten": {
+      "version": "2.1.2",
+      "resolved": "https://registry.npmjs.org/array-flatten/-/array-flatten-2.1.2.tgz",
+      "integrity": "sha512-hNfzcOV8W4NdualtqBFPyVO+54DSJuZGY9qT4pRroB6S9e3iiido2ISIC5h9R2sPJ8H3FHCIiEnsv1lPXO3KtQ=="
+    },
+    "array-includes": {
+      "version": "3.1.1",
+      "resolved": "https://registry.npmjs.org/array-includes/-/array-includes-3.1.1.tgz",
+      "integrity": "sha512-c2VXaCHl7zPsvpkFsw4nxvFie4fh1ur9bpcgsVkIjqn0H/Xwdg+7fv3n2r/isyS8EBj5b06M9kHyZuIr4El6WQ==",
+      "requires": {
+        "define-properties": "^1.1.3",
+        "es-abstract": "^1.17.0",
+        "is-string": "^1.0.5"
+      }
+    },
+    "array-map": {
+      "version": "0.0.0",
+      "resolved": "https://registry.npmjs.org/array-map/-/array-map-0.0.0.tgz",
+      "integrity": "sha1-iKK6tz0c97zVwbEYoAP2b2ZfpmI="
+    },
+    "array-reduce": {
+      "version": "0.0.0",
+      "resolved": "https://registry.npmjs.org/array-reduce/-/array-reduce-0.0.0.tgz",
+      "integrity": "sha1-FziZ0//Rx9k4PkR5Ul2+J4yrXys="
+    },
+    "array-union": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/array-union/-/array-union-1.0.2.tgz",
+      "integrity": "sha1-mjRBDk9OPaI96jdb5b5w8kd47Dk=",
+      "requires": {
+        "array-uniq": "^1.0.1"
+      }
+    },
+    "array-uniq": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/array-uniq/-/array-uniq-1.0.3.tgz",
+      "integrity": "sha1-r2rId6Jcx/dOBYiUdThY39sk/bY="
+    },
+    "array-unique": {
+      "version": "0.3.2",
+      "resolved": "https://registry.npmjs.org/array-unique/-/array-unique-0.3.2.tgz",
+      "integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
+    },
+    "array.prototype.flat": {
+      "version": "1.2.3",
+      "resolved": "https://registry.npmjs.org/array.prototype.flat/-/array.prototype.flat-1.2.3.tgz",
+      "integrity": "sha512-gBlRZV0VSmfPIeWfuuy56XZMvbVfbEUnOXUvt3F/eUUUSyzlgLxhEX4YAEpxNAogRGehPSnfXyPtYyKAhkzQhQ==",
+      "requires": {
+        "define-properties": "^1.1.3",
+        "es-abstract": "^1.17.0-next.1"
+      }
+    },
+    "arraybuffer-concat": {
+      "version": "0.0.1",
+      "resolved": "https://registry.npmjs.org/arraybuffer-concat/-/arraybuffer-concat-0.0.1.tgz",
+      "integrity": "sha1-fIQA6UXFZKXpUO997C247vaJTPg=",
+      "requires": {
+        "tape": "^3.0.3"
+      }
+    },
+    "arrify": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/arrify/-/arrify-1.0.1.tgz",
+      "integrity": "sha1-iYUI2iIm84DfkEcoRWhJwVAaSw0="
+    },
+    "asap": {
+      "version": "2.0.6",
+      "resolved": "https://registry.npmjs.org/asap/-/asap-2.0.6.tgz",
+      "integrity": "sha1-5QNHYR1+aQlDIIu9r+vLwvuGbUY="
+    },
+    "asn1": {
+      "version": "0.2.4",
+      "resolved": "https://registry.npmjs.org/asn1/-/asn1-0.2.4.tgz",
+      "integrity": "sha512-jxwzQpLQjSmWXgwaCZE9Nz+glAG01yF1QnWgbhGwHI5A6FRIEY6IVqtHhIepHqI7/kyEyQEagBC5mBEFlIYvdg==",
+      "requires": {
+        "safer-buffer": "~2.1.0"
+      }
+    },
+    "asn1.js": {
+      "version": "4.10.1",
+      "resolved": "https://registry.npmjs.org/asn1.js/-/asn1.js-4.10.1.tgz",
+      "integrity": "sha512-p32cOF5q0Zqs9uBiONKYLm6BClCoBCM5O9JfeUSlnQLBTxYdTK+pW+nXflm8UkKd2UYlEbYz5qEi0JuZR9ckSw==",
+      "requires": {
+        "bn.js": "^4.0.0",
+        "inherits": "^2.0.1",
+        "minimalistic-assert": "^1.0.0"
+      }
+    },
+    "assert": {
+      "version": "1.4.1",
+      "resolved": "https://registry.npmjs.org/assert/-/assert-1.4.1.tgz",
+      "integrity": "sha1-mZEtWRg2tab1s0XA8H7vwI/GXZE=",
+      "requires": {
+        "util": "0.10.3"
+      }
+    },
+    "assert-plus": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",
+      "integrity": "sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU="
+    },
+    "assign-symbols": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/assign-symbols/-/assign-symbols-1.0.0.tgz",
+      "integrity": "sha1-WWZ/QfrdTyDMvCu5a41Pf3jsA2c="
+    },
+    "ast-types-flow": {
+      "version": "0.0.7",
+      "resolved": "https://registry.npmjs.org/ast-types-flow/-/ast-types-flow-0.0.7.tgz",
+      "integrity": "sha1-9wtzXGvKGlycItmCw+Oef+ujva0="
+    },
+    "astral-regex": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/astral-regex/-/astral-regex-1.0.0.tgz",
+      "integrity": "sha512-+Ryf6g3BKoRc7jfp7ad8tM4TtMiaWvbF/1/sQcZPkkS7ag3D5nMBCe2UfOTONtAkaG0tO0ij3C5Lwmf1EiyjHg=="
+    },
+    "async": {
+      "version": "2.6.3",
+      "resolved": "https://registry.npmjs.org/async/-/async-2.6.3.tgz",
+      "integrity": "sha512-zflvls11DCy+dQWzTW2dzuilv8Z5X/pjfmZOWba6TNIVDm+2UDaJmXSOXlasHKfNBs8oo3M0aT50fDEWfKZjXg==",
+      "requires": {
+        "lodash": "^4.17.14"
+      }
+    },
+    "async-each": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/async-each/-/async-each-1.0.3.tgz",
+      "integrity": "sha512-z/WhQ5FPySLdvREByI2vZiTWwCnF0moMJ1hK9YQwDTHKh6I7/uSckMetoRGb5UBZPC1z0jlw+n/XCgjeH7y1AQ=="
+    },
+    "async-foreach": {
+      "version": "0.1.3",
+      "resolved": "https://registry.npmjs.org/async-foreach/-/async-foreach-0.1.3.tgz",
+      "integrity": "sha1-NhIfhFwFeBct5Bmpfb6x0W7DRUI=",
+      "dev": true
+    },
+    "async-limiter": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/async-limiter/-/async-limiter-1.0.1.tgz",
+      "integrity": "sha512-csOlWGAcRFJaI6m+F2WKdnMKr4HhdhFVBk0H/QbJFMCr+uO2kwohwXQPxw/9OCxp05r5ghVBFSyioixx3gfkNQ=="
+    },
+    "asynckit": {
+      "version": "0.4.0",
+      "resolved": "https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz",
+      "integrity": "sha1-x57Zf380y48robyXkLzDZkdLS3k="
+    },
+    "atob": {
+      "version": "2.1.2",
+      "resolved": "https://registry.npmjs.org/atob/-/atob-2.1.2.tgz",
+      "integrity": "sha512-Wm6ukoaOGJi/73p/cl2GvLjTI5JM1k/O14isD73YML8StrH/7/lRFgmg8nICZgD3bZZvjwCGxtMOD3wWNAu8cg=="
+    },
+    "autoprefixer": {
+      "version": "9.7.6",
+      "resolved": "https://registry.npmjs.org/autoprefixer/-/autoprefixer-9.7.6.tgz",
+      "integrity": "sha512-F7cYpbN7uVVhACZTeeIeealwdGM6wMtfWARVLTy5xmKtgVdBNJvbDRoCK3YO1orcs7gv/KwYlb3iXwu9Ug9BkQ==",
+      "requires": {
+        "browserslist": "^4.11.1",
+        "caniuse-lite": "^1.0.30001039",
+        "chalk": "^2.4.2",
+        "normalize-range": "^0.1.2",
+        "num2fraction": "^1.2.2",
+        "postcss": "^7.0.27",
+        "postcss-value-parser": "^4.0.3"
+      }
+    },
+    "aws-sign2": {
+      "version": "0.7.0",
+      "resolved": "https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.7.0.tgz",
+      "integrity": "sha1-tG6JCTSpWR8tL2+G1+ap8bP+dqg="
+    },
+    "aws4": {
+      "version": "1.9.1",
+      "resolved": "https://registry.npmjs.org/aws4/-/aws4-1.9.1.tgz",
+      "integrity": "sha512-wMHVg2EOHaMRxbzgFJ9gtjOOCrI80OHLG14rxi28XwOW8ux6IiEbRCGGGqCtdAIg4FQCbW20k9RsT4y3gJlFug=="
+    },
+    "axobject-query": {
+      "version": "2.1.2",
+      "resolved": "https://registry.npmjs.org/axobject-query/-/axobject-query-2.1.2.tgz",
+      "integrity": "sha512-ICt34ZmrVt8UQnvPl6TVyDTkmhXmAyAT4Jh5ugfGUX4MOrZ+U/ZY6/sdylRw3qGNr9Ub5AJsaHeDMzNLehRdOQ=="
+    },
+    "babel": {
+      "version": "6.23.0",
+      "resolved": "https://registry.npmjs.org/babel/-/babel-6.23.0.tgz",
+      "integrity": "sha1-0NHn2APpdHZb7qMjLU4VPA77kPQ="
+    },
+    "babel-code-frame": {
+      "version": "6.26.0",
+      "resolved": "https://registry.npmjs.org/babel-code-frame/-/babel-code-frame-6.26.0.tgz",
+      "integrity": "sha1-Y/1D99weO7fONZR9uP42mj9Yx0s=",
+      "requires": {
+        "chalk": "^1.1.3",
+        "esutils": "^2.0.2",
+        "js-tokens": "^3.0.2"
+      },
+      "dependencies": {
+        "ansi-regex": {
+          "version": "2.1.1",
+          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",
+          "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8="
+        },
+        "ansi-styles": {
+          "version": "2.2.1",
+          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz",
+          "integrity": "sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4="
+        },
+        "chalk": {
+          "version": "1.1.3",
+          "resolved": "https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz",
+          "integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
+          "requires": {
+            "ansi-styles": "^2.2.1",
+            "escape-string-regexp": "^1.0.2",
+            "has-ansi": "^2.0.0",
+            "strip-ansi": "^3.0.0",
+            "supports-color": "^2.0.0"
+          }
+        },
+        "js-tokens": {
+          "version": "3.0.2",
+          "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-3.0.2.tgz",
+          "integrity": "sha1-mGbfOVECEw449/mWvOtlRDIJwls="
+        },
+        "strip-ansi": {
+          "version": "3.0.1",
+          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",
+          "integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",
+          "requires": {
+            "ansi-regex": "^2.0.0"
+          }
+        },
+        "supports-color": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz",
+          "integrity": "sha1-U10EXOa2Nj+kARcIRimZXp3zJMc="
+        }
+      }
+    },
+    "babel-eslint": {
+      "version": "10.1.0",
+      "resolved": "https://registry.npmjs.org/babel-eslint/-/babel-eslint-10.1.0.tgz",
+      "integrity": "sha512-ifWaTHQ0ce+448CYop8AdrQiBsGrnC+bMgfyKFdi6EsPLTAWG+QfyDeM6OH+FmWnKvEq5NnBMLvlBUPKQZoDSg==",
+      "requires": {
+        "@babel/code-frame": "^7.0.0",
+        "@babel/parser": "^7.7.0",
+        "@babel/traverse": "^7.7.0",
+        "@babel/types": "^7.7.0",
+        "eslint-visitor-keys": "^1.0.0",
+        "resolve": "^1.12.0"
+      }
+    },
+    "babel-extract-comments": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/babel-extract-comments/-/babel-extract-comments-1.0.0.tgz",
+      "integrity": "sha512-qWWzi4TlddohA91bFwgt6zO/J0X+io7Qp184Fw0m2JYRSTZnJbFR8+07KmzudHCZgOiKRCrjhylwv9Xd8gfhVQ==",
+      "requires": {
+        "babylon": "^6.18.0"
+      }
+    },
+    "babel-helper-builder-binary-assignment-operator-visitor": {
+      "version": "6.24.1",
+      "resolved": "https://registry.npmjs.org/babel-helper-builder-binary-assignment-operator-visitor/-/babel-helper-builder-binary-assignment-operator-visitor-6.24.1.tgz",
+      "integrity": "sha1-zORReto1b0IgvK6KAsKzRvmlZmQ=",
+      "dev": true,
+      "requires": {
+        "babel-helper-explode-assignable-expression": "^6.24.1",
+        "babel-runtime": "^6.22.0",
+        "babel-types": "^6.24.1"
+      }
+    },
+    "babel-helper-builder-react-jsx": {
+      "version": "6.26.0",
+      "resolved": "https://registry.npmjs.org/babel-helper-builder-react-jsx/-/babel-helper-builder-react-jsx-6.26.0.tgz",
+      "integrity": "sha1-Of+DE7dci2Xc7/HzHTg+D/KkCKA=",
+      "dev": true,
+      "requires": {
+        "babel-runtime": "^6.26.0",
+        "babel-types": "^6.26.0",
+        "esutils": "^2.0.2"
+      }
+    },
+    "babel-helper-call-delegate": {
+      "version": "6.24.1",
+      "resolved": "https://registry.npmjs.org/babel-helper-call-delegate/-/babel-helper-call-delegate-6.24.1.tgz",
+      "integrity": "sha1-7Oaqzdx25Bw0YfiL/Fdb0Nqi340=",
+      "dev": true,
+      "requires": {
+        "babel-helper-hoist-variables": "^6.24.1",
+        "babel-runtime": "^6.22.0",
+        "babel-traverse": "^6.24.1",
+        "babel-types": "^6.24.1"
+      }
+    },
+    "babel-helper-define-map": {
+      "version": "6.26.0",
+      "resolved": "https://registry.npmjs.org/babel-helper-define-map/-/babel-helper-define-map-6.26.0.tgz",
+      "integrity": "sha1-pfVtq0GiX5fstJjH66ypgZ+Vvl8=",
+      "dev": true,
+      "requires": {
+        "babel-helper-function-name": "^6.24.1",
+        "babel-runtime": "^6.26.0",
+        "babel-types": "^6.26.0",
+        "lodash": "^4.17.4"
+      }
+    },
+    "babel-helper-explode-assignable-expression": {
+      "version": "6.24.1",
+      "resolved": "https://registry.npmjs.org/babel-helper-explode-assignable-expression/-/babel-helper-explode-assignable-expression-6.24.1.tgz",
+      "integrity": "sha1-8luCz33BBDPFX3BZLVdGQArCLKo=",
+      "dev": true,
+      "requires": {
+        "babel-runtime": "^6.22.0",
+        "babel-traverse": "^6.24.1",
+        "babel-types": "^6.24.1"
+      }
+    },
+    "babel-helper-function-name": {
+      "version": "6.24.1",
+      "resolved": "https://registry.npmjs.org/babel-helper-function-name/-/babel-helper-function-name-6.24.1.tgz",
+      "integrity": "sha1-00dbjAPtmCQqJbSDUasYOZ01gKk=",
+      "dev": true,
+      "requires": {
+        "babel-helper-get-function-arity": "^6.24.1",
+        "babel-runtime": "^6.22.0",
+        "babel-template": "^6.24.1",
+        "babel-traverse": "^6.24.1",
+        "babel-types": "^6.24.1"
+      }
+    },
+    "babel-helper-get-function-arity": {
+      "version": "6.24.1",
+      "resolved": "https://registry.npmjs.org/babel-helper-get-function-arity/-/babel-helper-get-function-arity-6.24.1.tgz",
+      "integrity": "sha1-j3eCqpNAfEHTqlCQj4mwMbG2hT0=",
+      "dev": true,
+      "requires": {
+        "babel-runtime": "^6.22.0",
+        "babel-types": "^6.24.1"
+      }
+    },
+    "babel-helper-hoist-variables": {
+      "version": "6.24.1",
+      "resolved": "https://registry.npmjs.org/babel-helper-hoist-variables/-/babel-helper-hoist-variables-6.24.1.tgz",
+      "integrity": "sha1-HssnaJydJVE+rbyZFKc/VAi+enY=",
+      "dev": true,
+      "requires": {
+        "babel-runtime": "^6.22.0",
+        "babel-types": "^6.24.1"
+      }
+    },
+    "babel-helper-optimise-call-expression": {
+      "version": "6.24.1",
+      "resolved": "https://registry.npmjs.org/babel-helper-optimise-call-expression/-/babel-helper-optimise-call-expression-6.24.1.tgz",
+      "integrity": "sha1-96E0J7qfc/j0+pk8VKl4gtEkQlc=",
+      "dev": true,
+      "requires": {
+        "babel-runtime": "^6.22.0",
+        "babel-types": "^6.24.1"
+      }
+    },
+    "babel-helper-regex": {
+      "version": "6.26.0",
+      "resolved": "https://registry.npmjs.org/babel-helper-regex/-/babel-helper-regex-6.26.0.tgz",
+      "integrity": "sha1-MlxZ+QL4LyS3T6zu0DY5VPZJXnI=",
+      "dev": true,
+      "requires": {
+        "babel-runtime": "^6.26.0",
+        "babel-types": "^6.26.0",
+        "lodash": "^4.17.4"
+      }
+    },
+    "babel-helper-remap-async-to-generator": {
+      "version": "6.24.1",
+      "resolved": "https://registry.npmjs.org/babel-helper-remap-async-to-generator/-/babel-helper-remap-async-to-generator-6.24.1.tgz",
+      "integrity": "sha1-XsWBgnrXI/7N04HxySg5BnbkVRs=",
+      "dev": true,
+      "requires": {
+        "babel-helper-function-name": "^6.24.1",
+        "babel-runtime": "^6.22.0",
+        "babel-template": "^6.24.1",
+        "babel-traverse": "^6.24.1",
+        "babel-types": "^6.24.1"
+      }
+    },
+    "babel-helper-replace-supers": {
+      "version": "6.24.1",
+      "resolved": "https://registry.npmjs.org/babel-helper-replace-supers/-/babel-helper-replace-supers-6.24.1.tgz",
+      "integrity": "sha1-v22/5Dk40XNpohPKiov3S2qQqxo=",
+      "dev": true,
+      "requires": {
+        "babel-helper-optimise-call-expression": "^6.24.1",
+        "babel-messages": "^6.23.0",
+        "babel-runtime": "^6.22.0",
+        "babel-template": "^6.24.1",
+        "babel-traverse": "^6.24.1",
+        "babel-types": "^6.24.1"
+      }
+    },
+    "babel-jest": {
+      "version": "24.9.0",
+      "resolved": "https://registry.npmjs.org/babel-jest/-/babel-jest-24.9.0.tgz",
+      "integrity": "sha512-ntuddfyiN+EhMw58PTNL1ph4C9rECiQXjI4nMMBKBaNjXvqLdkXpPRcMSr4iyBrJg/+wz9brFUD6RhOAT6r4Iw==",
+      "requires": {
+        "@jest/transform": "^24.9.0",
+        "@jest/types": "^24.9.0",
+        "@types/babel__core": "^7.1.0",
+        "babel-plugin-istanbul": "^5.1.0",
+        "babel-preset-jest": "^24.9.0",
+        "chalk": "^2.4.2",
+        "slash": "^2.0.0"
+      }
+    },
+    "babel-loader": {
+      "version": "8.1.0",
+      "resolved": "https://registry.npmjs.org/babel-loader/-/babel-loader-8.1.0.tgz",
+      "integrity": "sha512-7q7nC1tYOrqvUrN3LQK4GwSk/TQorZSOlO9C+RZDZpODgyN4ZlCqE5q9cDsyWOliN+aU9B4JX01xK9eJXowJLw==",
+      "requires": {
+        "find-cache-dir": "^2.1.0",
+        "loader-utils": "^1.4.0",
+        "mkdirp": "^0.5.3",
+        "pify": "^4.0.1",
+        "schema-utils": "^2.6.5"
+      },
+      "dependencies": {
+        "pify": {
+          "version": "4.0.1",
+          "resolved": "https://registry.npmjs.org/pify/-/pify-4.0.1.tgz",
+          "integrity": "sha512-uB80kBFb/tfd68bVleG9T5GGsGPjJrLAUpR5PZIrhBnIaRTQRjqdJSsIKkOP6OAIFbj7GOrcudc5pNjZ+geV2g=="
+        }
+      }
+    },
+    "babel-messages": {
+      "version": "6.23.0",
+      "resolved": "https://registry.npmjs.org/babel-messages/-/babel-messages-6.23.0.tgz",
+      "integrity": "sha1-8830cDhYA1sqKVHG7F7fbGLyYw4=",
+      "dev": true,
+      "requires": {
+        "babel-runtime": "^6.22.0"
+      }
+    },
+    "babel-plugin-check-es2015-constants": {
+      "version": "6.22.0",
+      "resolved": "https://registry.npmjs.org/babel-plugin-check-es2015-constants/-/babel-plugin-check-es2015-constants-6.22.0.tgz",
+      "integrity": "sha1-NRV7EBQm/S/9PaP3XH0ekYNbv4o=",
+      "dev": true,
+      "requires": {
+        "babel-runtime": "^6.22.0"
+      }
+    },
+    "babel-plugin-dynamic-import-node": {
+      "version": "2.3.3",
+      "resolved": "https://registry.npmjs.org/babel-plugin-dynamic-import-node/-/babel-plugin-dynamic-import-node-2.3.3.tgz",
+      "integrity": "sha512-jZVI+s9Zg3IqA/kdi0i6UDCybUI3aSBLnglhYbSSjKlV7yF1F/5LWv8MakQmvYpnbJDS6fcBL2KzHSxNCMtWSQ==",
+      "requires": {
+        "object.assign": "^4.1.0"
+      }
+    },
+    "babel-plugin-istanbul": {
+      "version": "5.2.0",
+      "resolved": "https://registry.npmjs.org/babel-plugin-istanbul/-/babel-plugin-istanbul-5.2.0.tgz",
+      "integrity": "sha512-5LphC0USA8t4i1zCtjbbNb6jJj/9+X6P37Qfirc/70EQ34xKlMW+a1RHGwxGI+SwWpNwZ27HqvzAobeqaXwiZw==",
+      "requires": {
+        "@babel/helper-plugin-utils": "^7.0.0",
+        "find-up": "^3.0.0",
+        "istanbul-lib-instrument": "^3.3.0",
+        "test-exclude": "^5.2.3"
+      },
+      "dependencies": {
+        "find-up": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/find-up/-/find-up-3.0.0.tgz",
+          "integrity": "sha512-1yD6RmLI1XBfxugvORwlck6f75tYL+iR0jqwsOrOxMZyGYqUuDhJ0l4AXdO1iX/FTs9cBAMEk1gWSEx1kSbylg==",
+          "requires": {
+            "locate-path": "^3.0.0"
+          }
+        },
+        "locate-path": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-3.0.0.tgz",
+          "integrity": "sha512-7AO748wWnIhNqAuaty2ZWHkQHRSNfPVIsPIfwEOWO22AmaoVrWavlOcMR5nzTLNYvp36X220/maaRsrec1G65A==",
+          "requires": {
+            "p-locate": "^3.0.0",
+            "path-exists": "^3.0.0"
+          }
+        },
+        "p-limit": {
+          "version": "2.3.0",
+          "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz",
+          "integrity": "sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==",
+          "requires": {
+            "p-try": "^2.0.0"
+          }
+        },
+        "p-locate": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-3.0.0.tgz",
+          "integrity": "sha512-x+12w/To+4GFfgJhBEpiDcLozRJGegY+Ei7/z0tSLkMmxGZNybVMSfWj9aJn8Z5Fc7dBUNJOOVgPv2H7IwulSQ==",
+          "requires": {
+            "p-limit": "^2.0.0"
+          }
+        },
+        "p-try": {
+          "version": "2.2.0",
+          "resolved": "https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz",
+          "integrity": "sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ=="
+        }
+      }
+    },
+    "babel-plugin-jest-hoist": {
+      "version": "24.9.0",
+      "resolved": "https://registry.npmjs.org/babel-plugin-jest-hoist/-/babel-plugin-jest-hoist-24.9.0.tgz",
+      "integrity": "sha512-2EMA2P8Vp7lG0RAzr4HXqtYwacfMErOuv1U3wrvxHX6rD1sV6xS3WXG3r8TRQ2r6w8OhvSdWt+z41hQNwNm3Xw==",
+      "requires": {
+        "@types/babel__traverse": "^7.0.6"
+      }
+    },
+    "babel-plugin-macros": {
+      "version": "2.8.0",
+      "resolved": "https://registry.npmjs.org/babel-plugin-macros/-/babel-plugin-macros-2.8.0.tgz",
+      "integrity": "sha512-SEP5kJpfGYqYKpBrj5XU3ahw5p5GOHJ0U5ssOSQ/WBVdwkD2Dzlce95exQTs3jOVWPPKLBN2rlEWkCK7dSmLvg==",
+      "requires": {
+        "@babel/runtime": "^7.7.2",
+        "cosmiconfig": "^6.0.0",
+        "resolve": "^1.12.0"
+      },
+      "dependencies": {
+        "cosmiconfig": {
+          "version": "6.0.0",
+          "resolved": "https://registry.npmjs.org/cosmiconfig/-/cosmiconfig-6.0.0.tgz",
+          "integrity": "sha512-xb3ZL6+L8b9JLLCx3ZdoZy4+2ECphCMo2PwqgP1tlfVq6M6YReyzBJtvWWtbDSpNr9hn96pkCiZqUcFEc+54Qg==",
+          "requires": {
+            "@types/parse-json": "^4.0.0",
+            "import-fresh": "^3.1.0",
+            "parse-json": "^5.0.0",
+            "path-type": "^4.0.0",
+            "yaml": "^1.7.2"
+          }
+        },
+        "import-fresh": {
+          "version": "3.2.1",
+          "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-3.2.1.tgz",
+          "integrity": "sha512-6e1q1cnWP2RXD9/keSkxHScg508CdXqXWgWBaETNhyuBFz+kUZlKboh+ISK+bU++DmbHimVBrOz/zzPe0sZ3sQ==",
+          "requires": {
+            "parent-module": "^1.0.0",
+            "resolve-from": "^4.0.0"
+          }
+        },
+        "parse-json": {
+          "version": "5.0.0",
+          "resolved": "https://registry.npmjs.org/parse-json/-/parse-json-5.0.0.tgz",
+          "integrity": "sha512-OOY5b7PAEFV0E2Fir1KOkxchnZNCdowAJgQ5NuxjpBKTRP3pQhwkrkxqQjeoKJ+fO7bCpmIZaogI4eZGDMEGOw==",
+          "requires": {
+            "@babel/code-frame": "^7.0.0",
+            "error-ex": "^1.3.1",
+            "json-parse-better-errors": "^1.0.1",
+            "lines-and-columns": "^1.1.6"
+          }
+        },
+        "path-type": {
+          "version": "4.0.0",
+          "resolved": "https://registry.npmjs.org/path-type/-/path-type-4.0.0.tgz",
+          "integrity": "sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw=="
+        },
+        "resolve-from": {
+          "version": "4.0.0",
+          "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",
+          "integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g=="
+        }
+      }
+    },
+    "babel-plugin-module-resolver": {
+      "version": "3.2.0",
+      "resolved": "https://registry.npmjs.org/babel-plugin-module-resolver/-/babel-plugin-module-resolver-3.2.0.tgz",
+      "integrity": "sha512-tjR0GvSndzPew/Iayf4uICWZqjBwnlMWjSx6brryfQ81F9rxBVqwDJtFCV8oOs0+vJeefK9TmdZtkIFdFe1UnA==",
+      "requires": {
+        "find-babel-config": "^1.1.0",
+        "glob": "^7.1.2",
+        "pkg-up": "^2.0.0",
+        "reselect": "^3.0.1",
+        "resolve": "^1.4.0"
+      }
+    },
+    "babel-plugin-named-asset-import": {
+      "version": "0.3.6",
+      "resolved": "https://registry.npmjs.org/babel-plugin-named-asset-import/-/babel-plugin-named-asset-import-0.3.6.tgz",
+      "integrity": "sha512-1aGDUfL1qOOIoqk9QKGIo2lANk+C7ko/fqH0uIyC71x3PEGz0uVP8ISgfEsFuG+FKmjHTvFK/nNM8dowpmUxLA=="
+    },
+    "babel-plugin-react-native-web": {
+      "version": "0.11.7",
+      "resolved": "https://registry.npmjs.org/babel-plugin-react-native-web/-/babel-plugin-react-native-web-0.11.7.tgz",
+      "integrity": "sha512-CxE7uhhqkzAFkwV2X7+Mc/UVPujQQDtja/EGxCXRJvdYRi72QTmaJYKbK1lV9qgTZuB+TDguU89coaA9Z1BNbg=="
+    },
+    "babel-plugin-syntax-async-functions": {
+      "version": "6.13.0",
+      "resolved": "https://registry.npmjs.org/babel-plugin-syntax-async-functions/-/babel-plugin-syntax-async-functions-6.13.0.tgz",
+      "integrity": "sha1-ytnK0RkbWtY0vzCuCHI5HgZHvpU=",
+      "dev": true
+    },
+    "babel-plugin-syntax-exponentiation-operator": {
+      "version": "6.13.0",
+      "resolved": "https://registry.npmjs.org/babel-plugin-syntax-exponentiation-operator/-/babel-plugin-syntax-exponentiation-operator-6.13.0.tgz",
+      "integrity": "sha1-nufoM3KQ2pUoggGmpX9BcDF4MN4=",
+      "dev": true
+    },
+    "babel-plugin-syntax-flow": {
+      "version": "6.18.0",
+      "resolved": "https://registry.npmjs.org/babel-plugin-syntax-flow/-/babel-plugin-syntax-flow-6.18.0.tgz",
+      "integrity": "sha1-TDqyCiryaqIM0lmVw5jE63AxDI0=",
+      "dev": true
+    },
+    "babel-plugin-syntax-jsx": {
+      "version": "6.18.0",
+      "resolved": "https://registry.npmjs.org/babel-plugin-syntax-jsx/-/babel-plugin-syntax-jsx-6.18.0.tgz",
+      "integrity": "sha1-CvMqmm4Tyno/1QaeYtew9Y0NiUY=",
+      "dev": true
+    },
+    "babel-plugin-syntax-object-rest-spread": {
+      "version": "6.13.0",
+      "resolved": "https://registry.npmjs.org/babel-plugin-syntax-object-rest-spread/-/babel-plugin-syntax-object-rest-spread-6.13.0.tgz",
+      "integrity": "sha1-/WU28rzhODb/o6VFjEkDpZe7O/U="
+    },
+    "babel-plugin-syntax-trailing-function-commas": {
+      "version": "7.0.0-beta.0",
+      "resolved": "https://registry.npmjs.org/babel-plugin-syntax-trailing-function-commas/-/babel-plugin-syntax-trailing-function-commas-7.0.0-beta.0.tgz",
+      "integrity": "sha512-Xj9XuRuz3nTSbaTXWv3itLOcxyF4oPD8douBBmj7U9BBC6nEBYfyOJYQMf/8PJAFotC62UY5dFfIGEPr7WswzQ=="
+    },
+    "babel-plugin-transform-async-to-generator": {
+      "version": "6.24.1",
+      "resolved": "https://registry.npmjs.org/babel-plugin-transform-async-to-generator/-/babel-plugin-transform-async-to-generator-6.24.1.tgz",
+      "integrity": "sha1-ZTbjeK/2yx1VF6wOQOs+n8jQh2E=",
+      "dev": true,
+      "requires": {
+        "babel-helper-remap-async-to-generator": "^6.24.1",
+        "babel-plugin-syntax-async-functions": "^6.8.0",
+        "babel-runtime": "^6.22.0"
+      }
+    },
+    "babel-plugin-transform-es2015-arrow-functions": {
+      "version": "6.22.0",
+      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-arrow-functions/-/babel-plugin-transform-es2015-arrow-functions-6.22.0.tgz",
+      "integrity": "sha1-RSaSy3EdX3ncf4XkQM5BufJE0iE=",
+      "dev": true,
+      "requires": {
+        "babel-runtime": "^6.22.0"
+      }
+    },
+    "babel-plugin-transform-es2015-block-scoped-functions": {
+      "version": "6.22.0",
+      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-block-scoped-functions/-/babel-plugin-transform-es2015-block-scoped-functions-6.22.0.tgz",
+      "integrity": "sha1-u8UbSflk1wy42OC5ToICRs46YUE=",
+      "dev": true,
+      "requires": {
+        "babel-runtime": "^6.22.0"
+      }
+    },
+    "babel-plugin-transform-es2015-block-scoping": {
+      "version": "6.26.0",
+      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-block-scoping/-/babel-plugin-transform-es2015-block-scoping-6.26.0.tgz",
+      "integrity": "sha1-1w9SmcEwjQXBL0Y4E7CgnnOxiV8=",
+      "dev": true,
+      "requires": {
+        "babel-runtime": "^6.26.0",
+        "babel-template": "^6.26.0",
+        "babel-traverse": "^6.26.0",
+        "babel-types": "^6.26.0",
+        "lodash": "^4.17.4"
+      }
+    },
+    "babel-plugin-transform-es2015-classes": {
+      "version": "6.24.1",
+      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-classes/-/babel-plugin-transform-es2015-classes-6.24.1.tgz",
+      "integrity": "sha1-WkxYpQyclGHlZLSyo7+ryXolhNs=",
+      "dev": true,
+      "requires": {
+        "babel-helper-define-map": "^6.24.1",
+        "babel-helper-function-name": "^6.24.1",
+        "babel-helper-optimise-call-expression": "^6.24.1",
+        "babel-helper-replace-supers": "^6.24.1",
+        "babel-messages": "^6.23.0",
+        "babel-runtime": "^6.22.0",
+        "babel-template": "^6.24.1",
+        "babel-traverse": "^6.24.1",
+        "babel-types": "^6.24.1"
+      }
+    },
+    "babel-plugin-transform-es2015-computed-properties": {
+      "version": "6.24.1",
+      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-computed-properties/-/babel-plugin-transform-es2015-computed-properties-6.24.1.tgz",
+      "integrity": "sha1-b+Ko0WiV1WNPTNmZttNICjCBWbM=",
+      "dev": true,
+      "requires": {
+        "babel-runtime": "^6.22.0",
+        "babel-template": "^6.24.1"
+      }
+    },
+    "babel-plugin-transform-es2015-destructuring": {
+      "version": "6.23.0",
+      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-destructuring/-/babel-plugin-transform-es2015-destructuring-6.23.0.tgz",
+      "integrity": "sha1-mXux8auWf2gtKwh2/jWNYOdlxW0=",
+      "dev": true,
+      "requires": {
+        "babel-runtime": "^6.22.0"
+      }
+    },
+    "babel-plugin-transform-es2015-duplicate-keys": {
+      "version": "6.24.1",
+      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-duplicate-keys/-/babel-plugin-transform-es2015-duplicate-keys-6.24.1.tgz",
+      "integrity": "sha1-c+s9MQypaePvnskcU3QabxV2Qj4=",
+      "dev": true,
+      "requires": {
+        "babel-runtime": "^6.22.0",
+        "babel-types": "^6.24.1"
+      }
+    },
+    "babel-plugin-transform-es2015-for-of": {
+      "version": "6.23.0",
+      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-for-of/-/babel-plugin-transform-es2015-for-of-6.23.0.tgz",
+      "integrity": "sha1-9HyVsrYT3x0+zC/bdXNiPHUkhpE=",
+      "dev": true,
+      "requires": {
+        "babel-runtime": "^6.22.0"
+      }
+    },
+    "babel-plugin-transform-es2015-function-name": {
+      "version": "6.24.1",
+      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-function-name/-/babel-plugin-transform-es2015-function-name-6.24.1.tgz",
+      "integrity": "sha1-g0yJhTvDaxrw86TF26qU/Y6sqos=",
+      "dev": true,
+      "requires": {
+        "babel-helper-function-name": "^6.24.1",
+        "babel-runtime": "^6.22.0",
+        "babel-types": "^6.24.1"
+      }
+    },
+    "babel-plugin-transform-es2015-literals": {
+      "version": "6.22.0",
+      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-literals/-/babel-plugin-transform-es2015-literals-6.22.0.tgz",
+      "integrity": "sha1-T1SgLWzWbPkVKAAZox0xklN3yi4=",
+      "dev": true,
+      "requires": {
+        "babel-runtime": "^6.22.0"
+      }
+    },
+    "babel-plugin-transform-es2015-modules-amd": {
+      "version": "6.24.1",
+      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-modules-amd/-/babel-plugin-transform-es2015-modules-amd-6.24.1.tgz",
+      "integrity": "sha1-Oz5UAXI5hC1tGcMBHEvS8AoA0VQ=",
+      "dev": true,
+      "requires": {
+        "babel-plugin-transform-es2015-modules-commonjs": "^6.24.1",
+        "babel-runtime": "^6.22.0",
+        "babel-template": "^6.24.1"
+      }
+    },
+    "babel-plugin-transform-es2015-modules-commonjs": {
+      "version": "6.26.2",
+      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-modules-commonjs/-/babel-plugin-transform-es2015-modules-commonjs-6.26.2.tgz",
+      "integrity": "sha512-CV9ROOHEdrjcwhIaJNBGMBCodN+1cfkwtM1SbUHmvyy35KGT7fohbpOxkE2uLz1o6odKK2Ck/tz47z+VqQfi9Q==",
+      "dev": true,
+      "requires": {
+        "babel-plugin-transform-strict-mode": "^6.24.1",
+        "babel-runtime": "^6.26.0",
+        "babel-template": "^6.26.0",
+        "babel-types": "^6.26.0"
+      }
+    },
+    "babel-plugin-transform-es2015-modules-systemjs": {
+      "version": "6.24.1",
+      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-modules-systemjs/-/babel-plugin-transform-es2015-modules-systemjs-6.24.1.tgz",
+      "integrity": "sha1-/4mhQrkRmpBhlfXxBuzzBdlAfSM=",
+      "dev": true,
+      "requires": {
+        "babel-helper-hoist-variables": "^6.24.1",
+        "babel-runtime": "^6.22.0",
+        "babel-template": "^6.24.1"
+      }
+    },
+    "babel-plugin-transform-es2015-modules-umd": {
+      "version": "6.24.1",
+      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-modules-umd/-/babel-plugin-transform-es2015-modules-umd-6.24.1.tgz",
+      "integrity": "sha1-rJl+YoXNGO1hdq22B9YCNErThGg=",
+      "dev": true,
+      "requires": {
+        "babel-plugin-transform-es2015-modules-amd": "^6.24.1",
+        "babel-runtime": "^6.22.0",
+        "babel-template": "^6.24.1"
+      }
+    },
+    "babel-plugin-transform-es2015-object-super": {
+      "version": "6.24.1",
+      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-object-super/-/babel-plugin-transform-es2015-object-super-6.24.1.tgz",
+      "integrity": "sha1-JM72muIcuDp/hgPa0CH1cusnj40=",
+      "dev": true,
+      "requires": {
+        "babel-helper-replace-supers": "^6.24.1",
+        "babel-runtime": "^6.22.0"
+      }
+    },
+    "babel-plugin-transform-es2015-parameters": {
+      "version": "6.24.1",
+      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-parameters/-/babel-plugin-transform-es2015-parameters-6.24.1.tgz",
+      "integrity": "sha1-V6w1GrScrxSpfNE7CfZv3wpiXys=",
+      "dev": true,
+      "requires": {
+        "babel-helper-call-delegate": "^6.24.1",
+        "babel-helper-get-function-arity": "^6.24.1",
+        "babel-runtime": "^6.22.0",
+        "babel-template": "^6.24.1",
+        "babel-traverse": "^6.24.1",
+        "babel-types": "^6.24.1"
+      }
+    },
+    "babel-plugin-transform-es2015-shorthand-properties": {
+      "version": "6.24.1",
+      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-shorthand-properties/-/babel-plugin-transform-es2015-shorthand-properties-6.24.1.tgz",
+      "integrity": "sha1-JPh11nIch2YbvZmkYi5R8U3jiqA=",
+      "dev": true,
+      "requires": {
+        "babel-runtime": "^6.22.0",
+        "babel-types": "^6.24.1"
+      }
+    },
+    "babel-plugin-transform-es2015-spread": {
+      "version": "6.22.0",
+      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-spread/-/babel-plugin-transform-es2015-spread-6.22.0.tgz",
+      "integrity": "sha1-1taKmfia7cRTbIGlQujdnxdG+NE=",
+      "dev": true,
+      "requires": {
+        "babel-runtime": "^6.22.0"
+      }
+    },
+    "babel-plugin-transform-es2015-sticky-regex": {
+      "version": "6.24.1",
+      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-sticky-regex/-/babel-plugin-transform-es2015-sticky-regex-6.24.1.tgz",
+      "integrity": "sha1-AMHNsaynERLN8M9hJsLta0V8zbw=",
+      "dev": true,
+      "requires": {
+        "babel-helper-regex": "^6.24.1",
+        "babel-runtime": "^6.22.0",
+        "babel-types": "^6.24.1"
+      }
+    },
+    "babel-plugin-transform-es2015-template-literals": {
+      "version": "6.22.0",
+      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-template-literals/-/babel-plugin-transform-es2015-template-literals-6.22.0.tgz",
+      "integrity": "sha1-qEs0UPfp+PH2g51taH2oS7EjbY0=",
+      "dev": true,
+      "requires": {
+        "babel-runtime": "^6.22.0"
+      }
+    },
+    "babel-plugin-transform-es2015-typeof-symbol": {
+      "version": "6.23.0",
+      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-typeof-symbol/-/babel-plugin-transform-es2015-typeof-symbol-6.23.0.tgz",
+      "integrity": "sha1-3sCfHN3/lLUqxz1QXITfWdzOs3I=",
+      "dev": true,
+      "requires": {
+        "babel-runtime": "^6.22.0"
+      }
+    },
+    "babel-plugin-transform-es2015-unicode-regex": {
+      "version": "6.24.1",
+      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-unicode-regex/-/babel-plugin-transform-es2015-unicode-regex-6.24.1.tgz",
+      "integrity": "sha1-04sS9C6nMj9yk4fxinxa4frrNek=",
+      "dev": true,
+      "requires": {
+        "babel-helper-regex": "^6.24.1",
+        "babel-runtime": "^6.22.0",
+        "regexpu-core": "^2.0.0"
+      },
+      "dependencies": {
+        "jsesc": {
+          "version": "0.5.0",
+          "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-0.5.0.tgz",
+          "integrity": "sha1-597mbjXW/Bb3EP6R1c9p9w8IkR0=",
+          "dev": true
+        },
+        "regexpu-core": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/regexpu-core/-/regexpu-core-2.0.0.tgz",
+          "integrity": "sha1-SdA4g3uNz4v6W5pCE5k45uoq4kA=",
+          "dev": true,
+          "requires": {
+            "regenerate": "^1.2.1",
+            "regjsgen": "^0.2.0",
+            "regjsparser": "^0.1.4"
+          }
+        },
+        "regjsgen": {
+          "version": "0.2.0",
+          "resolved": "https://registry.npmjs.org/regjsgen/-/regjsgen-0.2.0.tgz",
+          "integrity": "sha1-bAFq3qxVT3WCP+N6wFuS1aTtsfc=",
+          "dev": true
+        },
+        "regjsparser": {
+          "version": "0.1.5",
+          "resolved": "https://registry.npmjs.org/regjsparser/-/regjsparser-0.1.5.tgz",
+          "integrity": "sha1-fuj4Tcb6eS0/0K4ijSS9lJ6tIFw=",
+          "dev": true,
+          "requires": {
+            "jsesc": "~0.5.0"
+          }
+        }
+      }
+    },
+    "babel-plugin-transform-exponentiation-operator": {
+      "version": "6.24.1",
+      "resolved": "https://registry.npmjs.org/babel-plugin-transform-exponentiation-operator/-/babel-plugin-transform-exponentiation-operator-6.24.1.tgz",
+      "integrity": "sha1-KrDJx/MJj6SJB3cruBP+QejeOg4=",
+      "dev": true,
+      "requires": {
+        "babel-helper-builder-binary-assignment-operator-visitor": "^6.24.1",
+        "babel-plugin-syntax-exponentiation-operator": "^6.8.0",
+        "babel-runtime": "^6.22.0"
+      }
+    },
+    "babel-plugin-transform-flow-strip-types": {
+      "version": "6.22.0",
+      "resolved": "https://registry.npmjs.org/babel-plugin-transform-flow-strip-types/-/babel-plugin-transform-flow-strip-types-6.22.0.tgz",
+      "integrity": "sha1-hMtnKTXUNxT9wyvOhFaNh0Qc988=",
+      "dev": true,
+      "requires": {
+        "babel-plugin-syntax-flow": "^6.18.0",
+        "babel-runtime": "^6.22.0"
+      }
+    },
+    "babel-plugin-transform-object-rest-spread": {
+      "version": "6.26.0",
+      "resolved": "https://registry.npmjs.org/babel-plugin-transform-object-rest-spread/-/babel-plugin-transform-object-rest-spread-6.26.0.tgz",
+      "integrity": "sha1-DzZpLVD+9rfi1LOsFHgTepY7ewY=",
+      "requires": {
+        "babel-plugin-syntax-object-rest-spread": "^6.8.0",
+        "babel-runtime": "^6.26.0"
+      }
+    },
+    "babel-plugin-transform-react-display-name": {
+      "version": "6.25.0",
+      "resolved": "https://registry.npmjs.org/babel-plugin-transform-react-display-name/-/babel-plugin-transform-react-display-name-6.25.0.tgz",
+      "integrity": "sha1-Z+K/Hx6ck6sI25Z5LgU5K/LMKNE=",
+      "dev": true,
+      "requires": {
+        "babel-runtime": "^6.22.0"
+      }
+    },
+    "babel-plugin-transform-react-jsx": {
+      "version": "6.24.1",
+      "resolved": "https://registry.npmjs.org/babel-plugin-transform-react-jsx/-/babel-plugin-transform-react-jsx-6.24.1.tgz",
+      "integrity": "sha1-hAoCjn30YN/DotKfDA2R9jduZqM=",
+      "dev": true,
+      "requires": {
+        "babel-helper-builder-react-jsx": "^6.24.1",
+        "babel-plugin-syntax-jsx": "^6.8.0",
+        "babel-runtime": "^6.22.0"
+      }
+    },
+    "babel-plugin-transform-react-jsx-self": {
+      "version": "6.22.0",
+      "resolved": "https://registry.npmjs.org/babel-plugin-transform-react-jsx-self/-/babel-plugin-transform-react-jsx-self-6.22.0.tgz",
+      "integrity": "sha1-322AqdomEqEh5t3XVYvL7PBuY24=",
+      "dev": true,
+      "requires": {
+        "babel-plugin-syntax-jsx": "^6.8.0",
+        "babel-runtime": "^6.22.0"
+      }
+    },
+    "babel-plugin-transform-react-jsx-source": {
+      "version": "6.22.0",
+      "resolved": "https://registry.npmjs.org/babel-plugin-transform-react-jsx-source/-/babel-plugin-transform-react-jsx-source-6.22.0.tgz",
+      "integrity": "sha1-ZqwSFT9c0tF7PBkmj0vwGX9E7NY=",
+      "dev": true,
+      "requires": {
+        "babel-plugin-syntax-jsx": "^6.8.0",
+        "babel-runtime": "^6.22.0"
+      }
+    },
+    "babel-plugin-transform-react-remove-prop-types": {
+      "version": "0.4.24",
+      "resolved": "https://registry.npmjs.org/babel-plugin-transform-react-remove-prop-types/-/babel-plugin-transform-react-remove-prop-types-0.4.24.tgz",
+      "integrity": "sha512-eqj0hVcJUR57/Ug2zE1Yswsw4LhuqqHhD+8v120T1cl3kjg76QwtyBrdIk4WVwK+lAhBJVYCd/v+4nc4y+8JsA=="
+    },
+    "babel-plugin-transform-regenerator": {
+      "version": "6.26.0",
+      "resolved": "https://registry.npmjs.org/babel-plugin-transform-regenerator/-/babel-plugin-transform-regenerator-6.26.0.tgz",
+      "integrity": "sha1-4HA2lvveJ/Cj78rPi03KL3s6jy8=",
+      "dev": true,
+      "requires": {
+        "regenerator-transform": "^0.10.0"
+      },
+      "dependencies": {
+        "regenerator-transform": {
+          "version": "0.10.1",
+          "resolved": "https://registry.npmjs.org/regenerator-transform/-/regenerator-transform-0.10.1.tgz",
+          "integrity": "sha512-PJepbvDbuK1xgIgnau7Y90cwaAmO/LCLMI2mPvaXq2heGMR3aWW5/BQvYrhJ8jgmQjXewXvBjzfqKcVOmhjZ6Q==",
+          "dev": true,
+          "requires": {
+            "babel-runtime": "^6.18.0",
+            "babel-types": "^6.19.0",
+            "private": "^0.1.6"
+          }
+        }
+      }
+    },
+    "babel-plugin-transform-strict-mode": {
+      "version": "6.24.1",
+      "resolved": "https://registry.npmjs.org/babel-plugin-transform-strict-mode/-/babel-plugin-transform-strict-mode-6.24.1.tgz",
+      "integrity": "sha1-1fr3qleKZbvlkc9e2uBKDGcCB1g=",
+      "dev": true,
+      "requires": {
+        "babel-runtime": "^6.22.0",
+        "babel-types": "^6.24.1"
+      }
+    },
+    "babel-preset-env": {
+      "version": "1.7.0",
+      "resolved": "https://registry.npmjs.org/babel-preset-env/-/babel-preset-env-1.7.0.tgz",
+      "integrity": "sha512-9OR2afuKDneX2/q2EurSftUYM0xGu4O2D9adAhVfADDhrYDaxXV0rBbevVYoY9n6nyX1PmQW/0jtpJvUNr9CHg==",
+      "dev": true,
+      "requires": {
+        "babel-plugin-check-es2015-constants": "^6.22.0",
+        "babel-plugin-syntax-trailing-function-commas": "^6.22.0",
+        "babel-plugin-transform-async-to-generator": "^6.22.0",
+        "babel-plugin-transform-es2015-arrow-functions": "^6.22.0",
+        "babel-plugin-transform-es2015-block-scoped-functions": "^6.22.0",
+        "babel-plugin-transform-es2015-block-scoping": "^6.23.0",
+        "babel-plugin-transform-es2015-classes": "^6.23.0",
+        "babel-plugin-transform-es2015-computed-properties": "^6.22.0",
+        "babel-plugin-transform-es2015-destructuring": "^6.23.0",
+        "babel-plugin-transform-es2015-duplicate-keys": "^6.22.0",
+        "babel-plugin-transform-es2015-for-of": "^6.23.0",
+        "babel-plugin-transform-es2015-function-name": "^6.22.0",
+        "babel-plugin-transform-es2015-literals": "^6.22.0",
+        "babel-plugin-transform-es2015-modules-amd": "^6.22.0",
+        "babel-plugin-transform-es2015-modules-commonjs": "^6.23.0",
+        "babel-plugin-transform-es2015-modules-systemjs": "^6.23.0",
+        "babel-plugin-transform-es2015-modules-umd": "^6.23.0",
+        "babel-plugin-transform-es2015-object-super": "^6.22.0",
+        "babel-plugin-transform-es2015-parameters": "^6.23.0",
+        "babel-plugin-transform-es2015-shorthand-properties": "^6.22.0",
+        "babel-plugin-transform-es2015-spread": "^6.22.0",
+        "babel-plugin-transform-es2015-sticky-regex": "^6.22.0",
+        "babel-plugin-transform-es2015-template-literals": "^6.22.0",
+        "babel-plugin-transform-es2015-typeof-symbol": "^6.23.0",
+        "babel-plugin-transform-es2015-unicode-regex": "^6.22.0",
+        "babel-plugin-transform-exponentiation-operator": "^6.22.0",
+        "babel-plugin-transform-regenerator": "^6.22.0",
+        "browserslist": "^3.2.6",
+        "invariant": "^2.2.2",
+        "semver": "^5.3.0"
+      },
+      "dependencies": {
+        "babel-plugin-syntax-trailing-function-commas": {
+          "version": "6.22.0",
+          "resolved": "https://registry.npmjs.org/babel-plugin-syntax-trailing-function-commas/-/babel-plugin-syntax-trailing-function-commas-6.22.0.tgz",
+          "integrity": "sha1-ugNgk3+NBuQBgKQ/4NVhb/9TLPM=",
+          "dev": true
+        },
+        "browserslist": {
+          "version": "3.2.8",
+          "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-3.2.8.tgz",
+          "integrity": "sha512-WHVocJYavUwVgVViC0ORikPHQquXwVh939TaelZ4WDqpWgTX/FsGhl/+P4qBUAGcRvtOgDgC+xftNWWp2RUTAQ==",
+          "dev": true,
+          "requires": {
+            "caniuse-lite": "^1.0.30000844",
+            "electron-to-chromium": "^1.3.47"
+          }
+        },
+        "semver": {
+          "version": "5.7.1",
+          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
+          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
+          "dev": true
+        }
+      }
+    },
+    "babel-preset-expo": {
+      "version": "8.1.0",
+      "resolved": "https://registry.npmjs.org/babel-preset-expo/-/babel-preset-expo-8.1.0.tgz",
+      "integrity": "sha512-ZlGIo8OlO0b7S//QrqHGIIf2BY9HId5efxgBxyic5ZbKo6NHICThjSpEz4rRyQRGka7HixBq/Jyjsn4M2D/n/g==",
+      "requires": {
+        "@babel/plugin-proposal-decorators": "^7.6.0",
+        "@babel/preset-env": "^7.6.3",
+        "babel-plugin-module-resolver": "^3.2.0",
+        "babel-plugin-react-native-web": "^0.11.7",
+        "metro-react-native-babel-preset": "^0.56.0"
+      }
+    },
+    "babel-preset-fbjs": {
+      "version": "3.3.0",
+      "resolved": "https://registry.npmjs.org/babel-preset-fbjs/-/babel-preset-fbjs-3.3.0.tgz",
+      "integrity": "sha512-7QTLTCd2gwB2qGoi5epSULMHugSVgpcVt5YAeiFO9ABLrutDQzKfGwzxgZHLpugq8qMdg/DhRZDZ5CLKxBkEbw==",
+      "requires": {
+        "@babel/plugin-proposal-class-properties": "^7.0.0",
+        "@babel/plugin-proposal-object-rest-spread": "^7.0.0",
+        "@babel/plugin-syntax-class-properties": "^7.0.0",
+        "@babel/plugin-syntax-flow": "^7.0.0",
+        "@babel/plugin-syntax-jsx": "^7.0.0",
+        "@babel/plugin-syntax-object-rest-spread": "^7.0.0",
+        "@babel/plugin-transform-arrow-functions": "^7.0.0",
+        "@babel/plugin-transform-block-scoped-functions": "^7.0.0",
+        "@babel/plugin-transform-block-scoping": "^7.0.0",
+        "@babel/plugin-transform-classes": "^7.0.0",
+        "@babel/plugin-transform-computed-properties": "^7.0.0",
+        "@babel/plugin-transform-destructuring": "^7.0.0",
+        "@babel/plugin-transform-flow-strip-types": "^7.0.0",
+        "@babel/plugin-transform-for-of": "^7.0.0",
+        "@babel/plugin-transform-function-name": "^7.0.0",
+        "@babel/plugin-transform-literals": "^7.0.0",
+        "@babel/plugin-transform-member-expression-literals": "^7.0.0",
+        "@babel/plugin-transform-modules-commonjs": "^7.0.0",
+        "@babel/plugin-transform-object-super": "^7.0.0",
+        "@babel/plugin-transform-parameters": "^7.0.0",
+        "@babel/plugin-transform-property-literals": "^7.0.0",
+        "@babel/plugin-transform-react-display-name": "^7.0.0",
+        "@babel/plugin-transform-react-jsx": "^7.0.0",
+        "@babel/plugin-transform-shorthand-properties": "^7.0.0",
+        "@babel/plugin-transform-spread": "^7.0.0",
+        "@babel/plugin-transform-template-literals": "^7.0.0",
+        "babel-plugin-syntax-trailing-function-commas": "^7.0.0-beta.0"
+      }
+    },
+    "babel-preset-flow": {
+      "version": "6.23.0",
+      "resolved": "https://registry.npmjs.org/babel-preset-flow/-/babel-preset-flow-6.23.0.tgz",
+      "integrity": "sha1-5xIYiHCFrpoktb5Baa/7WZgWxJ0=",
+      "dev": true,
+      "requires": {
+        "babel-plugin-transform-flow-strip-types": "^6.22.0"
+      }
+    },
+    "babel-preset-jest": {
+      "version": "24.9.0",
+      "resolved": "https://registry.npmjs.org/babel-preset-jest/-/babel-preset-jest-24.9.0.tgz",
+      "integrity": "sha512-izTUuhE4TMfTRPF92fFwD2QfdXaZW08qvWTFCI51V8rW5x00UuPgc3ajRoWofXOuxjfcOM5zzSYsQS3H8KGCAg==",
+      "requires": {
+        "@babel/plugin-syntax-object-rest-spread": "^7.0.0",
+        "babel-plugin-jest-hoist": "^24.9.0"
+      }
+    },
+    "babel-preset-react": {
+      "version": "6.24.1",
+      "resolved": "https://registry.npmjs.org/babel-preset-react/-/babel-preset-react-6.24.1.tgz",
+      "integrity": "sha1-umnfrqRfw+xjm2pOzqbhdwLJE4A=",
+      "dev": true,
+      "requires": {
+        "babel-plugin-syntax-jsx": "^6.3.13",
+        "babel-plugin-transform-react-display-name": "^6.23.0",
+        "babel-plugin-transform-react-jsx": "^6.24.1",
+        "babel-plugin-transform-react-jsx-self": "^6.22.0",
+        "babel-plugin-transform-react-jsx-source": "^6.22.0",
+        "babel-preset-flow": "^6.23.0"
+      }
+    },
+    "babel-preset-react-app": {
+      "version": "9.1.2",
+      "resolved": "https://registry.npmjs.org/babel-preset-react-app/-/babel-preset-react-app-9.1.2.tgz",
+      "integrity": "sha512-k58RtQOKH21NyKtzptoAvtAODuAJJs3ZhqBMl456/GnXEQ/0La92pNmwgWoMn5pBTrsvk3YYXdY7zpY4e3UIxA==",
+      "requires": {
+        "@babel/core": "7.9.0",
+        "@babel/plugin-proposal-class-properties": "7.8.3",
+        "@babel/plugin-proposal-decorators": "7.8.3",
+        "@babel/plugin-proposal-nullish-coalescing-operator": "7.8.3",
+        "@babel/plugin-proposal-numeric-separator": "7.8.3",
+        "@babel/plugin-proposal-optional-chaining": "7.9.0",
+        "@babel/plugin-transform-flow-strip-types": "7.9.0",
+        "@babel/plugin-transform-react-display-name": "7.8.3",
+        "@babel/plugin-transform-runtime": "7.9.0",
+        "@babel/preset-env": "7.9.0",
+        "@babel/preset-react": "7.9.1",
+        "@babel/preset-typescript": "7.9.0",
+        "@babel/runtime": "7.9.0",
+        "babel-plugin-macros": "2.8.0",
+        "babel-plugin-transform-react-remove-prop-types": "0.4.24"
+      },
+      "dependencies": {
+        "@babel/preset-env": {
+          "version": "7.9.0",
+          "resolved": "https://registry.npmjs.org/@babel/preset-env/-/preset-env-7.9.0.tgz",
+          "integrity": "sha512-712DeRXT6dyKAM/FMbQTV/FvRCms2hPCx+3weRjZ8iQVQWZejWWk1wwG6ViWMyqb/ouBbGOl5b6aCk0+j1NmsQ==",
+          "requires": {
+            "@babel/compat-data": "^7.9.0",
+            "@babel/helper-compilation-targets": "^7.8.7",
+            "@babel/helper-module-imports": "^7.8.3",
+            "@babel/helper-plugin-utils": "^7.8.3",
+            "@babel/plugin-proposal-async-generator-functions": "^7.8.3",
+            "@babel/plugin-proposal-dynamic-import": "^7.8.3",
+            "@babel/plugin-proposal-json-strings": "^7.8.3",
+            "@babel/plugin-proposal-nullish-coalescing-operator": "^7.8.3",
+            "@babel/plugin-proposal-numeric-separator": "^7.8.3",
+            "@babel/plugin-proposal-object-rest-spread": "^7.9.0",
+            "@babel/plugin-proposal-optional-catch-binding": "^7.8.3",
+            "@babel/plugin-proposal-optional-chaining": "^7.9.0",
+            "@babel/plugin-proposal-unicode-property-regex": "^7.8.3",
+            "@babel/plugin-syntax-async-generators": "^7.8.0",
+            "@babel/plugin-syntax-dynamic-import": "^7.8.0",
+            "@babel/plugin-syntax-json-strings": "^7.8.0",
+            "@babel/plugin-syntax-nullish-coalescing-operator": "^7.8.0",
+            "@babel/plugin-syntax-numeric-separator": "^7.8.0",
+            "@babel/plugin-syntax-object-rest-spread": "^7.8.0",
+            "@babel/plugin-syntax-optional-catch-binding": "^7.8.0",
+            "@babel/plugin-syntax-optional-chaining": "^7.8.0",
+            "@babel/plugin-syntax-top-level-await": "^7.8.3",
+            "@babel/plugin-transform-arrow-functions": "^7.8.3",
+            "@babel/plugin-transform-async-to-generator": "^7.8.3",
+            "@babel/plugin-transform-block-scoped-functions": "^7.8.3",
+            "@babel/plugin-transform-block-scoping": "^7.8.3",
+            "@babel/plugin-transform-classes": "^7.9.0",
+            "@babel/plugin-transform-computed-properties": "^7.8.3",
+            "@babel/plugin-transform-destructuring": "^7.8.3",
+            "@babel/plugin-transform-dotall-regex": "^7.8.3",
+            "@babel/plugin-transform-duplicate-keys": "^7.8.3",
+            "@babel/plugin-transform-exponentiation-operator": "^7.8.3",
+            "@babel/plugin-transform-for-of": "^7.9.0",
+            "@babel/plugin-transform-function-name": "^7.8.3",
+            "@babel/plugin-transform-literals": "^7.8.3",
+            "@babel/plugin-transform-member-expression-literals": "^7.8.3",
+            "@babel/plugin-transform-modules-amd": "^7.9.0",
+            "@babel/plugin-transform-modules-commonjs": "^7.9.0",
+            "@babel/plugin-transform-modules-systemjs": "^7.9.0",
+            "@babel/plugin-transform-modules-umd": "^7.9.0",
+            "@babel/plugin-transform-named-capturing-groups-regex": "^7.8.3",
+            "@babel/plugin-transform-new-target": "^7.8.3",
+            "@babel/plugin-transform-object-super": "^7.8.3",
+            "@babel/plugin-transform-parameters": "^7.8.7",
+            "@babel/plugin-transform-property-literals": "^7.8.3",
+            "@babel/plugin-transform-regenerator": "^7.8.7",
+            "@babel/plugin-transform-reserved-words": "^7.8.3",
+            "@babel/plugin-transform-shorthand-properties": "^7.8.3",
+            "@babel/plugin-transform-spread": "^7.8.3",
+            "@babel/plugin-transform-sticky-regex": "^7.8.3",
+            "@babel/plugin-transform-template-literals": "^7.8.3",
+            "@babel/plugin-transform-typeof-symbol": "^7.8.4",
+            "@babel/plugin-transform-unicode-regex": "^7.8.3",
+            "@babel/preset-modules": "^0.1.3",
+            "@babel/types": "^7.9.0",
+            "browserslist": "^4.9.1",
+            "core-js-compat": "^3.6.2",
+            "invariant": "^2.2.2",
+            "levenary": "^1.1.1",
+            "semver": "^5.5.0"
+          }
+        },
+        "@babel/preset-react": {
+          "version": "7.9.1",
+          "resolved": "https://registry.npmjs.org/@babel/preset-react/-/preset-react-7.9.1.tgz",
+          "integrity": "sha512-aJBYF23MPj0RNdp/4bHnAP0NVqqZRr9kl0NAOP4nJCex6OYVio59+dnQzsAWFuogdLyeaKA1hmfUIVZkY5J+TQ==",
+          "requires": {
+            "@babel/helper-plugin-utils": "^7.8.3",
+            "@babel/plugin-transform-react-display-name": "^7.8.3",
+            "@babel/plugin-transform-react-jsx": "^7.9.1",
+            "@babel/plugin-transform-react-jsx-development": "^7.9.0",
+            "@babel/plugin-transform-react-jsx-self": "^7.9.0",
+            "@babel/plugin-transform-react-jsx-source": "^7.9.0"
+          }
+        },
+        "@babel/runtime": {
+          "version": "7.9.0",
+          "resolved": "https://registry.npmjs.org/@babel/runtime/-/runtime-7.9.0.tgz",
+          "integrity": "sha512-cTIudHnzuWLS56ik4DnRnqqNf8MkdUzV4iFFI1h7Jo9xvrpQROYaAnaSd2mHLQAzzZAPfATynX5ord6YlNYNMA==",
+          "requires": {
+            "regenerator-runtime": "^0.13.4"
+          }
+        },
+        "semver": {
+          "version": "5.7.1",
+          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
+          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ=="
+        }
+      }
+    },
+    "babel-runtime": {
+      "version": "6.26.0",
+      "resolved": "https://registry.npmjs.org/babel-runtime/-/babel-runtime-6.26.0.tgz",
+      "integrity": "sha1-llxwWGaOgrVde/4E/yM3vItWR/4=",
+      "requires": {
+        "core-js": "^2.4.0",
+        "regenerator-runtime": "^0.11.0"
+      },
+      "dependencies": {
+        "core-js": {
+          "version": "2.6.11",
+          "resolved": "https://registry.npmjs.org/core-js/-/core-js-2.6.11.tgz",
+          "integrity": "sha512-5wjnpaT/3dV+XB4borEsnAYQchn00XSgTAWKDkEqv+K8KevjbzmofK6hfJ9TZIlpj2N0xQpazy7PiRQiWHqzWg=="
+        },
+        "regenerator-runtime": {
+          "version": "0.11.1",
+          "resolved": "https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.11.1.tgz",
+          "integrity": "sha512-MguG95oij0fC3QV3URf4V2SDYGJhJnJGqvIIgdECeODCT98wSWDAJ94SSuVpYQUoTcGUIL6L4yNB7j1DFFHSBg=="
+        }
+      }
+    },
+    "babel-template": {
+      "version": "6.26.0",
+      "resolved": "https://registry.npmjs.org/babel-template/-/babel-template-6.26.0.tgz",
+      "integrity": "sha1-3gPi0WOWsGn0bdn/+FIfsaDjXgI=",
+      "dev": true,
+      "requires": {
+        "babel-runtime": "^6.26.0",
+        "babel-traverse": "^6.26.0",
+        "babel-types": "^6.26.0",
+        "babylon": "^6.18.0",
+        "lodash": "^4.17.4"
+      }
+    },
+    "babel-traverse": {
+      "version": "6.26.0",
+      "resolved": "https://registry.npmjs.org/babel-traverse/-/babel-traverse-6.26.0.tgz",
+      "integrity": "sha1-RqnL1+3MYsjlwGTi0tjQ9ANXZu4=",
+      "dev": true,
+      "requires": {
+        "babel-code-frame": "^6.26.0",
+        "babel-messages": "^6.23.0",
+        "babel-runtime": "^6.26.0",
+        "babel-types": "^6.26.0",
+        "babylon": "^6.18.0",
+        "debug": "^2.6.8",
+        "globals": "^9.18.0",
+        "invariant": "^2.2.2",
+        "lodash": "^4.17.4"
+      },
+      "dependencies": {
+        "debug": {
+          "version": "2.6.9",
+          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
+          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
+          "dev": true,
+          "requires": {
+            "ms": "2.0.0"
+          }
+        },
+        "globals": {
+          "version": "9.18.0",
+          "resolved": "https://registry.npmjs.org/globals/-/globals-9.18.0.tgz",
+          "integrity": "sha512-S0nG3CLEQiY/ILxqtztTWH/3iRRdyBLw6KMDxnKMchrtbj2OFmehVh0WUCfW3DUrIgx/qFrJPICrq4Z4sTR9UQ==",
+          "dev": true
+        },
+        "ms": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
+          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=",
+          "dev": true
+        }
+      }
+    },
+    "babel-types": {
+      "version": "6.26.0",
+      "resolved": "https://registry.npmjs.org/babel-types/-/babel-types-6.26.0.tgz",
+      "integrity": "sha1-o7Bz+Uq0nrb6Vc1lInozQ4BjJJc=",
+      "dev": true,
+      "requires": {
+        "babel-runtime": "^6.26.0",
+        "esutils": "^2.0.2",
+        "lodash": "^4.17.4",
+        "to-fast-properties": "^1.0.3"
+      },
+      "dependencies": {
+        "to-fast-properties": {
+          "version": "1.0.3",
+          "resolved": "https://registry.npmjs.org/to-fast-properties/-/to-fast-properties-1.0.3.tgz",
+          "integrity": "sha1-uDVx+k2MJbguIxsG46MFXeTKGkc=",
+          "dev": true
+        }
+      }
+    },
+    "babylon": {
+      "version": "6.18.0",
+      "resolved": "https://registry.npmjs.org/babylon/-/babylon-6.18.0.tgz",
+      "integrity": "sha512-q/UEjfGJ2Cm3oKV71DJz9d25TPnq5rhBVL2Q4fA5wcC3jcrdn7+SssEybFIxwAvvP+YCsCYNKughoF33GxgycQ=="
+    },
+    "babylon-walk": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/babylon-walk/-/babylon-walk-1.0.2.tgz",
+      "integrity": "sha1-OxWl3btIKni0zpwByLoYFwLZ1s4=",
+      "dev": true,
+      "requires": {
+        "babel-runtime": "^6.11.6",
+        "babel-types": "^6.15.0",
+        "lodash.clone": "^4.5.0"
+      }
+    },
+    "badgin": {
+      "version": "1.1.4",
+      "resolved": "https://registry.npmjs.org/badgin/-/badgin-1.1.4.tgz",
+      "integrity": "sha512-BQ1m7TA7IehXb3/9b3cNH6TwIKcdqqJa/E4Z4fO40tSs6HPZWopPvx9QgHeUEd6Aays1BxQXjBpO+yrSYuRSOw=="
+    },
+    "balanced-match": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.0.tgz",
+      "integrity": "sha1-ibTRmasr7kneFk6gK4nORi1xt2c="
+    },
+    "base": {
+      "version": "0.11.2",
+      "resolved": "https://registry.npmjs.org/base/-/base-0.11.2.tgz",
+      "integrity": "sha512-5T6P4xPgpp0YDFvSWwEZ4NoE3aM4QBQXDzmVbraCkFj8zHM+mba8SyqB5DbZWyR7mYHo6Y7BdQo3MoA4m0TeQg==",
+      "requires": {
+        "cache-base": "^1.0.1",
+        "class-utils": "^0.3.5",
+        "component-emitter": "^1.2.1",
+        "define-property": "^1.0.0",
+        "isobject": "^3.0.1",
+        "mixin-deep": "^1.2.0",
+        "pascalcase": "^0.1.1"
+      },
+      "dependencies": {
+        "define-property": {
+          "version": "1.0.0",
+          "resolved": "https://registry.npmjs.org/define-property/-/define-property-1.0.0.tgz",
+          "integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
+          "requires": {
+            "is-descriptor": "^1.0.0"
+          }
+        },
+        "is-accessor-descriptor": {
+          "version": "1.0.0",
+          "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz",
+          "integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK6LUY94dYPEE7Lh0ZkZKcQ==",
+          "requires": {
+            "kind-of": "^6.0.0"
+          }
+        },
+        "is-data-descriptor": {
+          "version": "1.0.0",
+          "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz",
+          "integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRFRXcHYVkdeaP50Q5rE/jLQ==",
+          "requires": {
+            "kind-of": "^6.0.0"
+          }
+        },
+        "is-descriptor": {
+          "version": "1.0.2",
+          "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.2.tgz",
+          "integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9k1T2hOH3miL8n8WtiYVtg==",
+          "requires": {
+            "is-accessor-descriptor": "^1.0.0",
+            "is-data-descriptor": "^1.0.0",
+            "kind-of": "^6.0.2"
+          }
+        },
+        "kind-of": {
+          "version": "6.0.3",
+          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.3.tgz",
+          "integrity": "sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw=="
+        }
+      }
+    },
+    "base64-js": {
+      "version": "1.3.1",
+      "resolved": "https://registry.npmjs.org/base64-js/-/base64-js-1.3.1.tgz",
+      "integrity": "sha512-mLQ4i2QO1ytvGWFWmcngKO//JXAQueZvwEKtjgQFM4jIK0kU+ytMfplL8j+n5mspOfjHwoAg+9yhb7BwAHm36g=="
+    },
+    "batch": {
+      "version": "0.6.1",
+      "resolved": "https://registry.npmjs.org/batch/-/batch-0.6.1.tgz",
+      "integrity": "sha1-3DQxT05nkxgJP8dgJyUl+UvyXBY="
+    },
+    "bcrypt-pbkdf": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/bcrypt-pbkdf/-/bcrypt-pbkdf-1.0.2.tgz",
+      "integrity": "sha1-pDAdOJtqQ/m2f/PKEaP2Y342Dp4=",
+      "requires": {
+        "tweetnacl": "^0.14.3"
+      }
+    },
+    "big.js": {
+      "version": "5.2.2",
+      "resolved": "https://registry.npmjs.org/big.js/-/big.js-5.2.2.tgz",
+      "integrity": "sha512-vyL2OymJxmarO8gxMr0mhChsO9QGwhynfuu4+MHTAW6czfq9humCB7rKpUjDd9YUiDPU4mzpyupFSvOClAwbmQ=="
+    },
+    "binary-extensions": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.0.0.tgz",
+      "integrity": "sha512-Phlt0plgpIIBOGTT/ehfFnbNlfsDEiqmzE2KRXoX1bLIlir4X/MR+zSyBEkL05ffWgnRSf/DXv+WrUAVr93/ow=="
+    },
+    "bindings": {
+      "version": "1.5.0",
+      "resolved": "https://registry.npmjs.org/bindings/-/bindings-1.5.0.tgz",
+      "integrity": "sha512-p2q/t/mhvuOj/UeLlV6566GD/guowlr0hHxClI0W9m7MWYkL1F0hLo+0Aexs9HSPCtR1SXQ0TD3MMKrXZajbiQ==",
+      "requires": {
+        "file-uri-to-path": "1.0.0"
+      }
+    },
+    "block-stream": {
+      "version": "0.0.9",
+      "resolved": "https://registry.npmjs.org/block-stream/-/block-stream-0.0.9.tgz",
+      "integrity": "sha1-E+v+d4oDIFz+A3UUgeu0szAMEmo=",
+      "dev": true,
+      "requires": {
+        "inherits": "~2.0.0"
+      }
+    },
+    "bluebird": {
+      "version": "3.7.2",
+      "resolved": "https://registry.npmjs.org/bluebird/-/bluebird-3.7.2.tgz",
+      "integrity": "sha512-XpNj6GDQzdfW+r2Wnn7xiSAd7TM3jzkxGXBGTtWKuSXv1xUV+azxAm8jdWZN06QTQk+2N2XB9jRDkvbmQmcRtg=="
+    },
+    "blueimp-md5": {
+      "version": "2.14.0",
+      "resolved": "https://registry.npmjs.org/blueimp-md5/-/blueimp-md5-2.14.0.tgz",
+      "integrity": "sha512-fhX8JsIgugJ39g9MUJ4Y0S+WYd/1HATNVzW4nEVknP5uJU1mA7LZCV3OuVH9OvxpuYQXu6ttst0IYIlAyVfBQg=="
+    },
+    "bn.js": {
+      "version": "4.11.8",
+      "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.11.8.tgz",
+      "integrity": "sha512-ItfYfPLkWHUjckQCk8xC+LwxgK8NYcXywGigJgSwOP8Y2iyWT4f2vsZnoOXTTbo+o5yXmIUJ4gn5538SO5S3gA=="
+    },
+    "body-parser": {
+      "version": "1.19.0",
+      "resolved": "https://registry.npmjs.org/body-parser/-/body-parser-1.19.0.tgz",
+      "integrity": "sha512-dhEPs72UPbDnAQJ9ZKMNTP6ptJaionhP5cBb541nXPlW60Jepo9RV/a4fX4XWW9CuFNK22krhrj1+rgzifNCsw==",
+      "requires": {
+        "bytes": "3.1.0",
+        "content-type": "~1.0.4",
+        "debug": "2.6.9",
+        "depd": "~1.1.2",
+        "http-errors": "1.7.2",
+        "iconv-lite": "0.4.24",
+        "on-finished": "~2.3.0",
+        "qs": "6.7.0",
+        "raw-body": "2.4.0",
+        "type-is": "~1.6.17"
+      },
+      "dependencies": {
+        "bytes": {
+          "version": "3.1.0",
+          "resolved": "https://registry.npmjs.org/bytes/-/bytes-3.1.0.tgz",
+          "integrity": "sha512-zauLjrfCG+xvoyaqLoV8bLVXXNGC4JqlxFCutSDWA6fJrTo2ZuvLYTqZ7aHBLZSMOopbzwv8f+wZcVzfVTI2Dg=="
+        },
+        "debug": {
+          "version": "2.6.9",
+          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
+          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
+          "requires": {
+            "ms": "2.0.0"
+          }
+        },
+        "ms": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
+          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="
+        },
+        "qs": {
+          "version": "6.7.0",
+          "resolved": "https://registry.npmjs.org/qs/-/qs-6.7.0.tgz",
+          "integrity": "sha512-VCdBRNFTX1fyE7Nb6FYoURo/SPe62QCaAyzJvUjwRaIsc+NePBEniHlvxFmmX56+HZphIGtV0XeCirBtpDrTyQ=="
+        }
+      }
+    },
+    "bonjour": {
+      "version": "3.5.0",
+      "resolved": "https://registry.npmjs.org/bonjour/-/bonjour-3.5.0.tgz",
+      "integrity": "sha1-jokKGD2O6aI5OzhExpGkK897yfU=",
+      "requires": {
+        "array-flatten": "^2.1.0",
+        "deep-equal": "^1.0.1",
+        "dns-equal": "^1.0.0",
+        "dns-txt": "^2.0.2",
+        "multicast-dns": "^6.0.1",
+        "multicast-dns-service-types": "^1.1.0"
+      }
+    },
+    "boolbase": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/boolbase/-/boolbase-1.0.0.tgz",
+      "integrity": "sha1-aN/1++YMUes3cl6p4+0xDcwed24="
+    },
+    "bootstrap": {
+      "version": "4.4.1",
+      "resolved": "https://registry.npmjs.org/bootstrap/-/bootstrap-4.4.1.tgz",
+      "integrity": "sha512-tbx5cHubwE6e2ZG7nqM3g/FZ5PQEDMWmMGNrCUBVRPHXTJaH7CBDdsLeu3eCh3B1tzAxTnAbtmrzvWEvT2NNEA=="
+    },
+    "brace-expansion": {
+      "version": "1.1.11",
+      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
+      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
+      "requires": {
+        "balanced-match": "^1.0.0",
+        "concat-map": "0.0.1"
+      }
+    },
+    "braces": {
+      "version": "2.3.2",
+      "resolved": "https://registry.npmjs.org/braces/-/braces-2.3.2.tgz",
+      "integrity": "sha512-aNdbnj9P8PjdXU4ybaWLK2IF3jc/EoDYbC7AazW6to3TRsfXxscC9UXOB5iDiEQrkyIbWp2SLQda4+QAa7nc3w==",
+      "requires": {
+        "arr-flatten": "^1.1.0",
+        "array-unique": "^0.3.2",
+        "extend-shallow": "^2.0.1",
+        "fill-range": "^4.0.0",
+        "isobject": "^3.0.1",
+        "repeat-element": "^1.1.2",
+        "snapdragon": "^0.8.1",
+        "snapdragon-node": "^2.0.1",
+        "split-string": "^3.0.2",
+        "to-regex": "^3.0.1"
+      },
+      "dependencies": {
+        "extend-shallow": {
+          "version": "2.0.1",
+          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
+          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
+          "requires": {
+            "is-extendable": "^0.1.0"
+          }
+        }
+      }
+    },
+    "brfs": {
+      "version": "1.6.1",
+      "resolved": "https://registry.npmjs.org/brfs/-/brfs-1.6.1.tgz",
+      "integrity": "sha512-OfZpABRQQf+Xsmju8XE9bDjs+uU4vLREGolP7bDgcpsI17QREyZ4Bl+2KLxxx1kCgA0fAIhKQBaBYh+PEcCqYQ==",
+      "dev": true,
+      "requires": {
+        "quote-stream": "^1.0.1",
+        "resolve": "^1.1.5",
+        "static-module": "^2.2.0",
+        "through2": "^2.0.0"
+      }
+    },
+    "brorand": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/brorand/-/brorand-1.1.0.tgz",
+      "integrity": "sha1-EsJe/kCkXjwyPrhnWgoM5XsiNx8="
+    },
+    "browser-process-hrtime": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/browser-process-hrtime/-/browser-process-hrtime-1.0.0.tgz",
+      "integrity": "sha512-9o5UecI3GhkpM6DrXr69PblIuWxPKk9Y0jHBRhdocZ2y7YECBFCsHm79Pr3OyR2AvjhDkabFJaDJMYRazHgsow=="
+    },
+    "browser-resolve": {
+      "version": "1.11.3",
+      "resolved": "https://registry.npmjs.org/browser-resolve/-/browser-resolve-1.11.3.tgz",
+      "integrity": "sha512-exDi1BYWB/6raKHmDTCicQfTkqwN5fioMFV4j8BsfMU4R2DK/QfZfK7kOVkmWCNANf0snkBzqGqAJBao9gZMdQ==",
+      "requires": {
+        "resolve": "1.1.7"
+      },
+      "dependencies": {
+        "resolve": {
+          "version": "1.1.7",
+          "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.1.7.tgz",
+          "integrity": "sha1-IDEU2CrSxe2ejgQRs5ModeiJ6Xs="
+        }
+      }
+    },
+    "browserify-aes": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/browserify-aes/-/browserify-aes-1.2.0.tgz",
+      "integrity": "sha512-+7CHXqGuspUn/Sl5aO7Ea0xWGAtETPXNSAjHo48JfLdPWcMng33Xe4znFvQweqc/uzk5zSOI3H52CYnjCfb5hA==",
+      "requires": {
+        "buffer-xor": "^1.0.3",
+        "cipher-base": "^1.0.0",
+        "create-hash": "^1.1.0",
+        "evp_bytestokey": "^1.0.3",
+        "inherits": "^2.0.1",
+        "safe-buffer": "^5.0.1"
+      }
+    },
+    "browserify-cipher": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/browserify-cipher/-/browserify-cipher-1.0.1.tgz",
+      "integrity": "sha512-sPhkz0ARKbf4rRQt2hTpAHqn47X3llLkUGn+xEJzLjwY8LRs2p0v7ljvI5EyoRO/mexrNunNECisZs+gw2zz1w==",
+      "requires": {
+        "browserify-aes": "^1.0.4",
+        "browserify-des": "^1.0.0",
+        "evp_bytestokey": "^1.0.0"
+      }
+    },
+    "browserify-des": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/browserify-des/-/browserify-des-1.0.2.tgz",
+      "integrity": "sha512-BioO1xf3hFwz4kc6iBhI3ieDFompMhrMlnDFC4/0/vd5MokpuAc3R+LYbwTA9A5Yc9pq9UYPqffKpW2ObuwX5A==",
+      "requires": {
+        "cipher-base": "^1.0.1",
+        "des.js": "^1.0.0",
+        "inherits": "^2.0.1",
+        "safe-buffer": "^5.1.2"
+      }
+    },
+    "browserify-rsa": {
+      "version": "4.0.1",
+      "resolved": "https://registry.npmjs.org/browserify-rsa/-/browserify-rsa-4.0.1.tgz",
+      "integrity": "sha1-IeCr+vbyApzy+vsTNWenAdQTVSQ=",
+      "requires": {
+        "bn.js": "^4.1.0",
+        "randombytes": "^2.0.1"
+      }
+    },
+    "browserify-sign": {
+      "version": "4.0.4",
+      "resolved": "https://registry.npmjs.org/browserify-sign/-/browserify-sign-4.0.4.tgz",
+      "integrity": "sha1-qk62jl17ZYuqa/alfmMMvXqT0pg=",
+      "requires": {
+        "bn.js": "^4.1.1",
+        "browserify-rsa": "^4.0.0",
+        "create-hash": "^1.1.0",
+        "create-hmac": "^1.1.2",
+        "elliptic": "^6.0.0",
+        "inherits": "^2.0.1",
+        "parse-asn1": "^5.0.0"
+      }
+    },
+    "browserify-zlib": {
+      "version": "0.2.0",
+      "resolved": "https://registry.npmjs.org/browserify-zlib/-/browserify-zlib-0.2.0.tgz",
+      "integrity": "sha512-Z942RysHXmJrhqk88FmKBVq/v5tqmSkDz7p54G/MGyjMnCFFnC79XWNbg+Vta8W6Wb2qtSZTSxIGkJrRpCFEiA==",
+      "requires": {
+        "pako": "~1.0.5"
+      }
+    },
+    "browserslist": {
+      "version": "4.12.0",
+      "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.12.0.tgz",
+      "integrity": "sha512-UH2GkcEDSI0k/lRkuDSzFl9ZZ87skSy9w2XAn1MsZnL+4c4rqbBd3e82UWHbYDpztABrPBhZsTEeuxVfHppqDg==",
+      "requires": {
+        "caniuse-lite": "^1.0.30001043",
+        "electron-to-chromium": "^1.3.413",
+        "node-releases": "^1.1.53",
+        "pkg-up": "^2.0.0"
+      }
+    },
+    "bser": {
+      "version": "2.1.1",
+      "resolved": "https://registry.npmjs.org/bser/-/bser-2.1.1.tgz",
+      "integrity": "sha512-gQxTNE/GAfIIrmHLUE3oJyp5FO6HRBfhjnw4/wMmA63ZGDJnWBmgY/lyQBpnDUkGmAhbSe39tx2d/iTOAfglwQ==",
+      "requires": {
+        "node-int64": "^0.4.0"
+      }
+    },
+    "buffer": {
+      "version": "4.9.2",
+      "resolved": "https://registry.npmjs.org/buffer/-/buffer-4.9.2.tgz",
+      "integrity": "sha512-xq+q3SRMOxGivLhBNaUdC64hDTQwejJ+H0T/NB1XMtTVEwNTrfFF3gAxiyW0Bu/xWEGhjVKgUcMhCrUy2+uCWg==",
+      "requires": {
+        "base64-js": "^1.0.2",
+        "ieee754": "^1.1.4",
+        "isarray": "^1.0.0"
+      }
+    },
+    "buffer-alloc": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/buffer-alloc/-/buffer-alloc-1.2.0.tgz",
+      "integrity": "sha512-CFsHQgjtW1UChdXgbyJGtnm+O/uLQeZdtbDo8mfUgYXCHSM1wgrVxXm6bSyrUuErEb+4sYVGCzASBRot7zyrow==",
+      "requires": {
+        "buffer-alloc-unsafe": "^1.1.0",
+        "buffer-fill": "^1.0.0"
+      }
+    },
+    "buffer-alloc-unsafe": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/buffer-alloc-unsafe/-/buffer-alloc-unsafe-1.1.0.tgz",
+      "integrity": "sha512-TEM2iMIEQdJ2yjPJoSIsldnleVaAk1oW3DBVUykyOLsEsFmEc9kn+SFFPz+gl54KQNxlDnAwCXosOS9Okx2xAg=="
+    },
+    "buffer-crc32": {
+      "version": "0.2.13",
+      "resolved": "https://registry.npmjs.org/buffer-crc32/-/buffer-crc32-0.2.13.tgz",
+      "integrity": "sha1-DTM+PwDqxQqhRUq9MO+MKl2ackI="
+    },
+    "buffer-equal": {
+      "version": "0.0.1",
+      "resolved": "https://registry.npmjs.org/buffer-equal/-/buffer-equal-0.0.1.tgz",
+      "integrity": "sha1-kbx0sR6kBbyRa8aqkI+q+ltKrEs=",
+      "dev": true
+    },
+    "buffer-fill": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/buffer-fill/-/buffer-fill-1.0.0.tgz",
+      "integrity": "sha1-+PeLdniYiO858gXNY39o5wISKyw="
+    },
+    "buffer-from": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.1.tgz",
+      "integrity": "sha512-MQcXEUbCKtEo7bhqEs6560Hyd4XaovZlO/k9V3hjVUF/zwW7KBVdSK4gIt/bzwS9MbR5qob+F5jusZsb0YQK2A=="
+    },
+    "buffer-indexof": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/buffer-indexof/-/buffer-indexof-1.1.1.tgz",
+      "integrity": "sha512-4/rOEg86jivtPTeOUUT61jJO1Ya1TrR/OkqCSZDyq84WJh3LuuiphBYJN+fm5xufIk4XAFcEwte/8WzC8If/1g=="
+    },
+    "buffer-xor": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/buffer-xor/-/buffer-xor-1.0.3.tgz",
+      "integrity": "sha1-JuYe0UIvtw3ULm42cp7VHYVf6Nk="
+    },
+    "bufferutil": {
+      "version": "4.0.1",
+      "resolved": "https://registry.npmjs.org/bufferutil/-/bufferutil-4.0.1.tgz",
+      "integrity": "sha512-xowrxvpxojqkagPcWRQVXZl0YXhRhAtBEIq3VoER1NH5Mw1n1o0ojdspp+GS2J//2gCVyrzQDApQ4unGF+QOoA==",
+      "optional": true,
+      "requires": {
+        "node-gyp-build": "~3.7.0"
+      }
+    },
+    "builtin-status-codes": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/builtin-status-codes/-/builtin-status-codes-3.0.0.tgz",
+      "integrity": "sha1-hZgoeOIbmOHGZCXgPQF0eI9Wnug="
+    },
+    "bulma": {
+      "version": "0.8.2",
+      "resolved": "https://registry.npmjs.org/bulma/-/bulma-0.8.2.tgz",
+      "integrity": "sha512-vMM/ijYSxX+Sm+nD7Lmc1UgWDy2JcL2nTKqwgEqXuOMU+IGALbXd5MLt/BcjBAPLIx36TtzhzBcSnOP974gcqA==",
+      "dev": true
+    },
+    "bytes": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/bytes/-/bytes-3.0.0.tgz",
+      "integrity": "sha1-0ygVQE1olpn4Wk6k+odV3ROpYEg="
+    },
+    "cacache": {
+      "version": "13.0.1",
+      "resolved": "https://registry.npmjs.org/cacache/-/cacache-13.0.1.tgz",
+      "integrity": "sha512-5ZvAxd05HDDU+y9BVvcqYu2LLXmPnQ0hW62h32g4xBTgL/MppR4/04NHfj/ycM2y6lmTnbw6HVi+1eN0Psba6w==",
+      "requires": {
+        "chownr": "^1.1.2",
+        "figgy-pudding": "^3.5.1",
+        "fs-minipass": "^2.0.0",
+        "glob": "^7.1.4",
+        "graceful-fs": "^4.2.2",
+        "infer-owner": "^1.0.4",
+        "lru-cache": "^5.1.1",
+        "minipass": "^3.0.0",
+        "minipass-collect": "^1.0.2",
+        "minipass-flush": "^1.0.5",
+        "minipass-pipeline": "^1.2.2",
+        "mkdirp": "^0.5.1",
+        "move-concurrently": "^1.0.1",
+        "p-map": "^3.0.0",
+        "promise-inflight": "^1.0.1",
+        "rimraf": "^2.7.1",
+        "ssri": "^7.0.0",
+        "unique-filename": "^1.1.1"
+      },
+      "dependencies": {
+        "rimraf": {
+          "version": "2.7.1",
+          "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.7.1.tgz",
+          "integrity": "sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==",
+          "requires": {
+            "glob": "^7.1.3"
+          }
+        }
+      }
+    },
+    "cache-base": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/cache-base/-/cache-base-1.0.1.tgz",
+      "integrity": "sha512-AKcdTnFSWATd5/GCPRxr2ChwIJ85CeyrEyjRHlKxQ56d4XJMGym0uAiKn0xbLOGOl3+yRpOTi484dVCEc5AUzQ==",
+      "requires": {
+        "collection-visit": "^1.0.0",
+        "component-emitter": "^1.2.1",
+        "get-value": "^2.0.6",
+        "has-value": "^1.0.0",
+        "isobject": "^3.0.1",
+        "set-value": "^2.0.0",
+        "to-object-path": "^0.3.0",
+        "union-value": "^1.0.0",
+        "unset-value": "^1.0.0"
+      }
+    },
+    "call-me-maybe": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/call-me-maybe/-/call-me-maybe-1.0.1.tgz",
+      "integrity": "sha1-JtII6onje1y95gJQoV8DHBak1ms="
+    },
+    "caller-callsite": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/caller-callsite/-/caller-callsite-2.0.0.tgz",
+      "integrity": "sha1-hH4PzgoiN1CpoCfFSzNzGtMVQTQ=",
+      "requires": {
+        "callsites": "^2.0.0"
+      }
+    },
+    "caller-path": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/caller-path/-/caller-path-2.0.0.tgz",
+      "integrity": "sha1-Ro+DBE42mrIBD6xfBs7uFbsssfQ=",
+      "requires": {
+        "caller-callsite": "^2.0.0"
+      }
+    },
+    "callsites": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/callsites/-/callsites-2.0.0.tgz",
+      "integrity": "sha1-BuuE8A7qQT2oav/vrL/7Ngk7PFA="
+    },
+    "camel-case": {
+      "version": "4.1.1",
+      "resolved": "https://registry.npmjs.org/camel-case/-/camel-case-4.1.1.tgz",
+      "integrity": "sha512-7fa2WcG4fYFkclIvEmxBbTvmibwF2/agfEBc6q3lOpVu0A13ltLsA+Hr/8Hp6kp5f+G7hKi6t8lys6XxP+1K6Q==",
+      "requires": {
+        "pascal-case": "^3.1.1",
+        "tslib": "^1.10.0"
+      }
+    },
+    "camelcase": {
+      "version": "5.3.1",
+      "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-5.3.1.tgz",
+      "integrity": "sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg=="
+    },
+    "camelcase-keys": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/camelcase-keys/-/camelcase-keys-2.1.0.tgz",
+      "integrity": "sha1-MIvur/3ygRkFHvodkyITyRuPkuc=",
+      "dev": true,
+      "requires": {
+        "camelcase": "^2.0.0",
+        "map-obj": "^1.0.0"
+      },
+      "dependencies": {
+        "camelcase": {
+          "version": "2.1.1",
+          "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-2.1.1.tgz",
+          "integrity": "sha1-fB0W1nmhu+WcoCys7PsBHiAfWh8=",
+          "dev": true
+        }
+      }
+    },
+    "caniuse-api": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/caniuse-api/-/caniuse-api-3.0.0.tgz",
+      "integrity": "sha512-bsTwuIg/BZZK/vreVTYYbSWoe2F+71P7K5QGEX+pT250DZbfU1MQ5prOKpPR+LL6uWKK3KMwMCAS74QB3Um1uw==",
+      "requires": {
+        "browserslist": "^4.0.0",
+        "caniuse-lite": "^1.0.0",
+        "lodash.memoize": "^4.1.2",
+        "lodash.uniq": "^4.5.0"
+      }
+    },
+    "caniuse-lite": {
+      "version": "1.0.30001048",
+      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001048.tgz",
+      "integrity": "sha512-g1iSHKVxornw0K8LG9LLdf+Fxnv7T1Z+mMsf0/YYLclQX4Cd522Ap0Lrw6NFqHgezit78dtyWxzlV2Xfc7vgRg=="
+    },
+    "capture-exit": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/capture-exit/-/capture-exit-2.0.0.tgz",
+      "integrity": "sha512-PiT/hQmTonHhl/HFGN+Lx3JJUznrVYJ3+AQsnthneZbvW7x+f08Tk7yLJTLEOUvBTbduLeeBkxEaYXUOUrRq6g==",
+      "requires": {
+        "rsvp": "^4.8.4"
+      }
+    },
+    "case-sensitive-paths-webpack-plugin": {
+      "version": "2.3.0",
+      "resolved": "https://registry.npmjs.org/case-sensitive-paths-webpack-plugin/-/case-sensitive-paths-webpack-plugin-2.3.0.tgz",
+      "integrity": "sha512-/4YgnZS8y1UXXmC02xD5rRrBEu6T5ub+mQHLNRj0fzTRbgdBYhsNo2V5EqwgqrExjxsjtF/OpAKAMkKsxbD5XQ=="
+    },
+    "caseless": {
+      "version": "0.12.0",
+      "resolved": "https://registry.npmjs.org/caseless/-/caseless-0.12.0.tgz",
+      "integrity": "sha1-G2gcIf+EAzyCZUMJBolCDRhxUdw="
+    },
+    "chalk": {
+      "version": "2.4.2",
+      "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
+      "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
+      "requires": {
+        "ansi-styles": "^3.2.1",
+        "escape-string-regexp": "^1.0.5",
+        "supports-color": "^5.3.0"
+      }
+    },
+    "chardet": {
+      "version": "0.7.0",
+      "resolved": "https://registry.npmjs.org/chardet/-/chardet-0.7.0.tgz",
+      "integrity": "sha512-mT8iDcrh03qDGRRmoA2hmBJnxpllMR+0/0qlzjqZES6NdiWDcZkCNAk4rPFZ9Q85r27unkiNNg8ZOiwZXBHwcA=="
+    },
+    "chokidar": {
+      "version": "3.4.0",
+      "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-3.4.0.tgz",
+      "integrity": "sha512-aXAaho2VJtisB/1fg1+3nlLJqGOuewTzQpd/Tz0yTg2R0e4IGtshYvtjowyEumcBv2z+y4+kc75Mz7j5xJskcQ==",
+      "requires": {
+        "anymatch": "~3.1.1",
+        "braces": "~3.0.2",
+        "fsevents": "~2.1.2",
+        "glob-parent": "~5.1.0",
+        "is-binary-path": "~2.1.0",
+        "is-glob": "~4.0.1",
+        "normalize-path": "~3.0.0",
+        "readdirp": "~3.4.0"
+      },
+      "dependencies": {
+        "anymatch": {
+          "version": "3.1.1",
+          "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.1.tgz",
+          "integrity": "sha512-mM8522psRCqzV+6LhomX5wgp25YVibjh8Wj23I5RPkPppSVSjyKD2A2mBJmWGa+KN7f2D6LNh9jkBCeyLktzjg==",
+          "requires": {
+            "normalize-path": "^3.0.0",
+            "picomatch": "^2.0.4"
+          }
+        },
+        "braces": {
+          "version": "3.0.2",
+          "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.2.tgz",
+          "integrity": "sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==",
+          "requires": {
+            "fill-range": "^7.0.1"
+          }
+        },
+        "fill-range": {
+          "version": "7.0.1",
+          "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.0.1.tgz",
+          "integrity": "sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==",
+          "requires": {
+            "to-regex-range": "^5.0.1"
+          }
+        },
+        "is-number": {
+          "version": "7.0.0",
+          "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
+          "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng=="
+        },
+        "normalize-path": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",
+          "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA=="
+        },
+        "to-regex-range": {
+          "version": "5.0.1",
+          "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
+          "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
+          "requires": {
+            "is-number": "^7.0.0"
+          }
+        }
+      }
+    },
+    "chownr": {
+      "version": "1.1.4",
+      "resolved": "https://registry.npmjs.org/chownr/-/chownr-1.1.4.tgz",
+      "integrity": "sha512-jJ0bqzaylmJtVnNgzTeSOs8DPavpbYgEr/b0YL8/2GO3xJEhInFmhKMUnEJQjZumK7KXGFhUy89PrsJWlakBVg=="
+    },
+    "chrome-trace-event": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/chrome-trace-event/-/chrome-trace-event-1.0.2.tgz",
+      "integrity": "sha512-9e/zx1jw7B4CO+c/RXoCsfg/x1AfUBioy4owYH0bJprEYAx5hRFLRhWBqHAG57D0ZM4H7vxbP7bPe0VwhQRYDQ==",
+      "requires": {
+        "tslib": "^1.9.0"
+      }
+    },
+    "ci-info": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/ci-info/-/ci-info-2.0.0.tgz",
+      "integrity": "sha512-5tK7EtrZ0N+OLFMthtqOj4fI2Jeb88C4CAZPu25LDVUgXJ0A3Js4PMGqrn0JU1W0Mh1/Z8wZzYPxqUrXeBboCQ=="
+    },
+    "cipher-base": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/cipher-base/-/cipher-base-1.0.4.tgz",
+      "integrity": "sha512-Kkht5ye6ZGmwv40uUDZztayT2ThLQGfnj/T71N/XzeZeo3nf8foyW7zGTsPYkEya3m5f3cAypH+qe7YOrM1U2Q==",
+      "requires": {
+        "inherits": "^2.0.1",
+        "safe-buffer": "^5.0.1"
+      }
+    },
+    "class-utils": {
+      "version": "0.3.6",
+      "resolved": "https://registry.npmjs.org/class-utils/-/class-utils-0.3.6.tgz",
+      "integrity": "sha512-qOhPa/Fj7s6TY8H8esGu5QNpMMQxz79h+urzrNYN6mn+9BnxlDGf5QZ+XeCDsxSjPqsSR56XOZOJmpeurnLMeg==",
+      "requires": {
+        "arr-union": "^3.1.0",
+        "define-property": "^0.2.5",
+        "isobject": "^3.0.0",
+        "static-extend": "^0.1.1"
+      },
+      "dependencies": {
+        "define-property": {
+          "version": "0.2.5",
+          "resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",
+          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",
+          "requires": {
+            "is-descriptor": "^0.1.0"
+          }
+        }
+      }
+    },
+    "classnames": {
+      "version": "2.2.6",
+      "resolved": "https://registry.npmjs.org/classnames/-/classnames-2.2.6.tgz",
+      "integrity": "sha512-JR/iSQOSt+LQIWwrwEzJ9uk0xfN3mTVYMwt1Ir5mUcSN6pU+V4zQFFaJsclJbPuAUQH+yfWef6tm7l1quW3C8Q=="
+    },
+    "clean-css": {
+      "version": "4.2.3",
+      "resolved": "https://registry.npmjs.org/clean-css/-/clean-css-4.2.3.tgz",
+      "integrity": "sha512-VcMWDN54ZN/DS+g58HYL5/n4Zrqe8vHJpGA8KdgUXFU4fuP/aHNw8eld9SyEIyabIMJX/0RaY/fplOo5hYLSFA==",
+      "requires": {
+        "source-map": "~0.6.0"
+      },
+      "dependencies": {
+        "source-map": {
+          "version": "0.6.1",
+          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
+          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="
+        }
+      }
+    },
+    "clean-stack": {
+      "version": "2.2.0",
+      "resolved": "https://registry.npmjs.org/clean-stack/-/clean-stack-2.2.0.tgz",
+      "integrity": "sha512-4diC9HaTE+KRAMWhDhrGOECgWZxoevMc5TlkObMqNSsVU62PYzXZ/SMTjzyGAFF1YusgxGcSWTEXBhp0CPwQ1A=="
+    },
+    "cli-cursor": {
+      "version": "3.1.0",
+      "resolved": "https://registry.npmjs.org/cli-cursor/-/cli-cursor-3.1.0.tgz",
+      "integrity": "sha512-I/zHAwsKf9FqGoXM4WWRACob9+SNukZTd94DWF57E4toouRulbCxcUh6RKUEOQlYTHJnzkPMySvPNaaSLNfLZw==",
+      "requires": {
+        "restore-cursor": "^3.1.0"
+      }
+    },
+    "cli-spinners": {
+      "version": "2.3.0",
+      "resolved": "https://registry.npmjs.org/cli-spinners/-/cli-spinners-2.3.0.tgz",
+      "integrity": "sha512-Xs2Hf2nzrvJMFKimOR7YR0QwZ8fc0u98kdtwN1eNAZzNQgH3vK2pXzff6GJtKh7S5hoJ87ECiAiZFS2fb5Ii2w=="
+    },
+    "cli-width": {
+      "version": "2.2.1",
+      "resolved": "https://registry.npmjs.org/cli-width/-/cli-width-2.2.1.tgz",
+      "integrity": "sha512-GRMWDxpOB6Dgk2E5Uo+3eEBvtOOlimMmpbFiKuLFnQzYDavtLFY3K5ona41jgN/WdRZtG7utuVSVTL4HbZHGkw=="
+    },
+    "cliui": {
+      "version": "5.0.0",
+      "resolved": "https://registry.npmjs.org/cliui/-/cliui-5.0.0.tgz",
+      "integrity": "sha512-PYeGSEmmHM6zvoef2w8TPzlrnNpXIjTipYK780YswmIP9vjxmd6Y2a3CB2Ks6/AU8NHjZugXvo8w3oWM2qnwXA==",
+      "requires": {
+        "string-width": "^3.1.0",
+        "strip-ansi": "^5.2.0",
+        "wrap-ansi": "^5.1.0"
+      },
+      "dependencies": {
+        "emoji-regex": {
+          "version": "7.0.3",
+          "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-7.0.3.tgz",
+          "integrity": "sha512-CwBLREIQ7LvYFB0WyRvwhq5N5qPhc6PMjD6bYggFlI5YyDgl+0vxq5VHbMOFqLg7hfWzmu8T5Z1QofhmTIhItA=="
+        },
+        "is-fullwidth-code-point": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
+          "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8="
+        },
+        "string-width": {
+          "version": "3.1.0",
+          "resolved": "https://registry.npmjs.org/string-width/-/string-width-3.1.0.tgz",
+          "integrity": "sha512-vafcv6KjVZKSgz06oM/H6GDBrAtz8vdhQakGjFIvNrHA6y3HCF1CInLy+QLq8dTJPQ1b+KDUqDFctkdRW44e1w==",
+          "requires": {
+            "emoji-regex": "^7.0.1",
+            "is-fullwidth-code-point": "^2.0.0",
+            "strip-ansi": "^5.1.0"
+          }
+        }
+      }
+    },
+    "clone": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/clone/-/clone-1.0.4.tgz",
+      "integrity": "sha1-2jCcwmPfFZlMaIypAheco8fNfH4="
+    },
+    "clone-deep": {
+      "version": "0.2.4",
+      "resolved": "https://registry.npmjs.org/clone-deep/-/clone-deep-0.2.4.tgz",
+      "integrity": "sha1-TnPdCen7lxzDhnDF3O2cGJZIHMY=",
+      "requires": {
+        "for-own": "^0.1.3",
+        "is-plain-object": "^2.0.1",
+        "kind-of": "^3.0.2",
+        "lazy-cache": "^1.0.3",
+        "shallow-clone": "^0.1.2"
+      }
+    },
+    "co": {
+      "version": "4.6.0",
+      "resolved": "https://registry.npmjs.org/co/-/co-4.6.0.tgz",
+      "integrity": "sha1-bqa989hTrlTMuOR7+gvz+QMfsYQ="
+    },
+    "coa": {
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/coa/-/coa-2.0.2.tgz",
+      "integrity": "sha512-q5/jG+YQnSy4nRTV4F7lPepBJZ8qBNJJDBuJdoejDyLXgmL7IEo+Le2JDZudFTFt7mrCqIRaSjws4ygRCTCAXA==",
+      "requires": {
+        "@types/q": "^1.5.1",
+        "chalk": "^2.4.1",
+        "q": "^1.1.2"
+      }
+    },
+    "code-point-at": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/code-point-at/-/code-point-at-1.1.0.tgz",
+      "integrity": "sha1-DQcLTQQ6W+ozovGkDi7bPZpMz3c="
+    },
+    "collection-visit": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/collection-visit/-/collection-visit-1.0.0.tgz",
+      "integrity": "sha1-S8A3PBZLwykbTTaMgpzxqApZ3KA=",
+      "requires": {
+        "map-visit": "^1.0.0",
+        "object-visit": "^1.0.0"
+      }
+    },
+    "color": {
+      "version": "3.1.2",
+      "resolved": "https://registry.npmjs.org/color/-/color-3.1.2.tgz",
+      "integrity": "sha512-vXTJhHebByxZn3lDvDJYw4lR5+uB3vuoHsuYA5AKuxRVn5wzzIfQKGLBmgdVRHKTJYeK5rvJcHnrd0Li49CFpg==",
+      "requires": {
+        "color-convert": "^1.9.1",
+        "color-string": "^1.5.2"
+      }
+    },
+    "color-convert": {
+      "version": "1.9.3",
+      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
+      "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
+      "requires": {
+        "color-name": "1.1.3"
+      }
+    },
+    "color-name": {
+      "version": "1.1.3",
+      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
+      "integrity": "sha1-p9BVi9icQveV3UIyj3QIMcpTvCU="
+    },
+    "color-string": {
+      "version": "1.5.3",
+      "resolved": "https://registry.npmjs.org/color-string/-/color-string-1.5.3.tgz",
+      "integrity": "sha512-dC2C5qeWoYkxki5UAXapdjqO672AM4vZuPGRQfO8b5HKuKGBbKWpITyDYN7TOFKvRW7kOgAn3746clDBMDJyQw==",
+      "requires": {
+        "color-name": "^1.0.0",
+        "simple-swizzle": "^0.2.2"
+      }
+    },
+    "combined-stream": {
+      "version": "1.0.8",
+      "resolved": "https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz",
+      "integrity": "sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==",
+      "requires": {
+        "delayed-stream": "~1.0.0"
+      }
+    },
+    "command-exists": {
+      "version": "1.2.9",
+      "resolved": "https://registry.npmjs.org/command-exists/-/command-exists-1.2.9.tgz",
+      "integrity": "sha512-LTQ/SGc+s0Xc0Fu5WaKnR0YiygZkm9eKFvyS+fRsU7/ZWFF8ykFM6Pc9aCVf1+xasOOZpO3BAVgVrKvsqKHV7w=="
+    },
+    "commander": {
+      "version": "2.20.3",
+      "resolved": "https://registry.npmjs.org/commander/-/commander-2.20.3.tgz",
+      "integrity": "sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ=="
+    },
+    "common-tags": {
+      "version": "1.8.0",
+      "resolved": "https://registry.npmjs.org/common-tags/-/common-tags-1.8.0.tgz",
+      "integrity": "sha512-6P6g0uetGpW/sdyUy/iQQCbFF0kWVMSIVSyYz7Zgjcgh8mgw8PQzDNZeyZ5DQ2gM7LBoZPHmnjz8rUthkBG5tw=="
+    },
+    "commondir": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/commondir/-/commondir-1.0.1.tgz",
+      "integrity": "sha1-3dgA2gxmEnOTzKWVDqloo6rxJTs="
+    },
+    "compare-urls": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/compare-urls/-/compare-urls-2.0.0.tgz",
+      "integrity": "sha512-eCJcWn2OYFEIqbm70ta7LQowJOOZZqq1a2YbbFCFI1uwSvj+TWMwXVn7vPR1ceFNcAIt5RSTDbwdlX82gYLTkA==",
+      "requires": {
+        "normalize-url": "^2.0.1"
+      },
+      "dependencies": {
+        "normalize-url": {
+          "version": "2.0.1",
+          "resolved": "https://registry.npmjs.org/normalize-url/-/normalize-url-2.0.1.tgz",
+          "integrity": "sha512-D6MUW4K/VzoJ4rJ01JFKxDrtY1v9wrgzCX5f2qj/lzH1m/lW6MhUZFKerVsnyjOhOsYzI9Kqqak+10l4LvLpMw==",
+          "requires": {
+            "prepend-http": "^2.0.0",
+            "query-string": "^5.0.1",
+            "sort-keys": "^2.0.0"
+          }
+        },
+        "prepend-http": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/prepend-http/-/prepend-http-2.0.0.tgz",
+          "integrity": "sha1-6SQ0v6XqjBn0HN/UAddBo8gZ2Jc="
+        },
+        "query-string": {
+          "version": "5.1.1",
+          "resolved": "https://registry.npmjs.org/query-string/-/query-string-5.1.1.tgz",
+          "integrity": "sha512-gjWOsm2SoGlgLEdAGt7a6slVOk9mGiXmPFMqrEhLQ68rhQuBnpfs3+EmlvqKyxnCo9/PPlF+9MtY02S1aFg+Jw==",
+          "requires": {
+            "decode-uri-component": "^0.2.0",
+            "object-assign": "^4.1.0",
+            "strict-uri-encode": "^1.0.0"
+          }
+        },
+        "sort-keys": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/sort-keys/-/sort-keys-2.0.0.tgz",
+          "integrity": "sha1-ZYU1WEhh7JfXMNbPQYIuH1ZoQSg=",
+          "requires": {
+            "is-plain-obj": "^1.0.0"
+          }
+        }
+      }
+    },
+    "compare-versions": {
+      "version": "3.6.0",
+      "resolved": "https://registry.npmjs.org/compare-versions/-/compare-versions-3.6.0.tgz",
+      "integrity": "sha512-W6Af2Iw1z4CB7q4uU4hv646dW9GQuBM+YpC0UvUCWSD8w90SJjp+ujJuXaEMtAXBtSqGfMPuFOVn4/+FlaqfBA=="
+    },
+    "component-emitter": {
+      "version": "1.3.0",
+      "resolved": "https://registry.npmjs.org/component-emitter/-/component-emitter-1.3.0.tgz",
+      "integrity": "sha512-Rd3se6QB+sO1TwqZjscQrurpEPIfO0/yYnSin6Q/rD3mOutHvUrCAhJub3r90uNb+SESBuE0QYoB90YdfatsRg=="
+    },
+    "compose-function": {
+      "version": "3.0.3",
+      "resolved": "https://registry.npmjs.org/compose-function/-/compose-function-3.0.3.tgz",
+      "integrity": "sha1-ntZ18TzFRQHTCVCkhv9qe6OrGF8=",
+      "requires": {
+        "arity-n": "^1.0.4"
+      }
+    },
+    "compressible": {
+      "version": "2.0.18",
+      "resolved": "https://registry.npmjs.org/compressible/-/compressible-2.0.18.tgz",
+      "integrity": "sha512-AF3r7P5dWxL8MxyITRMlORQNaOA2IkAFaTr4k7BUumjPtRpGDTZpl0Pb1XCO6JeDCBdp126Cgs9sMxqSjgYyRg==",
+      "requires": {
+        "mime-db": ">= 1.43.0 < 2"
+      }
+    },
+    "compression": {
+      "version": "1.7.4",
+      "resolved": "https://registry.npmjs.org/compression/-/compression-1.7.4.tgz",
+      "integrity": "sha512-jaSIDzP9pZVS4ZfQ+TzvtiWhdpFhE2RDHz8QJkpX9SIpLq88VueF5jJw6t+6CUQcAoA6t+x89MLrWAqpfDE8iQ==",
+      "requires": {
+        "accepts": "~1.3.5",
+        "bytes": "3.0.0",
+        "compressible": "~2.0.16",
+        "debug": "2.6.9",
+        "on-headers": "~1.0.2",
+        "safe-buffer": "5.1.2",
+        "vary": "~1.1.2"
+      },
+      "dependencies": {
+        "debug": {
+          "version": "2.6.9",
+          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
+          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
+          "requires": {
+            "ms": "2.0.0"
+          }
+        },
+        "ms": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
+          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="
+        }
+      }
+    },
+    "concat-map": {
+      "version": "0.0.1",
+      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
+      "integrity": "sha1-2Klr13/Wjfd5OnMDajug1UBdR3s="
+    },
+    "concat-stream": {
+      "version": "1.6.2",
+      "resolved": "https://registry.npmjs.org/concat-stream/-/concat-stream-1.6.2.tgz",
+      "integrity": "sha512-27HBghJxjiZtIk3Ycvn/4kbJk/1uZuJFfuPEns6LaEvpvG1f0hTea8lilrouyo9mVc2GWdcEZ8OLoGmSADlrCw==",
+      "requires": {
+        "buffer-from": "^1.0.0",
+        "inherits": "^2.0.3",
+        "readable-stream": "^2.2.2",
+        "typedarray": "^0.0.6"
+      },
+      "dependencies": {
+        "readable-stream": {
+          "version": "2.3.7",
+          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
+          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
+          "requires": {
+            "core-util-is": "~1.0.0",
+            "inherits": "~2.0.3",
+            "isarray": "~1.0.0",
+            "process-nextick-args": "~2.0.0",
+            "safe-buffer": "~5.1.1",
+            "string_decoder": "~1.1.1",
+            "util-deprecate": "~1.0.1"
+          }
+        },
+        "string_decoder": {
+          "version": "1.1.1",
+          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
+          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
+          "requires": {
+            "safe-buffer": "~5.1.0"
+          }
+        }
+      }
+    },
+    "confusing-browser-globals": {
+      "version": "1.0.9",
+      "resolved": "https://registry.npmjs.org/confusing-browser-globals/-/confusing-browser-globals-1.0.9.tgz",
+      "integrity": "sha512-KbS1Y0jMtyPgIxjO7ZzMAuUpAKMt1SzCL9fsrKsX6b0zJPTaT0SiSPmewwVZg9UAO83HVIlEhZF84LIjZ0lmAw=="
+    },
+    "connect": {
+      "version": "3.7.0",
+      "resolved": "https://registry.npmjs.org/connect/-/connect-3.7.0.tgz",
+      "integrity": "sha512-ZqRXc+tZukToSNmh5C2iWMSoV3X1YUcPbqEM4DkEG5tNQXrQUZCNVGGv3IuicnkMtPfGf3Xtp8WCXs295iQ1pQ==",
+      "requires": {
+        "debug": "2.6.9",
+        "finalhandler": "1.1.2",
+        "parseurl": "~1.3.3",
+        "utils-merge": "1.0.1"
+      },
+      "dependencies": {
+        "debug": {
+          "version": "2.6.9",
+          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
+          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
+          "requires": {
+            "ms": "2.0.0"
+          }
+        },
+        "ms": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
+          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="
+        }
+      }
+    },
+    "connect-history-api-fallback": {
+      "version": "1.6.0",
+      "resolved": "https://registry.npmjs.org/connect-history-api-fallback/-/connect-history-api-fallback-1.6.0.tgz",
+      "integrity": "sha512-e54B99q/OUoH64zYYRf3HBP5z24G38h5D3qXu23JGRoigpX5Ss4r9ZnDk3g0Z8uQC2x2lPaJ+UlWBc1ZWBWdLg=="
+    },
+    "console-browserify": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/console-browserify/-/console-browserify-1.2.0.tgz",
+      "integrity": "sha512-ZMkYO/LkF17QvCPqM0gxw8yUzigAOZOSWSHg91FH6orS7vcEj5dVZTidN2fQ14yBSdg97RqhSNwLUXInd52OTA=="
+    },
+    "console-control-strings": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/console-control-strings/-/console-control-strings-1.1.0.tgz",
+      "integrity": "sha1-PXz0Rk22RG6mRL9LOVB/mFEAjo4=",
+      "dev": true
+    },
+    "constants-browserify": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/constants-browserify/-/constants-browserify-1.0.0.tgz",
+      "integrity": "sha1-wguW2MYXdIqvHBYCF2DNJ/y4y3U="
+    },
+    "contains-path": {
+      "version": "0.1.0",
+      "resolved": "https://registry.npmjs.org/contains-path/-/contains-path-0.1.0.tgz",
+      "integrity": "sha1-/ozxhP9mcLa67wGp1IYaXL7EEgo="
+    },
+    "content-disposition": {
+      "version": "0.5.3",
+      "resolved": "https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.3.tgz",
+      "integrity": "sha512-ExO0774ikEObIAEV9kDo50o+79VCUdEB6n6lzKgGwupcVeRlhrj3qGAfwq8G6uBJjkqLrhT0qEYFcWng8z1z0g==",
+      "requires": {
+        "safe-buffer": "5.1.2"
+      }
+    },
+    "content-type": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/content-type/-/content-type-1.0.4.tgz",
+      "integrity": "sha512-hIP3EEPs8tB9AT1L+NUqtwOAps4mk2Zob89MWXMHjHWg9milF/j4osnnQLXBCBFBk/tvIG/tUc9mOUJiPBhPXA=="
+    },
+    "convert-source-map": {
+      "version": "1.7.0",
+      "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-1.7.0.tgz",
+      "integrity": "sha512-4FJkXzKXEDB1snCFZlLP4gpC3JILicCpGbzG9f9G7tGqGCzETQ2hWPrcinA9oU4wtf2biUaEH5065UnMeR33oA==",
+      "requires": {
+        "safe-buffer": "~5.1.1"
+      }
+    },
+    "cookie": {
+      "version": "0.4.0",
+      "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.4.0.tgz",
+      "integrity": "sha512-+Hp8fLp57wnUSt0tY0tHEXh4voZRDnoIrZPqlo3DPiI4y9lwg/jqx+1Om94/W6ZaPDOUbnjOt/99w66zk+l1Xg=="
+    },
+    "cookie-signature": {
+      "version": "1.0.6",
+      "resolved": "https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz",
+      "integrity": "sha1-4wOogrNCzD7oylE6eZmXNNqzriw="
+    },
+    "copy-concurrently": {
+      "version": "1.0.5",
+      "resolved": "https://registry.npmjs.org/copy-concurrently/-/copy-concurrently-1.0.5.tgz",
+      "integrity": "sha512-f2domd9fsVDFtaFcbaRZuYXwtdmnzqbADSwhSWYxYB/Q8zsdUUFMXVRwXGDMWmbEzAn1kdRrtI1T/KTFOL4X2A==",
+      "requires": {
+        "aproba": "^1.1.1",
+        "fs-write-stream-atomic": "^1.0.8",
+        "iferr": "^0.1.5",
+        "mkdirp": "^0.5.1",
+        "rimraf": "^2.5.4",
+        "run-queue": "^1.0.0"
+      }
+    },
+    "copy-descriptor": {
+      "version": "0.1.1",
+      "resolved": "https://registry.npmjs.org/copy-descriptor/-/copy-descriptor-0.1.1.tgz",
+      "integrity": "sha1-Z29us8OZl8LuGsOpJP1hJHSPV40="
+    },
+    "core-js": {
+      "version": "3.6.5",
+      "resolved": "https://registry.npmjs.org/core-js/-/core-js-3.6.5.tgz",
+      "integrity": "sha512-vZVEEwZoIsI+vPEuoF9Iqf5H7/M3eeQqWlQnYa8FSKKePuYTf5MWnxb5SDAzCa60b3JBRS5g9b+Dq7b1y/RCrA=="
+    },
+    "core-js-compat": {
+      "version": "3.6.5",
+      "resolved": "https://registry.npmjs.org/core-js-compat/-/core-js-compat-3.6.5.tgz",
+      "integrity": "sha512-7ItTKOhOZbznhXAQ2g/slGg1PJV5zDO/WdkTwi7UEOJmkvsE32PWvx6mKtDjiMpjnR2CNf6BAD6sSxIlv7ptng==",
+      "requires": {
+        "browserslist": "^4.8.5",
+        "semver": "7.0.0"
+      },
+      "dependencies": {
+        "semver": {
+          "version": "7.0.0",
+          "resolved": "https://registry.npmjs.org/semver/-/semver-7.0.0.tgz",
+          "integrity": "sha512-+GB6zVA9LWh6zovYQLALHwv5rb2PHGlJi3lfiqIHxR0uuwCgefcOJc59v9fv1w8GbStwxuuqqAjI9NMAOOgq1A=="
+        }
+      }
+    },
+    "core-js-pure": {
+      "version": "3.6.5",
+      "resolved": "https://registry.npmjs.org/core-js-pure/-/core-js-pure-3.6.5.tgz",
+      "integrity": "sha512-lacdXOimsiD0QyNf9BC/mxivNJ/ybBGJXQFKzRekp1WTHoVUWsUHEn+2T8GJAzzIhyOuXA+gOxCVN3l+5PLPUA=="
+    },
+    "core-util-is": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.2.tgz",
+      "integrity": "sha1-tf1UIgqivFq1eqtxQMlAdUUDwac="
+    },
+    "cosmiconfig": {
+      "version": "5.2.1",
+      "resolved": "https://registry.npmjs.org/cosmiconfig/-/cosmiconfig-5.2.1.tgz",
+      "integrity": "sha512-H65gsXo1SKjf8zmrJ67eJk8aIRKV5ff2D4uKZIBZShbhGSpEmsQOPW/SKMKYhSTrqR7ufy6RP69rPogdaPh/kA==",
+      "requires": {
+        "import-fresh": "^2.0.0",
+        "is-directory": "^0.3.1",
+        "js-yaml": "^3.13.1",
+        "parse-json": "^4.0.0"
+      }
+    },
+    "create-ecdh": {
+      "version": "4.0.3",
+      "resolved": "https://registry.npmjs.org/create-ecdh/-/create-ecdh-4.0.3.tgz",
+      "integrity": "sha512-GbEHQPMOswGpKXM9kCWVrremUcBmjteUaQ01T9rkKCPDXfUHX0IoP9LpHYo2NPFampa4e+/pFDc3jQdxrxQLaw==",
+      "requires": {
+        "bn.js": "^4.1.0",
+        "elliptic": "^6.0.0"
+      }
+    },
+    "create-hash": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/create-hash/-/create-hash-1.2.0.tgz",
+      "integrity": "sha512-z00bCGNHDG8mHAkP7CtT1qVu+bFQUPjYq/4Iv3C3kWjTFV10zIjfSoeqXo9Asws8gwSHDGj/hl2u4OGIjapeCg==",
+      "requires": {
+        "cipher-base": "^1.0.1",
+        "inherits": "^2.0.1",
+        "md5.js": "^1.3.4",
+        "ripemd160": "^2.0.1",
+        "sha.js": "^2.4.0"
+      }
+    },
+    "create-hmac": {
+      "version": "1.1.7",
+      "resolved": "https://registry.npmjs.org/create-hmac/-/create-hmac-1.1.7.tgz",
+      "integrity": "sha512-MJG9liiZ+ogc4TzUwuvbER1JRdgvUFSB5+VR/g5h82fGaIRWMWddtKBHi7/sVhfjQZ6SehlyhvQYrcYkaUIpLg==",
+      "requires": {
+        "cipher-base": "^1.0.3",
+        "create-hash": "^1.1.0",
+        "inherits": "^2.0.1",
+        "ripemd160": "^2.0.0",
+        "safe-buffer": "^5.0.1",
+        "sha.js": "^2.4.8"
+      }
+    },
+    "create-react-context": {
+      "version": "0.3.0",
+      "resolved": "https://registry.npmjs.org/create-react-context/-/create-react-context-0.3.0.tgz",
+      "integrity": "sha512-dNldIoSuNSvlTJ7slIKC/ZFGKexBMBrrcc+TTe1NdmROnaASuLPvqpwj9v4XS4uXZ8+YPu0sNmShX2rXI5LNsw==",
+      "requires": {
+        "gud": "^1.0.0",
+        "warning": "^4.0.3"
+      }
+    },
+    "cross-spawn": {
+      "version": "6.0.5",
+      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-6.0.5.tgz",
+      "integrity": "sha512-eTVLrBSt7fjbDygz805pMnstIs2VTBNkRm0qxZd+M7A5XDdxVRWO5MxGBXZhjY4cqLYLdtrGqRf8mBPmzwSpWQ==",
+      "requires": {
+        "nice-try": "^1.0.4",
+        "path-key": "^2.0.1",
+        "semver": "^5.5.0",
+        "shebang-command": "^1.2.0",
+        "which": "^1.2.9"
+      },
+      "dependencies": {
+        "semver": {
+          "version": "5.7.1",
+          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
+          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ=="
+        }
+      }
+    },
+    "crypto-browserify": {
+      "version": "3.12.0",
+      "resolved": "https://registry.npmjs.org/crypto-browserify/-/crypto-browserify-3.12.0.tgz",
+      "integrity": "sha512-fz4spIh+znjO2VjL+IdhEpRJ3YN6sMzITSBijk6FK2UvTqruSQW+/cCZTSNsMiZNvUeq0CqurF+dAbyiGOY6Wg==",
+      "requires": {
+        "browserify-cipher": "^1.0.0",
+        "browserify-sign": "^4.0.0",
+        "create-ecdh": "^4.0.0",
+        "create-hash": "^1.1.0",
+        "create-hmac": "^1.1.0",
+        "diffie-hellman": "^5.0.0",
+        "inherits": "^2.0.1",
+        "pbkdf2": "^3.0.3",
+        "public-encrypt": "^4.0.0",
+        "randombytes": "^2.0.0",
+        "randomfill": "^1.0.3"
+      }
+    },
+    "css": {
+      "version": "2.2.4",
+      "resolved": "https://registry.npmjs.org/css/-/css-2.2.4.tgz",
+      "integrity": "sha512-oUnjmWpy0niI3x/mPL8dVEI1l7MnG3+HHyRPHf+YFSbK+svOhXpmSOcDURUh2aOCgl2grzrOPt1nHLuCVFULLw==",
+      "requires": {
+        "inherits": "^2.0.3",
+        "source-map": "^0.6.1",
+        "source-map-resolve": "^0.5.2",
+        "urix": "^0.1.0"
+      },
+      "dependencies": {
+        "source-map": {
+          "version": "0.6.1",
+          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
+          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="
+        }
+      }
+    },
+    "css-blank-pseudo": {
+      "version": "0.1.4",
+      "resolved": "https://registry.npmjs.org/css-blank-pseudo/-/css-blank-pseudo-0.1.4.tgz",
+      "integrity": "sha512-LHz35Hr83dnFeipc7oqFDmsjHdljj3TQtxGGiNWSOsTLIAubSm4TEz8qCaKFpk7idaQ1GfWscF4E6mgpBysA1w==",
+      "requires": {
+        "postcss": "^7.0.5"
+      }
+    },
+    "css-color-names": {
+      "version": "0.0.4",
+      "resolved": "https://registry.npmjs.org/css-color-names/-/css-color-names-0.0.4.tgz",
+      "integrity": "sha1-gIrcLnnPhHOAabZGyyDsJ762KeA="
+    },
+    "css-declaration-sorter": {
+      "version": "4.0.1",
+      "resolved": "https://registry.npmjs.org/css-declaration-sorter/-/css-declaration-sorter-4.0.1.tgz",
+      "integrity": "sha512-BcxQSKTSEEQUftYpBVnsH4SF05NTuBokb19/sBt6asXGKZ/6VP7PLG1CBCkFDYOnhXhPh0jMhO6xZ71oYHXHBA==",
+      "requires": {
+        "postcss": "^7.0.1",
+        "timsort": "^0.3.0"
+      }
+    },
+    "css-has-pseudo": {
+      "version": "0.10.0",
+      "resolved": "https://registry.npmjs.org/css-has-pseudo/-/css-has-pseudo-0.10.0.tgz",
+      "integrity": "sha512-Z8hnfsZu4o/kt+AuFzeGpLVhFOGO9mluyHBaA2bA8aCGTwah5sT3WV/fTHH8UNZUytOIImuGPrl/prlb4oX4qQ==",
+      "requires": {
+        "postcss": "^7.0.6",
+        "postcss-selector-parser": "^5.0.0-rc.4"
+      },
+      "dependencies": {
+        "cssesc": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/cssesc/-/cssesc-2.0.0.tgz",
+          "integrity": "sha512-MsCAG1z9lPdoO/IUMLSBWBSVxVtJ1395VGIQ+Fc2gNdkQ1hNDnQdw3YhA71WJCBW1vdwA0cAnk/DnW6bqoEUYg=="
+        },
+        "postcss-selector-parser": {
+          "version": "5.0.0",
+          "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-5.0.0.tgz",
+          "integrity": "sha512-w+zLE5Jhg6Liz8+rQOWEAwtwkyqpfnmsinXjXg6cY7YIONZZtgvE0v2O0uhQBs0peNomOJwWRKt6JBfTdTd3OQ==",
+          "requires": {
+            "cssesc": "^2.0.0",
+            "indexes-of": "^1.0.1",
+            "uniq": "^1.0.1"
+          }
+        }
+      }
+    },
+    "css-loader": {
+      "version": "3.4.2",
+      "resolved": "https://registry.npmjs.org/css-loader/-/css-loader-3.4.2.tgz",
+      "integrity": "sha512-jYq4zdZT0oS0Iykt+fqnzVLRIeiPWhka+7BqPn+oSIpWJAHak5tmB/WZrJ2a21JhCeFyNnnlroSl8c+MtVndzA==",
+      "requires": {
+        "camelcase": "^5.3.1",
+        "cssesc": "^3.0.0",
+        "icss-utils": "^4.1.1",
+        "loader-utils": "^1.2.3",
+        "normalize-path": "^3.0.0",
+        "postcss": "^7.0.23",
+        "postcss-modules-extract-imports": "^2.0.0",
+        "postcss-modules-local-by-default": "^3.0.2",
+        "postcss-modules-scope": "^2.1.1",
+        "postcss-modules-values": "^3.0.0",
+        "postcss-value-parser": "^4.0.2",
+        "schema-utils": "^2.6.0"
+      },
+      "dependencies": {
+        "normalize-path": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",
+          "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA=="
+        }
+      }
+    },
+    "css-modules-loader-core": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/css-modules-loader-core/-/css-modules-loader-core-1.1.0.tgz",
+      "integrity": "sha1-WQhmgpShvs0mGuCkziGwtVHyHRY=",
+      "dev": true,
+      "requires": {
+        "icss-replace-symbols": "1.1.0",
+        "postcss": "6.0.1",
+        "postcss-modules-extract-imports": "1.1.0",
+        "postcss-modules-local-by-default": "1.2.0",
+        "postcss-modules-scope": "1.1.0",
+        "postcss-modules-values": "1.3.0"
+      },
+      "dependencies": {
+        "ansi-regex": {
+          "version": "2.1.1",
+          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",
+          "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8=",
+          "dev": true
+        },
+        "ansi-styles": {
+          "version": "2.2.1",
+          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz",
+          "integrity": "sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4=",
+          "dev": true
+        },
+        "chalk": {
+          "version": "1.1.3",
+          "resolved": "https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz",
+          "integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
+          "dev": true,
+          "requires": {
+            "ansi-styles": "^2.2.1",
+            "escape-string-regexp": "^1.0.2",
+            "has-ansi": "^2.0.0",
+            "strip-ansi": "^3.0.0",
+            "supports-color": "^2.0.0"
+          },
+          "dependencies": {
+            "supports-color": {
+              "version": "2.0.0",
+              "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz",
+              "integrity": "sha1-U10EXOa2Nj+kARcIRimZXp3zJMc=",
+              "dev": true
+            }
+          }
+        },
+        "has-flag": {
+          "version": "1.0.0",
+          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-1.0.0.tgz",
+          "integrity": "sha1-nZ55MWXOAXoA8AQYxD+UKnsdEfo=",
+          "dev": true
+        },
+        "postcss": {
+          "version": "6.0.1",
+          "resolved": "https://registry.npmjs.org/postcss/-/postcss-6.0.1.tgz",
+          "integrity": "sha1-AA29H47vIXqjaLmiEsX8QLKo8/I=",
+          "dev": true,
+          "requires": {
+            "chalk": "^1.1.3",
+            "source-map": "^0.5.6",
+            "supports-color": "^3.2.3"
+          }
+        },
+        "postcss-modules-extract-imports": {
+          "version": "1.1.0",
+          "resolved": "https://registry.npmjs.org/postcss-modules-extract-imports/-/postcss-modules-extract-imports-1.1.0.tgz",
+          "integrity": "sha1-thTJcgvmgW6u41+zpfqh26agXds=",
+          "dev": true,
+          "requires": {
+            "postcss": "^6.0.1"
+          }
+        },
+        "postcss-modules-local-by-default": {
+          "version": "1.2.0",
+          "resolved": "https://registry.npmjs.org/postcss-modules-local-by-default/-/postcss-modules-local-by-default-1.2.0.tgz",
+          "integrity": "sha1-99gMOYxaOT+nlkRmvRlQCn1hwGk=",
+          "dev": true,
+          "requires": {
+            "css-selector-tokenizer": "^0.7.0",
+            "postcss": "^6.0.1"
+          }
+        },
+        "postcss-modules-scope": {
+          "version": "1.1.0",
+          "resolved": "https://registry.npmjs.org/postcss-modules-scope/-/postcss-modules-scope-1.1.0.tgz",
+          "integrity": "sha1-1upkmUx5+XtipytCb75gVqGUu5A=",
+          "dev": true,
+          "requires": {
+            "css-selector-tokenizer": "^0.7.0",
+            "postcss": "^6.0.1"
+          }
+        },
+        "postcss-modules-values": {
+          "version": "1.3.0",
+          "resolved": "https://registry.npmjs.org/postcss-modules-values/-/postcss-modules-values-1.3.0.tgz",
+          "integrity": "sha1-7P+p1+GSUYOJ9CrQ6D9yrsRW6iA=",
+          "dev": true,
+          "requires": {
+            "icss-replace-symbols": "^1.1.0",
+            "postcss": "^6.0.1"
+          }
+        },
+        "strip-ansi": {
+          "version": "3.0.1",
+          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",
+          "integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",
+          "dev": true,
+          "requires": {
+            "ansi-regex": "^2.0.0"
+          }
+        },
+        "supports-color": {
+          "version": "3.2.3",
+          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-3.2.3.tgz",
+          "integrity": "sha1-ZawFBLOVQXHYpklGsq48u4pfVPY=",
+          "dev": true,
+          "requires": {
+            "has-flag": "^1.0.0"
+          }
+        }
+      }
+    },
+    "css-prefers-color-scheme": {
+      "version": "3.1.1",
+      "resolved": "https://registry.npmjs.org/css-prefers-color-scheme/-/css-prefers-color-scheme-3.1.1.tgz",
+      "integrity": "sha512-MTu6+tMs9S3EUqzmqLXEcgNRbNkkD/TGFvowpeoWJn5Vfq7FMgsmRQs9X5NXAURiOBmOxm/lLjsDNXDE6k9bhg==",
+      "requires": {
+        "postcss": "^7.0.5"
+      }
+    },
+    "css-select": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/css-select/-/css-select-2.1.0.tgz",
+      "integrity": "sha512-Dqk7LQKpwLoH3VovzZnkzegqNSuAziQyNZUcrdDM401iY+R5NkGBXGmtO05/yaXQziALuPogeG0b7UAgjnTJTQ==",
+      "requires": {
+        "boolbase": "^1.0.0",
+        "css-what": "^3.2.1",
+        "domutils": "^1.7.0",
+        "nth-check": "^1.0.2"
+      }
+    },
+    "css-select-base-adapter": {
+      "version": "0.1.1",
+      "resolved": "https://registry.npmjs.org/css-select-base-adapter/-/css-select-base-adapter-0.1.1.tgz",
+      "integrity": "sha512-jQVeeRG70QI08vSTwf1jHxp74JoZsr2XSgETae8/xC8ovSnL2WF87GTLO86Sbwdt2lK4Umg4HnnwMO4YF3Ce7w=="
+    },
+    "css-selector-tokenizer": {
+      "version": "0.7.2",
+      "resolved": "https://registry.npmjs.org/css-selector-tokenizer/-/css-selector-tokenizer-0.7.2.tgz",
+      "integrity": "sha512-yj856NGuAymN6r8bn8/Jl46pR+OC3eEvAhfGYDUe7YPtTPAYrSSw4oAniZ9Y8T5B92hjhwTBLUen0/vKPxf6pw==",
+      "dev": true,
+      "requires": {
+        "cssesc": "^3.0.0",
+        "fastparse": "^1.1.2",
+        "regexpu-core": "^4.6.0"
+      }
+    },
+    "css-tree": {
+      "version": "1.0.0-alpha.37",
+      "resolved": "https://registry.npmjs.org/css-tree/-/css-tree-1.0.0-alpha.37.tgz",
+      "integrity": "sha512-DMxWJg0rnz7UgxKT0Q1HU/L9BeJI0M6ksor0OgqOnF+aRCDWg/N2641HmVyU9KVIu0OVVWOb2IpC9A+BJRnejg==",
+      "requires": {
+        "mdn-data": "2.0.4",
+        "source-map": "^0.6.1"
+      },
+      "dependencies": {
+        "source-map": {
+          "version": "0.6.1",
+          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
+          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="
+        }
+      }
+    },
+    "css-what": {
+      "version": "3.2.1",
+      "resolved": "https://registry.npmjs.org/css-what/-/css-what-3.2.1.tgz",
+      "integrity": "sha512-WwOrosiQTvyms+Ti5ZC5vGEK0Vod3FTt1ca+payZqvKuGJF+dq7bG63DstxtN0dpm6FxY27a/zS3Wten+gEtGw=="
+    },
+    "css.escape": {
+      "version": "1.5.1",
+      "resolved": "https://registry.npmjs.org/css.escape/-/css.escape-1.5.1.tgz",
+      "integrity": "sha1-QuJ9T6BK4y+TGktNQZH6nN3ul8s="
+    },
+    "cssdb": {
+      "version": "4.4.0",
+      "resolved": "https://registry.npmjs.org/cssdb/-/cssdb-4.4.0.tgz",
+      "integrity": "sha512-LsTAR1JPEM9TpGhl/0p3nQecC2LJ0kD8X5YARu1hk/9I1gril5vDtMZyNxcEpxxDj34YNck/ucjuoUd66K03oQ=="
+    },
+    "cssesc": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/cssesc/-/cssesc-3.0.0.tgz",
+      "integrity": "sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg=="
+    },
+    "cssnano": {
+      "version": "4.1.10",
+      "resolved": "https://registry.npmjs.org/cssnano/-/cssnano-4.1.10.tgz",
+      "integrity": "sha512-5wny+F6H4/8RgNlaqab4ktc3e0/blKutmq8yNlBFXA//nSFFAqAngjNVRzUvCgYROULmZZUoosL/KSoZo5aUaQ==",
+      "requires": {
+        "cosmiconfig": "^5.0.0",
+        "cssnano-preset-default": "^4.0.7",
+        "is-resolvable": "^1.0.0",
+        "postcss": "^7.0.0"
+      }
+    },
+    "cssnano-preset-default": {
+      "version": "4.0.7",
+      "resolved": "https://registry.npmjs.org/cssnano-preset-default/-/cssnano-preset-default-4.0.7.tgz",
+      "integrity": "sha512-x0YHHx2h6p0fCl1zY9L9roD7rnlltugGu7zXSKQx6k2rYw0Hi3IqxcoAGF7u9Q5w1nt7vK0ulxV8Lo+EvllGsA==",
+      "requires": {
+        "css-declaration-sorter": "^4.0.1",
+        "cssnano-util-raw-cache": "^4.0.1",
+        "postcss": "^7.0.0",
+        "postcss-calc": "^7.0.1",
+        "postcss-colormin": "^4.0.3",
+        "postcss-convert-values": "^4.0.1",
+        "postcss-discard-comments": "^4.0.2",
+        "postcss-discard-duplicates": "^4.0.2",
+        "postcss-discard-empty": "^4.0.1",
+        "postcss-discard-overridden": "^4.0.1",
+        "postcss-merge-longhand": "^4.0.11",
+        "postcss-merge-rules": "^4.0.3",
+        "postcss-minify-font-values": "^4.0.2",
+        "postcss-minify-gradients": "^4.0.2",
+        "postcss-minify-params": "^4.0.2",
+        "postcss-minify-selectors": "^4.0.2",
+        "postcss-normalize-charset": "^4.0.1",
+        "postcss-normalize-display-values": "^4.0.2",
+        "postcss-normalize-positions": "^4.0.2",
+        "postcss-normalize-repeat-style": "^4.0.2",
+        "postcss-normalize-string": "^4.0.2",
+        "postcss-normalize-timing-functions": "^4.0.2",
+        "postcss-normalize-unicode": "^4.0.1",
+        "postcss-normalize-url": "^4.0.1",
+        "postcss-normalize-whitespace": "^4.0.2",
+        "postcss-ordered-values": "^4.1.2",
+        "postcss-reduce-initial": "^4.0.3",
+        "postcss-reduce-transforms": "^4.0.2",
+        "postcss-svgo": "^4.0.2",
+        "postcss-unique-selectors": "^4.0.1"
+      }
+    },
+    "cssnano-util-get-arguments": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/cssnano-util-get-arguments/-/cssnano-util-get-arguments-4.0.0.tgz",
+      "integrity": "sha1-7ToIKZ8h11dBsg87gfGU7UnMFQ8="
+    },
+    "cssnano-util-get-match": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/cssnano-util-get-match/-/cssnano-util-get-match-4.0.0.tgz",
+      "integrity": "sha1-wOTKB/U4a7F+xeUiULT1lhNlFW0="
+    },
+    "cssnano-util-raw-cache": {
+      "version": "4.0.1",
+      "resolved": "https://registry.npmjs.org/cssnano-util-raw-cache/-/cssnano-util-raw-cache-4.0.1.tgz",
+      "integrity": "sha512-qLuYtWK2b2Dy55I8ZX3ky1Z16WYsx544Q0UWViebptpwn/xDBmog2TLg4f+DBMg1rJ6JDWtn96WHbOKDWt1WQA==",
+      "requires": {
+        "postcss": "^7.0.0"
+      }
+    },
+    "cssnano-util-same-parent": {
+      "version": "4.0.1",
+      "resolved": "https://registry.npmjs.org/cssnano-util-same-parent/-/cssnano-util-same-parent-4.0.1.tgz",
+      "integrity": "sha512-WcKx5OY+KoSIAxBW6UBBRay1U6vkYheCdjyVNDm85zt5K9mHoGOfsOsqIszfAqrQQFIIKgjh2+FDgIj/zsl21Q=="
+    },
+    "csso": {
+      "version": "4.0.3",
+      "resolved": "https://registry.npmjs.org/csso/-/csso-4.0.3.tgz",
+      "integrity": "sha512-NL3spysxUkcrOgnpsT4Xdl2aiEiBG6bXswAABQVHcMrfjjBisFOKwLDOmf4wf32aPdcJws1zds2B0Rg+jqMyHQ==",
+      "requires": {
+        "css-tree": "1.0.0-alpha.39"
+      },
+      "dependencies": {
+        "css-tree": {
+          "version": "1.0.0-alpha.39",
+          "resolved": "https://registry.npmjs.org/css-tree/-/css-tree-1.0.0-alpha.39.tgz",
+          "integrity": "sha512-7UvkEYgBAHRG9Nt980lYxjsTrCyHFN53ky3wVsDkiMdVqylqRt+Zc+jm5qw7/qyOvN2dHSYtX0e4MbCCExSvnA==",
+          "requires": {
+            "mdn-data": "2.0.6",
+            "source-map": "^0.6.1"
+          }
+        },
+        "mdn-data": {
+          "version": "2.0.6",
+          "resolved": "https://registry.npmjs.org/mdn-data/-/mdn-data-2.0.6.tgz",
+          "integrity": "sha512-rQvjv71olwNHgiTbfPZFkJtjNMciWgswYeciZhtvWLO8bmX3TnhyA62I6sTWOyZssWHJJjY6/KiWwqQsWWsqOA=="
+        },
+        "source-map": {
+          "version": "0.6.1",
+          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
+          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="
+        }
+      }
+    },
+    "cssom": {
+      "version": "0.3.8",
+      "resolved": "https://registry.npmjs.org/cssom/-/cssom-0.3.8.tgz",
+      "integrity": "sha512-b0tGHbfegbhPJpxpiBPU2sCkigAqtM9O121le6bbOlgyV+NyGyCmVfJ6QW9eRjz8CpNfWEOYBIMIGRYkLwsIYg=="
+    },
+    "cssstyle": {
+      "version": "1.4.0",
+      "resolved": "https://registry.npmjs.org/cssstyle/-/cssstyle-1.4.0.tgz",
+      "integrity": "sha512-GBrLZYZ4X4x6/QEoBnIrqb8B/f5l4+8me2dkom/j1Gtbxy0kBv6OGzKuAsGM75bkGwGAFkt56Iwg28S3XTZgSA==",
+      "requires": {
+        "cssom": "0.3.x"
+      }
+    },
+    "csstype": {
+      "version": "2.6.10",
+      "resolved": "https://registry.npmjs.org/csstype/-/csstype-2.6.10.tgz",
+      "integrity": "sha512-D34BqZU4cIlMCY93rZHbrq9pjTAQJ3U8S8rfBqjwHxkGPThWFjzZDQpgMJY0QViLxth6ZKYiwFBo14RdN44U/w=="
+    },
+    "currently-unhandled": {
+      "version": "0.4.1",
+      "resolved": "https://registry.npmjs.org/currently-unhandled/-/currently-unhandled-0.4.1.tgz",
+      "integrity": "sha1-mI3zP+qxke95mmE2nddsF635V+o=",
+      "dev": true,
+      "requires": {
+        "array-find-index": "^1.0.1"
+      }
+    },
+    "cyclist": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/cyclist/-/cyclist-1.0.1.tgz",
+      "integrity": "sha1-WW6WmP0MgOEgOMK4LW6xs1tiJNk="
+    },
+    "d": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/d/-/d-1.0.1.tgz",
+      "integrity": "sha512-m62ShEObQ39CfralilEQRjH6oAMtNCV1xJyEx5LpRYUVN+EviphDgUc/F3hnYbADmkiNs67Y+3ylmlG7Lnu+FA==",
+      "requires": {
+        "es5-ext": "^0.10.50",
+        "type": "^1.0.1"
+      }
+    },
+    "damerau-levenshtein": {
+      "version": "1.0.6",
+      "resolved": "https://registry.npmjs.org/damerau-levenshtein/-/damerau-levenshtein-1.0.6.tgz",
+      "integrity": "sha512-JVrozIeElnj3QzfUIt8tB8YMluBJom4Vw9qTPpjGYQ9fYlB3D/rb6OordUxf3xeFB35LKWs0xqcO5U6ySvBtug=="
+    },
+    "dashdash": {
+      "version": "1.14.1",
+      "resolved": "https://registry.npmjs.org/dashdash/-/dashdash-1.14.1.tgz",
+      "integrity": "sha1-hTz6D3y+L+1d4gMmuN1YEDX24vA=",
+      "requires": {
+        "assert-plus": "^1.0.0"
+      }
+    },
+    "data-urls": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/data-urls/-/data-urls-1.1.0.tgz",
+      "integrity": "sha512-YTWYI9se1P55u58gL5GkQHW4P6VJBJ5iBT+B5a7i2Tjadhv52paJG0qHX4A0OR6/t52odI64KP2YvFpkDOi3eQ==",
+      "requires": {
+        "abab": "^2.0.0",
+        "whatwg-mimetype": "^2.2.0",
+        "whatwg-url": "^7.0.0"
+      },
+      "dependencies": {
+        "whatwg-url": {
+          "version": "7.1.0",
+          "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-7.1.0.tgz",
+          "integrity": "sha512-WUu7Rg1DroM7oQvGWfOiAK21n74Gg+T4elXEQYkOhtyLeWiJFoOGLXPKI/9gzIie9CtwVLm8wtw6YJdKyxSjeg==",
+          "requires": {
+            "lodash.sortby": "^4.7.0",
+            "tr46": "^1.0.1",
+            "webidl-conversions": "^4.0.2"
+          }
+        }
+      }
+    },
+    "deasync": {
+      "version": "0.1.20",
+      "resolved": "https://registry.npmjs.org/deasync/-/deasync-0.1.20.tgz",
+      "integrity": "sha512-E1GI7jMI57hL30OX6Ht/hfQU8DO4AuB9m72WFm4c38GNbUD4Q03//XZaOIHZiY+H1xUaomcot5yk2q/qIZQkGQ==",
+      "dev": true,
+      "requires": {
+        "bindings": "^1.5.0",
+        "node-addon-api": "^1.7.1"
+      }
+    },
+    "debug": {
+      "version": "4.1.1",
+      "resolved": "https://registry.npmjs.org/debug/-/debug-4.1.1.tgz",
+      "integrity": "sha512-pYAIzeRo8J6KPEaJ0VWOh5Pzkbw/RetuzehGM7QRRX5he4fPHx2rdKMB256ehJCkX+XRQm16eZLqLNS8RSZXZw==",
+      "requires": {
+        "ms": "^2.1.1"
+      }
+    },
+    "decamelize": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/decamelize/-/decamelize-1.2.0.tgz",
+      "integrity": "sha1-9lNNFRSCabIDUue+4m9QH5oZEpA="
+    },
+    "decode-uri-component": {
+      "version": "0.2.0",
+      "resolved": "https://registry.npmjs.org/decode-uri-component/-/decode-uri-component-0.2.0.tgz",
+      "integrity": "sha1-6zkTMzRYd1y4TNGh+uBiEGu4dUU="
+    },
+    "deep-equal": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/deep-equal/-/deep-equal-1.1.1.tgz",
+      "integrity": "sha512-yd9c5AdiqVcR+JjcwUQb9DkhJc8ngNr0MahEBGvDiJw8puWab2yZlh+nkasOnZP+EGTAP6rRp2JzJhJZzvNF8g==",
+      "requires": {
+        "is-arguments": "^1.0.4",
+        "is-date-object": "^1.0.1",
+        "is-regex": "^1.0.4",
+        "object-is": "^1.0.1",
+        "object-keys": "^1.1.1",
+        "regexp.prototype.flags": "^1.2.0"
+      }
+    },
+    "deep-is": {
+      "version": "0.1.3",
+      "resolved": "https://registry.npmjs.org/deep-is/-/deep-is-0.1.3.tgz",
+      "integrity": "sha1-s2nW+128E+7PUk+RsHD+7cNXzzQ="
+    },
+    "deepmerge": {
+      "version": "3.3.0",
+      "resolved": "https://registry.npmjs.org/deepmerge/-/deepmerge-3.3.0.tgz",
+      "integrity": "sha512-GRQOafGHwMHpjPx9iCvTgpu9NojZ49q794EEL94JVEw6VaeA8XTUyBKvAkOOjBX9oJNiV6G3P+T+tihFjo2TqA=="
+    },
+    "default-gateway": {
+      "version": "4.2.0",
+      "resolved": "https://registry.npmjs.org/default-gateway/-/default-gateway-4.2.0.tgz",
+      "integrity": "sha512-h6sMrVB1VMWVrW13mSc6ia/DwYYw5MN6+exNu1OaJeFac5aSAvwM7lZ0NVfTABuSkQelr4h5oebg3KB1XPdjgA==",
+      "requires": {
+        "execa": "^1.0.0",
+        "ip-regex": "^2.1.0"
+      }
+    },
+    "defaults": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/defaults/-/defaults-1.0.3.tgz",
+      "integrity": "sha1-xlYFHpgX2f8I7YgUd/P+QBnz730=",
+      "requires": {
+        "clone": "^1.0.2"
+      }
+    },
+    "define-properties": {
+      "version": "1.1.3",
+      "resolved": "https://registry.npmjs.org/define-properties/-/define-properties-1.1.3.tgz",
+      "integrity": "sha512-3MqfYKj2lLzdMSf8ZIZE/V+Zuy+BgD6f164e8K2w7dgnpKArBDerGYpM46IYYcjnkdPNMjPk9A6VFB8+3SKlXQ==",
+      "requires": {
+        "object-keys": "^1.0.12"
+      }
+    },
+    "define-property": {
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/define-property/-/define-property-2.0.2.tgz",
+      "integrity": "sha512-jwK2UV4cnPpbcG7+VRARKTZPUWowwXA8bzH5NP6ud0oeAxyYPuGZUAC7hMugpCdz4BeSZl2Dl9k66CHJ/46ZYQ==",
+      "requires": {
+        "is-descriptor": "^1.0.2",
+        "isobject": "^3.0.1"
+      },
+      "dependencies": {
+        "is-accessor-descriptor": {
+          "version": "1.0.0",
+          "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz",
+          "integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK6LUY94dYPEE7Lh0ZkZKcQ==",
+          "requires": {
+            "kind-of": "^6.0.0"
+          }
+        },
+        "is-data-descriptor": {
+          "version": "1.0.0",
+          "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz",
+          "integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRFRXcHYVkdeaP50Q5rE/jLQ==",
+          "requires": {
+            "kind-of": "^6.0.0"
+          }
+        },
+        "is-descriptor": {
+          "version": "1.0.2",
+          "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.2.tgz",
+          "integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9k1T2hOH3miL8n8WtiYVtg==",
+          "requires": {
+            "is-accessor-descriptor": "^1.0.0",
+            "is-data-descriptor": "^1.0.0",
+            "kind-of": "^6.0.2"
+          }
+        },
+        "kind-of": {
+          "version": "6.0.3",
+          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.3.tgz",
+          "integrity": "sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw=="
+        }
+      }
+    },
+    "defined": {
+      "version": "0.0.0",
+      "resolved": "https://registry.npmjs.org/defined/-/defined-0.0.0.tgz",
+      "integrity": "sha1-817qfXBekzuvE7LwOz+D2SFAOz4="
+    },
+    "del": {
+      "version": "4.1.1",
+      "resolved": "https://registry.npmjs.org/del/-/del-4.1.1.tgz",
+      "integrity": "sha512-QwGuEUouP2kVwQenAsOof5Fv8K9t3D8Ca8NxcXKrIpEHjTXK5J2nXLdP+ALI1cgv8wj7KuwBhTwBkOZSJKM5XQ==",
+      "requires": {
+        "@types/glob": "^7.1.1",
+        "globby": "^6.1.0",
+        "is-path-cwd": "^2.0.0",
+        "is-path-in-cwd": "^2.0.0",
+        "p-map": "^2.0.0",
+        "pify": "^4.0.1",
+        "rimraf": "^2.6.3"
+      },
+      "dependencies": {
+        "globby": {
+          "version": "6.1.0",
+          "resolved": "https://registry.npmjs.org/globby/-/globby-6.1.0.tgz",
+          "integrity": "sha1-9abXDoOV4hyFj7BInWTfAkJNUGw=",
+          "requires": {
+            "array-union": "^1.0.1",
+            "glob": "^7.0.3",
+            "object-assign": "^4.0.1",
+            "pify": "^2.0.0",
+            "pinkie-promise": "^2.0.0"
+          },
+          "dependencies": {
+            "pify": {
+              "version": "2.3.0",
+              "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",
+              "integrity": "sha1-7RQaasBDqEnqWISY59yosVMw6Qw="
+            }
+          }
+        },
+        "p-map": {
+          "version": "2.1.0",
+          "resolved": "https://registry.npmjs.org/p-map/-/p-map-2.1.0.tgz",
+          "integrity": "sha512-y3b8Kpd8OAN444hxfBbFfj1FY/RjtTd8tzYwhUqNYXx0fXx2iX4maP4Qr6qhIKbQXI02wTLAda4fYUbDagTUFw=="
+        },
+        "pify": {
+          "version": "4.0.1",
+          "resolved": "https://registry.npmjs.org/pify/-/pify-4.0.1.tgz",
+          "integrity": "sha512-uB80kBFb/tfd68bVleG9T5GGsGPjJrLAUpR5PZIrhBnIaRTQRjqdJSsIKkOP6OAIFbj7GOrcudc5pNjZ+geV2g=="
+        }
+      }
+    },
+    "delayed-stream": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz",
+      "integrity": "sha1-3zrhmayt+31ECqrgsp4icrJOxhk="
+    },
+    "delegates": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/delegates/-/delegates-1.0.0.tgz",
+      "integrity": "sha1-hMbhWbgZBP3KWaDvRM2HDTElD5o=",
+      "dev": true
+    },
+    "denodeify": {
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/denodeify/-/denodeify-1.2.1.tgz",
+      "integrity": "sha1-OjYof1A05pnnV3kBBSwubJQlFjE="
+    },
+    "depd": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/depd/-/depd-1.1.2.tgz",
+      "integrity": "sha1-m81S4UwJd2PnSbJ0xDRu0uVgtak="
+    },
+    "des.js": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/des.js/-/des.js-1.0.1.tgz",
+      "integrity": "sha512-Q0I4pfFrv2VPd34/vfLrFOoRmlYj3OV50i7fskps1jZWK1kApMWWT9G6RRUeYedLcBDIhnSDaUvJMb3AhUlaEA==",
+      "requires": {
+        "inherits": "^2.0.1",
+        "minimalistic-assert": "^1.0.0"
+      }
+    },
+    "destroy": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/destroy/-/destroy-1.0.4.tgz",
+      "integrity": "sha1-l4hXRCxEdJ5CBmE+N5RiBYJqvYA="
+    },
+    "detect-newline": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/detect-newline/-/detect-newline-2.1.0.tgz",
+      "integrity": "sha1-9B8cEL5LAOh7XxPaaAdZ8sW/0+I="
+    },
+    "detect-node": {
+      "version": "2.0.4",
+      "resolved": "https://registry.npmjs.org/detect-node/-/detect-node-2.0.4.tgz",
+      "integrity": "sha512-ZIzRpLJrOj7jjP2miAtgqIfmzbxa4ZOr5jJc601zklsfEx9oTzmmj2nVpIPRpNlRTIh8lc1kyViIY7BWSGNmKw=="
+    },
+    "detect-port-alt": {
+      "version": "1.1.6",
+      "resolved": "https://registry.npmjs.org/detect-port-alt/-/detect-port-alt-1.1.6.tgz",
+      "integrity": "sha512-5tQykt+LqfJFBEYaDITx7S7cR7mJ/zQmLXZ2qt5w04ainYZw6tBf9dBunMjVeVOdYVRUzUOE4HkY5J7+uttb5Q==",
+      "requires": {
+        "address": "^1.0.1",
+        "debug": "^2.6.0"
+      },
+      "dependencies": {
+        "debug": {
+          "version": "2.6.9",
+          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
+          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
+          "requires": {
+            "ms": "2.0.0"
+          }
+        },
+        "ms": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
+          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="
+        }
+      }
+    },
+    "diff-sequences": {
+      "version": "24.9.0",
+      "resolved": "https://registry.npmjs.org/diff-sequences/-/diff-sequences-24.9.0.tgz",
+      "integrity": "sha512-Dj6Wk3tWyTE+Fo1rW8v0Xhwk80um6yFYKbuAxc9c3EZxIHFDYwbi34Uk42u1CdnIiVorvt4RmlSDjIPyzGC2ew=="
+    },
+    "diffie-hellman": {
+      "version": "5.0.3",
+      "resolved": "https://registry.npmjs.org/diffie-hellman/-/diffie-hellman-5.0.3.tgz",
+      "integrity": "sha512-kqag/Nl+f3GwyK25fhUMYj81BUOrZ9IuJsjIcDE5icNM9FJHAVm3VcUDxdLPoQtTuUylWm6ZIknYJwwaPxsUzg==",
+      "requires": {
+        "bn.js": "^4.1.0",
+        "miller-rabin": "^4.0.0",
+        "randombytes": "^2.0.0"
+      }
+    },
+    "dir-glob": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/dir-glob/-/dir-glob-2.0.0.tgz",
+      "integrity": "sha512-37qirFDz8cA5fimp9feo43fSuRo2gHwaIn6dXL8Ber1dGwUosDrGZeCCXq57WnIqE4aQ+u3eQZzsk1yOzhdwag==",
+      "requires": {
+        "arrify": "^1.0.1",
+        "path-type": "^3.0.0"
+      }
+    },
+    "dns-equal": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/dns-equal/-/dns-equal-1.0.0.tgz",
+      "integrity": "sha1-s55/HabrCnW6nBcySzR1PEfgZU0="
+    },
+    "dns-packet": {
+      "version": "1.3.1",
+      "resolved": "https://registry.npmjs.org/dns-packet/-/dns-packet-1.3.1.tgz",
+      "integrity": "sha512-0UxfQkMhYAUaZI+xrNZOz/as5KgDU0M/fQ9b6SpkyLbk3GEswDi6PADJVaYJradtRVsRIlF1zLyOodbcTCDzUg==",
+      "requires": {
+        "ip": "^1.1.0",
+        "safe-buffer": "^5.0.1"
+      }
+    },
+    "dns-txt": {
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/dns-txt/-/dns-txt-2.0.2.tgz",
+      "integrity": "sha1-uR2Ab10nGI5Ks+fRB9iBocxGQrY=",
+      "requires": {
+        "buffer-indexof": "^1.0.0"
+      }
+    },
+    "doctrine": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-3.0.0.tgz",
+      "integrity": "sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==",
+      "requires": {
+        "esutils": "^2.0.2"
+      }
+    },
+    "dom-accessibility-api": {
+      "version": "0.3.0",
+      "resolved": "https://registry.npmjs.org/dom-accessibility-api/-/dom-accessibility-api-0.3.0.tgz",
+      "integrity": "sha512-PzwHEmsRP3IGY4gv/Ug+rMeaTIyTJvadCb+ujYXYeIylbHJezIyNToe8KfEgHTCEYyC+/bUghYOGg8yMGlZ6vA=="
+    },
+    "dom-converter": {
+      "version": "0.2.0",
+      "resolved": "https://registry.npmjs.org/dom-converter/-/dom-converter-0.2.0.tgz",
+      "integrity": "sha512-gd3ypIPfOMr9h5jIKq8E3sHOTCjeirnl0WK5ZdS1AW0Odt0b1PaWaHdJ4Qk4klv+YB9aJBS7mESXjFoDQPu6DA==",
+      "requires": {
+        "utila": "~0.4"
+      }
+    },
+    "dom-helpers": {
+      "version": "3.4.0",
+      "resolved": "https://registry.npmjs.org/dom-helpers/-/dom-helpers-3.4.0.tgz",
+      "integrity": "sha512-LnuPJ+dwqKDIyotW1VzmOZ5TONUN7CwkCR5hrgawTUbkBGYdeoNLZo6nNfGkCrjtE1nXXaj7iMMpDa8/d9WoIA==",
+      "requires": {
+        "@babel/runtime": "^7.1.2"
+      }
+    },
+    "dom-serializer": {
+      "version": "0.2.2",
+      "resolved": "https://registry.npmjs.org/dom-serializer/-/dom-serializer-0.2.2.tgz",
+      "integrity": "sha512-2/xPb3ORsQ42nHYiSunXkDjPLBaEj/xTwUO4B7XCZQTRk7EBtTOPaygh10YAAh2OI1Qrp6NWfpAhzswj0ydt9g==",
+      "requires": {
+        "domelementtype": "^2.0.1",
+        "entities": "^2.0.0"
+      },
+      "dependencies": {
+        "domelementtype": {
+          "version": "2.0.1",
+          "resolved": "https://registry.npmjs.org/domelementtype/-/domelementtype-2.0.1.tgz",
+          "integrity": "sha512-5HOHUDsYZWV8FGWN0Njbr/Rn7f/eWSQi1v7+HsUVwXgn8nWWlL64zKDkS0n8ZmQ3mlWOMuXOnR+7Nx/5tMO5AQ=="
+        }
+      }
+    },
+    "domain-browser": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/domain-browser/-/domain-browser-1.2.0.tgz",
+      "integrity": "sha512-jnjyiM6eRyZl2H+W8Q/zLMA481hzi0eszAaBUzIVnmYVDBbnLxVNnfu1HgEBvCbL+71FrxMl3E6lpKH7Ge3OXA=="
+    },
+    "domelementtype": {
+      "version": "1.3.1",
+      "resolved": "https://registry.npmjs.org/domelementtype/-/domelementtype-1.3.1.tgz",
+      "integrity": "sha512-BSKB+TSpMpFI/HOxCNr1O8aMOTZ8hT3pM3GQ0w/mWRmkhEDSFJkkyzz4XQsBV44BChwGkrDfMyjVD0eA2aFV3w=="
+    },
+    "domexception": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/domexception/-/domexception-1.0.1.tgz",
+      "integrity": "sha512-raigMkn7CJNNo6Ihro1fzG7wr3fHuYVytzquZKX5n0yizGsTcYgzdIUwj1X9pK0VvjeihV+XiclP+DjwbsSKug==",
+      "requires": {
+        "webidl-conversions": "^4.0.2"
+      }
+    },
+    "domhandler": {
+      "version": "2.4.2",
+      "resolved": "https://registry.npmjs.org/domhandler/-/domhandler-2.4.2.tgz",
+      "integrity": "sha512-JiK04h0Ht5u/80fdLMCEmV4zkNh2BcoMFBmZ/91WtYZ8qVXSKjiw7fXMgFPnHcSZgOo3XdinHvmnDUeMf5R4wA==",
+      "requires": {
+        "domelementtype": "1"
+      }
+    },
+    "domutils": {
+      "version": "1.7.0",
+      "resolved": "https://registry.npmjs.org/domutils/-/domutils-1.7.0.tgz",
+      "integrity": "sha512-Lgd2XcJ/NjEw+7tFvfKxOzCYKZsdct5lczQ2ZaQY8Djz7pfAD3Gbp8ySJWtreII/vDlMVmxwa6pHmdxIYgttDg==",
+      "requires": {
+        "dom-serializer": "0",
+        "domelementtype": "1"
+      }
+    },
+    "dot-case": {
+      "version": "3.0.3",
+      "resolved": "https://registry.npmjs.org/dot-case/-/dot-case-3.0.3.tgz",
+      "integrity": "sha512-7hwEmg6RiSQfm/GwPL4AAWXKy3YNNZA3oFv2Pdiey0mwkRCPZ9x6SZbkLcn8Ma5PYeVokzoD4Twv2n7LKp5WeA==",
+      "requires": {
+        "no-case": "^3.0.3",
+        "tslib": "^1.10.0"
+      }
+    },
+    "dot-prop": {
+      "version": "5.2.0",
+      "resolved": "https://registry.npmjs.org/dot-prop/-/dot-prop-5.2.0.tgz",
+      "integrity": "sha512-uEUyaDKoSQ1M4Oq8l45hSE26SnTxL6snNnqvK/VWx5wJhmff5z0FUVJDKDanor/6w3kzE3i7XZOk+7wC0EXr1A==",
+      "requires": {
+        "is-obj": "^2.0.0"
+      }
+    },
+    "dotenv": {
+      "version": "8.2.0",
+      "resolved": "https://registry.npmjs.org/dotenv/-/dotenv-8.2.0.tgz",
+      "integrity": "sha512-8sJ78ElpbDJBHNeBzUbUVLsqKdccaa/BXF1uPTw3GrvQTBgrQrtObr2mUrE38vzYd8cEv+m/JBfDLioYcfXoaw=="
+    },
+    "dotenv-expand": {
+      "version": "5.1.0",
+      "resolved": "https://registry.npmjs.org/dotenv-expand/-/dotenv-expand-5.1.0.tgz",
+      "integrity": "sha512-YXQl1DSa4/PQyRfgrv6aoNjhasp/p4qs9FjJ4q4cQk+8m4r6k4ZSiEyytKG8f8W9gi8WsQtIObNmKd+tMzNTmA=="
+    },
+    "duplexer": {
+      "version": "0.1.1",
+      "resolved": "https://registry.npmjs.org/duplexer/-/duplexer-0.1.1.tgz",
+      "integrity": "sha1-rOb/gIwc5mtX0ev5eXessCM0z8E="
+    },
+    "duplexer2": {
+      "version": "0.1.4",
+      "resolved": "https://registry.npmjs.org/duplexer2/-/duplexer2-0.1.4.tgz",
+      "integrity": "sha1-ixLauHjA1p4+eJEFFmKjL8a93ME=",
+      "dev": true,
+      "requires": {
+        "readable-stream": "^2.0.2"
+      },
+      "dependencies": {
+        "readable-stream": {
+          "version": "2.3.7",
+          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
+          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
+          "dev": true,
+          "requires": {
+            "core-util-is": "~1.0.0",
+            "inherits": "~2.0.3",
+            "isarray": "~1.0.0",
+            "process-nextick-args": "~2.0.0",
+            "safe-buffer": "~5.1.1",
+            "string_decoder": "~1.1.1",
+            "util-deprecate": "~1.0.1"
+          }
+        },
+        "string_decoder": {
+          "version": "1.1.1",
+          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
+          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
+          "dev": true,
+          "requires": {
+            "safe-buffer": "~5.1.0"
+          }
+        }
+      }
+    },
+    "duplexify": {
+      "version": "3.7.1",
+      "resolved": "https://registry.npmjs.org/duplexify/-/duplexify-3.7.1.tgz",
+      "integrity": "sha512-07z8uv2wMyS51kKhD1KsdXJg5WQ6t93RneqRxUHnskXVtlYYkLqM0gqStQZ3pj073g687jPCHrqNfCzawLYh5g==",
+      "requires": {
+        "end-of-stream": "^1.0.0",
+        "inherits": "^2.0.1",
+        "readable-stream": "^2.0.0",
+        "stream-shift": "^1.0.0"
+      },
+      "dependencies": {
+        "readable-stream": {
+          "version": "2.3.7",
+          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
+          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
+          "requires": {
+            "core-util-is": "~1.0.0",
+            "inherits": "~2.0.3",
+            "isarray": "~1.0.0",
+            "process-nextick-args": "~2.0.0",
+            "safe-buffer": "~5.1.1",
+            "string_decoder": "~1.1.1",
+            "util-deprecate": "~1.0.1"
+          }
+        },
+        "string_decoder": {
+          "version": "1.1.1",
+          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
+          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
+          "requires": {
+            "safe-buffer": "~5.1.0"
+          }
+        }
+      }
+    },
+    "ecc-jsbn": {
+      "version": "0.1.2",
+      "resolved": "https://registry.npmjs.org/ecc-jsbn/-/ecc-jsbn-0.1.2.tgz",
+      "integrity": "sha1-OoOpBOVDUyh4dMVkt1SThoSamMk=",
+      "requires": {
+        "jsbn": "~0.1.0",
+        "safer-buffer": "^2.1.0"
+      }
+    },
+    "ee-first": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz",
+      "integrity": "sha1-WQxhFWsK4vTwJVcyoViyZrxWsh0="
+    },
+    "electron-to-chromium": {
+      "version": "1.3.427",
+      "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.3.427.tgz",
+      "integrity": "sha512-/rG5G7Opcw68/Yrb4qYkz07h3bESVRJjUl4X/FrKLXzoUJleKm6D7K7rTTz8V5LUWnd+BbTOyxJX2XprRqHD8A=="
+    },
+    "elliptic": {
+      "version": "6.5.2",
+      "resolved": "https://registry.npmjs.org/elliptic/-/elliptic-6.5.2.tgz",
+      "integrity": "sha512-f4x70okzZbIQl/NSRLkI/+tteV/9WqL98zx+SQ69KbXxmVrmjwsNUPn/gYJJ0sHvEak24cZgHIPegRePAtA/xw==",
+      "requires": {
+        "bn.js": "^4.4.0",
+        "brorand": "^1.0.1",
+        "hash.js": "^1.0.0",
+        "hmac-drbg": "^1.0.0",
+        "inherits": "^2.0.1",
+        "minimalistic-assert": "^1.0.0",
+        "minimalistic-crypto-utils": "^1.0.0"
+      }
+    },
+    "emoji-regex": {
+      "version": "8.0.0",
+      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
+      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A=="
+    },
+    "emojis-list": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/emojis-list/-/emojis-list-3.0.0.tgz",
+      "integrity": "sha512-/kyM18EfinwXZbno9FyUGeFh87KC8HRQBQGildHZbEuRyWFOmv1U10o9BBp8XVZDVNNuQKyIGIu5ZYAAXJ0V2Q=="
+    },
+    "encodeurl": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz",
+      "integrity": "sha1-rT/0yG7C0CkyL1oCw6mmBslbP1k="
+    },
+    "encoding": {
+      "version": "0.1.12",
+      "resolved": "https://registry.npmjs.org/encoding/-/encoding-0.1.12.tgz",
+      "integrity": "sha1-U4tm8+5izRq1HsMjgp0flIDHS+s=",
+      "requires": {
+        "iconv-lite": "~0.4.13"
+      }
+    },
+    "end-of-stream": {
+      "version": "1.4.4",
+      "resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.4.tgz",
+      "integrity": "sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==",
+      "requires": {
+        "once": "^1.4.0"
+      }
+    },
+    "enhanced-resolve": {
+      "version": "4.1.1",
+      "resolved": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-4.1.1.tgz",
+      "integrity": "sha512-98p2zE+rL7/g/DzMHMTF4zZlCgeVdJ7yr6xzEpJRYwFYrGi9ANdn5DnJURg6RpBkyk60XYDnWIv51VfIhfNGuA==",
+      "requires": {
+        "graceful-fs": "^4.1.2",
+        "memory-fs": "^0.5.0",
+        "tapable": "^1.0.0"
+      },
+      "dependencies": {
+        "memory-fs": {
+          "version": "0.5.0",
+          "resolved": "https://registry.npmjs.org/memory-fs/-/memory-fs-0.5.0.tgz",
+          "integrity": "sha512-jA0rdU5KoQMC0e6ppoNRtpp6vjFq6+NY7r8hywnC7V+1Xj/MtHwGIbB1QaK/dunyjWteJzmkpd7ooeWg10T7GA==",
+          "requires": {
+            "errno": "^0.1.3",
+            "readable-stream": "^2.0.1"
+          }
+        },
+        "readable-stream": {
+          "version": "2.3.7",
+          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
+          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
+          "requires": {
+            "core-util-is": "~1.0.0",
+            "inherits": "~2.0.3",
+            "isarray": "~1.0.0",
+            "process-nextick-args": "~2.0.0",
+            "safe-buffer": "~5.1.1",
+            "string_decoder": "~1.1.1",
+            "util-deprecate": "~1.0.1"
+          }
+        },
+        "string_decoder": {
+          "version": "1.1.1",
+          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
+          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
+          "requires": {
+            "safe-buffer": "~5.1.0"
+          }
+        }
+      }
+    },
+    "entities": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/entities/-/entities-2.0.0.tgz",
+      "integrity": "sha512-D9f7V0JSRwIxlRI2mjMqufDrRDnx8p+eEOz7aUM9SuvF8gsBzra0/6tbjl1m8eQHrZlYj6PxqE00hZ1SAIKPLw=="
+    },
+    "envinfo": {
+      "version": "7.5.1",
+      "resolved": "https://registry.npmjs.org/envinfo/-/envinfo-7.5.1.tgz",
+      "integrity": "sha512-hQBkDf2iO4Nv0CNHpCuSBeaSrveU6nThVxFGTrq/eDlV716UQk09zChaJae4mZRsos1x4YLY2TaH3LHUae3ZmQ=="
+    },
+    "errno": {
+      "version": "0.1.7",
+      "resolved": "https://registry.npmjs.org/errno/-/errno-0.1.7.tgz",
+      "integrity": "sha512-MfrRBDWzIWifgq6tJj60gkAwtLNb6sQPlcFrSOflcP1aFmmruKQ2wRnze/8V6kgyz7H3FF8Npzv78mZ7XLLflg==",
+      "requires": {
+        "prr": "~1.0.1"
+      }
+    },
+    "error-ex": {
+      "version": "1.3.2",
+      "resolved": "https://registry.npmjs.org/error-ex/-/error-ex-1.3.2.tgz",
+      "integrity": "sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==",
+      "requires": {
+        "is-arrayish": "^0.2.1"
+      }
+    },
+    "errorhandler": {
+      "version": "1.5.1",
+      "resolved": "https://registry.npmjs.org/errorhandler/-/errorhandler-1.5.1.tgz",
+      "integrity": "sha512-rcOwbfvP1WTViVoUjcfZicVzjhjTuhSMntHh6mW3IrEiyE6mJyXvsToJUJGlGlw/2xU9P5whlWNGlIDVeCiT4A==",
+      "requires": {
+        "accepts": "~1.3.7",
+        "escape-html": "~1.0.3"
+      }
+    },
+    "es-abstract": {
+      "version": "1.17.5",
+      "resolved": "https://registry.npmjs.org/es-abstract/-/es-abstract-1.17.5.tgz",
+      "integrity": "sha512-BR9auzDbySxOcfog0tLECW8l28eRGpDpU3Dm3Hp4q/N+VtLTmyj4EUN088XZWQDW/hzj6sYRDXeOFsaAODKvpg==",
+      "requires": {
+        "es-to-primitive": "^1.2.1",
+        "function-bind": "^1.1.1",
+        "has": "^1.0.3",
+        "has-symbols": "^1.0.1",
+        "is-callable": "^1.1.5",
+        "is-regex": "^1.0.5",
+        "object-inspect": "^1.7.0",
+        "object-keys": "^1.1.1",
+        "object.assign": "^4.1.0",
+        "string.prototype.trimleft": "^2.1.1",
+        "string.prototype.trimright": "^2.1.1"
+      }
+    },
+    "es-to-primitive": {
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/es-to-primitive/-/es-to-primitive-1.2.1.tgz",
+      "integrity": "sha512-QCOllgZJtaUo9miYBcLChTUaHNjJF3PYs1VidD7AwiEj1kYxKeQTctLAezAOH5ZKRH0g2IgPn6KwB4IT8iRpvA==",
+      "requires": {
+        "is-callable": "^1.1.4",
+        "is-date-object": "^1.0.1",
+        "is-symbol": "^1.0.2"
+      }
+    },
+    "es5-ext": {
+      "version": "0.10.53",
+      "resolved": "https://registry.npmjs.org/es5-ext/-/es5-ext-0.10.53.tgz",
+      "integrity": "sha512-Xs2Stw6NiNHWypzRTY1MtaG/uJlwCk8kH81920ma8mvN8Xq1gsfhZvpkImLQArw8AHnv8MT2I45J3c0R8slE+Q==",
+      "requires": {
+        "es6-iterator": "~2.0.3",
+        "es6-symbol": "~3.1.3",
+        "next-tick": "~1.0.0"
+      }
+    },
+    "es6-iterator": {
+      "version": "2.0.3",
+      "resolved": "https://registry.npmjs.org/es6-iterator/-/es6-iterator-2.0.3.tgz",
+      "integrity": "sha1-p96IkUGgWpSwhUQDstCg+/qY87c=",
+      "requires": {
+        "d": "1",
+        "es5-ext": "^0.10.35",
+        "es6-symbol": "^3.1.1"
+      }
+    },
+    "es6-symbol": {
+      "version": "3.1.3",
+      "resolved": "https://registry.npmjs.org/es6-symbol/-/es6-symbol-3.1.3.tgz",
+      "integrity": "sha512-NJ6Yn3FuDinBaBRWl/q5X/s4koRHBrgKAu+yGI6JCBeiu3qrcbJhwT2GeR/EXVfylRk8dpQVJoLEFhK+Mu31NA==",
+      "requires": {
+        "d": "^1.0.1",
+        "ext": "^1.1.2"
+      }
+    },
+    "escape-html": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz",
+      "integrity": "sha1-Aljq5NPQwJdN4cFpGI7wBR0dGYg="
+    },
+    "escape-string-regexp": {
+      "version": "1.0.5",
+      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
+      "integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ="
+    },
+    "escodegen": {
+      "version": "1.14.1",
+      "resolved": "https://registry.npmjs.org/escodegen/-/escodegen-1.14.1.tgz",
+      "integrity": "sha512-Bmt7NcRySdIfNPfU2ZoXDrrXsG9ZjvDxcAlMfDUgRBjLOWTuIACXPBFJH7Z+cLb40JeQco5toikyc9t9P8E9SQ==",
+      "requires": {
+        "esprima": "^4.0.1",
+        "estraverse": "^4.2.0",
+        "esutils": "^2.0.2",
+        "optionator": "^0.8.1",
+        "source-map": "~0.6.1"
+      },
+      "dependencies": {
+        "source-map": {
+          "version": "0.6.1",
+          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
+          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
+          "optional": true
+        }
+      }
+    },
+    "eslint": {
+      "version": "6.8.0",
+      "resolved": "https://registry.npmjs.org/eslint/-/eslint-6.8.0.tgz",
+      "integrity": "sha512-K+Iayyo2LtyYhDSYwz5D5QdWw0hCacNzyq1Y821Xna2xSJj7cijoLLYmLxTQgcgZ9mC61nryMy9S7GRbYpI5Ig==",
+      "requires": {
+        "@babel/code-frame": "^7.0.0",
+        "ajv": "^6.10.0",
+        "chalk": "^2.1.0",
+        "cross-spawn": "^6.0.5",
+        "debug": "^4.0.1",
+        "doctrine": "^3.0.0",
+        "eslint-scope": "^5.0.0",
+        "eslint-utils": "^1.4.3",
+        "eslint-visitor-keys": "^1.1.0",
+        "espree": "^6.1.2",
+        "esquery": "^1.0.1",
+        "esutils": "^2.0.2",
+        "file-entry-cache": "^5.0.1",
+        "functional-red-black-tree": "^1.0.1",
+        "glob-parent": "^5.0.0",
+        "globals": "^12.1.0",
+        "ignore": "^4.0.6",
+        "import-fresh": "^3.0.0",
+        "imurmurhash": "^0.1.4",
+        "inquirer": "^7.0.0",
+        "is-glob": "^4.0.0",
+        "js-yaml": "^3.13.1",
+        "json-stable-stringify-without-jsonify": "^1.0.1",
+        "levn": "^0.3.0",
+        "lodash": "^4.17.14",
+        "minimatch": "^3.0.4",
+        "mkdirp": "^0.5.1",
+        "natural-compare": "^1.4.0",
+        "optionator": "^0.8.3",
+        "progress": "^2.0.0",
+        "regexpp": "^2.0.1",
+        "semver": "^6.1.2",
+        "strip-ansi": "^5.2.0",
+        "strip-json-comments": "^3.0.1",
+        "table": "^5.2.3",
+        "text-table": "^0.2.0",
+        "v8-compile-cache": "^2.0.3"
+      },
+      "dependencies": {
+        "eslint-utils": {
+          "version": "1.4.3",
+          "resolved": "https://registry.npmjs.org/eslint-utils/-/eslint-utils-1.4.3.tgz",
+          "integrity": "sha512-fbBN5W2xdY45KulGXmLHZ3c3FHfVYmKg0IrAKGOkT/464PQsx2UeIzfz1RmEci+KLm1bBaAzZAh8+/E+XAeZ8Q==",
+          "requires": {
+            "eslint-visitor-keys": "^1.1.0"
+          }
+        },
+        "globals": {
+          "version": "12.4.0",
+          "resolved": "https://registry.npmjs.org/globals/-/globals-12.4.0.tgz",
+          "integrity": "sha512-BWICuzzDvDoH54NHKCseDanAhE3CeDorgDL5MT6LMXXj2WCnd9UC2szdk4AWLfjdgNBCXLUanXYcpBBKOSWGwg==",
+          "requires": {
+            "type-fest": "^0.8.1"
+          }
+        },
+        "import-fresh": {
+          "version": "3.2.1",
+          "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-3.2.1.tgz",
+          "integrity": "sha512-6e1q1cnWP2RXD9/keSkxHScg508CdXqXWgWBaETNhyuBFz+kUZlKboh+ISK+bU++DmbHimVBrOz/zzPe0sZ3sQ==",
+          "requires": {
+            "parent-module": "^1.0.0",
+            "resolve-from": "^4.0.0"
+          }
+        },
+        "regexpp": {
+          "version": "2.0.1",
+          "resolved": "https://registry.npmjs.org/regexpp/-/regexpp-2.0.1.tgz",
+          "integrity": "sha512-lv0M6+TkDVniA3aD1Eg0DVpfU/booSu7Eev3TDO/mZKHBfVjgCGTV4t4buppESEYDtkArYFOxTJWv6S5C+iaNw=="
+        },
+        "resolve-from": {
+          "version": "4.0.0",
+          "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",
+          "integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g=="
+        }
+      }
+    },
+    "eslint-config-react-app": {
+      "version": "5.2.1",
+      "resolved": "https://registry.npmjs.org/eslint-config-react-app/-/eslint-config-react-app-5.2.1.tgz",
+      "integrity": "sha512-pGIZ8t0mFLcV+6ZirRgYK6RVqUIKRIi9MmgzUEmrIknsn3AdO0I32asO86dJgloHq+9ZPl8UIg8mYrvgP5u2wQ==",
+      "requires": {
+        "confusing-browser-globals": "^1.0.9"
+      }
+    },
+    "eslint-import-resolver-node": {
+      "version": "0.3.3",
+      "resolved": "https://registry.npmjs.org/eslint-import-resolver-node/-/eslint-import-resolver-node-0.3.3.tgz",
+      "integrity": "sha512-b8crLDo0M5RSe5YG8Pu2DYBj71tSB6OvXkfzwbJU2w7y8P4/yo0MyF8jU26IEuEuHF2K5/gcAJE3LhQGqBBbVg==",
+      "requires": {
+        "debug": "^2.6.9",
+        "resolve": "^1.13.1"
+      },
+      "dependencies": {
+        "debug": {
+          "version": "2.6.9",
+          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
+          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
+          "requires": {
+            "ms": "2.0.0"
+          }
+        },
+        "ms": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
+          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="
+        }
+      }
+    },
+    "eslint-loader": {
+      "version": "3.0.3",
+      "resolved": "https://registry.npmjs.org/eslint-loader/-/eslint-loader-3.0.3.tgz",
+      "integrity": "sha512-+YRqB95PnNvxNp1HEjQmvf9KNvCin5HXYYseOXVC2U0KEcw4IkQ2IQEBG46j7+gW39bMzeu0GsUhVbBY3Votpw==",
+      "requires": {
+        "fs-extra": "^8.1.0",
+        "loader-fs-cache": "^1.0.2",
+        "loader-utils": "^1.2.3",
+        "object-hash": "^2.0.1",
+        "schema-utils": "^2.6.1"
+      }
+    },
+    "eslint-module-utils": {
+      "version": "2.6.0",
+      "resolved": "https://registry.npmjs.org/eslint-module-utils/-/eslint-module-utils-2.6.0.tgz",
+      "integrity": "sha512-6j9xxegbqe8/kZY8cYpcp0xhbK0EgJlg3g9mib3/miLaExuuwc3n5UEfSnU6hWMbT0FAYVvDbL9RrRgpUeQIvA==",
+      "requires": {
+        "debug": "^2.6.9",
+        "pkg-dir": "^2.0.0"
+      },
+      "dependencies": {
+        "debug": {
+          "version": "2.6.9",
+          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
+          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
+          "requires": {
+            "ms": "2.0.0"
+          }
+        },
+        "ms": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
+          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="
+        },
+        "pkg-dir": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/pkg-dir/-/pkg-dir-2.0.0.tgz",
+          "integrity": "sha1-9tXREJ4Z1j7fQo4L1X4Sd3YVM0s=",
+          "requires": {
+            "find-up": "^2.1.0"
+          }
+        }
+      }
+    },
+    "eslint-plugin-flowtype": {
+      "version": "4.6.0",
+      "resolved": "https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-4.6.0.tgz",
+      "integrity": "sha512-W5hLjpFfZyZsXfo5anlu7HM970JBDqbEshAJUkeczP6BFCIfJXuiIBQXyberLRtOStT0OGPF8efeTbxlHk4LpQ==",
+      "requires": {
+        "lodash": "^4.17.15"
+      }
+    },
+    "eslint-plugin-import": {
+      "version": "2.20.1",
+      "resolved": "https://registry.npmjs.org/eslint-plugin-import/-/eslint-plugin-import-2.20.1.tgz",
+      "integrity": "sha512-qQHgFOTjguR+LnYRoToeZWT62XM55MBVXObHM6SKFd1VzDcX/vqT1kAz8ssqigh5eMj8qXcRoXXGZpPP6RfdCw==",
+      "requires": {
+        "array-includes": "^3.0.3",
+        "array.prototype.flat": "^1.2.1",
+        "contains-path": "^0.1.0",
+        "debug": "^2.6.9",
+        "doctrine": "1.5.0",
+        "eslint-import-resolver-node": "^0.3.2",
+        "eslint-module-utils": "^2.4.1",
+        "has": "^1.0.3",
+        "minimatch": "^3.0.4",
+        "object.values": "^1.1.0",
+        "read-pkg-up": "^2.0.0",
+        "resolve": "^1.12.0"
+      },
+      "dependencies": {
+        "debug": {
+          "version": "2.6.9",
+          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
+          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
+          "requires": {
+            "ms": "2.0.0"
+          }
+        },
+        "doctrine": {
+          "version": "1.5.0",
+          "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-1.5.0.tgz",
+          "integrity": "sha1-N53Ocw9hZvds76TmcHoVmwLFpvo=",
+          "requires": {
+            "esutils": "^2.0.2",
+            "isarray": "^1.0.0"
+          }
+        },
+        "load-json-file": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/load-json-file/-/load-json-file-2.0.0.tgz",
+          "integrity": "sha1-eUfkIUmvgNaWy/eXvKq8/h/inKg=",
+          "requires": {
+            "graceful-fs": "^4.1.2",
+            "parse-json": "^2.2.0",
+            "pify": "^2.0.0",
+            "strip-bom": "^3.0.0"
+          }
+        },
+        "ms": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
+          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="
+        },
+        "parse-json": {
+          "version": "2.2.0",
+          "resolved": "https://registry.npmjs.org/parse-json/-/parse-json-2.2.0.tgz",
+          "integrity": "sha1-9ID0BDTvgHQfhGkJn43qGPVaTck=",
+          "requires": {
+            "error-ex": "^1.2.0"
+          }
+        },
+        "path-type": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/path-type/-/path-type-2.0.0.tgz",
+          "integrity": "sha1-8BLMuEFbcJb8LaoQVMPXI4lZTHM=",
+          "requires": {
+            "pify": "^2.0.0"
+          }
+        },
+        "pify": {
+          "version": "2.3.0",
+          "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",
+          "integrity": "sha1-7RQaasBDqEnqWISY59yosVMw6Qw="
+        },
+        "read-pkg": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/read-pkg/-/read-pkg-2.0.0.tgz",
+          "integrity": "sha1-jvHAYjxqbbDcZxPEv6xGMysjaPg=",
+          "requires": {
+            "load-json-file": "^2.0.0",
+            "normalize-package-data": "^2.3.2",
+            "path-type": "^2.0.0"
+          }
+        },
+        "read-pkg-up": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-2.0.0.tgz",
+          "integrity": "sha1-a3KoBImE4MQeeVEP1en6mbO1Sb4=",
+          "requires": {
+            "find-up": "^2.0.0",
+            "read-pkg": "^2.0.0"
+          }
+        }
+      }
+    },
+    "eslint-plugin-jsx-a11y": {
+      "version": "6.2.3",
+      "resolved": "https://registry.npmjs.org/eslint-plugin-jsx-a11y/-/eslint-plugin-jsx-a11y-6.2.3.tgz",
+      "integrity": "sha512-CawzfGt9w83tyuVekn0GDPU9ytYtxyxyFZ3aSWROmnRRFQFT2BiPJd7jvRdzNDi6oLWaS2asMeYSNMjWTV4eNg==",
+      "requires": {
+        "@babel/runtime": "^7.4.5",
+        "aria-query": "^3.0.0",
+        "array-includes": "^3.0.3",
+        "ast-types-flow": "^0.0.7",
+        "axobject-query": "^2.0.2",
+        "damerau-levenshtein": "^1.0.4",
+        "emoji-regex": "^7.0.2",
+        "has": "^1.0.3",
+        "jsx-ast-utils": "^2.2.1"
+      },
+      "dependencies": {
+        "emoji-regex": {
+          "version": "7.0.3",
+          "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-7.0.3.tgz",
+          "integrity": "sha512-CwBLREIQ7LvYFB0WyRvwhq5N5qPhc6PMjD6bYggFlI5YyDgl+0vxq5VHbMOFqLg7hfWzmu8T5Z1QofhmTIhItA=="
+        }
+      }
+    },
+    "eslint-plugin-react": {
+      "version": "7.19.0",
+      "resolved": "https://registry.npmjs.org/eslint-plugin-react/-/eslint-plugin-react-7.19.0.tgz",
+      "integrity": "sha512-SPT8j72CGuAP+JFbT0sJHOB80TX/pu44gQ4vXH/cq+hQTiY2PuZ6IHkqXJV6x1b28GDdo1lbInjKUrrdUf0LOQ==",
+      "requires": {
+        "array-includes": "^3.1.1",
+        "doctrine": "^2.1.0",
+        "has": "^1.0.3",
+        "jsx-ast-utils": "^2.2.3",
+        "object.entries": "^1.1.1",
+        "object.fromentries": "^2.0.2",
+        "object.values": "^1.1.1",
+        "prop-types": "^15.7.2",
+        "resolve": "^1.15.1",
+        "semver": "^6.3.0",
+        "string.prototype.matchall": "^4.0.2",
+        "xregexp": "^4.3.0"
+      },
+      "dependencies": {
+        "doctrine": {
+          "version": "2.1.0",
+          "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-2.1.0.tgz",
+          "integrity": "sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==",
+          "requires": {
+            "esutils": "^2.0.2"
+          }
+        },
+        "resolve": {
+          "version": "1.17.0",
+          "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.17.0.tgz",
+          "integrity": "sha512-ic+7JYiV8Vi2yzQGFWOkiZD5Z9z7O2Zhm9XMaTxdJExKasieFCr+yXZ/WmXsckHiKl12ar0y6XiXDx3m4RHn1w==",
+          "requires": {
+            "path-parse": "^1.0.6"
+          }
+        }
+      }
+    },
+    "eslint-plugin-react-hooks": {
+      "version": "1.7.0",
+      "resolved": "https://registry.npmjs.org/eslint-plugin-react-hooks/-/eslint-plugin-react-hooks-1.7.0.tgz",
+      "integrity": "sha512-iXTCFcOmlWvw4+TOE8CLWj6yX1GwzT0Y6cUfHHZqWnSk144VmVIRcVGtUAzrLES7C798lmvnt02C7rxaOX1HNA=="
+    },
+    "eslint-scope": {
+      "version": "5.0.0",
+      "resolved": "https://registry.npmjs.org/eslint-scope/-/eslint-scope-5.0.0.tgz",
+      "integrity": "sha512-oYrhJW7S0bxAFDvWqzvMPRm6pcgcnWc4QnofCAqRTRfQC0JcwenzGglTtsLyIuuWFfkqDG9vz67cnttSd53djw==",
+      "requires": {
+        "esrecurse": "^4.1.0",
+        "estraverse": "^4.1.1"
+      }
+    },
+    "eslint-utils": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/eslint-utils/-/eslint-utils-2.0.0.tgz",
+      "integrity": "sha512-0HCPuJv+7Wv1bACm8y5/ECVfYdfsAm9xmVb7saeFlxjPYALefjhbYoCkBjPdPzGH8wWyTpAez82Fh3VKYEZ8OA==",
+      "requires": {
+        "eslint-visitor-keys": "^1.1.0"
+      }
+    },
+    "eslint-visitor-keys": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-1.1.0.tgz",
+      "integrity": "sha512-8y9YjtM1JBJU/A9Kc+SbaOV4y29sSWckBwMHa+FGtVj5gN/sbnKDf6xJUl+8g7FAij9LVaP8C24DUiH/f/2Z9A=="
+    },
+    "espree": {
+      "version": "6.2.1",
+      "resolved": "https://registry.npmjs.org/espree/-/espree-6.2.1.tgz",
+      "integrity": "sha512-ysCxRQY3WaXJz9tdbWOwuWr5Y/XrPTGX9Kiz3yoUXwW0VZ4w30HTkQLaGx/+ttFjF8i+ACbArnB4ce68a9m5hw==",
+      "requires": {
+        "acorn": "^7.1.1",
+        "acorn-jsx": "^5.2.0",
+        "eslint-visitor-keys": "^1.1.0"
+      }
+    },
+    "esprima": {
+      "version": "4.0.1",
+      "resolved": "https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz",
+      "integrity": "sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A=="
+    },
+    "esquery": {
+      "version": "1.3.1",
+      "resolved": "https://registry.npmjs.org/esquery/-/esquery-1.3.1.tgz",
+      "integrity": "sha512-olpvt9QG0vniUBZspVRN6lwB7hOZoTRtT+jzR+tS4ffYx2mzbw+z0XCOk44aaLYKApNX5nMm+E+P6o25ip/DHQ==",
+      "requires": {
+        "estraverse": "^5.1.0"
+      },
+      "dependencies": {
+        "estraverse": {
+          "version": "5.1.0",
+          "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-5.1.0.tgz",
+          "integrity": "sha512-FyohXK+R0vE+y1nHLoBM7ZTyqRpqAlhdZHCWIWEviFLiGB8b04H6bQs8G+XTthacvT8VuwvteiP7RJSxMs8UEw=="
+        }
+      }
+    },
+    "esrecurse": {
+      "version": "4.2.1",
+      "resolved": "https://registry.npmjs.org/esrecurse/-/esrecurse-4.2.1.tgz",
+      "integrity": "sha512-64RBB++fIOAXPw3P9cy89qfMlvZEXZkqqJkjqqXIvzP5ezRZjW+lPWjw35UX/3EhUPFYbg5ER4JYgDw4007/DQ==",
+      "requires": {
+        "estraverse": "^4.1.0"
+      }
+    },
+    "estraverse": {
+      "version": "4.3.0",
+      "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-4.3.0.tgz",
+      "integrity": "sha512-39nnKffWz8xN1BU/2c79n9nB9HDzo0niYUqx6xyqUnyoAnQyyWpOTdZEeiCch8BBu515t4wp9ZmgVfVhn9EBpw=="
+    },
+    "esutils": {
+      "version": "2.0.3",
+      "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz",
+      "integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g=="
+    },
+    "etag": {
+      "version": "1.8.1",
+      "resolved": "https://registry.npmjs.org/etag/-/etag-1.8.1.tgz",
+      "integrity": "sha1-Qa4u62XvpiJorr/qg6x9eSmbCIc="
+    },
+    "eventemitter3": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/eventemitter3/-/eventemitter3-4.0.0.tgz",
+      "integrity": "sha512-qerSRB0p+UDEssxTtm6EDKcE7W4OaoisfIMl4CngyEhjpYglocpNg6UEqCvemdGhosAsg4sO2dXJOdyBifPGCg=="
+    },
+    "events": {
+      "version": "3.1.0",
+      "resolved": "https://registry.npmjs.org/events/-/events-3.1.0.tgz",
+      "integrity": "sha512-Rv+u8MLHNOdMjTAFeT3nCjHn2aGlx435FP/sDHNaRhDEMwyI/aB22Kj2qIN8R0cw3z28psEQLYwxVKLsKrMgWg=="
+    },
+    "eventsource": {
+      "version": "1.0.7",
+      "resolved": "https://registry.npmjs.org/eventsource/-/eventsource-1.0.7.tgz",
+      "integrity": "sha512-4Ln17+vVT0k8aWq+t/bF5arcS3EpT9gYtW66EPacdj/mAFevznsnyoHLPy2BA8gbIQeIHoPsvwmfBftfcG//BQ==",
+      "requires": {
+        "original": "^1.0.0"
+      }
+    },
+    "evp_bytestokey": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/evp_bytestokey/-/evp_bytestokey-1.0.3.tgz",
+      "integrity": "sha512-/f2Go4TognH/KvCISP7OUsHn85hT9nUkxxA9BEWxFn+Oj9o8ZNLm/40hdlgSLyuOimsrTKLUMEorQexp/aPQeA==",
+      "requires": {
+        "md5.js": "^1.3.4",
+        "safe-buffer": "^5.1.1"
+      }
+    },
+    "exec-sh": {
+      "version": "0.3.4",
+      "resolved": "https://registry.npmjs.org/exec-sh/-/exec-sh-0.3.4.tgz",
+      "integrity": "sha512-sEFIkc61v75sWeOe72qyrqg2Qg0OuLESziUDk/O/z2qgS15y2gWVFrI6f2Qn/qw/0/NCfCEsmNA4zOjkwEZT1A=="
+    },
+    "execa": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/execa/-/execa-1.0.0.tgz",
+      "integrity": "sha512-adbxcyWV46qiHyvSp50TKt05tB4tK3HcmF7/nxfAdhnox83seTDbwnaqKO4sXRy7roHAIFqJP/Rw/AuEbX61LA==",
+      "requires": {
+        "cross-spawn": "^6.0.0",
+        "get-stream": "^4.0.0",
+        "is-stream": "^1.1.0",
+        "npm-run-path": "^2.0.0",
+        "p-finally": "^1.0.0",
+        "signal-exit": "^3.0.0",
+        "strip-eof": "^1.0.0"
+      }
+    },
+    "exit": {
+      "version": "0.1.2",
+      "resolved": "https://registry.npmjs.org/exit/-/exit-0.1.2.tgz",
+      "integrity": "sha1-BjJjj42HfMghB9MKD/8aF8uhzQw="
+    },
+    "expand-brackets": {
+      "version": "2.1.4",
+      "resolved": "https://registry.npmjs.org/expand-brackets/-/expand-brackets-2.1.4.tgz",
+      "integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
+      "requires": {
+        "debug": "^2.3.3",
+        "define-property": "^0.2.5",
+        "extend-shallow": "^2.0.1",
+        "posix-character-classes": "^0.1.0",
+        "regex-not": "^1.0.0",
+        "snapdragon": "^0.8.1",
+        "to-regex": "^3.0.1"
+      },
+      "dependencies": {
+        "debug": {
+          "version": "2.6.9",
+          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
+          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
+          "requires": {
+            "ms": "2.0.0"
+          }
+        },
+        "define-property": {
+          "version": "0.2.5",
+          "resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",
+          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",
+          "requires": {
+            "is-descriptor": "^0.1.0"
+          }
+        },
+        "extend-shallow": {
+          "version": "2.0.1",
+          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
+          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
+          "requires": {
+            "is-extendable": "^0.1.0"
+          }
+        },
+        "ms": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
+          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="
+        }
+      }
+    },
+    "expect": {
+      "version": "24.9.0",
+      "resolved": "https://registry.npmjs.org/expect/-/expect-24.9.0.tgz",
+      "integrity": "sha512-wvVAx8XIol3Z5m9zvZXiyZOQ+sRJqNTIm6sGjdWlaZIeupQGO3WbYI+15D/AmEwZywL6wtJkbAbJtzkOfBuR0Q==",
+      "requires": {
+        "@jest/types": "^24.9.0",
+        "ansi-styles": "^3.2.0",
+        "jest-get-type": "^24.9.0",
+        "jest-matcher-utils": "^24.9.0",
+        "jest-message-util": "^24.9.0",
+        "jest-regex-util": "^24.9.0"
+      }
+    },
+    "expo": {
+      "version": "37.0.8",
+      "resolved": "https://registry.npmjs.org/expo/-/expo-37.0.8.tgz",
+      "integrity": "sha512-0dt8F1yC/tNINL5Cy76OY4VYc4nwLsdyVELWk4mHRJAEEurYTn/hT/zayDAtTKV3uDykpQ8gALgP4QQprs5cwQ==",
+      "requires": {
+        "@babel/runtime": "^7.1.2",
+        "@expo/vector-icons": "^10.0.2",
+        "@types/fbemitter": "^2.0.32",
+        "@types/invariant": "^2.2.29",
+        "@types/lodash.zipobject": "^4.1.4",
+        "@types/qs": "^6.5.1",
+        "@unimodules/core": "~5.1.0",
+        "@unimodules/react-native-adapter": "~5.2.0",
+        "babel-preset-expo": "~8.1.0",
+        "badgin": "^1.1.2",
+        "cross-spawn": "^6.0.5",
+        "expo-asset": "~8.1.4",
+        "expo-constants": "~9.0.0",
+        "expo-error-recovery": "~1.1.0",
+        "expo-file-system": "~8.1.0",
+        "expo-font": "~8.1.0",
+        "expo-keep-awake": "~8.1.0",
+        "expo-linear-gradient": "~8.1.0",
+        "expo-location": "~8.1.0",
+        "expo-permissions": "~8.1.0",
+        "expo-sqlite": "~8.1.0",
+        "expo-web-browser": "~8.2.0",
+        "fbemitter": "^2.1.1",
+        "invariant": "^2.2.2",
+        "lodash": "^4.6.0",
+        "md5-file": "^3.2.3",
+        "nullthrows": "^1.1.0",
+        "pretty-format": "^23.6.0",
+        "prop-types": "^15.6.0",
+        "qs": "^6.5.0",
+        "react-native-view-shot": "3.1.2",
+        "serialize-error": "^2.1.0",
+        "unimodules-app-loader": "~1.0.1",
+        "unimodules-barcode-scanner-interface": "~5.1.0",
+        "unimodules-camera-interface": "~5.1.0",
+        "unimodules-constants-interface": "~5.1.0",
+        "unimodules-face-detector-interface": "~5.1.0",
+        "unimodules-file-system-interface": "~5.1.0",
+        "unimodules-font-interface": "~5.1.0",
+        "unimodules-image-loader-interface": "~5.1.0",
+        "unimodules-permissions-interface": "~5.1.0",
+        "unimodules-sensors-interface": "~5.1.0",
+        "unimodules-task-manager-interface": "~5.1.0",
+        "uuid": "^3.4.0"
+      },
+      "dependencies": {
+        "ansi-regex": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz",
+          "integrity": "sha1-7QMXwyIGT3lGbAKWa922Bas32Zg="
+        },
+        "pretty-format": {
+          "version": "23.6.0",
+          "resolved": "https://registry.npmjs.org/pretty-format/-/pretty-format-23.6.0.tgz",
+          "integrity": "sha512-zf9NV1NSlDLDjycnwm6hpFATCGl/K1lt0R/GdkAK2O5LN/rwJoB+Mh93gGJjut4YbmecbfgLWVGSTCr0Ewvvbw==",
+          "requires": {
+            "ansi-regex": "^3.0.0",
+            "ansi-styles": "^3.2.0"
+          }
+        }
+      }
+    },
+    "expo-asset": {
+      "version": "8.1.4",
+      "resolved": "https://registry.npmjs.org/expo-asset/-/expo-asset-8.1.4.tgz",
+      "integrity": "sha512-6YqW22F5issD1rgqBCja8TCA2dr+yf/89FdYs/jhQYpw5OJAnAvfpK3GL8h3jRCu1TvxZqhH5NeLG6f2b3oUqg==",
+      "requires": {
+        "blueimp-md5": "^2.10.0",
+        "invariant": "^2.2.4",
+        "md5-file": "^3.2.3",
+        "path-browserify": "^1.0.0",
+        "url-parse": "^1.4.4"
+      },
+      "dependencies": {
+        "path-browserify": {
+          "version": "1.0.1",
+          "resolved": "https://registry.npmjs.org/path-browserify/-/path-browserify-1.0.1.tgz",
+          "integrity": "sha512-b7uo2UCUOYZcnF/3ID0lulOJi/bafxa1xPe7ZPsammBSpjSWQkjNxlt635YGS2MiR9GjvuXCtz2emr3jbsz98g=="
+        }
+      }
+    },
+    "expo-constants": {
+      "version": "9.0.0",
+      "resolved": "https://registry.npmjs.org/expo-constants/-/expo-constants-9.0.0.tgz",
+      "integrity": "sha512-1kqZMM8Ez5JT3sTEx8I69fP6NYFLOJjeM6Z63dD/m2NiwvzSADiO5+BhghnWNGN1L3bxbgOjXS6EHtS7CdSfxA=="
+    },
+    "expo-error-recovery": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/expo-error-recovery/-/expo-error-recovery-1.1.0.tgz",
+      "integrity": "sha512-33aRfPaXdAt0df1TL26JjM5qCAoEW8RAExjgMgunPcdQcf4sWiWFm3qYL8zrO/8DM4uUq4X2FCuPLHMlOYT/aw=="
+    },
+    "expo-file-system": {
+      "version": "8.1.0",
+      "resolved": "https://registry.npmjs.org/expo-file-system/-/expo-file-system-8.1.0.tgz",
+      "integrity": "sha512-xb4roeU8CotW8t3LkmsrliNbgFpY2KB+3sW1NnujnH39pFVwCd/kfujCYzRauj8aUy/HhSq+3xGkQTpC7pSjVw==",
+      "requires": {
+        "uuid": "^3.4.0"
+      }
+    },
+    "expo-font": {
+      "version": "8.1.1",
+      "resolved": "https://registry.npmjs.org/expo-font/-/expo-font-8.1.1.tgz",
+      "integrity": "sha512-z6008K7YSA7wpJ1mNyG2eSYUhEoFVjdL2uAbwaHFpsqwxDS4tcdKHoWkanIUiEnsjtHK7Uk0ywKJ8MRzmCaklw==",
+      "requires": {
+        "fbjs": "1.0.0",
+        "fontfaceobserver": "^2.1.0"
+      }
+    },
+    "expo-keep-awake": {
+      "version": "8.1.0",
+      "resolved": "https://registry.npmjs.org/expo-keep-awake/-/expo-keep-awake-8.1.0.tgz",
+      "integrity": "sha512-RNPwWvpwsJwJS8ZI1yklKyVQ6l2NNZBCN2aSgQMRza2SABnpFFzDLHQwMo7DC+nbmrOueMvCIDr0VI3xrzGfEg=="
+    },
+    "expo-linear-gradient": {
+      "version": "8.1.0",
+      "resolved": "https://registry.npmjs.org/expo-linear-gradient/-/expo-linear-gradient-8.1.0.tgz",
+      "integrity": "sha512-AIy2pOXQRcgk2XE5IgAzd1S2jTFLutiDfveNm6m3fPAk00Rw4qFe98qzte1ayNrGYLJvQ2xq/Y7C0BmBP051mg=="
+    },
+    "expo-location": {
+      "version": "8.1.0",
+      "resolved": "https://registry.npmjs.org/expo-location/-/expo-location-8.1.0.tgz",
+      "integrity": "sha512-G9JvsK1t9Z5Iybf+FCG81Jgm9Ee9leqpazxOPVabUJEWu/55Iex3yLGX04BuIA4ozAlJKBPzkhPdyqKdC7zrSw==",
+      "requires": {
+        "invariant": "^2.2.4"
+      }
+    },
+    "expo-permissions": {
+      "version": "8.1.0",
+      "resolved": "https://registry.npmjs.org/expo-permissions/-/expo-permissions-8.1.0.tgz",
+      "integrity": "sha512-QBHD+1J9+sGFnhoEGzMRchPweeEE0OJ9ehG/0l1BMRBA7qsLS9vRC1FTJ55NwjI0Kr4RTha9r6ZX1kZHT09f/w=="
+    },
+    "expo-sqlite": {
+      "version": "8.1.0",
+      "resolved": "https://registry.npmjs.org/expo-sqlite/-/expo-sqlite-8.1.0.tgz",
+      "integrity": "sha512-ziw6dbV1/sZErDkoGjG0afokyuKQqDtUuJglbLz9rQ6zNS1ceF3AjuEyfsWPDc2LL+QEdcnQODW7VUJelIk+0Q==",
+      "requires": {
+        "@expo/websql": "^1.0.1",
+        "@types/websql": "^0.0.27",
+        "lodash": "^4.17.15"
+      }
+    },
+    "expo-web-browser": {
+      "version": "8.2.1",
+      "resolved": "https://registry.npmjs.org/expo-web-browser/-/expo-web-browser-8.2.1.tgz",
+      "integrity": "sha512-cENMuq6nhHRdJlEt0Fk1cPDK5aid8+znJeO6rFoIs7+PokMKtcVYBpzQI/TJlxRP3pjMm0qOISnLlMbDlZ+bfg==",
+      "requires": {
+        "compare-urls": "^2.0.0"
+      }
+    },
+    "express": {
+      "version": "4.17.1",
+      "resolved": "https://registry.npmjs.org/express/-/express-4.17.1.tgz",
+      "integrity": "sha512-mHJ9O79RqluphRrcw2X/GTh3k9tVv8YcoyY4Kkh4WDMUYKRZUq0h1o0w2rrrxBqM7VoeUVqgb27xlEMXTnYt4g==",
+      "requires": {
+        "accepts": "~1.3.7",
+        "array-flatten": "1.1.1",
+        "body-parser": "1.19.0",
+        "content-disposition": "0.5.3",
+        "content-type": "~1.0.4",
+        "cookie": "0.4.0",
+        "cookie-signature": "1.0.6",
+        "debug": "2.6.9",
+        "depd": "~1.1.2",
+        "encodeurl": "~1.0.2",
+        "escape-html": "~1.0.3",
+        "etag": "~1.8.1",
+        "finalhandler": "~1.1.2",
+        "fresh": "0.5.2",
+        "merge-descriptors": "1.0.1",
+        "methods": "~1.1.2",
+        "on-finished": "~2.3.0",
+        "parseurl": "~1.3.3",
+        "path-to-regexp": "0.1.7",
+        "proxy-addr": "~2.0.5",
+        "qs": "6.7.0",
+        "range-parser": "~1.2.1",
+        "safe-buffer": "5.1.2",
+        "send": "0.17.1",
+        "serve-static": "1.14.1",
+        "setprototypeof": "1.1.1",
+        "statuses": "~1.5.0",
+        "type-is": "~1.6.18",
+        "utils-merge": "1.0.1",
+        "vary": "~1.1.2"
+      },
+      "dependencies": {
+        "array-flatten": {
+          "version": "1.1.1",
+          "resolved": "https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz",
+          "integrity": "sha1-ml9pkFGx5wczKPKgCJaLZOopVdI="
+        },
+        "debug": {
+          "version": "2.6.9",
+          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
+          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
+          "requires": {
+            "ms": "2.0.0"
+          }
+        },
+        "ms": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
+          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="
+        },
+        "qs": {
+          "version": "6.7.0",
+          "resolved": "https://registry.npmjs.org/qs/-/qs-6.7.0.tgz",
+          "integrity": "sha512-VCdBRNFTX1fyE7Nb6FYoURo/SPe62QCaAyzJvUjwRaIsc+NePBEniHlvxFmmX56+HZphIGtV0XeCirBtpDrTyQ=="
+        }
+      }
+    },
+    "ext": {
+      "version": "1.4.0",
+      "resolved": "https://registry.npmjs.org/ext/-/ext-1.4.0.tgz",
+      "integrity": "sha512-Key5NIsUxdqKg3vIsdw9dSuXpPCQ297y6wBjL30edxwPgt2E44WcWBZey/ZvUc6sERLTxKdyCu4gZFmUbk1Q7A==",
+      "requires": {
+        "type": "^2.0.0"
+      },
+      "dependencies": {
+        "type": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/type/-/type-2.0.0.tgz",
+          "integrity": "sha512-KBt58xCHry4Cejnc2ISQAF7QY+ORngsWfxezO68+12hKV6lQY8P/psIkcbjeHWn7MqcgciWJyCCevFMJdIXpow=="
+        }
+      }
+    },
+    "extend": {
+      "version": "3.0.2",
+      "resolved": "https://registry.npmjs.org/extend/-/extend-3.0.2.tgz",
+      "integrity": "sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g=="
+    },
+    "extend-shallow": {
+      "version": "3.0.2",
+      "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-3.0.2.tgz",
+      "integrity": "sha1-Jqcarwc7OfshJxcnRhMcJwQCjbg=",
+      "requires": {
+        "assign-symbols": "^1.0.0",
+        "is-extendable": "^1.0.1"
+      },
+      "dependencies": {
+        "is-extendable": {
+          "version": "1.0.1",
+          "resolved": "https://registry.npmjs.org/is-extendable/-/is-extendable-1.0.1.tgz",
+          "integrity": "sha512-arnXMxT1hhoKo9k1LZdmlNyJdDDfy2v0fXjFlmok4+i8ul/6WlbVge9bhM74OpNPQPMGUToDtz+KXa1PneJxOA==",
+          "requires": {
+            "is-plain-object": "^2.0.4"
+          }
+        }
+      }
+    },
+    "external-editor": {
+      "version": "3.1.0",
+      "resolved": "https://registry.npmjs.org/external-editor/-/external-editor-3.1.0.tgz",
+      "integrity": "sha512-hMQ4CX1p1izmuLYyZqLMO/qGNw10wSv9QDCPfzXfyFrOaCSSoRfqE1Kf1s5an66J5JZC62NewG+mK49jOCtQew==",
+      "requires": {
+        "chardet": "^0.7.0",
+        "iconv-lite": "^0.4.24",
+        "tmp": "^0.0.33"
+      }
+    },
+    "extglob": {
+      "version": "2.0.4",
+      "resolved": "https://registry.npmjs.org/extglob/-/extglob-2.0.4.tgz",
+      "integrity": "sha512-Nmb6QXkELsuBr24CJSkilo6UHHgbekK5UiZgfE6UHD3Eb27YC6oD+bhcT+tJ6cl8dmsgdQxnWlcry8ksBIBLpw==",
+      "requires": {
+        "array-unique": "^0.3.2",
+        "define-property": "^1.0.0",
+        "expand-brackets": "^2.1.4",
+        "extend-shallow": "^2.0.1",
+        "fragment-cache": "^0.2.1",
+        "regex-not": "^1.0.0",
+        "snapdragon": "^0.8.1",
+        "to-regex": "^3.0.1"
+      },
+      "dependencies": {
+        "define-property": {
+          "version": "1.0.0",
+          "resolved": "https://registry.npmjs.org/define-property/-/define-property-1.0.0.tgz",
+          "integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
+          "requires": {
+            "is-descriptor": "^1.0.0"
+          }
+        },
+        "extend-shallow": {
+          "version": "2.0.1",
+          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
+          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
+          "requires": {
+            "is-extendable": "^0.1.0"
+          }
+        },
+        "is-accessor-descriptor": {
+          "version": "1.0.0",
+          "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz",
+          "integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK6LUY94dYPEE7Lh0ZkZKcQ==",
+          "requires": {
+            "kind-of": "^6.0.0"
+          }
+        },
+        "is-data-descriptor": {
+          "version": "1.0.0",
+          "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz",
+          "integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRFRXcHYVkdeaP50Q5rE/jLQ==",
+          "requires": {
+            "kind-of": "^6.0.0"
+          }
+        },
+        "is-descriptor": {
+          "version": "1.0.2",
+          "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.2.tgz",
+          "integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9k1T2hOH3miL8n8WtiYVtg==",
+          "requires": {
+            "is-accessor-descriptor": "^1.0.0",
+            "is-data-descriptor": "^1.0.0",
+            "kind-of": "^6.0.2"
+          }
+        },
+        "kind-of": {
+          "version": "6.0.3",
+          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.3.tgz",
+          "integrity": "sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw=="
+        }
+      }
+    },
+    "extsprintf": {
+      "version": "1.3.0",
+      "resolved": "https://registry.npmjs.org/extsprintf/-/extsprintf-1.3.0.tgz",
+      "integrity": "sha1-lpGEQOMEGnpBT4xS48V06zw+HgU="
+    },
+    "falafel": {
+      "version": "2.2.4",
+      "resolved": "https://registry.npmjs.org/falafel/-/falafel-2.2.4.tgz",
+      "integrity": "sha512-0HXjo8XASWRmsS0X1EkhwEMZaD3Qvp7FfURwjLKjG1ghfRm/MGZl2r4cWUTv41KdNghTw4OUMmVtdGQp3+H+uQ==",
+      "dev": true,
+      "requires": {
+        "acorn": "^7.1.1",
+        "foreach": "^2.0.5",
+        "isarray": "^2.0.1",
+        "object-keys": "^1.0.6"
+      },
+      "dependencies": {
+        "isarray": {
+          "version": "2.0.5",
+          "resolved": "https://registry.npmjs.org/isarray/-/isarray-2.0.5.tgz",
+          "integrity": "sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw==",
+          "dev": true
+        }
+      }
+    },
+    "fast-deep-equal": {
+      "version": "3.1.1",
+      "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.1.tgz",
+      "integrity": "sha512-8UEa58QDLauDNfpbrX55Q9jrGHThw2ZMdOky5Gl1CDtVeJDPVrG4Jxx1N8jw2gkWaff5UUuX1KJd+9zGe2B+ZA=="
+    },
+    "fast-glob": {
+      "version": "2.2.7",
+      "resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-2.2.7.tgz",
+      "integrity": "sha512-g1KuQwHOZAmOZMuBtHdxDtju+T2RT8jgCC9aANsbpdiDDTSnjgfuVsIBNKbUeJI3oKMRExcfNDtJl4OhbffMsw==",
+      "requires": {
+        "@mrmlnc/readdir-enhanced": "^2.2.1",
+        "@nodelib/fs.stat": "^1.1.2",
+        "glob-parent": "^3.1.0",
+        "is-glob": "^4.0.0",
+        "merge2": "^1.2.3",
+        "micromatch": "^3.1.10"
+      },
+      "dependencies": {
+        "glob-parent": {
+          "version": "3.1.0",
+          "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-3.1.0.tgz",
+          "integrity": "sha1-nmr2KZ2NO9K9QEMIMr0RPfkGxa4=",
+          "requires": {
+            "is-glob": "^3.1.0",
+            "path-dirname": "^1.0.0"
+          },
+          "dependencies": {
+            "is-glob": {
+              "version": "3.1.0",
+              "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-3.1.0.tgz",
+              "integrity": "sha1-e6WuJCF4BKxwcHuWkiVnSGzD6Eo=",
+              "requires": {
+                "is-extglob": "^2.1.0"
+              }
+            }
+          }
+        }
+      }
+    },
+    "fast-json-stable-stringify": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
+      "integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw=="
+    },
+    "fast-levenshtein": {
+      "version": "2.0.6",
+      "resolved": "https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz",
+      "integrity": "sha1-PYpcZog6FqMMqGQ+hR8Zuqd5eRc="
+    },
+    "fastparse": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/fastparse/-/fastparse-1.1.2.tgz",
+      "integrity": "sha512-483XLLxTVIwWK3QTrMGRqUfUpoOs/0hbQrl2oz4J0pAcm3A3bu84wxTFqGqkJzewCLdME38xJLJAxBABfQT8sQ==",
+      "dev": true
+    },
+    "faye-websocket": {
+      "version": "0.10.0",
+      "resolved": "https://registry.npmjs.org/faye-websocket/-/faye-websocket-0.10.0.tgz",
+      "integrity": "sha1-TkkvjQTftviQA1B/btvy1QHnxvQ=",
+      "requires": {
+        "websocket-driver": ">=0.5.1"
+      }
+    },
+    "fb-watchman": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/fb-watchman/-/fb-watchman-2.0.1.tgz",
+      "integrity": "sha512-DkPJKQeY6kKwmuMretBhr7G6Vodr7bFwDYTXIkfG1gjvNpaxBTQV3PbXg6bR1c1UP4jPOX0jHUbbHANL9vRjVg==",
+      "requires": {
+        "bser": "2.1.1"
+      }
+    },
+    "fbemitter": {
+      "version": "2.1.1",
+      "resolved": "https://registry.npmjs.org/fbemitter/-/fbemitter-2.1.1.tgz",
+      "integrity": "sha1-Uj4U/a9SSIBbsC9i78M75wP1GGU=",
+      "requires": {
+        "fbjs": "^0.8.4"
+      },
+      "dependencies": {
+        "core-js": {
+          "version": "1.2.7",
+          "resolved": "https://registry.npmjs.org/core-js/-/core-js-1.2.7.tgz",
+          "integrity": "sha1-ZSKUwUZR2yj6k70tX/KYOk8IxjY="
+        },
+        "fbjs": {
+          "version": "0.8.17",
+          "resolved": "https://registry.npmjs.org/fbjs/-/fbjs-0.8.17.tgz",
+          "integrity": "sha1-xNWY6taUkRJlPWWIsBpc3Nn5D90=",
+          "requires": {
+            "core-js": "^1.0.0",
+            "isomorphic-fetch": "^2.1.1",
+            "loose-envify": "^1.0.0",
+            "object-assign": "^4.1.0",
+            "promise": "^7.1.1",
+            "setimmediate": "^1.0.5",
+            "ua-parser-js": "^0.7.18"
+          }
+        },
+        "promise": {
+          "version": "7.3.1",
+          "resolved": "https://registry.npmjs.org/promise/-/promise-7.3.1.tgz",
+          "integrity": "sha512-nolQXZ/4L+bP/UGlkfaIujX9BKxGwmQ9OT4mOt5yvy8iK1h3wqTEJCijzGANTCCl9nWjY41juyAn2K3Q1hLLTg==",
+          "requires": {
+            "asap": "~2.0.3"
+          }
+        }
+      }
+    },
+    "fbjs": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/fbjs/-/fbjs-1.0.0.tgz",
+      "integrity": "sha512-MUgcMEJaFhCaF1QtWGnmq9ZDRAzECTCRAF7O6UZIlAlkTs1SasiX9aP0Iw7wfD2mJ7wDTNfg2w7u5fSCwJk1OA==",
+      "requires": {
+        "core-js": "^2.4.1",
+        "fbjs-css-vars": "^1.0.0",
+        "isomorphic-fetch": "^2.1.1",
+        "loose-envify": "^1.0.0",
+        "object-assign": "^4.1.0",
+        "promise": "^7.1.1",
+        "setimmediate": "^1.0.5",
+        "ua-parser-js": "^0.7.18"
+      },
+      "dependencies": {
+        "core-js": {
+          "version": "2.6.11",
+          "resolved": "https://registry.npmjs.org/core-js/-/core-js-2.6.11.tgz",
+          "integrity": "sha512-5wjnpaT/3dV+XB4borEsnAYQchn00XSgTAWKDkEqv+K8KevjbzmofK6hfJ9TZIlpj2N0xQpazy7PiRQiWHqzWg=="
+        },
+        "promise": {
+          "version": "7.3.1",
+          "resolved": "https://registry.npmjs.org/promise/-/promise-7.3.1.tgz",
+          "integrity": "sha512-nolQXZ/4L+bP/UGlkfaIujX9BKxGwmQ9OT4mOt5yvy8iK1h3wqTEJCijzGANTCCl9nWjY41juyAn2K3Q1hLLTg==",
+          "requires": {
+            "asap": "~2.0.3"
+          }
+        }
+      }
+    },
+    "fbjs-css-vars": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/fbjs-css-vars/-/fbjs-css-vars-1.0.2.tgz",
+      "integrity": "sha512-b2XGFAFdWZWg0phtAWLHCk836A1Xann+I+Dgd3Gk64MHKZO44FfoD1KxyvbSh0qZsIoXQGGlVztIY+oitJPpRQ=="
+    },
+    "figgy-pudding": {
+      "version": "3.5.2",
+      "resolved": "https://registry.npmjs.org/figgy-pudding/-/figgy-pudding-3.5.2.tgz",
+      "integrity": "sha512-0btnI/H8f2pavGMN8w40mlSKOfTK2SVJmBfBeVIj3kNw0swwgzyRq0d5TJVOwodFmtvpPeWPN/MCcfuWF0Ezbw=="
+    },
+    "figures": {
+      "version": "3.2.0",
+      "resolved": "https://registry.npmjs.org/figures/-/figures-3.2.0.tgz",
+      "integrity": "sha512-yaduQFRKLXYOGgEn6AZau90j3ggSOyiqXU0F9JZfeXYhNa+Jk4X+s45A2zg5jns87GAFa34BBm2kXw4XpNcbdg==",
+      "requires": {
+        "escape-string-regexp": "^1.0.5"
+      }
+    },
+    "file-entry-cache": {
+      "version": "5.0.1",
+      "resolved": "https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-5.0.1.tgz",
+      "integrity": "sha512-bCg29ictuBaKUwwArK4ouCaqDgLZcysCFLmM/Yn/FDoqndh/9vNuQfXRDvTuXKLxfD/JtZQGKFT8MGcJBK644g==",
+      "requires": {
+        "flat-cache": "^2.0.1"
+      }
+    },
+    "file-loader": {
+      "version": "4.3.0",
+      "resolved": "https://registry.npmjs.org/file-loader/-/file-loader-4.3.0.tgz",
+      "integrity": "sha512-aKrYPYjF1yG3oX0kWRrqrSMfgftm7oJW5M+m4owoldH5C51C0RkIwB++JbRvEW3IU6/ZG5n8UvEcdgwOt2UOWA==",
+      "requires": {
+        "loader-utils": "^1.2.3",
+        "schema-utils": "^2.5.0"
+      }
+    },
+    "file-uri-to-path": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/file-uri-to-path/-/file-uri-to-path-1.0.0.tgz",
+      "integrity": "sha512-0Zt+s3L7Vf1biwWZ29aARiVYLx7iMGnEUl9x33fbB/j3jR81u/O2LbqK+Bm1CDSNDKVtJ/YjwY7TUd5SkeLQLw=="
+    },
+    "filesize": {
+      "version": "6.0.1",
+      "resolved": "https://registry.npmjs.org/filesize/-/filesize-6.0.1.tgz",
+      "integrity": "sha512-u4AYWPgbI5GBhs6id1KdImZWn5yfyFrrQ8OWZdN7ZMfA8Bf4HcO0BGo9bmUIEV8yrp8I1xVfJ/dn90GtFNNJcg=="
+    },
+    "fill-range": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-4.0.0.tgz",
+      "integrity": "sha1-1USBHUKPmOsGpj3EAtJAPDKMOPc=",
+      "requires": {
+        "extend-shallow": "^2.0.1",
+        "is-number": "^3.0.0",
+        "repeat-string": "^1.6.1",
+        "to-regex-range": "^2.1.0"
+      },
+      "dependencies": {
+        "extend-shallow": {
+          "version": "2.0.1",
+          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
+          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
+          "requires": {
+            "is-extendable": "^0.1.0"
+          }
+        }
+      }
+    },
+    "finalhandler": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/finalhandler/-/finalhandler-1.1.2.tgz",
+      "integrity": "sha512-aAWcW57uxVNrQZqFXjITpW3sIUQmHGG3qSb9mUah9MgMC4NeWhNOlNjXEYq3HjRAvL6arUviZGGJsBg6z0zsWA==",
+      "requires": {
+        "debug": "2.6.9",
+        "encodeurl": "~1.0.2",
+        "escape-html": "~1.0.3",
+        "on-finished": "~2.3.0",
+        "parseurl": "~1.3.3",
+        "statuses": "~1.5.0",
+        "unpipe": "~1.0.0"
+      },
+      "dependencies": {
+        "debug": {
+          "version": "2.6.9",
+          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
+          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
+          "requires": {
+            "ms": "2.0.0"
+          }
+        },
+        "ms": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
+          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="
+        }
+      }
+    },
+    "find-babel-config": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/find-babel-config/-/find-babel-config-1.2.0.tgz",
+      "integrity": "sha512-jB2CHJeqy6a820ssiqwrKMeyC6nNdmrcgkKWJWmpoxpE8RKciYJXCcXRq1h2AzCo5I5BJeN2tkGEO3hLTuePRA==",
+      "requires": {
+        "json5": "^0.5.1",
+        "path-exists": "^3.0.0"
+      },
+      "dependencies": {
+        "json5": {
+          "version": "0.5.1",
+          "resolved": "https://registry.npmjs.org/json5/-/json5-0.5.1.tgz",
+          "integrity": "sha1-Hq3nrMASA0rYTiOWdn6tn6VJWCE="
+        }
+      }
+    },
+    "find-cache-dir": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/find-cache-dir/-/find-cache-dir-2.1.0.tgz",
+      "integrity": "sha512-Tq6PixE0w/VMFfCgbONnkiQIVol/JJL7nRMi20fqzA4NRs9AfeqMGeRdPi3wIhYkxjeBaWh2rxwapn5Tu3IqOQ==",
+      "requires": {
+        "commondir": "^1.0.1",
+        "make-dir": "^2.0.0",
+        "pkg-dir": "^3.0.0"
+      }
+    },
+    "find-up": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/find-up/-/find-up-2.1.0.tgz",
+      "integrity": "sha1-RdG35QbHF93UgndaK3eSCjwMV6c=",
+      "requires": {
+        "locate-path": "^2.0.0"
+      }
+    },
+    "flat-cache": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/flat-cache/-/flat-cache-2.0.1.tgz",
+      "integrity": "sha512-LoQe6yDuUMDzQAEH8sgmh4Md6oZnc/7PjtwjNFSzveXqSHt6ka9fPBuso7IGf9Rz4uqnSnWiFH2B/zj24a5ReA==",
+      "requires": {
+        "flatted": "^2.0.0",
+        "rimraf": "2.6.3",
+        "write": "1.0.3"
+      }
+    },
+    "flatted": {
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/flatted/-/flatted-2.0.2.tgz",
+      "integrity": "sha512-r5wGx7YeOwNWNlCA0wQ86zKyDLMQr+/RB8xy74M4hTphfmjlijTSSXGuH8rnvKZnfT9i+75zmd8jcKdMR4O6jA=="
+    },
+    "flatten": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/flatten/-/flatten-1.0.3.tgz",
+      "integrity": "sha512-dVsPA/UwQ8+2uoFe5GHtiBMu48dWLTdsuEd7CKGlZlD78r1TTWBvDuFaFGKCo/ZfEr95Uk56vZoX86OsHkUeIg=="
+    },
+    "flush-write-stream": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/flush-write-stream/-/flush-write-stream-1.1.1.tgz",
+      "integrity": "sha512-3Z4XhFZ3992uIq0XOqb9AreonueSYphE6oYbpt5+3u06JWklbsPkNv3ZKkP9Bz/r+1MWCaMoSQ28P85+1Yc77w==",
+      "requires": {
+        "inherits": "^2.0.3",
+        "readable-stream": "^2.3.6"
+      },
+      "dependencies": {
+        "readable-stream": {
+          "version": "2.3.7",
+          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
+          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
+          "requires": {
+            "core-util-is": "~1.0.0",
+            "inherits": "~2.0.3",
+            "isarray": "~1.0.0",
+            "process-nextick-args": "~2.0.0",
+            "safe-buffer": "~5.1.1",
+            "string_decoder": "~1.1.1",
+            "util-deprecate": "~1.0.1"
+          }
+        },
+        "string_decoder": {
+          "version": "1.1.1",
+          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
+          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
+          "requires": {
+            "safe-buffer": "~5.1.0"
+          }
+        }
+      }
+    },
+    "follow-redirects": {
+      "version": "1.11.0",
+      "resolved": "https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.11.0.tgz",
+      "integrity": "sha512-KZm0V+ll8PfBrKwMzdo5D13b1bur9Iq9Zd/RMmAoQQcl2PxxFml8cxXPaaPYVbV0RjNjq1CU7zIzAOqtUPudmA==",
+      "requires": {
+        "debug": "^3.0.0"
+      },
+      "dependencies": {
+        "debug": {
+          "version": "3.2.6",
+          "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.6.tgz",
+          "integrity": "sha512-mel+jf7nrtEl5Pn1Qx46zARXKDpBbvzezse7p7LqINmdoIk8PYP5SySaxEmYv6TZ0JyEKA1hsCId6DIhgITtWQ==",
+          "requires": {
+            "ms": "^2.1.1"
+          }
+        }
+      }
+    },
+    "fontfaceobserver": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/fontfaceobserver/-/fontfaceobserver-2.1.0.tgz",
+      "integrity": "sha512-ReOsO2F66jUa0jmv2nlM/s1MiutJx/srhAe2+TE8dJCMi02ZZOcCTxTCQFr3Yet+uODUtnr4Mewg+tNQ+4V1Ng=="
+    },
+    "for-in": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/for-in/-/for-in-1.0.2.tgz",
+      "integrity": "sha1-gQaNKVqBQuwKxybG4iAMMPttXoA="
+    },
+    "for-own": {
+      "version": "0.1.5",
+      "resolved": "https://registry.npmjs.org/for-own/-/for-own-0.1.5.tgz",
+      "integrity": "sha1-UmXGgaTylNq78XyVCbZ2OqhFEM4=",
+      "requires": {
+        "for-in": "^1.0.1"
+      }
+    },
+    "foreach": {
+      "version": "2.0.5",
+      "resolved": "https://registry.npmjs.org/foreach/-/foreach-2.0.5.tgz",
+      "integrity": "sha1-C+4AUBiusmDQo6865ljdATbsG5k=",
+      "dev": true
+    },
+    "forever-agent": {
+      "version": "0.6.1",
+      "resolved": "https://registry.npmjs.org/forever-agent/-/forever-agent-0.6.1.tgz",
+      "integrity": "sha1-+8cfDEGt6zf5bFd60e1C2P2sypE="
+    },
+    "fork-ts-checker-webpack-plugin": {
+      "version": "3.1.1",
+      "resolved": "https://registry.npmjs.org/fork-ts-checker-webpack-plugin/-/fork-ts-checker-webpack-plugin-3.1.1.tgz",
+      "integrity": "sha512-DuVkPNrM12jR41KM2e+N+styka0EgLkTnXmNcXdgOM37vtGeY+oCBK/Jx0hzSeEU6memFCtWb4htrHPMDfwwUQ==",
+      "requires": {
+        "babel-code-frame": "^6.22.0",
+        "chalk": "^2.4.1",
+        "chokidar": "^3.3.0",
+        "micromatch": "^3.1.10",
+        "minimatch": "^3.0.4",
+        "semver": "^5.6.0",
+        "tapable": "^1.0.0",
+        "worker-rpc": "^0.1.0"
+      },
+      "dependencies": {
+        "semver": {
+          "version": "5.7.1",
+          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
+          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ=="
+        }
+      }
+    },
+    "form-data": {
+      "version": "2.3.3",
+      "resolved": "https://registry.npmjs.org/form-data/-/form-data-2.3.3.tgz",
+      "integrity": "sha512-1lLKB2Mu3aGP1Q/2eCOx0fNbRMe7XdwktwOruhfqqd0rIJWwN4Dh+E3hrPSlDCXnSR7UtZ1N38rVXm+6+MEhJQ==",
+      "requires": {
+        "asynckit": "^0.4.0",
+        "combined-stream": "^1.0.6",
+        "mime-types": "^2.1.12"
+      }
+    },
+    "forwarded": {
+      "version": "0.1.2",
+      "resolved": "https://registry.npmjs.org/forwarded/-/forwarded-0.1.2.tgz",
+      "integrity": "sha1-mMI9qxF1ZXuMBXPozszZGw/xjIQ="
+    },
+    "fragment-cache": {
+      "version": "0.2.1",
+      "resolved": "https://registry.npmjs.org/fragment-cache/-/fragment-cache-0.2.1.tgz",
+      "integrity": "sha1-QpD60n8T6Jvn8zeZxrxaCr//DRk=",
+      "requires": {
+        "map-cache": "^0.2.2"
+      }
+    },
+    "fresh": {
+      "version": "0.5.2",
+      "resolved": "https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz",
+      "integrity": "sha1-PYyt2Q2XZWn6g1qx+OSyOhBWBac="
+    },
+    "from2": {
+      "version": "2.3.0",
+      "resolved": "https://registry.npmjs.org/from2/-/from2-2.3.0.tgz",
+      "integrity": "sha1-i/tVAr3kpNNs/e6gB/zKIdfjgq8=",
+      "requires": {
+        "inherits": "^2.0.1",
+        "readable-stream": "^2.0.0"
+      },
+      "dependencies": {
+        "readable-stream": {
+          "version": "2.3.7",
+          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
+          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
+          "requires": {
+            "core-util-is": "~1.0.0",
+            "inherits": "~2.0.3",
+            "isarray": "~1.0.0",
+            "process-nextick-args": "~2.0.0",
+            "safe-buffer": "~5.1.1",
+            "string_decoder": "~1.1.1",
+            "util-deprecate": "~1.0.1"
+          }
+        },
+        "string_decoder": {
+          "version": "1.1.1",
+          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
+          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
+          "requires": {
+            "safe-buffer": "~5.1.0"
+          }
+        }
+      }
+    },
+    "fs-extra": {
+      "version": "8.1.0",
+      "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-8.1.0.tgz",
+      "integrity": "sha512-yhlQgA6mnOJUKOsRUFsgJdQCvkKhcz8tlZG5HBQfReYZy46OwLcY+Zia0mtdHsOo9y/hP+CxMN0TU9QxoOtG4g==",
+      "requires": {
+        "graceful-fs": "^4.2.0",
+        "jsonfile": "^4.0.0",
+        "universalify": "^0.1.0"
+      }
+    },
+    "fs-minipass": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/fs-minipass/-/fs-minipass-2.1.0.tgz",
+      "integrity": "sha512-V/JgOLFCS+R6Vcq0slCuaeWEdNC3ouDlJMNIsacH2VtALiu9mV4LPrHc5cDl8k5aw6J8jwgWWpiTo5RYhmIzvg==",
+      "requires": {
+        "minipass": "^3.0.0"
+      }
+    },
+    "fs-write-stream-atomic": {
+      "version": "1.0.10",
+      "resolved": "https://registry.npmjs.org/fs-write-stream-atomic/-/fs-write-stream-atomic-1.0.10.tgz",
+      "integrity": "sha1-tH31NJPvkR33VzHnCp3tAYnbQMk=",
+      "requires": {
+        "graceful-fs": "^4.1.2",
+        "iferr": "^0.1.5",
+        "imurmurhash": "^0.1.4",
+        "readable-stream": "1 || 2"
+      },
+      "dependencies": {
+        "readable-stream": {
+          "version": "2.3.7",
+          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
+          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
+          "requires": {
+            "core-util-is": "~1.0.0",
+            "inherits": "~2.0.3",
+            "isarray": "~1.0.0",
+            "process-nextick-args": "~2.0.0",
+            "safe-buffer": "~5.1.1",
+            "string_decoder": "~1.1.1",
+            "util-deprecate": "~1.0.1"
+          }
+        },
+        "string_decoder": {
+          "version": "1.1.1",
+          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
+          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
+          "requires": {
+            "safe-buffer": "~5.1.0"
+          }
+        }
+      }
+    },
+    "fs.realpath": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
+      "integrity": "sha1-FQStJSMVjKpA20onh8sBQRmU6k8="
+    },
+    "fsevents": {
+      "version": "2.1.2",
+      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.1.2.tgz",
+      "integrity": "sha512-R4wDiBwZ0KzpgOWetKDug1FZcYhqYnUYKtfZYt4mD5SBz76q0KR4Q9o7GIPamsVPGmW3EYPPJ0dOOjvx32ldZA==",
+      "optional": true
+    },
+    "fstream": {
+      "version": "1.0.12",
+      "resolved": "https://registry.npmjs.org/fstream/-/fstream-1.0.12.tgz",
+      "integrity": "sha512-WvJ193OHa0GHPEL+AycEJgxvBEwyfRkN1vhjca23OaPVMCaLCXTd5qAu82AjTcgP1UJmytkOKb63Ypde7raDIg==",
+      "dev": true,
+      "requires": {
+        "graceful-fs": "^4.1.2",
+        "inherits": "~2.0.0",
+        "mkdirp": ">=0.5 0",
+        "rimraf": "2"
+      }
+    },
+    "function-bind": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.1.tgz",
+      "integrity": "sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfaa2Fh6breQ6ANVTI0A=="
+    },
+    "functional-red-black-tree": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/functional-red-black-tree/-/functional-red-black-tree-1.0.1.tgz",
+      "integrity": "sha1-GwqzvVU7Kg1jmdKcDj6gslIHgyc="
+    },
+    "gauge": {
+      "version": "2.7.4",
+      "resolved": "https://registry.npmjs.org/gauge/-/gauge-2.7.4.tgz",
+      "integrity": "sha1-LANAXHU4w51+s3sxcCLjJfsBi/c=",
+      "dev": true,
+      "requires": {
+        "aproba": "^1.0.3",
+        "console-control-strings": "^1.0.0",
+        "has-unicode": "^2.0.0",
+        "object-assign": "^4.1.0",
+        "signal-exit": "^3.0.0",
+        "string-width": "^1.0.1",
+        "strip-ansi": "^3.0.1",
+        "wide-align": "^1.1.0"
+      },
+      "dependencies": {
+        "ansi-regex": {
+          "version": "2.1.1",
+          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",
+          "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8=",
+          "dev": true
+        },
+        "is-fullwidth-code-point": {
+          "version": "1.0.0",
+          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-1.0.0.tgz",
+          "integrity": "sha1-754xOG8DGn8NZDr4L95QxFfvAMs=",
+          "dev": true,
+          "requires": {
+            "number-is-nan": "^1.0.0"
+          }
+        },
+        "string-width": {
+          "version": "1.0.2",
+          "resolved": "https://registry.npmjs.org/string-width/-/string-width-1.0.2.tgz",
+          "integrity": "sha1-EYvfW4zcUaKn5w0hHgfisLmxB9M=",
+          "dev": true,
+          "requires": {
+            "code-point-at": "^1.0.0",
+            "is-fullwidth-code-point": "^1.0.0",
+            "strip-ansi": "^3.0.0"
+          }
+        },
+        "strip-ansi": {
+          "version": "3.0.1",
+          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",
+          "integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",
+          "dev": true,
+          "requires": {
+            "ansi-regex": "^2.0.0"
+          }
+        }
+      }
+    },
+    "gaze": {
+      "version": "1.1.3",
+      "resolved": "https://registry.npmjs.org/gaze/-/gaze-1.1.3.tgz",
+      "integrity": "sha512-BRdNm8hbWzFzWHERTrejLqwHDfS4GibPoq5wjTPIoJHoBtKGPg3xAFfxmM+9ztbXelxcf2hwQcaz1PtmFeue8g==",
+      "dev": true,
+      "requires": {
+        "globule": "^1.0.0"
+      }
+    },
+    "gensync": {
+      "version": "1.0.0-beta.1",
+      "resolved": "https://registry.npmjs.org/gensync/-/gensync-1.0.0-beta.1.tgz",
+      "integrity": "sha512-r8EC6NO1sngH/zdD9fiRDLdcgnbayXah+mLgManTaIZJqEC1MZstmnox8KpnI2/fxQwrp5OpCOYWLp4rBl4Jcg=="
+    },
+    "get-caller-file": {
+      "version": "2.0.5",
+      "resolved": "https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz",
+      "integrity": "sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg=="
+    },
+    "get-own-enumerable-property-symbols": {
+      "version": "3.0.2",
+      "resolved": "https://registry.npmjs.org/get-own-enumerable-property-symbols/-/get-own-enumerable-property-symbols-3.0.2.tgz",
+      "integrity": "sha512-I0UBV/XOz1XkIJHEUDMZAbzCThU/H8DxmSfmdGcKPnVhu2VfFqr34jr9777IyaTYvxjedWhqVIilEDsCdP5G6g=="
+    },
+    "get-port": {
+      "version": "3.2.0",
+      "resolved": "https://registry.npmjs.org/get-port/-/get-port-3.2.0.tgz",
+      "integrity": "sha1-3Xzn3hh8Bsi/NTeWrHHgmfCYDrw=",
+      "dev": true
+    },
+    "get-stdin": {
+      "version": "4.0.1",
+      "resolved": "https://registry.npmjs.org/get-stdin/-/get-stdin-4.0.1.tgz",
+      "integrity": "sha1-uWjGsKBDhDJJAui/Gl3zJXmkUP4=",
+      "dev": true
+    },
+    "get-stream": {
+      "version": "4.1.0",
+      "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-4.1.0.tgz",
+      "integrity": "sha512-GMat4EJ5161kIy2HevLlr4luNjBgvmj413KaQA7jt4V8B4RDsfpHk7WQ9GVqfYyyx8OS/L66Kox+rJRNklLK7w==",
+      "requires": {
+        "pump": "^3.0.0"
+      }
+    },
+    "get-value": {
+      "version": "2.0.6",
+      "resolved": "https://registry.npmjs.org/get-value/-/get-value-2.0.6.tgz",
+      "integrity": "sha1-3BXKHGcjh8p2vTesCjlbogQqLCg="
+    },
+    "getpass": {
+      "version": "0.1.7",
+      "resolved": "https://registry.npmjs.org/getpass/-/getpass-0.1.7.tgz",
+      "integrity": "sha1-Xv+OPmhNVprkyysSgmBOi6YhSfo=",
+      "requires": {
+        "assert-plus": "^1.0.0"
+      }
+    },
+    "glob": {
+      "version": "7.1.6",
+      "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.6.tgz",
+      "integrity": "sha512-LwaxwyZ72Lk7vZINtNNrywX0ZuLyStrdDtabefZKAY5ZGJhVtgdznluResxNmPitE0SAO+O26sWTHeKSI2wMBA==",
+      "requires": {
+        "fs.realpath": "^1.0.0",
+        "inflight": "^1.0.4",
+        "inherits": "2",
+        "minimatch": "^3.0.4",
+        "once": "^1.3.0",
+        "path-is-absolute": "^1.0.0"
+      }
+    },
+    "glob-parent": {
+      "version": "5.1.1",
+      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.1.tgz",
+      "integrity": "sha512-FnI+VGOpnlGHWZxthPGR+QhR78fuiK0sNLkHQv+bL9fQi57lNNdquIbna/WrfROrolq8GK5Ek6BiMwqL/voRYQ==",
+      "requires": {
+        "is-glob": "^4.0.1"
+      }
+    },
+    "glob-to-regexp": {
+      "version": "0.3.0",
+      "resolved": "https://registry.npmjs.org/glob-to-regexp/-/glob-to-regexp-0.3.0.tgz",
+      "integrity": "sha1-jFoUlNIGbFcMw7/kSWF1rMTVAqs="
+    },
+    "global-modules": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/global-modules/-/global-modules-2.0.0.tgz",
+      "integrity": "sha512-NGbfmJBp9x8IxyJSd1P+otYK8vonoJactOogrVfFRIAEY1ukil8RSKDz2Yo7wh1oihl51l/r6W4epkeKJHqL8A==",
+      "requires": {
+        "global-prefix": "^3.0.0"
+      }
+    },
+    "global-prefix": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/global-prefix/-/global-prefix-3.0.0.tgz",
+      "integrity": "sha512-awConJSVCHVGND6x3tmMaKcQvwXLhjdkmomy2W+Goaui8YPgYgXJZewhg3fWC+DlfqqQuWg8AwqjGTD2nAPVWg==",
+      "requires": {
+        "ini": "^1.3.5",
+        "kind-of": "^6.0.2",
+        "which": "^1.3.1"
+      },
+      "dependencies": {
+        "kind-of": {
+          "version": "6.0.3",
+          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.3.tgz",
+          "integrity": "sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw=="
+        }
+      }
+    },
+    "globals": {
+      "version": "11.12.0",
+      "resolved": "https://registry.npmjs.org/globals/-/globals-11.12.0.tgz",
+      "integrity": "sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA=="
+    },
+    "globby": {
+      "version": "8.0.2",
+      "resolved": "https://registry.npmjs.org/globby/-/globby-8.0.2.tgz",
+      "integrity": "sha512-yTzMmKygLp8RUpG1Ymu2VXPSJQZjNAZPD4ywgYEaG7e4tBJeUQBO8OpXrf1RCNcEs5alsoJYPAMiIHP0cmeC7w==",
+      "requires": {
+        "array-union": "^1.0.1",
+        "dir-glob": "2.0.0",
+        "fast-glob": "^2.0.2",
+        "glob": "^7.1.2",
+        "ignore": "^3.3.5",
+        "pify": "^3.0.0",
+        "slash": "^1.0.0"
+      },
+      "dependencies": {
+        "ignore": {
+          "version": "3.3.10",
+          "resolved": "https://registry.npmjs.org/ignore/-/ignore-3.3.10.tgz",
+          "integrity": "sha512-Pgs951kaMm5GXP7MOvxERINe3gsaVjUWFm+UZPSq9xYriQAksyhg0csnS0KXSNRD5NmNdapXEpjxG49+AKh/ug=="
+        },
+        "slash": {
+          "version": "1.0.0",
+          "resolved": "https://registry.npmjs.org/slash/-/slash-1.0.0.tgz",
+          "integrity": "sha1-xB8vbDn8FtHNF61LXYlhFK5HDVU="
+        }
+      }
+    },
+    "globule": {
+      "version": "1.3.1",
+      "resolved": "https://registry.npmjs.org/globule/-/globule-1.3.1.tgz",
+      "integrity": "sha512-OVyWOHgw29yosRHCHo7NncwR1hW5ew0W/UrvtwvjefVJeQ26q4/8r8FmPsSF1hJ93IgWkyv16pCTz6WblMzm/g==",
+      "dev": true,
+      "requires": {
+        "glob": "~7.1.1",
+        "lodash": "~4.17.12",
+        "minimatch": "~3.0.2"
+      }
+    },
+    "graceful-fs": {
+      "version": "4.2.4",
+      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.4.tgz",
+      "integrity": "sha512-WjKPNJF79dtJAVniUlGGWHYGz2jWxT6VhN/4m1NdkbZ2nOsEF+cI1Edgql5zCRhs/VsQYRvrXctxktVXZUkixw=="
+    },
+    "grapheme-breaker": {
+      "version": "0.3.2",
+      "resolved": "https://registry.npmjs.org/grapheme-breaker/-/grapheme-breaker-0.3.2.tgz",
+      "integrity": "sha1-W55reMODJFLSuiuxy4MPlidkEKw=",
+      "dev": true,
+      "requires": {
+        "brfs": "^1.2.0",
+        "unicode-trie": "^0.3.1"
+      }
+    },
+    "growly": {
+      "version": "1.3.0",
+      "resolved": "https://registry.npmjs.org/growly/-/growly-1.3.0.tgz",
+      "integrity": "sha1-8QdIy+dq+WS3yWyTxrzCivEgwIE="
+    },
+    "gud": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/gud/-/gud-1.0.0.tgz",
+      "integrity": "sha512-zGEOVKFM5sVPPrYs7J5/hYEw2Pof8KCyOwyhG8sAF26mCAeUFAcYPu1mwB7hhpIP29zOIBaDqwuHdLp0jvZXjw=="
+    },
+    "gzip-size": {
+      "version": "5.1.1",
+      "resolved": "https://registry.npmjs.org/gzip-size/-/gzip-size-5.1.1.tgz",
+      "integrity": "sha512-FNHi6mmoHvs1mxZAds4PpdCS6QG8B4C1krxJsMutgxl5t3+GlRTzzI3NEkifXx2pVsOvJdOGSmIgDhQ55FwdPA==",
+      "requires": {
+        "duplexer": "^0.1.1",
+        "pify": "^4.0.1"
+      },
+      "dependencies": {
+        "pify": {
+          "version": "4.0.1",
+          "resolved": "https://registry.npmjs.org/pify/-/pify-4.0.1.tgz",
+          "integrity": "sha512-uB80kBFb/tfd68bVleG9T5GGsGPjJrLAUpR5PZIrhBnIaRTQRjqdJSsIKkOP6OAIFbj7GOrcudc5pNjZ+geV2g=="
+        }
+      }
+    },
+    "handle-thing": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/handle-thing/-/handle-thing-2.0.1.tgz",
+      "integrity": "sha512-9Qn4yBxelxoh2Ow62nP+Ka/kMnOXRi8BXnRaUwezLNhqelnN49xKz4F/dPP8OYLxLxq6JDtZb2i9XznUQbNPTg=="
+    },
+    "har-schema": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/har-schema/-/har-schema-2.0.0.tgz",
+      "integrity": "sha1-qUwiJOvKwEeCoNkDVSHyRzW37JI="
+    },
+    "har-validator": {
+      "version": "5.1.3",
+      "resolved": "https://registry.npmjs.org/har-validator/-/har-validator-5.1.3.tgz",
+      "integrity": "sha512-sNvOCzEQNr/qrvJgc3UG/kD4QtlHycrzwS+6mfTrrSq97BvaYcPZZI1ZSqGSPR73Cxn4LKTD4PttRwfU7jWq5g==",
+      "requires": {
+        "ajv": "^6.5.5",
+        "har-schema": "^2.0.0"
+      }
+    },
+    "harmony-reflect": {
+      "version": "1.6.1",
+      "resolved": "https://registry.npmjs.org/harmony-reflect/-/harmony-reflect-1.6.1.tgz",
+      "integrity": "sha512-WJTeyp0JzGtHcuMsi7rw2VwtkvLa+JyfEKJCFyfcS0+CDkjQ5lHPu7zEhFZP+PDSRrEgXa5Ah0l1MbgbE41XjA=="
+    },
+    "has": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/has/-/has-1.0.3.tgz",
+      "integrity": "sha512-f2dvO0VU6Oej7RkWJGrehjbzMAjFp5/VKPp5tTpWIV4JHHZK1/BxbFRtf/siA2SWTe09caDmVtYYzWEIbBS4zw==",
+      "requires": {
+        "function-bind": "^1.1.1"
+      }
+    },
+    "has-ansi": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/has-ansi/-/has-ansi-2.0.0.tgz",
+      "integrity": "sha1-NPUEnOHs3ysGSa8+8k5F7TVBbZE=",
+      "requires": {
+        "ansi-regex": "^2.0.0"
+      },
+      "dependencies": {
+        "ansi-regex": {
+          "version": "2.1.1",
+          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",
+          "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8="
+        }
+      }
+    },
+    "has-flag": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
+      "integrity": "sha1-tdRU3CGZriJWmfNGfloH87lVuv0="
+    },
+    "has-symbols": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.1.tgz",
+      "integrity": "sha512-PLcsoqu++dmEIZB+6totNFKq/7Do+Z0u4oT0zKOJNl3lYK6vGwwu2hjHs+68OEZbTjiUE9bgOABXbP/GvrS0Kg=="
+    },
+    "has-unicode": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/has-unicode/-/has-unicode-2.0.1.tgz",
+      "integrity": "sha1-4Ob+aijPUROIVeCG0Wkedx3iqLk=",
+      "dev": true
+    },
+    "has-value": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/has-value/-/has-value-1.0.0.tgz",
+      "integrity": "sha1-GLKB2lhbHFxR3vJMkw7SmgvmsXc=",
+      "requires": {
+        "get-value": "^2.0.6",
+        "has-values": "^1.0.0",
+        "isobject": "^3.0.0"
+      }
+    },
+    "has-values": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/has-values/-/has-values-1.0.0.tgz",
+      "integrity": "sha1-lbC2P+whRmGab+V/51Yo1aOe/k8=",
+      "requires": {
+        "is-number": "^3.0.0",
+        "kind-of": "^4.0.0"
+      },
+      "dependencies": {
+        "kind-of": {
+          "version": "4.0.0",
+          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-4.0.0.tgz",
+          "integrity": "sha1-IIE989cSkosgc3hpGkUGb65y3Vc=",
+          "requires": {
+            "is-buffer": "^1.1.5"
+          }
+        }
+      }
+    },
+    "hash-base": {
+      "version": "3.1.0",
+      "resolved": "https://registry.npmjs.org/hash-base/-/hash-base-3.1.0.tgz",
+      "integrity": "sha512-1nmYp/rhMDiE7AYkDw+lLwlAzz0AntGIe51F3RfFfEqyQ3feY2eI/NcwC6umIQVOASPMsWJLJScWKSSvzL9IVA==",
+      "requires": {
+        "inherits": "^2.0.4",
+        "readable-stream": "^3.6.0",
+        "safe-buffer": "^5.2.0"
+      },
+      "dependencies": {
+        "safe-buffer": {
+          "version": "5.2.0",
+          "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.0.tgz",
+          "integrity": "sha512-fZEwUGbVl7kouZs1jCdMLdt95hdIv0ZeHg6L7qPeciMZhZ+/gdesW4wgTARkrFWEpspjEATAzUGPG8N2jJiwbg=="
+        }
+      }
+    },
+    "hash.js": {
+      "version": "1.1.7",
+      "resolved": "https://registry.npmjs.org/hash.js/-/hash.js-1.1.7.tgz",
+      "integrity": "sha512-taOaskGt4z4SOANNseOviYDvjEJinIkRgmp7LbKP2YTTmVxWBl87s/uzK9r+44BclBSp2X7K1hqeNfz9JbBeXA==",
+      "requires": {
+        "inherits": "^2.0.3",
+        "minimalistic-assert": "^1.0.1"
+      }
+    },
+    "he": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/he/-/he-1.2.0.tgz",
+      "integrity": "sha512-F/1DnUGPopORZi0ni+CvrCgHQ5FyEAHRLSApuYWMmrbSwoN2Mn/7k+Gl38gJnR7yyDZk6WLXwiGod1JOWNDKGw=="
+    },
+    "hex-color-regex": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/hex-color-regex/-/hex-color-regex-1.1.0.tgz",
+      "integrity": "sha512-l9sfDFsuqtOqKDsQdqrMRk0U85RZc0RtOR9yPI7mRVOa4FsR/BVnZ0shmQRM96Ji99kYZP/7hn1cedc1+ApsTQ=="
+    },
+    "history": {
+      "version": "4.10.1",
+      "resolved": "https://registry.npmjs.org/history/-/history-4.10.1.tgz",
+      "integrity": "sha512-36nwAD620w12kuzPAsyINPWJqlNbij+hpK1k9XRloDtym8mxzGYl2c17LnV6IAGB2Dmg4tEa7G7DlawS0+qjew==",
+      "requires": {
+        "@babel/runtime": "^7.1.2",
+        "loose-envify": "^1.2.0",
+        "resolve-pathname": "^3.0.0",
+        "tiny-invariant": "^1.0.2",
+        "tiny-warning": "^1.0.0",
+        "value-equal": "^1.0.1"
+      }
+    },
+    "hmac-drbg": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/hmac-drbg/-/hmac-drbg-1.0.1.tgz",
+      "integrity": "sha1-0nRXAQJabHdabFRXk+1QL8DGSaE=",
+      "requires": {
+        "hash.js": "^1.0.3",
+        "minimalistic-assert": "^1.0.0",
+        "minimalistic-crypto-utils": "^1.0.1"
+      }
+    },
+    "hoist-non-react-statics": {
+      "version": "3.3.2",
+      "resolved": "https://registry.npmjs.org/hoist-non-react-statics/-/hoist-non-react-statics-3.3.2.tgz",
+      "integrity": "sha512-/gGivxi8JPKWNm/W0jSmzcMPpfpPLc3dY/6GxhX2hQ9iGj3aDfklV4ET7NjKpSinLpJ5vafa9iiGIEZg10SfBw==",
+      "requires": {
+        "react-is": "^16.7.0"
+      }
+    },
+    "hosted-git-info": {
+      "version": "2.8.8",
+      "resolved": "https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-2.8.8.tgz",
+      "integrity": "sha512-f/wzC2QaWBs7t9IYqB4T3sR1xviIViXJRJTWBlx2Gf3g0Xi5vI7Yy4koXQ1c9OYDGHN9sBy1DQ2AB8fqZBWhUg=="
+    },
+    "hpack.js": {
+      "version": "2.1.6",
+      "resolved": "https://registry.npmjs.org/hpack.js/-/hpack.js-2.1.6.tgz",
+      "integrity": "sha1-h3dMCUnlE/QuhFdbPEVoH63ioLI=",
+      "requires": {
+        "inherits": "^2.0.1",
+        "obuf": "^1.0.0",
+        "readable-stream": "^2.0.1",
+        "wbuf": "^1.1.0"
+      },
+      "dependencies": {
+        "readable-stream": {
+          "version": "2.3.7",
+          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
+          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
+          "requires": {
+            "core-util-is": "~1.0.0",
+            "inherits": "~2.0.3",
+            "isarray": "~1.0.0",
+            "process-nextick-args": "~2.0.0",
+            "safe-buffer": "~5.1.1",
+            "string_decoder": "~1.1.1",
+            "util-deprecate": "~1.0.1"
+          }
+        },
+        "string_decoder": {
+          "version": "1.1.1",
+          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
+          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
+          "requires": {
+            "safe-buffer": "~5.1.0"
+          }
+        }
+      }
+    },
+    "hsl-regex": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/hsl-regex/-/hsl-regex-1.0.0.tgz",
+      "integrity": "sha1-1JMwx4ntgZ4nakwNJy3/owsY/m4="
+    },
+    "hsla-regex": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/hsla-regex/-/hsla-regex-1.0.0.tgz",
+      "integrity": "sha1-wc56MWjIxmFAM6S194d/OyJfnDg="
+    },
+    "html-comment-regex": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/html-comment-regex/-/html-comment-regex-1.1.2.tgz",
+      "integrity": "sha512-P+M65QY2JQ5Y0G9KKdlDpo0zK+/OHptU5AaBwUfAIDJZk1MYf32Frm84EcOytfJE0t5JvkAnKlmjsXDnWzCJmQ=="
+    },
+    "html-encoding-sniffer": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/html-encoding-sniffer/-/html-encoding-sniffer-1.0.2.tgz",
+      "integrity": "sha512-71lZziiDnsuabfdYiUeWdCVyKuqwWi23L8YeIgV9jSSZHCtb6wB1BKWooH7L3tn4/FuZJMVWyNaIDr4RGmaSYw==",
+      "requires": {
+        "whatwg-encoding": "^1.0.1"
+      }
+    },
+    "html-entities": {
+      "version": "1.3.1",
+      "resolved": "https://registry.npmjs.org/html-entities/-/html-entities-1.3.1.tgz",
+      "integrity": "sha512-rhE/4Z3hIhzHAUKbW8jVcCyuT5oJCXXqhN/6mXXVCpzTmvJnoH2HL/bt3EZ6p55jbFJBeAe1ZNpL5BugLujxNA=="
+    },
+    "html-escaper": {
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/html-escaper/-/html-escaper-2.0.2.tgz",
+      "integrity": "sha512-H2iMtd0I4Mt5eYiapRdIDjp+XzelXQ0tFE4JS7YFwFevXXMmOp9myNrUvCg0D6ws8iqkRPBfKHgbwig1SmlLfg=="
+    },
+    "html-minifier-terser": {
+      "version": "5.1.0",
+      "resolved": "https://registry.npmjs.org/html-minifier-terser/-/html-minifier-terser-5.1.0.tgz",
+      "integrity": "sha512-tiYE76O1zunboByeB/nFGwUEb263Z3nkNv6Lz2oLC1s6M36bLKfTrjQ+7ssVfaucVllE+N7hh/FbpbxvnIA+LQ==",
+      "requires": {
+        "camel-case": "^4.1.1",
+        "clean-css": "^4.2.3",
+        "commander": "^4.1.1",
+        "he": "^1.2.0",
+        "param-case": "^3.0.3",
+        "relateurl": "^0.2.7",
+        "terser": "^4.6.3"
+      },
+      "dependencies": {
+        "commander": {
+          "version": "4.1.1",
+          "resolved": "https://registry.npmjs.org/commander/-/commander-4.1.1.tgz",
+          "integrity": "sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA=="
+        }
+      }
+    },
+    "html-tags": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/html-tags/-/html-tags-1.2.0.tgz",
+      "integrity": "sha1-x43mW1Zjqll5id0rerSSANfk25g=",
+      "dev": true
+    },
+    "html-webpack-plugin": {
+      "version": "4.0.0-beta.11",
+      "resolved": "https://registry.npmjs.org/html-webpack-plugin/-/html-webpack-plugin-4.0.0-beta.11.tgz",
+      "integrity": "sha512-4Xzepf0qWxf8CGg7/WQM5qBB2Lc/NFI7MhU59eUDTkuQp3skZczH4UA1d6oQyDEIoMDgERVhRyTdtUPZ5s5HBg==",
+      "requires": {
+        "html-minifier-terser": "^5.0.1",
+        "loader-utils": "^1.2.3",
+        "lodash": "^4.17.15",
+        "pretty-error": "^2.1.1",
+        "tapable": "^1.1.3",
+        "util.promisify": "1.0.0"
+      },
+      "dependencies": {
+        "util.promisify": {
+          "version": "1.0.0",
+          "resolved": "https://registry.npmjs.org/util.promisify/-/util.promisify-1.0.0.tgz",
+          "integrity": "sha512-i+6qA2MPhvoKLuxnJNpXAGhg7HphQOSUq2LKMZD0m15EiskXUkMvKdF4Uui0WYeCUGea+o2cw/ZuwehtfsrNkA==",
+          "requires": {
+            "define-properties": "^1.1.2",
+            "object.getownpropertydescriptors": "^2.0.3"
+          }
+        }
+      }
+    },
+    "htmlnano": {
+      "version": "0.2.5",
+      "resolved": "https://registry.npmjs.org/htmlnano/-/htmlnano-0.2.5.tgz",
+      "integrity": "sha512-X1iPSwXG/iF9bVs+/obt2n6F64uH0ETkA8zp7qFDmLW9/+A6ueHGeb/+qD67T21qUY22owZPMdawljN50ajkqA==",
+      "dev": true,
+      "requires": {
+        "cssnano": "^4.1.10",
+        "normalize-html-whitespace": "^1.0.0",
+        "posthtml": "^0.12.0",
+        "posthtml-render": "^1.1.5",
+        "purgecss": "^1.4.0",
+        "svgo": "^1.3.2",
+        "terser": "^4.3.9",
+        "uncss": "^0.17.2"
+      },
+      "dependencies": {
+        "posthtml": {
+          "version": "0.12.3",
+          "resolved": "https://registry.npmjs.org/posthtml/-/posthtml-0.12.3.tgz",
+          "integrity": "sha512-Fbpi95+JJyR0tqU7pUy1zTSQFjAsluuwB9pJ1h0jtnGk7n/O2TBtP5nDl9rV0JVACjQ1Lm5wSp4ppChr8u3MhA==",
+          "dev": true,
+          "requires": {
+            "posthtml-parser": "^0.4.2",
+            "posthtml-render": "^1.2.2"
+          }
+        }
+      }
+    },
+    "htmlparser2": {
+      "version": "3.10.1",
+      "resolved": "https://registry.npmjs.org/htmlparser2/-/htmlparser2-3.10.1.tgz",
+      "integrity": "sha512-IgieNijUMbkDovyoKObU1DUhm1iwNYE/fuifEoEHfd1oZKZDaONBSkal7Y01shxsM49R4XaMdGez3WnF9UfiCQ==",
+      "requires": {
+        "domelementtype": "^1.3.1",
+        "domhandler": "^2.3.0",
+        "domutils": "^1.5.1",
+        "entities": "^1.1.1",
+        "inherits": "^2.0.1",
+        "readable-stream": "^3.1.1"
+      },
+      "dependencies": {
+        "entities": {
+          "version": "1.1.2",
+          "resolved": "https://registry.npmjs.org/entities/-/entities-1.1.2.tgz",
+          "integrity": "sha512-f2LZMYl1Fzu7YSBKg+RoROelpOaNrcGmE9AZubeDfrCEia483oW4MI4VyFd5VNHIgQ/7qm1I0wUHK1eJnn2y2w=="
+        }
+      }
+    },
+    "http-deceiver": {
+      "version": "1.2.7",
+      "resolved": "https://registry.npmjs.org/http-deceiver/-/http-deceiver-1.2.7.tgz",
+      "integrity": "sha1-+nFolEq5pRnTN8sL7HKE3D5yPYc="
+    },
+    "http-errors": {
+      "version": "1.7.2",
+      "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-1.7.2.tgz",
+      "integrity": "sha512-uUQBt3H/cSIVfch6i1EuPNy/YsRSOUBXTVfZ+yR7Zjez3qjBz6i9+i4zjNaoqcoFVI4lQJ5plg63TvGfRSDCRg==",
+      "requires": {
+        "depd": "~1.1.2",
+        "inherits": "2.0.3",
+        "setprototypeof": "1.1.1",
+        "statuses": ">= 1.5.0 < 2",
+        "toidentifier": "1.0.0"
+      },
+      "dependencies": {
+        "inherits": {
+          "version": "2.0.3",
+          "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz",
+          "integrity": "sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4="
+        }
+      }
+    },
+    "http-parser-js": {
+      "version": "0.4.10",
+      "resolved": "https://registry.npmjs.org/http-parser-js/-/http-parser-js-0.4.10.tgz",
+      "integrity": "sha1-ksnBN0w1CF912zWexWzCV8u5P6Q="
+    },
+    "http-proxy": {
+      "version": "1.18.0",
+      "resolved": "https://registry.npmjs.org/http-proxy/-/http-proxy-1.18.0.tgz",
+      "integrity": "sha512-84I2iJM/n1d4Hdgc6y2+qY5mDaz2PUVjlg9znE9byl+q0uC3DeByqBGReQu5tpLK0TAqTIXScRUV+dg7+bUPpQ==",
+      "requires": {
+        "eventemitter3": "^4.0.0",
+        "follow-redirects": "^1.0.0",
+        "requires-port": "^1.0.0"
+      }
+    },
+    "http-proxy-middleware": {
+      "version": "0.19.1",
+      "resolved": "https://registry.npmjs.org/http-proxy-middleware/-/http-proxy-middleware-0.19.1.tgz",
+      "integrity": "sha512-yHYTgWMQO8VvwNS22eLLloAkvungsKdKTLO8AJlftYIKNfJr3GK3zK0ZCfzDDGUBttdGc8xFy1mCitvNKQtC3Q==",
+      "requires": {
+        "http-proxy": "^1.17.0",
+        "is-glob": "^4.0.0",
+        "lodash": "^4.17.11",
+        "micromatch": "^3.1.10"
+      }
+    },
+    "http-signature": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/http-signature/-/http-signature-1.2.0.tgz",
+      "integrity": "sha1-muzZJRFHcvPZW2WmCruPfBj7rOE=",
+      "requires": {
+        "assert-plus": "^1.0.0",
+        "jsprim": "^1.2.2",
+        "sshpk": "^1.7.0"
+      }
+    },
+    "https-browserify": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/https-browserify/-/https-browserify-1.0.0.tgz",
+      "integrity": "sha1-7AbBDgo0wPL68Zn3/X/Hj//QPHM="
+    },
+    "iconv-lite": {
+      "version": "0.4.24",
+      "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz",
+      "integrity": "sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==",
+      "requires": {
+        "safer-buffer": ">= 2.1.2 < 3"
+      }
+    },
+    "icss-replace-symbols": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/icss-replace-symbols/-/icss-replace-symbols-1.1.0.tgz",
+      "integrity": "sha1-Bupvg2ead0njhs/h/oEq5dsiPe0=",
+      "dev": true
+    },
+    "icss-utils": {
+      "version": "4.1.1",
+      "resolved": "https://registry.npmjs.org/icss-utils/-/icss-utils-4.1.1.tgz",
+      "integrity": "sha512-4aFq7wvWyMHKgxsH8QQtGpvbASCf+eM3wPRLI6R+MgAnTCZ6STYsRvttLvRWK0Nfif5piF394St3HeJDaljGPA==",
+      "requires": {
+        "postcss": "^7.0.14"
+      }
+    },
+    "identity-obj-proxy": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/identity-obj-proxy/-/identity-obj-proxy-3.0.0.tgz",
+      "integrity": "sha1-lNK9qWCERT7zb7xarsN+D3nx/BQ=",
+      "requires": {
+        "harmony-reflect": "^1.4.6"
+      }
+    },
+    "ieee754": {
+      "version": "1.1.13",
+      "resolved": "https://registry.npmjs.org/ieee754/-/ieee754-1.1.13.tgz",
+      "integrity": "sha512-4vf7I2LYV/HaWerSo3XmlMkp5eZ83i+/CDluXi/IGTs/O1sejBNhTtnxzmRZfvOUqj7lZjqHkeTvpgSFDlWZTg=="
+    },
+    "iferr": {
+      "version": "0.1.5",
+      "resolved": "https://registry.npmjs.org/iferr/-/iferr-0.1.5.tgz",
+      "integrity": "sha1-xg7taebY/bazEEofy8ocGS3FtQE="
+    },
+    "ignore": {
+      "version": "4.0.6",
+      "resolved": "https://registry.npmjs.org/ignore/-/ignore-4.0.6.tgz",
+      "integrity": "sha512-cyFDKrqc/YdcWFniJhzI42+AzS+gNwmUzOSFcRCQYwySuBBBy/KjuxWLZ/FHEH6Moq1NizMOBWyTcv8O4OZIMg=="
+    },
+    "image-size": {
+      "version": "0.6.3",
+      "resolved": "https://registry.npmjs.org/image-size/-/image-size-0.6.3.tgz",
+      "integrity": "sha512-47xSUiQioGaB96nqtp5/q55m0aBQSQdyIloMOc/x+QVTDZLNmXE892IIDrJ0hM1A5vcNUDD5tDffkSP5lCaIIA=="
+    },
+    "immediate": {
+      "version": "3.2.3",
+      "resolved": "https://registry.npmjs.org/immediate/-/immediate-3.2.3.tgz",
+      "integrity": "sha1-0UD6j2FGWb1lQSMwl92qwlzdmRw="
+    },
+    "immer": {
+      "version": "1.10.0",
+      "resolved": "https://registry.npmjs.org/immer/-/immer-1.10.0.tgz",
+      "integrity": "sha512-O3sR1/opvCDGLEVcvrGTMtLac8GJ5IwZC4puPrLuRj3l7ICKvkmA0vGuU9OW8mV9WIBRnaxp5GJh9IEAaNOoYg=="
+    },
+    "import-cwd": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/import-cwd/-/import-cwd-2.1.0.tgz",
+      "integrity": "sha1-qmzzbnInYShcs3HsZRn1PiQ1sKk=",
+      "requires": {
+        "import-from": "^2.1.0"
+      }
+    },
+    "import-fresh": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-2.0.0.tgz",
+      "integrity": "sha1-2BNVwVYS04bGH53dOSLUMEgipUY=",
+      "requires": {
+        "caller-path": "^2.0.0",
+        "resolve-from": "^3.0.0"
+      }
+    },
+    "import-from": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/import-from/-/import-from-2.1.0.tgz",
+      "integrity": "sha1-M1238qev/VOqpHHUuAId7ja387E=",
+      "requires": {
+        "resolve-from": "^3.0.0"
+      }
+    },
+    "import-local": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/import-local/-/import-local-2.0.0.tgz",
+      "integrity": "sha512-b6s04m3O+s3CGSbqDIyP4R6aAwAeYlVq9+WUWep6iHa8ETRf9yei1U48C5MmfJmV9AiLYYBKPMq/W+/WRpQmCQ==",
+      "requires": {
+        "pkg-dir": "^3.0.0",
+        "resolve-cwd": "^2.0.0"
+      }
+    },
+    "imurmurhash": {
+      "version": "0.1.4",
+      "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
+      "integrity": "sha1-khi5srkoojixPcT7a21XbyMUU+o="
+    },
+    "in-publish": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/in-publish/-/in-publish-2.0.1.tgz",
+      "integrity": "sha512-oDM0kUSNFC31ShNxHKUyfZKy8ZeXZBWMjMdZHKLOk13uvT27VTL/QzRGfRUcevJhpkZAvlhPYuXkF7eNWrtyxQ==",
+      "dev": true
+    },
+    "indent-string": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/indent-string/-/indent-string-4.0.0.tgz",
+      "integrity": "sha512-EdDDZu4A2OyIK7Lr/2zG+w5jmbuk1DVBnEwREQvBzspBJkCEbRa8GxU1lghYcaGJCnRWibjDXlq779X1/y5xwg=="
+    },
+    "indexes-of": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/indexes-of/-/indexes-of-1.0.1.tgz",
+      "integrity": "sha1-8w9xbI4r00bHtn0985FVZqfAVgc="
+    },
+    "infer-owner": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/infer-owner/-/infer-owner-1.0.4.tgz",
+      "integrity": "sha512-IClj+Xz94+d7irH5qRyfJonOdfTzuDaifE6ZPWfx0N0+/ATZCbuTPq2prFl526urkQd90WyUKIh1DfBQ2hMz9A=="
+    },
+    "inflight": {
+      "version": "1.0.6",
+      "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
+      "integrity": "sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=",
+      "requires": {
+        "once": "^1.3.0",
+        "wrappy": "1"
+      }
+    },
+    "inherits": {
+      "version": "2.0.4",
+      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
+      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ=="
+    },
+    "ini": {
+      "version": "1.3.5",
+      "resolved": "https://registry.npmjs.org/ini/-/ini-1.3.5.tgz",
+      "integrity": "sha512-RZY5huIKCMRWDUqZlEi72f/lmXKMvuszcMBduliQ3nnWbx9X/ZBQO7DijMEYS9EhHBb2qacRUMtC7svLwe0lcw=="
+    },
+    "inquirer": {
+      "version": "7.1.0",
+      "resolved": "https://registry.npmjs.org/inquirer/-/inquirer-7.1.0.tgz",
+      "integrity": "sha512-5fJMWEmikSYu0nv/flMc475MhGbB7TSPd/2IpFV4I4rMklboCH2rQjYY5kKiYGHqUF9gvaambupcJFFG9dvReg==",
+      "requires": {
+        "ansi-escapes": "^4.2.1",
+        "chalk": "^3.0.0",
+        "cli-cursor": "^3.1.0",
+        "cli-width": "^2.0.0",
+        "external-editor": "^3.0.3",
+        "figures": "^3.0.0",
+        "lodash": "^4.17.15",
+        "mute-stream": "0.0.8",
+        "run-async": "^2.4.0",
+        "rxjs": "^6.5.3",
+        "string-width": "^4.1.0",
+        "strip-ansi": "^6.0.0",
+        "through": "^2.3.6"
+      },
+      "dependencies": {
+        "ansi-styles": {
+          "version": "4.2.1",
+          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.2.1.tgz",
+          "integrity": "sha512-9VGjrMsG1vePxcSweQsN20KY/c4zN0h9fLjqAbwbPfahM3t+NL+M9HC8xeXG2I8pX5NoamTGNuomEUFI7fcUjA==",
+          "requires": {
+            "@types/color-name": "^1.1.1",
+            "color-convert": "^2.0.1"
+          }
+        },
+        "chalk": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/chalk/-/chalk-3.0.0.tgz",
+          "integrity": "sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==",
+          "requires": {
+            "ansi-styles": "^4.1.0",
+            "supports-color": "^7.1.0"
+          }
+        },
+        "color-convert": {
+          "version": "2.0.1",
+          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
+          "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
+          "requires": {
+            "color-name": "~1.1.4"
+          }
+        },
+        "color-name": {
+          "version": "1.1.4",
+          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
+          "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA=="
+        },
+        "has-flag": {
+          "version": "4.0.0",
+          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
+          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ=="
+        },
+        "strip-ansi": {
+          "version": "6.0.0",
+          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.0.tgz",
+          "integrity": "sha512-AuvKTrTfQNYNIctbR1K/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==",
+          "requires": {
+            "ansi-regex": "^5.0.0"
+          }
+        },
+        "supports-color": {
+          "version": "7.1.0",
+          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.1.0.tgz",
+          "integrity": "sha512-oRSIpR8pxT1Wr2FquTNnGet79b3BWljqOuoW/h4oBhxJ/HUbX5nX6JSruTkvXDCFMwDPvsaTTbvMLKZWSy0R5g==",
+          "requires": {
+            "has-flag": "^4.0.0"
+          }
+        }
+      }
+    },
+    "internal-ip": {
+      "version": "4.3.0",
+      "resolved": "https://registry.npmjs.org/internal-ip/-/internal-ip-4.3.0.tgz",
+      "integrity": "sha512-S1zBo1D6zcsyuC6PMmY5+55YMILQ9av8lotMx447Bq6SAgo/sDK6y6uUKmuYhW7eacnIhFfsPmCNYdDzsnnDCg==",
+      "requires": {
+        "default-gateway": "^4.2.0",
+        "ipaddr.js": "^1.9.0"
+      }
+    },
+    "internal-slot": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/internal-slot/-/internal-slot-1.0.2.tgz",
+      "integrity": "sha512-2cQNfwhAfJIkU4KZPkDI+Gj5yNNnbqi40W9Gge6dfnk4TocEVm00B3bdiL+JINrbGJil2TeHvM4rETGzk/f/0g==",
+      "requires": {
+        "es-abstract": "^1.17.0-next.1",
+        "has": "^1.0.3",
+        "side-channel": "^1.0.2"
+      }
+    },
+    "invariant": {
+      "version": "2.2.4",
+      "resolved": "https://registry.npmjs.org/invariant/-/invariant-2.2.4.tgz",
+      "integrity": "sha512-phJfQVBuaJM5raOpJjSfkiD6BpbCE4Ns//LaXl6wGYtUBY83nWS6Rf9tXm2e8VaK60JEjYldbPif/A2B1C2gNA==",
+      "requires": {
+        "loose-envify": "^1.0.0"
+      }
+    },
+    "invert-kv": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/invert-kv/-/invert-kv-2.0.0.tgz",
+      "integrity": "sha512-wPVv/y/QQ/Uiirj/vh3oP+1Ww+AWehmi1g5fFWGPF6IpCBCDVrhgHRMvrLfdYcwDh3QJbGXDW4JAuzxElLSqKA=="
+    },
+    "ip": {
+      "version": "1.1.5",
+      "resolved": "https://registry.npmjs.org/ip/-/ip-1.1.5.tgz",
+      "integrity": "sha1-vd7XARQpCCjAoDnnLvJfWq7ENUo="
+    },
+    "ip-regex": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/ip-regex/-/ip-regex-2.1.0.tgz",
+      "integrity": "sha1-+ni/XS5pE8kRzp+BnuUUa7bYROk="
+    },
+    "ipaddr.js": {
+      "version": "1.9.1",
+      "resolved": "https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz",
+      "integrity": "sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g=="
+    },
+    "is-absolute-url": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/is-absolute-url/-/is-absolute-url-2.1.0.tgz",
+      "integrity": "sha1-UFMN+4T8yap9vnhS6Do3uTufKqY="
+    },
+    "is-accessor-descriptor": {
+      "version": "0.1.6",
+      "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-0.1.6.tgz",
+      "integrity": "sha1-qeEss66Nh2cn7u84Q/igiXtcmNY=",
+      "requires": {
+        "kind-of": "^3.0.2"
+      }
+    },
+    "is-arguments": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/is-arguments/-/is-arguments-1.0.4.tgz",
+      "integrity": "sha512-xPh0Rmt8NE65sNzvyUmWgI1tz3mKq74lGA0mL8LYZcoIzKOzDh6HmrYm3d18k60nHerC8A9Km8kYu87zfSFnLA=="
+    },
+    "is-arrayish": {
+      "version": "0.2.1",
+      "resolved": "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.2.1.tgz",
+      "integrity": "sha1-d8mYQFJ6qOyxqLppe4BkWnqSap0="
+    },
+    "is-binary-path": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz",
+      "integrity": "sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==",
+      "requires": {
+        "binary-extensions": "^2.0.0"
+      }
+    },
+    "is-buffer": {
+      "version": "1.1.6",
+      "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz",
+      "integrity": "sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w=="
+    },
+    "is-callable": {
+      "version": "1.1.5",
+      "resolved": "https://registry.npmjs.org/is-callable/-/is-callable-1.1.5.tgz",
+      "integrity": "sha512-ESKv5sMCJB2jnHTWZ3O5itG+O128Hsus4K4Qh1h2/cgn2vbgnLSVqfV46AeJA9D5EeeLa9w81KUXMtn34zhX+Q=="
+    },
+    "is-ci": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/is-ci/-/is-ci-2.0.0.tgz",
+      "integrity": "sha512-YfJT7rkpQB0updsdHLGWrvhBJfcfzNNawYDNIyQXJz0IViGf75O8EBPKSdvw2rF+LGCsX4FZ8tcr3b19LcZq4w==",
+      "requires": {
+        "ci-info": "^2.0.0"
+      }
+    },
+    "is-color-stop": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/is-color-stop/-/is-color-stop-1.1.0.tgz",
+      "integrity": "sha1-z/9HGu5N1cnhWFmPvhKWe1za00U=",
+      "requires": {
+        "css-color-names": "^0.0.4",
+        "hex-color-regex": "^1.1.0",
+        "hsl-regex": "^1.0.0",
+        "hsla-regex": "^1.0.0",
+        "rgb-regex": "^1.0.1",
+        "rgba-regex": "^1.0.0"
+      }
+    },
+    "is-data-descriptor": {
+      "version": "0.1.4",
+      "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-0.1.4.tgz",
+      "integrity": "sha1-C17mSDiOLIYCgueT8YVv7D8wG1Y=",
+      "requires": {
+        "kind-of": "^3.0.2"
+      }
+    },
+    "is-date-object": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/is-date-object/-/is-date-object-1.0.2.tgz",
+      "integrity": "sha512-USlDT524woQ08aoZFzh3/Z6ch9Y/EWXEHQ/AaRN0SkKq4t2Jw2R2339tSXmwuVoY7LLlBCbOIlx2myP/L5zk0g=="
+    },
+    "is-descriptor": {
+      "version": "0.1.6",
+      "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-0.1.6.tgz",
+      "integrity": "sha512-avDYr0SB3DwO9zsMov0gKCESFYqCnE4hq/4z3TdUlukEy5t9C0YRq7HLrsN52NAcqXKaepeCD0n+B0arnVG3Hg==",
+      "requires": {
+        "is-accessor-descriptor": "^0.1.6",
+        "is-data-descriptor": "^0.1.4",
+        "kind-of": "^5.0.0"
+      },
+      "dependencies": {
+        "kind-of": {
+          "version": "5.1.0",
+          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-5.1.0.tgz",
+          "integrity": "sha512-NGEErnH6F2vUuXDh+OlbcKW7/wOcfdRHaZ7VWtqCztfHri/++YKmP51OdWeGPuqCOba6kk2OTe5d02VmTB80Pw=="
+        }
+      }
+    },
+    "is-directory": {
+      "version": "0.3.1",
+      "resolved": "https://registry.npmjs.org/is-directory/-/is-directory-0.3.1.tgz",
+      "integrity": "sha1-YTObbyR1/Hcv2cnYP1yFddwVSuE="
+    },
+    "is-docker": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/is-docker/-/is-docker-2.0.0.tgz",
+      "integrity": "sha512-pJEdRugimx4fBMra5z2/5iRdZ63OhYV0vr0Dwm5+xtW4D1FvRkB8hamMIhnWfyJeDdyr/aa7BDyNbtG38VxgoQ=="
+    },
+    "is-extendable": {
+      "version": "0.1.1",
+      "resolved": "https://registry.npmjs.org/is-extendable/-/is-extendable-0.1.1.tgz",
+      "integrity": "sha1-YrEQ4omkcUGOPsNqYX1HLjAd/Ik="
+    },
+    "is-extglob": {
+      "version": "2.1.1",
+      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
+      "integrity": "sha1-qIwCU1eR8C7TfHahueqXc8gz+MI="
+    },
+    "is-finite": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/is-finite/-/is-finite-1.1.0.tgz",
+      "integrity": "sha512-cdyMtqX/BOqqNBBiKlIVkytNHm49MtMlYyn1zxzvJKWmFMlGzm+ry5BBfYyeY9YmNKbRSo/o7OX9w9ale0wg3w==",
+      "dev": true
+    },
+    "is-fullwidth-code-point": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
+      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg=="
+    },
+    "is-generator-fn": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/is-generator-fn/-/is-generator-fn-2.1.0.tgz",
+      "integrity": "sha512-cTIB4yPYL/Grw0EaSzASzg6bBy9gqCofvWN8okThAYIxKJZC+udlRAmGbM0XLeniEJSs8uEgHPGuHSe1XsOLSQ=="
+    },
+    "is-glob": {
+      "version": "4.0.1",
+      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.1.tgz",
+      "integrity": "sha512-5G0tKtBTFImOqDnLB2hG6Bp2qcKEFduo4tZu9MT/H6NQv/ghhy30o55ufafxJ/LdH79LLs2Kfrn85TLKyA7BUg==",
+      "requires": {
+        "is-extglob": "^2.1.1"
+      }
+    },
+    "is-html": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/is-html/-/is-html-1.1.0.tgz",
+      "integrity": "sha1-4E8cGNOUhRETlvmgJz6rUa8hhGQ=",
+      "dev": true,
+      "requires": {
+        "html-tags": "^1.0.0"
+      }
+    },
+    "is-number": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/is-number/-/is-number-3.0.0.tgz",
+      "integrity": "sha1-JP1iAaR4LPUFYcgQJ2r8fRLXEZU=",
+      "requires": {
+        "kind-of": "^3.0.2"
+      }
+    },
+    "is-obj": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/is-obj/-/is-obj-2.0.0.tgz",
+      "integrity": "sha512-drqDG3cbczxxEJRoOXcOjtdp1J/lyp1mNn0xaznRs8+muBhgQcrnbspox5X5fOw0HnMnbfDzvnEMEtqDEJEo8w=="
+    },
+    "is-path-cwd": {
+      "version": "2.2.0",
+      "resolved": "https://registry.npmjs.org/is-path-cwd/-/is-path-cwd-2.2.0.tgz",
+      "integrity": "sha512-w942bTcih8fdJPJmQHFzkS76NEP8Kzzvmw92cXsazb8intwLqPibPPdXf4ANdKV3rYMuuQYGIWtvz9JilB3NFQ=="
+    },
+    "is-path-in-cwd": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/is-path-in-cwd/-/is-path-in-cwd-2.1.0.tgz",
+      "integrity": "sha512-rNocXHgipO+rvnP6dk3zI20RpOtrAM/kzbB258Uw5BWr3TpXi861yzjo16Dn4hUox07iw5AyeMLHWsujkjzvRQ==",
+      "requires": {
+        "is-path-inside": "^2.1.0"
+      }
+    },
+    "is-path-inside": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/is-path-inside/-/is-path-inside-2.1.0.tgz",
+      "integrity": "sha512-wiyhTzfDWsvwAW53OBWF5zuvaOGlZ6PwYxAbPVDhpm+gM09xKQGjBq/8uYN12aDvMxnAnq3dxTyoSoRNmg5YFg==",
+      "requires": {
+        "path-is-inside": "^1.0.2"
+      }
+    },
+    "is-plain-obj": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/is-plain-obj/-/is-plain-obj-1.1.0.tgz",
+      "integrity": "sha1-caUMhCnfync8kqOQpKA7OfzVHT4="
+    },
+    "is-plain-object": {
+      "version": "2.0.4",
+      "resolved": "https://registry.npmjs.org/is-plain-object/-/is-plain-object-2.0.4.tgz",
+      "integrity": "sha512-h5PpgXkWitc38BBMYawTYMWJHFZJVnBquFE57xFpjB8pJFiF6gZ+bU+WyI/yqXiFR5mdLsgYNaPe8uao6Uv9Og==",
+      "requires": {
+        "isobject": "^3.0.1"
+      }
+    },
+    "is-regex": {
+      "version": "1.0.5",
+      "resolved": "https://registry.npmjs.org/is-regex/-/is-regex-1.0.5.tgz",
+      "integrity": "sha512-vlKW17SNq44owv5AQR3Cq0bQPEb8+kF3UKZ2fiZNOWtztYE5i0CzCZxFDwO58qAOWtxdBRVO/V5Qin1wjCqFYQ==",
+      "requires": {
+        "has": "^1.0.3"
+      }
+    },
+    "is-regexp": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/is-regexp/-/is-regexp-1.0.0.tgz",
+      "integrity": "sha1-/S2INUXEa6xaYz57mgnof6LLUGk="
+    },
+    "is-resolvable": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/is-resolvable/-/is-resolvable-1.1.0.tgz",
+      "integrity": "sha512-qgDYXFSR5WvEfuS5dMj6oTMEbrrSaM0CrFk2Yiq/gXnBvD9pMa2jGXxyhGLfvhZpuMZe18CJpFxAt3CRs42NMg=="
+    },
+    "is-root": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/is-root/-/is-root-2.1.0.tgz",
+      "integrity": "sha512-AGOriNp96vNBd3HtU+RzFEc75FfR5ymiYv8E553I71SCeXBiMsVDUtdio1OEFvrPyLIQ9tVR5RxXIFe5PUFjMg=="
+    },
+    "is-stream": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/is-stream/-/is-stream-1.1.0.tgz",
+      "integrity": "sha1-EtSj3U5o4Lec6428hBc66A2RykQ="
+    },
+    "is-string": {
+      "version": "1.0.5",
+      "resolved": "https://registry.npmjs.org/is-string/-/is-string-1.0.5.tgz",
+      "integrity": "sha512-buY6VNRjhQMiF1qWDouloZlQbRhDPCebwxSjxMjxgemYT46YMd2NR0/H+fBhEfWX4A/w9TBJ+ol+okqJKFE6vQ=="
+    },
+    "is-svg": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/is-svg/-/is-svg-3.0.0.tgz",
+      "integrity": "sha512-gi4iHK53LR2ujhLVVj+37Ykh9GLqYHX6JOVXbLAucaG/Cqw9xwdFOjDM2qeifLs1sF1npXXFvDu0r5HNgCMrzQ==",
+      "requires": {
+        "html-comment-regex": "^1.1.0"
+      }
+    },
+    "is-symbol": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/is-symbol/-/is-symbol-1.0.3.tgz",
+      "integrity": "sha512-OwijhaRSgqvhm/0ZdAcXNZt9lYdKFpcRDT5ULUuYXPoT794UNOdU+gpT6Rzo7b4V2HUl/op6GqY894AZwv9faQ==",
+      "requires": {
+        "has-symbols": "^1.0.1"
+      }
+    },
+    "is-typedarray": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/is-typedarray/-/is-typedarray-1.0.0.tgz",
+      "integrity": "sha1-5HnICFjfDBsR3dppQPlgEfzaSpo="
+    },
+    "is-url": {
+      "version": "1.2.4",
+      "resolved": "https://registry.npmjs.org/is-url/-/is-url-1.2.4.tgz",
+      "integrity": "sha512-ITvGim8FhRiYe4IQ5uHSkj7pVaPDrCTkNd3yq3cV7iZAcJdHTUMPMEHcqSOy9xZ9qFenQCvi+2wjH9a1nXqHww==",
+      "dev": true
+    },
+    "is-utf8": {
+      "version": "0.2.1",
+      "resolved": "https://registry.npmjs.org/is-utf8/-/is-utf8-0.2.1.tgz",
+      "integrity": "sha1-Sw2hRCEE0bM2NA6AeX6GXPOffXI=",
+      "dev": true
+    },
+    "is-windows": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/is-windows/-/is-windows-1.0.2.tgz",
+      "integrity": "sha512-eXK1UInq2bPmjyX6e3VHIzMLobc4J94i4AWn+Hpq3OU5KkrRC96OAcR3PRJ/pGu6m8TRnBHP9dkXQVsT/COVIA=="
+    },
+    "is-wsl": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/is-wsl/-/is-wsl-1.1.0.tgz",
+      "integrity": "sha1-HxbkqiKwTRM2tmGIpmrzxgDDpm0="
+    },
+    "isarray": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
+      "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE="
+    },
+    "isexe": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
+      "integrity": "sha1-6PvzdNxVb/iUehDcsFctYz8s+hA="
+    },
+    "isobject": {
+      "version": "3.0.1",
+      "resolved": "https://registry.npmjs.org/isobject/-/isobject-3.0.1.tgz",
+      "integrity": "sha1-TkMekrEalzFjaqH5yNHMvP2reN8="
+    },
+    "isomorphic-fetch": {
+      "version": "2.2.1",
+      "resolved": "https://registry.npmjs.org/isomorphic-fetch/-/isomorphic-fetch-2.2.1.tgz",
+      "integrity": "sha1-YRrhrPFPXoH3KVB0coGf6XM1WKk=",
+      "requires": {
+        "node-fetch": "^1.0.1",
+        "whatwg-fetch": ">=0.10.0"
+      }
+    },
+    "isstream": {
+      "version": "0.1.2",
+      "resolved": "https://registry.npmjs.org/isstream/-/isstream-0.1.2.tgz",
+      "integrity": "sha1-R+Y/evVa+m+S4VAOaQ64uFKcCZo="
+    },
+    "istanbul-lib-coverage": {
+      "version": "2.0.5",
+      "resolved": "https://registry.npmjs.org/istanbul-lib-coverage/-/istanbul-lib-coverage-2.0.5.tgz",
+      "integrity": "sha512-8aXznuEPCJvGnMSRft4udDRDtb1V3pkQkMMI5LI+6HuQz5oQ4J2UFn1H82raA3qJtyOLkkwVqICBQkjnGtn5mA=="
+    },
+    "istanbul-lib-instrument": {
+      "version": "3.3.0",
+      "resolved": "https://registry.npmjs.org/istanbul-lib-instrument/-/istanbul-lib-instrument-3.3.0.tgz",
+      "integrity": "sha512-5nnIN4vo5xQZHdXno/YDXJ0G+I3dAm4XgzfSVTPLQpj/zAV2dV6Juy0yaf10/zrJOJeHoN3fraFe+XRq2bFVZA==",
+      "requires": {
+        "@babel/generator": "^7.4.0",
+        "@babel/parser": "^7.4.3",
+        "@babel/template": "^7.4.0",
+        "@babel/traverse": "^7.4.3",
+        "@babel/types": "^7.4.0",
+        "istanbul-lib-coverage": "^2.0.5",
+        "semver": "^6.0.0"
+      }
+    },
+    "istanbul-lib-report": {
+      "version": "2.0.8",
+      "resolved": "https://registry.npmjs.org/istanbul-lib-report/-/istanbul-lib-report-2.0.8.tgz",
+      "integrity": "sha512-fHBeG573EIihhAblwgxrSenp0Dby6tJMFR/HvlerBsrCTD5bkUuoNtn3gVh29ZCS824cGGBPn7Sg7cNk+2xUsQ==",
+      "requires": {
+        "istanbul-lib-coverage": "^2.0.5",
+        "make-dir": "^2.1.0",
+        "supports-color": "^6.1.0"
+      },
+      "dependencies": {
+        "supports-color": {
+          "version": "6.1.0",
+          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-6.1.0.tgz",
+          "integrity": "sha512-qe1jfm1Mg7Nq/NSh6XE24gPXROEVsWHxC1LIx//XNlD9iw7YZQGjZNjYN7xGaEG6iKdA8EtNFW6R0gjnVXp+wQ==",
+          "requires": {
+            "has-flag": "^3.0.0"
+          }
+        }
+      }
+    },
+    "istanbul-lib-source-maps": {
+      "version": "3.0.6",
+      "resolved": "https://registry.npmjs.org/istanbul-lib-source-maps/-/istanbul-lib-source-maps-3.0.6.tgz",
+      "integrity": "sha512-R47KzMtDJH6X4/YW9XTx+jrLnZnscW4VpNN+1PViSYTejLVPWv7oov+Duf8YQSPyVRUvueQqz1TcsC6mooZTXw==",
+      "requires": {
+        "debug": "^4.1.1",
+        "istanbul-lib-coverage": "^2.0.5",
+        "make-dir": "^2.1.0",
+        "rimraf": "^2.6.3",
+        "source-map": "^0.6.1"
+      },
+      "dependencies": {
+        "source-map": {
+          "version": "0.6.1",
+          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
+          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="
+        }
+      }
+    },
+    "istanbul-reports": {
+      "version": "2.2.7",
+      "resolved": "https://registry.npmjs.org/istanbul-reports/-/istanbul-reports-2.2.7.tgz",
+      "integrity": "sha512-uu1F/L1o5Y6LzPVSVZXNOoD/KXpJue9aeLRd0sM9uMXfZvzomB0WxVamWb5ue8kA2vVWEmW7EG+A5n3f1kqHKg==",
+      "requires": {
+        "html-escaper": "^2.0.0"
+      }
+    },
+    "jest": {
+      "version": "24.9.0",
+      "resolved": "https://registry.npmjs.org/jest/-/jest-24.9.0.tgz",
+      "integrity": "sha512-YvkBL1Zm7d2B1+h5fHEOdyjCG+sGMz4f8D86/0HiqJ6MB4MnDc8FgP5vdWsGnemOQro7lnYo8UakZ3+5A0jxGw==",
+      "requires": {
+        "import-local": "^2.0.0",
+        "jest-cli": "^24.9.0"
+      },
+      "dependencies": {
+        "jest-cli": {
+          "version": "24.9.0",
+          "resolved": "https://registry.npmjs.org/jest-cli/-/jest-cli-24.9.0.tgz",
+          "integrity": "sha512-+VLRKyitT3BWoMeSUIHRxV/2g8y9gw91Jh5z2UmXZzkZKpbC08CSehVxgHUwTpy+HwGcns/tqafQDJW7imYvGg==",
+          "requires": {
+            "@jest/core": "^24.9.0",
+            "@jest/test-result": "^24.9.0",
+            "@jest/types": "^24.9.0",
+            "chalk": "^2.0.1",
+            "exit": "^0.1.2",
+            "import-local": "^2.0.0",
+            "is-ci": "^2.0.0",
+            "jest-config": "^24.9.0",
+            "jest-util": "^24.9.0",
+            "jest-validate": "^24.9.0",
+            "prompts": "^2.0.1",
+            "realpath-native": "^1.1.0",
+            "yargs": "^13.3.0"
+          }
+        }
+      }
+    },
+    "jest-changed-files": {
+      "version": "24.9.0",
+      "resolved": "https://registry.npmjs.org/jest-changed-files/-/jest-changed-files-24.9.0.tgz",
+      "integrity": "sha512-6aTWpe2mHF0DhL28WjdkO8LyGjs3zItPET4bMSeXU6T3ub4FPMw+mcOcbdGXQOAfmLcxofD23/5Bl9Z4AkFwqg==",
+      "requires": {
+        "@jest/types": "^24.9.0",
+        "execa": "^1.0.0",
+        "throat": "^4.0.0"
+      }
+    },
+    "jest-config": {
+      "version": "24.9.0",
+      "resolved": "https://registry.npmjs.org/jest-config/-/jest-config-24.9.0.tgz",
+      "integrity": "sha512-RATtQJtVYQrp7fvWg6f5y3pEFj9I+H8sWw4aKxnDZ96mob5i5SD6ZEGWgMLXQ4LE8UurrjbdlLWdUeo+28QpfQ==",
+      "requires": {
+        "@babel/core": "^7.1.0",
+        "@jest/test-sequencer": "^24.9.0",
+        "@jest/types": "^24.9.0",
+        "babel-jest": "^24.9.0",
+        "chalk": "^2.0.1",
+        "glob": "^7.1.1",
+        "jest-environment-jsdom": "^24.9.0",
+        "jest-environment-node": "^24.9.0",
+        "jest-get-type": "^24.9.0",
+        "jest-jasmine2": "^24.9.0",
+        "jest-regex-util": "^24.3.0",
+        "jest-resolve": "^24.9.0",
+        "jest-util": "^24.9.0",
+        "jest-validate": "^24.9.0",
+        "micromatch": "^3.1.10",
+        "pretty-format": "^24.9.0",
+        "realpath-native": "^1.1.0"
+      }
+    },
+    "jest-diff": {
+      "version": "24.9.0",
+      "resolved": "https://registry.npmjs.org/jest-diff/-/jest-diff-24.9.0.tgz",
+      "integrity": "sha512-qMfrTs8AdJE2iqrTp0hzh7kTd2PQWrsFyj9tORoKmu32xjPjeE4NyjVRDz8ybYwqS2ik8N4hsIpiVTyFeo2lBQ==",
+      "requires": {
+        "chalk": "^2.0.1",
+        "diff-sequences": "^24.9.0",
+        "jest-get-type": "^24.9.0",
+        "pretty-format": "^24.9.0"
+      }
+    },
+    "jest-docblock": {
+      "version": "24.9.0",
+      "resolved": "https://registry.npmjs.org/jest-docblock/-/jest-docblock-24.9.0.tgz",
+      "integrity": "sha512-F1DjdpDMJMA1cN6He0FNYNZlo3yYmOtRUnktrT9Q37njYzC5WEaDdmbynIgy0L/IvXvvgsG8OsqhLPXTpfmZAA==",
+      "requires": {
+        "detect-newline": "^2.1.0"
+      }
+    },
+    "jest-each": {
+      "version": "24.9.0",
+      "resolved": "https://registry.npmjs.org/jest-each/-/jest-each-24.9.0.tgz",
+      "integrity": "sha512-ONi0R4BvW45cw8s2Lrx8YgbeXL1oCQ/wIDwmsM3CqM/nlblNCPmnC3IPQlMbRFZu3wKdQ2U8BqM6lh3LJ5Bsog==",
+      "requires": {
+        "@jest/types": "^24.9.0",
+        "chalk": "^2.0.1",
+        "jest-get-type": "^24.9.0",
+        "jest-util": "^24.9.0",
+        "pretty-format": "^24.9.0"
+      }
+    },
+    "jest-environment-jsdom": {
+      "version": "24.9.0",
+      "resolved": "https://registry.npmjs.org/jest-environment-jsdom/-/jest-environment-jsdom-24.9.0.tgz",
+      "integrity": "sha512-Zv9FV9NBRzLuALXjvRijO2351DRQeLYXtpD4xNvfoVFw21IOKNhZAEUKcbiEtjTkm2GsJ3boMVgkaR7rN8qetA==",
+      "requires": {
+        "@jest/environment": "^24.9.0",
+        "@jest/fake-timers": "^24.9.0",
+        "@jest/types": "^24.9.0",
+        "jest-mock": "^24.9.0",
+        "jest-util": "^24.9.0",
+        "jsdom": "^11.5.1"
+      }
+    },
+    "jest-environment-jsdom-fourteen": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/jest-environment-jsdom-fourteen/-/jest-environment-jsdom-fourteen-1.0.1.tgz",
+      "integrity": "sha512-DojMX1sY+at5Ep+O9yME34CdidZnO3/zfPh8UW+918C5fIZET5vCjfkegixmsi7AtdYfkr4bPlIzmWnlvQkP7Q==",
+      "requires": {
+        "@jest/environment": "^24.3.0",
+        "@jest/fake-timers": "^24.3.0",
+        "@jest/types": "^24.3.0",
+        "jest-mock": "^24.0.0",
+        "jest-util": "^24.0.0",
+        "jsdom": "^14.1.0"
+      },
+      "dependencies": {
+        "acorn": {
+          "version": "6.4.1",
+          "resolved": "https://registry.npmjs.org/acorn/-/acorn-6.4.1.tgz",
+          "integrity": "sha512-ZVA9k326Nwrj3Cj9jlh3wGFutC2ZornPNARZwsNYqQYgN0EsV2d53w5RN/co65Ohn4sUAUtb1rSUAOD6XN9idA=="
+        },
+        "jsdom": {
+          "version": "14.1.0",
+          "resolved": "https://registry.npmjs.org/jsdom/-/jsdom-14.1.0.tgz",
+          "integrity": "sha512-O901mfJSuTdwU2w3Sn+74T+RnDVP+FuV5fH8tcPWyqrseRAb0s5xOtPgCFiPOtLcyK7CLIJwPyD83ZqQWvA5ng==",
+          "requires": {
+            "abab": "^2.0.0",
+            "acorn": "^6.0.4",
+            "acorn-globals": "^4.3.0",
+            "array-equal": "^1.0.0",
+            "cssom": "^0.3.4",
+            "cssstyle": "^1.1.1",
+            "data-urls": "^1.1.0",
+            "domexception": "^1.0.1",
+            "escodegen": "^1.11.0",
+            "html-encoding-sniffer": "^1.0.2",
+            "nwsapi": "^2.1.3",
+            "parse5": "5.1.0",
+            "pn": "^1.1.0",
+            "request": "^2.88.0",
+            "request-promise-native": "^1.0.5",
+            "saxes": "^3.1.9",
+            "symbol-tree": "^3.2.2",
+            "tough-cookie": "^2.5.0",
+            "w3c-hr-time": "^1.0.1",
+            "w3c-xmlserializer": "^1.1.2",
+            "webidl-conversions": "^4.0.2",
+            "whatwg-encoding": "^1.0.5",
+            "whatwg-mimetype": "^2.3.0",
+            "whatwg-url": "^7.0.0",
+            "ws": "^6.1.2",
+            "xml-name-validator": "^3.0.0"
+          }
+        },
+        "parse5": {
+          "version": "5.1.0",
+          "resolved": "https://registry.npmjs.org/parse5/-/parse5-5.1.0.tgz",
+          "integrity": "sha512-fxNG2sQjHvlVAYmzBZS9YlDp6PTSSDwa98vkD4QgVDDCAo84z5X1t5XyJQ62ImdLXx5NdIIfihey6xpum9/gRQ=="
+        },
+        "whatwg-url": {
+          "version": "7.1.0",
+          "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-7.1.0.tgz",
+          "integrity": "sha512-WUu7Rg1DroM7oQvGWfOiAK21n74Gg+T4elXEQYkOhtyLeWiJFoOGLXPKI/9gzIie9CtwVLm8wtw6YJdKyxSjeg==",
+          "requires": {
+            "lodash.sortby": "^4.7.0",
+            "tr46": "^1.0.1",
+            "webidl-conversions": "^4.0.2"
+          }
+        },
+        "ws": {
+          "version": "6.2.1",
+          "resolved": "https://registry.npmjs.org/ws/-/ws-6.2.1.tgz",
+          "integrity": "sha512-GIyAXC2cB7LjvpgMt9EKS2ldqr0MTrORaleiOno6TweZ6r3TKtoFQWay/2PceJ3RuBasOHzXNn5Lrw1X0bEjqA==",
+          "requires": {
+            "async-limiter": "~1.0.0"
+          }
+        }
+      }
+    },
+    "jest-environment-node": {
+      "version": "24.9.0",
+      "resolved": "https://registry.npmjs.org/jest-environment-node/-/jest-environment-node-24.9.0.tgz",
+      "integrity": "sha512-6d4V2f4nxzIzwendo27Tr0aFm+IXWa0XEUnaH6nU0FMaozxovt+sfRvh4J47wL1OvF83I3SSTu0XK+i4Bqe7uA==",
+      "requires": {
+        "@jest/environment": "^24.9.0",
+        "@jest/fake-timers": "^24.9.0",
+        "@jest/types": "^24.9.0",
+        "jest-mock": "^24.9.0",
+        "jest-util": "^24.9.0"
+      }
+    },
+    "jest-get-type": {
+      "version": "24.9.0",
+      "resolved": "https://registry.npmjs.org/jest-get-type/-/jest-get-type-24.9.0.tgz",
+      "integrity": "sha512-lUseMzAley4LhIcpSP9Jf+fTrQ4a1yHQwLNeeVa2cEmbCGeoZAtYPOIv8JaxLD/sUpKxetKGP+gsHl8f8TSj8Q=="
+    },
+    "jest-haste-map": {
+      "version": "24.9.0",
+      "resolved": "https://registry.npmjs.org/jest-haste-map/-/jest-haste-map-24.9.0.tgz",
+      "integrity": "sha512-kfVFmsuWui2Sj1Rp1AJ4D9HqJwE4uwTlS/vO+eRUaMmd54BFpli2XhMQnPC2k4cHFVbB2Q2C+jtI1AGLgEnCjQ==",
+      "requires": {
+        "@jest/types": "^24.9.0",
+        "anymatch": "^2.0.0",
+        "fb-watchman": "^2.0.0",
+        "fsevents": "^1.2.7",
+        "graceful-fs": "^4.1.15",
+        "invariant": "^2.2.4",
+        "jest-serializer": "^24.9.0",
+        "jest-util": "^24.9.0",
+        "jest-worker": "^24.9.0",
+        "micromatch": "^3.1.10",
+        "sane": "^4.0.3",
+        "walker": "^1.0.7"
+      },
+      "dependencies": {
+        "fsevents": {
+          "version": "1.2.12",
+          "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-1.2.12.tgz",
+          "integrity": "sha512-Ggd/Ktt7E7I8pxZRbGIs7vwqAPscSESMrCSkx2FtWeqmheJgCo2R74fTsZFCifr0VTPwqRpPv17+6b8Zp7th0Q==",
+          "optional": true,
+          "requires": {
+            "bindings": "^1.5.0",
+            "nan": "^2.12.1",
+            "node-pre-gyp": "*"
+          },
+          "dependencies": {
+            "abbrev": {
+              "version": "1.1.1",
+              "bundled": true,
+              "optional": true
+            },
+            "ansi-regex": {
+              "version": "2.1.1",
+              "bundled": true,
+              "optional": true
+            },
+            "aproba": {
+              "version": "1.2.0",
+              "bundled": true,
+              "optional": true
+            },
+            "are-we-there-yet": {
+              "version": "1.1.5",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "delegates": "^1.0.0",
+                "readable-stream": "^2.0.6"
+              }
+            },
+            "balanced-match": {
+              "version": "1.0.0",
+              "bundled": true,
+              "optional": true
+            },
+            "brace-expansion": {
+              "version": "1.1.11",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "balanced-match": "^1.0.0",
+                "concat-map": "0.0.1"
+              }
+            },
+            "chownr": {
+              "version": "1.1.4",
+              "bundled": true,
+              "optional": true
+            },
+            "code-point-at": {
+              "version": "1.1.0",
+              "bundled": true,
+              "optional": true
+            },
+            "concat-map": {
+              "version": "0.0.1",
+              "bundled": true,
+              "optional": true
+            },
+            "console-control-strings": {
+              "version": "1.1.0",
+              "bundled": true,
+              "optional": true
+            },
+            "core-util-is": {
+              "version": "1.0.2",
+              "bundled": true,
+              "optional": true
+            },
+            "debug": {
+              "version": "3.2.6",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "ms": "^2.1.1"
+              }
+            },
+            "deep-extend": {
+              "version": "0.6.0",
+              "bundled": true,
+              "optional": true
+            },
+            "delegates": {
+              "version": "1.0.0",
+              "bundled": true,
+              "optional": true
+            },
+            "detect-libc": {
+              "version": "1.0.3",
+              "bundled": true,
+              "optional": true
+            },
+            "fs-minipass": {
+              "version": "1.2.7",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "minipass": "^2.6.0"
+              }
+            },
+            "fs.realpath": {
+              "version": "1.0.0",
+              "bundled": true,
+              "optional": true
+            },
+            "gauge": {
+              "version": "2.7.4",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "aproba": "^1.0.3",
+                "console-control-strings": "^1.0.0",
+                "has-unicode": "^2.0.0",
+                "object-assign": "^4.1.0",
+                "signal-exit": "^3.0.0",
+                "string-width": "^1.0.1",
+                "strip-ansi": "^3.0.1",
+                "wide-align": "^1.1.0"
+              }
+            },
+            "glob": {
+              "version": "7.1.6",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "fs.realpath": "^1.0.0",
+                "inflight": "^1.0.4",
+                "inherits": "2",
+                "minimatch": "^3.0.4",
+                "once": "^1.3.0",
+                "path-is-absolute": "^1.0.0"
+              }
+            },
+            "has-unicode": {
+              "version": "2.0.1",
+              "bundled": true,
+              "optional": true
+            },
+            "iconv-lite": {
+              "version": "0.4.24",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "safer-buffer": ">= 2.1.2 < 3"
+              }
+            },
+            "ignore-walk": {
+              "version": "3.0.3",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "minimatch": "^3.0.4"
+              }
+            },
+            "inflight": {
+              "version": "1.0.6",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "once": "^1.3.0",
+                "wrappy": "1"
+              }
+            },
+            "inherits": {
+              "version": "2.0.4",
+              "bundled": true,
+              "optional": true
+            },
+            "ini": {
+              "version": "1.3.5",
+              "bundled": true,
+              "optional": true
+            },
+            "is-fullwidth-code-point": {
+              "version": "1.0.0",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "number-is-nan": "^1.0.0"
+              }
+            },
+            "isarray": {
+              "version": "1.0.0",
+              "bundled": true,
+              "optional": true
+            },
+            "minimatch": {
+              "version": "3.0.4",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "brace-expansion": "^1.1.7"
+              }
+            },
+            "minimist": {
+              "version": "1.2.5",
+              "bundled": true,
+              "optional": true
+            },
+            "minipass": {
+              "version": "2.9.0",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "safe-buffer": "^5.1.2",
+                "yallist": "^3.0.0"
+              }
+            },
+            "minizlib": {
+              "version": "1.3.3",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "minipass": "^2.9.0"
+              }
+            },
+            "mkdirp": {
+              "version": "0.5.3",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "minimist": "^1.2.5"
+              }
+            },
+            "ms": {
+              "version": "2.1.2",
+              "bundled": true,
+              "optional": true
+            },
+            "needle": {
+              "version": "2.3.3",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "debug": "^3.2.6",
+                "iconv-lite": "^0.4.4",
+                "sax": "^1.2.4"
+              }
+            },
+            "node-pre-gyp": {
+              "version": "0.14.0",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "detect-libc": "^1.0.2",
+                "mkdirp": "^0.5.1",
+                "needle": "^2.2.1",
+                "nopt": "^4.0.1",
+                "npm-packlist": "^1.1.6",
+                "npmlog": "^4.0.2",
+                "rc": "^1.2.7",
+                "rimraf": "^2.6.1",
+                "semver": "^5.3.0",
+                "tar": "^4.4.2"
+              }
+            },
+            "nopt": {
+              "version": "4.0.3",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "abbrev": "1",
+                "osenv": "^0.1.4"
+              }
+            },
+            "npm-bundled": {
+              "version": "1.1.1",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "npm-normalize-package-bin": "^1.0.1"
+              }
+            },
+            "npm-normalize-package-bin": {
+              "version": "1.0.1",
+              "bundled": true,
+              "optional": true
+            },
+            "npm-packlist": {
+              "version": "1.4.8",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "ignore-walk": "^3.0.1",
+                "npm-bundled": "^1.0.1",
+                "npm-normalize-package-bin": "^1.0.1"
+              }
+            },
+            "npmlog": {
+              "version": "4.1.2",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "are-we-there-yet": "~1.1.2",
+                "console-control-strings": "~1.1.0",
+                "gauge": "~2.7.3",
+                "set-blocking": "~2.0.0"
+              }
+            },
+            "number-is-nan": {
+              "version": "1.0.1",
+              "bundled": true,
+              "optional": true
+            },
+            "object-assign": {
+              "version": "4.1.1",
+              "bundled": true,
+              "optional": true
+            },
+            "once": {
+              "version": "1.4.0",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "wrappy": "1"
+              }
+            },
+            "os-homedir": {
+              "version": "1.0.2",
+              "bundled": true,
+              "optional": true
+            },
+            "os-tmpdir": {
+              "version": "1.0.2",
+              "bundled": true,
+              "optional": true
+            },
+            "osenv": {
+              "version": "0.1.5",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "os-homedir": "^1.0.0",
+                "os-tmpdir": "^1.0.0"
+              }
+            },
+            "path-is-absolute": {
+              "version": "1.0.1",
+              "bundled": true,
+              "optional": true
+            },
+            "process-nextick-args": {
+              "version": "2.0.1",
+              "bundled": true,
+              "optional": true
+            },
+            "rc": {
+              "version": "1.2.8",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "deep-extend": "^0.6.0",
+                "ini": "~1.3.0",
+                "minimist": "^1.2.0",
+                "strip-json-comments": "~2.0.1"
+              }
+            },
+            "readable-stream": {
+              "version": "2.3.7",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "core-util-is": "~1.0.0",
+                "inherits": "~2.0.3",
+                "isarray": "~1.0.0",
+                "process-nextick-args": "~2.0.0",
+                "safe-buffer": "~5.1.1",
+                "string_decoder": "~1.1.1",
+                "util-deprecate": "~1.0.1"
+              }
+            },
+            "rimraf": {
+              "version": "2.7.1",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "glob": "^7.1.3"
+              }
+            },
+            "safe-buffer": {
+              "version": "5.1.2",
+              "bundled": true,
+              "optional": true
+            },
+            "safer-buffer": {
+              "version": "2.1.2",
+              "bundled": true,
+              "optional": true
+            },
+            "sax": {
+              "version": "1.2.4",
+              "bundled": true,
+              "optional": true
+            },
+            "semver": {
+              "version": "5.7.1",
+              "bundled": true,
+              "optional": true
+            },
+            "set-blocking": {
+              "version": "2.0.0",
+              "bundled": true,
+              "optional": true
+            },
+            "signal-exit": {
+              "version": "3.0.2",
+              "bundled": true,
+              "optional": true
+            },
+            "string-width": {
+              "version": "1.0.2",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "code-point-at": "^1.0.0",
+                "is-fullwidth-code-point": "^1.0.0",
+                "strip-ansi": "^3.0.0"
+              }
+            },
+            "string_decoder": {
+              "version": "1.1.1",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "safe-buffer": "~5.1.0"
+              }
+            },
+            "strip-ansi": {
+              "version": "3.0.1",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "ansi-regex": "^2.0.0"
+              }
+            },
+            "strip-json-comments": {
+              "version": "2.0.1",
+              "bundled": true,
+              "optional": true
+            },
+            "tar": {
+              "version": "4.4.13",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "chownr": "^1.1.1",
+                "fs-minipass": "^1.2.5",
+                "minipass": "^2.8.6",
+                "minizlib": "^1.2.1",
+                "mkdirp": "^0.5.0",
+                "safe-buffer": "^5.1.2",
+                "yallist": "^3.0.3"
+              }
+            },
+            "util-deprecate": {
+              "version": "1.0.2",
+              "bundled": true,
+              "optional": true
+            },
+            "wide-align": {
+              "version": "1.1.3",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "string-width": "^1.0.2 || 2"
+              }
+            },
+            "wrappy": {
+              "version": "1.0.2",
+              "bundled": true,
+              "optional": true
+            },
+            "yallist": {
+              "version": "3.1.1",
+              "bundled": true,
+              "optional": true
+            }
+          }
+        }
+      }
+    },
+    "jest-jasmine2": {
+      "version": "24.9.0",
+      "resolved": "https://registry.npmjs.org/jest-jasmine2/-/jest-jasmine2-24.9.0.tgz",
+      "integrity": "sha512-Cq7vkAgaYKp+PsX+2/JbTarrk0DmNhsEtqBXNwUHkdlbrTBLtMJINADf2mf5FkowNsq8evbPc07/qFO0AdKTzw==",
+      "requires": {
+        "@babel/traverse": "^7.1.0",
+        "@jest/environment": "^24.9.0",
+        "@jest/test-result": "^24.9.0",
+        "@jest/types": "^24.9.0",
+        "chalk": "^2.0.1",
+        "co": "^4.6.0",
+        "expect": "^24.9.0",
+        "is-generator-fn": "^2.0.0",
+        "jest-each": "^24.9.0",
+        "jest-matcher-utils": "^24.9.0",
+        "jest-message-util": "^24.9.0",
+        "jest-runtime": "^24.9.0",
+        "jest-snapshot": "^24.9.0",
+        "jest-util": "^24.9.0",
+        "pretty-format": "^24.9.0",
+        "throat": "^4.0.0"
+      }
+    },
+    "jest-leak-detector": {
+      "version": "24.9.0",
+      "resolved": "https://registry.npmjs.org/jest-leak-detector/-/jest-leak-detector-24.9.0.tgz",
+      "integrity": "sha512-tYkFIDsiKTGwb2FG1w8hX9V0aUb2ot8zY/2nFg087dUageonw1zrLMP4W6zsRO59dPkTSKie+D4rhMuP9nRmrA==",
+      "requires": {
+        "jest-get-type": "^24.9.0",
+        "pretty-format": "^24.9.0"
+      }
+    },
+    "jest-matcher-utils": {
+      "version": "24.9.0",
+      "resolved": "https://registry.npmjs.org/jest-matcher-utils/-/jest-matcher-utils-24.9.0.tgz",
+      "integrity": "sha512-OZz2IXsu6eaiMAwe67c1T+5tUAtQyQx27/EMEkbFAGiw52tB9em+uGbzpcgYVpA8wl0hlxKPZxrly4CXU/GjHA==",
+      "requires": {
+        "chalk": "^2.0.1",
+        "jest-diff": "^24.9.0",
+        "jest-get-type": "^24.9.0",
+        "pretty-format": "^24.9.0"
+      }
+    },
+    "jest-message-util": {
+      "version": "24.9.0",
+      "resolved": "https://registry.npmjs.org/jest-message-util/-/jest-message-util-24.9.0.tgz",
+      "integrity": "sha512-oCj8FiZ3U0hTP4aSui87P4L4jC37BtQwUMqk+zk/b11FR19BJDeZsZAvIHutWnmtw7r85UmR3CEWZ0HWU2mAlw==",
+      "requires": {
+        "@babel/code-frame": "^7.0.0",
+        "@jest/test-result": "^24.9.0",
+        "@jest/types": "^24.9.0",
+        "@types/stack-utils": "^1.0.1",
+        "chalk": "^2.0.1",
+        "micromatch": "^3.1.10",
+        "slash": "^2.0.0",
+        "stack-utils": "^1.0.1"
+      }
+    },
+    "jest-mock": {
+      "version": "24.9.0",
+      "resolved": "https://registry.npmjs.org/jest-mock/-/jest-mock-24.9.0.tgz",
+      "integrity": "sha512-3BEYN5WbSq9wd+SyLDES7AHnjH9A/ROBwmz7l2y+ol+NtSFO8DYiEBzoO1CeFc9a8DYy10EO4dDFVv/wN3zl1w==",
+      "requires": {
+        "@jest/types": "^24.9.0"
+      }
+    },
+    "jest-pnp-resolver": {
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/jest-pnp-resolver/-/jest-pnp-resolver-1.2.1.tgz",
+      "integrity": "sha512-pgFw2tm54fzgYvc/OHrnysABEObZCUNFnhjoRjaVOCN8NYc032/gVjPaHD4Aq6ApkSieWtfKAFQtmDKAmhupnQ=="
+    },
+    "jest-regex-util": {
+      "version": "24.9.0",
+      "resolved": "https://registry.npmjs.org/jest-regex-util/-/jest-regex-util-24.9.0.tgz",
+      "integrity": "sha512-05Cmb6CuxaA+Ys6fjr3PhvV3bGQmO+2p2La4hFbU+W5uOc479f7FdLXUWXw4pYMAhhSZIuKHwSXSu6CsSBAXQA=="
+    },
+    "jest-resolve": {
+      "version": "24.9.0",
+      "resolved": "https://registry.npmjs.org/jest-resolve/-/jest-resolve-24.9.0.tgz",
+      "integrity": "sha512-TaLeLVL1l08YFZAt3zaPtjiVvyy4oSA6CRe+0AFPPVX3Q/VI0giIWWoAvoS5L96vj9Dqxj4fB5p2qrHCmTU/MQ==",
+      "requires": {
+        "@jest/types": "^24.9.0",
+        "browser-resolve": "^1.11.3",
+        "chalk": "^2.0.1",
+        "jest-pnp-resolver": "^1.2.1",
+        "realpath-native": "^1.1.0"
+      }
+    },
+    "jest-resolve-dependencies": {
+      "version": "24.9.0",
+      "resolved": "https://registry.npmjs.org/jest-resolve-dependencies/-/jest-resolve-dependencies-24.9.0.tgz",
+      "integrity": "sha512-Fm7b6AlWnYhT0BXy4hXpactHIqER7erNgIsIozDXWl5dVm+k8XdGVe1oTg1JyaFnOxarMEbax3wyRJqGP2Pq+g==",
+      "requires": {
+        "@jest/types": "^24.9.0",
+        "jest-regex-util": "^24.3.0",
+        "jest-snapshot": "^24.9.0"
+      }
+    },
+    "jest-runner": {
+      "version": "24.9.0",
+      "resolved": "https://registry.npmjs.org/jest-runner/-/jest-runner-24.9.0.tgz",
+      "integrity": "sha512-KksJQyI3/0mhcfspnxxEOBueGrd5E4vV7ADQLT9ESaCzz02WnbdbKWIf5Mkaucoaj7obQckYPVX6JJhgUcoWWg==",
+      "requires": {
+        "@jest/console": "^24.7.1",
+        "@jest/environment": "^24.9.0",
+        "@jest/test-result": "^24.9.0",
+        "@jest/types": "^24.9.0",
+        "chalk": "^2.4.2",
+        "exit": "^0.1.2",
+        "graceful-fs": "^4.1.15",
+        "jest-config": "^24.9.0",
+        "jest-docblock": "^24.3.0",
+        "jest-haste-map": "^24.9.0",
+        "jest-jasmine2": "^24.9.0",
+        "jest-leak-detector": "^24.9.0",
+        "jest-message-util": "^24.9.0",
+        "jest-resolve": "^24.9.0",
+        "jest-runtime": "^24.9.0",
+        "jest-util": "^24.9.0",
+        "jest-worker": "^24.6.0",
+        "source-map-support": "^0.5.6",
+        "throat": "^4.0.0"
+      }
+    },
+    "jest-runtime": {
+      "version": "24.9.0",
+      "resolved": "https://registry.npmjs.org/jest-runtime/-/jest-runtime-24.9.0.tgz",
+      "integrity": "sha512-8oNqgnmF3v2J6PVRM2Jfuj8oX3syKmaynlDMMKQ4iyzbQzIG6th5ub/lM2bCMTmoTKM3ykcUYI2Pw9xwNtjMnw==",
+      "requires": {
+        "@jest/console": "^24.7.1",
+        "@jest/environment": "^24.9.0",
+        "@jest/source-map": "^24.3.0",
+        "@jest/transform": "^24.9.0",
+        "@jest/types": "^24.9.0",
+        "@types/yargs": "^13.0.0",
+        "chalk": "^2.0.1",
+        "exit": "^0.1.2",
+        "glob": "^7.1.3",
+        "graceful-fs": "^4.1.15",
+        "jest-config": "^24.9.0",
+        "jest-haste-map": "^24.9.0",
+        "jest-message-util": "^24.9.0",
+        "jest-mock": "^24.9.0",
+        "jest-regex-util": "^24.3.0",
+        "jest-resolve": "^24.9.0",
+        "jest-snapshot": "^24.9.0",
+        "jest-util": "^24.9.0",
+        "jest-validate": "^24.9.0",
+        "realpath-native": "^1.1.0",
+        "slash": "^2.0.0",
+        "strip-bom": "^3.0.0",
+        "yargs": "^13.3.0"
+      }
+    },
+    "jest-serializer": {
+      "version": "24.9.0",
+      "resolved": "https://registry.npmjs.org/jest-serializer/-/jest-serializer-24.9.0.tgz",
+      "integrity": "sha512-DxYipDr8OvfrKH3Kel6NdED3OXxjvxXZ1uIY2I9OFbGg+vUkkg7AGvi65qbhbWNPvDckXmzMPbK3u3HaDO49bQ=="
+    },
+    "jest-snapshot": {
+      "version": "24.9.0",
+      "resolved": "https://registry.npmjs.org/jest-snapshot/-/jest-snapshot-24.9.0.tgz",
+      "integrity": "sha512-uI/rszGSs73xCM0l+up7O7a40o90cnrk429LOiK3aeTvfC0HHmldbd81/B7Ix81KSFe1lwkbl7GnBGG4UfuDew==",
+      "requires": {
+        "@babel/types": "^7.0.0",
+        "@jest/types": "^24.9.0",
+        "chalk": "^2.0.1",
+        "expect": "^24.9.0",
+        "jest-diff": "^24.9.0",
+        "jest-get-type": "^24.9.0",
+        "jest-matcher-utils": "^24.9.0",
+        "jest-message-util": "^24.9.0",
+        "jest-resolve": "^24.9.0",
+        "mkdirp": "^0.5.1",
+        "natural-compare": "^1.4.0",
+        "pretty-format": "^24.9.0",
+        "semver": "^6.2.0"
+      }
+    },
+    "jest-util": {
+      "version": "24.9.0",
+      "resolved": "https://registry.npmjs.org/jest-util/-/jest-util-24.9.0.tgz",
+      "integrity": "sha512-x+cZU8VRmOJxbA1K5oDBdxQmdq0OIdADarLxk0Mq+3XS4jgvhG/oKGWcIDCtPG0HgjxOYvF+ilPJQsAyXfbNOg==",
+      "requires": {
+        "@jest/console": "^24.9.0",
+        "@jest/fake-timers": "^24.9.0",
+        "@jest/source-map": "^24.9.0",
+        "@jest/test-result": "^24.9.0",
+        "@jest/types": "^24.9.0",
+        "callsites": "^3.0.0",
+        "chalk": "^2.0.1",
+        "graceful-fs": "^4.1.15",
+        "is-ci": "^2.0.0",
+        "mkdirp": "^0.5.1",
+        "slash": "^2.0.0",
+        "source-map": "^0.6.0"
+      },
+      "dependencies": {
+        "callsites": {
+          "version": "3.1.0",
+          "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",
+          "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ=="
+        },
+        "source-map": {
+          "version": "0.6.1",
+          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
+          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="
+        }
+      }
+    },
+    "jest-validate": {
+      "version": "24.9.0",
+      "resolved": "https://registry.npmjs.org/jest-validate/-/jest-validate-24.9.0.tgz",
+      "integrity": "sha512-HPIt6C5ACwiqSiwi+OfSSHbK8sG7akG8eATl+IPKaeIjtPOeBUd/g3J7DghugzxrGjI93qS/+RPKe1H6PqvhRQ==",
+      "requires": {
+        "@jest/types": "^24.9.0",
+        "camelcase": "^5.3.1",
+        "chalk": "^2.0.1",
+        "jest-get-type": "^24.9.0",
+        "leven": "^3.1.0",
+        "pretty-format": "^24.9.0"
+      }
+    },
+    "jest-watch-typeahead": {
+      "version": "0.4.2",
+      "resolved": "https://registry.npmjs.org/jest-watch-typeahead/-/jest-watch-typeahead-0.4.2.tgz",
+      "integrity": "sha512-f7VpLebTdaXs81rg/oj4Vg/ObZy2QtGzAmGLNsqUS5G5KtSN68tFcIsbvNODfNyQxU78g7D8x77o3bgfBTR+2Q==",
+      "requires": {
+        "ansi-escapes": "^4.2.1",
+        "chalk": "^2.4.1",
+        "jest-regex-util": "^24.9.0",
+        "jest-watcher": "^24.3.0",
+        "slash": "^3.0.0",
+        "string-length": "^3.1.0",
+        "strip-ansi": "^5.0.0"
+      },
+      "dependencies": {
+        "slash": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/slash/-/slash-3.0.0.tgz",
+          "integrity": "sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q=="
+        },
+        "string-length": {
+          "version": "3.1.0",
+          "resolved": "https://registry.npmjs.org/string-length/-/string-length-3.1.0.tgz",
+          "integrity": "sha512-Ttp5YvkGm5v9Ijagtaz1BnN+k9ObpvS0eIBblPMp2YWL8FBmi9qblQ9fexc2k/CXFgrTIteU3jAw3payCnwSTA==",
+          "requires": {
+            "astral-regex": "^1.0.0",
+            "strip-ansi": "^5.2.0"
+          }
+        }
+      }
+    },
+    "jest-watcher": {
+      "version": "24.9.0",
+      "resolved": "https://registry.npmjs.org/jest-watcher/-/jest-watcher-24.9.0.tgz",
+      "integrity": "sha512-+/fLOfKPXXYJDYlks62/4R4GoT+GU1tYZed99JSCOsmzkkF7727RqKrjNAxtfO4YpGv11wybgRvCjR73lK2GZw==",
+      "requires": {
+        "@jest/test-result": "^24.9.0",
+        "@jest/types": "^24.9.0",
+        "@types/yargs": "^13.0.0",
+        "ansi-escapes": "^3.0.0",
+        "chalk": "^2.0.1",
+        "jest-util": "^24.9.0",
+        "string-length": "^2.0.0"
+      },
+      "dependencies": {
+        "ansi-escapes": {
+          "version": "3.2.0",
+          "resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-3.2.0.tgz",
+          "integrity": "sha512-cBhpre4ma+U0T1oM5fXg7Dy1Jw7zzwv7lt/GoCpr+hDQJoYnKVPLL4dCvSEFMmQurOQvSrwT7SL/DAlhBI97RQ=="
+        }
+      }
+    },
+    "jest-worker": {
+      "version": "24.9.0",
+      "resolved": "https://registry.npmjs.org/jest-worker/-/jest-worker-24.9.0.tgz",
+      "integrity": "sha512-51PE4haMSXcHohnSMdM42anbvZANYTqMrr52tVKPqqsPJMzoP6FYYDVqahX/HrAoKEKz3uUPzSvKs9A3qR4iVw==",
+      "requires": {
+        "merge-stream": "^2.0.0",
+        "supports-color": "^6.1.0"
+      },
+      "dependencies": {
+        "supports-color": {
+          "version": "6.1.0",
+          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-6.1.0.tgz",
+          "integrity": "sha512-qe1jfm1Mg7Nq/NSh6XE24gPXROEVsWHxC1LIx//XNlD9iw7YZQGjZNjYN7xGaEG6iKdA8EtNFW6R0gjnVXp+wQ==",
+          "requires": {
+            "has-flag": "^3.0.0"
+          }
+        }
+      }
+    },
+    "js-base64": {
+      "version": "2.5.2",
+      "resolved": "https://registry.npmjs.org/js-base64/-/js-base64-2.5.2.tgz",
+      "integrity": "sha512-Vg8czh0Q7sFBSUMWWArX/miJeBWYBPpdU/3M/DKSaekLMqrqVPaedp+5mZhie/r0lgrcaYBfwXatEew6gwgiQQ==",
+      "dev": true
+    },
+    "js-tokens": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
+      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ=="
+    },
+    "js-yaml": {
+      "version": "3.13.1",
+      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-3.13.1.tgz",
+      "integrity": "sha512-YfbcO7jXDdyj0DGxYVSlSeQNHbD7XPWvrVWeVUujrQEoZzWJIRrCPoyk6kL6IAjAG2IolMK4T0hNUe0HOUs5Jw==",
+      "requires": {
+        "argparse": "^1.0.7",
+        "esprima": "^4.0.0"
+      }
+    },
+    "jsbn": {
+      "version": "0.1.1",
+      "resolved": "https://registry.npmjs.org/jsbn/-/jsbn-0.1.1.tgz",
+      "integrity": "sha1-peZUwuWi3rXyAdls77yoDA7y9RM="
+    },
+    "jsdom": {
+      "version": "11.12.0",
+      "resolved": "https://registry.npmjs.org/jsdom/-/jsdom-11.12.0.tgz",
+      "integrity": "sha512-y8Px43oyiBM13Zc1z780FrfNLJCXTL40EWlty/LXUtcjykRBNgLlCjWXpfSPBl2iv+N7koQN+dvqszHZgT/Fjw==",
+      "requires": {
+        "abab": "^2.0.0",
+        "acorn": "^5.5.3",
+        "acorn-globals": "^4.1.0",
+        "array-equal": "^1.0.0",
+        "cssom": ">= 0.3.2 < 0.4.0",
+        "cssstyle": "^1.0.0",
+        "data-urls": "^1.0.0",
+        "domexception": "^1.0.1",
+        "escodegen": "^1.9.1",
+        "html-encoding-sniffer": "^1.0.2",
+        "left-pad": "^1.3.0",
+        "nwsapi": "^2.0.7",
+        "parse5": "4.0.0",
+        "pn": "^1.1.0",
+        "request": "^2.87.0",
+        "request-promise-native": "^1.0.5",
+        "sax": "^1.2.4",
+        "symbol-tree": "^3.2.2",
+        "tough-cookie": "^2.3.4",
+        "w3c-hr-time": "^1.0.1",
+        "webidl-conversions": "^4.0.2",
+        "whatwg-encoding": "^1.0.3",
+        "whatwg-mimetype": "^2.1.0",
+        "whatwg-url": "^6.4.1",
+        "ws": "^5.2.0",
+        "xml-name-validator": "^3.0.0"
+      },
+      "dependencies": {
+        "acorn": {
+          "version": "5.7.4",
+          "resolved": "https://registry.npmjs.org/acorn/-/acorn-5.7.4.tgz",
+          "integrity": "sha512-1D++VG7BhrtvQpNbBzovKNc1FLGGEE/oGe7b9xJm/RFHMBeUaUGpluV9RLjZa47YFdPcDAenEYuq9pQPcMdLJg=="
+        },
+        "ws": {
+          "version": "5.2.2",
+          "resolved": "https://registry.npmjs.org/ws/-/ws-5.2.2.tgz",
+          "integrity": "sha512-jaHFD6PFv6UgoIVda6qZllptQsMlDEJkTQcybzzXDYM1XO9Y8em691FGMPmM46WGyLU4z9KMgQN+qrux/nhlHA==",
+          "requires": {
+            "async-limiter": "~1.0.0"
+          }
+        }
+      }
+    },
+    "jsesc": {
+      "version": "2.5.2",
+      "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-2.5.2.tgz",
+      "integrity": "sha512-OYu7XEzjkCQ3C5Ps3QIZsQfNpqoJyZZA99wd9aWd05NCtC5pWOkShK2mkL6HXQR6/Cy2lbNdPlZBpuQHXE63gA=="
+    },
+    "json-parse-better-errors": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/json-parse-better-errors/-/json-parse-better-errors-1.0.2.tgz",
+      "integrity": "sha512-mrqyZKfX5EhL7hvqcV6WG1yYjnjeuYDzDhhcAAUrq8Po85NBQBJP+ZDUT75qZQ98IkUoBqdkExkukOU7Ts2wrw=="
+    },
+    "json-schema": {
+      "version": "0.2.3",
+      "resolved": "https://registry.npmjs.org/json-schema/-/json-schema-0.2.3.tgz",
+      "integrity": "sha1-tIDIkuWaLwWVTOcnvT8qTogvnhM="
+    },
+    "json-schema-traverse": {
+      "version": "0.4.1",
+      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
+      "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg=="
+    },
+    "json-stable-stringify": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/json-stable-stringify/-/json-stable-stringify-1.0.1.tgz",
+      "integrity": "sha1-mnWdOcXy/1A/1TAGRu1EX4jE+a8=",
+      "requires": {
+        "jsonify": "~0.0.0"
+      }
+    },
+    "json-stable-stringify-without-jsonify": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz",
+      "integrity": "sha1-nbe1lJatPzz+8wp1FC0tkwrXJlE="
+    },
+    "json-stringify-safe": {
+      "version": "5.0.1",
+      "resolved": "https://registry.npmjs.org/json-stringify-safe/-/json-stringify-safe-5.0.1.tgz",
+      "integrity": "sha1-Epai1Y/UXxmg9s4B1lcB4sc1tus="
+    },
+    "json3": {
+      "version": "3.3.3",
+      "resolved": "https://registry.npmjs.org/json3/-/json3-3.3.3.tgz",
+      "integrity": "sha512-c7/8mbUsKigAbLkD5B010BK4D9LZm7A1pNItkEwiUZRpIN66exu/e7YQWysGun+TRKaJp8MhemM+VkfWv42aCA=="
+    },
+    "json5": {
+      "version": "2.1.3",
+      "resolved": "https://registry.npmjs.org/json5/-/json5-2.1.3.tgz",
+      "integrity": "sha512-KXPvOm8K9IJKFM0bmdn8QXh7udDh1g/giieX0NLCaMnb4hEiVFqnop2ImTXCc5e0/oHz3LTqmHGtExn5hfMkOA==",
+      "requires": {
+        "minimist": "^1.2.5"
+      }
+    },
+    "jsonfile": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-4.0.0.tgz",
+      "integrity": "sha1-h3Gq4HmbZAdrdmQPygWPnBDjPss=",
+      "requires": {
+        "graceful-fs": "^4.1.6"
+      }
+    },
+    "jsonify": {
+      "version": "0.0.0",
+      "resolved": "https://registry.npmjs.org/jsonify/-/jsonify-0.0.0.tgz",
+      "integrity": "sha1-LHS27kHZPKUbe1qu6PUDYx0lKnM="
+    },
+    "jsprim": {
+      "version": "1.4.1",
+      "resolved": "https://registry.npmjs.org/jsprim/-/jsprim-1.4.1.tgz",
+      "integrity": "sha1-MT5mvB5cwG5Di8G3SZwuXFastqI=",
+      "requires": {
+        "assert-plus": "1.0.0",
+        "extsprintf": "1.3.0",
+        "json-schema": "0.2.3",
+        "verror": "1.10.0"
+      }
+    },
+    "jsx-ast-utils": {
+      "version": "2.2.3",
+      "resolved": "https://registry.npmjs.org/jsx-ast-utils/-/jsx-ast-utils-2.2.3.tgz",
+      "integrity": "sha512-EdIHFMm+1BPynpKOpdPqiOsvnIrInRGJD7bzPZdPkjitQEqpdpUuFpq4T0npZFKTiB3RhWFdGN+oqOJIdhDhQA==",
+      "requires": {
+        "array-includes": "^3.0.3",
+        "object.assign": "^4.1.0"
+      }
+    },
+    "killable": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/killable/-/killable-1.0.1.tgz",
+      "integrity": "sha512-LzqtLKlUwirEUyl/nicirVmNiPvYs7l5n8wOPP7fyJVpUPkvCnW/vuiXGpylGUlnPDnB7311rARzAt3Mhswpjg=="
+    },
+    "kind-of": {
+      "version": "3.2.2",
+      "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
+      "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
+      "requires": {
+        "is-buffer": "^1.1.5"
+      }
+    },
+    "klaw": {
+      "version": "1.3.1",
+      "resolved": "https://registry.npmjs.org/klaw/-/klaw-1.3.1.tgz",
+      "integrity": "sha1-QIhDO0azsbolnXh4XY6W9zugJDk=",
+      "requires": {
+        "graceful-fs": "^4.1.9"
+      }
+    },
+    "kleur": {
+      "version": "3.0.3",
+      "resolved": "https://registry.npmjs.org/kleur/-/kleur-3.0.3.tgz",
+      "integrity": "sha512-eTIzlVOSUR+JxdDFepEYcBMtZ9Qqdef+rnzWdRZuMbOywu5tO2w2N7rqjoANZ5k9vywhL6Br1VRjUIgTQx4E8w=="
+    },
+    "last-call-webpack-plugin": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/last-call-webpack-plugin/-/last-call-webpack-plugin-3.0.0.tgz",
+      "integrity": "sha512-7KI2l2GIZa9p2spzPIVZBYyNKkN+e/SQPpnjlTiPhdbDW3F86tdKKELxKpzJ5sgU19wQWsACULZmpTPYHeWO5w==",
+      "requires": {
+        "lodash": "^4.17.5",
+        "webpack-sources": "^1.1.0"
+      }
+    },
+    "lazy-cache": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/lazy-cache/-/lazy-cache-1.0.4.tgz",
+      "integrity": "sha1-odePw6UEdMuAhF07O24dpJpEbo4="
+    },
+    "lcid": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/lcid/-/lcid-2.0.0.tgz",
+      "integrity": "sha512-avPEb8P8EGnwXKClwsNUgryVjllcRqtMYa49NTsbQagYuT1DcXnl1915oxWjoyGrXR6zH/Y0Zc96xWsPcoDKeA==",
+      "requires": {
+        "invert-kv": "^2.0.0"
+      }
+    },
+    "left-pad": {
+      "version": "1.3.0",
+      "resolved": "https://registry.npmjs.org/left-pad/-/left-pad-1.3.0.tgz",
+      "integrity": "sha512-XI5MPzVNApjAyhQzphX8BkmKsKUxD4LdyK24iZeQGinBN9yTQT3bFlCBy/aVx2HrNcqQGsdot8ghrjyrvMCoEA=="
+    },
+    "leven": {
+      "version": "3.1.0",
+      "resolved": "https://registry.npmjs.org/leven/-/leven-3.1.0.tgz",
+      "integrity": "sha512-qsda+H8jTaUaN/x5vzW2rzc+8Rw4TAQ/4KjB46IwK5VH+IlVeeeje/EoZRpiXvIqjFgK84QffqPztGI3VBLG1A=="
+    },
+    "levenary": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/levenary/-/levenary-1.1.1.tgz",
+      "integrity": "sha512-mkAdOIt79FD6irqjYSs4rdbnlT5vRonMEvBVPVb3XmevfS8kgRXwfes0dhPdEtzTWD/1eNE/Bm/G1iRt6DcnQQ==",
+      "requires": {
+        "leven": "^3.1.0"
+      }
+    },
+    "levn": {
+      "version": "0.3.0",
+      "resolved": "https://registry.npmjs.org/levn/-/levn-0.3.0.tgz",
+      "integrity": "sha1-OwmSTt+fCDwEkP3UwLxEIeBHZO4=",
+      "requires": {
+        "prelude-ls": "~1.1.2",
+        "type-check": "~0.3.2"
+      }
+    },
+    "lines-and-columns": {
+      "version": "1.1.6",
+      "resolved": "https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.1.6.tgz",
+      "integrity": "sha1-HADHQ7QzzQpOgHWPe2SldEDZ/wA="
+    },
+    "load-json-file": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/load-json-file/-/load-json-file-4.0.0.tgz",
+      "integrity": "sha1-L19Fq5HjMhYjT9U62rZo607AmTs=",
+      "requires": {
+        "graceful-fs": "^4.1.2",
+        "parse-json": "^4.0.0",
+        "pify": "^3.0.0",
+        "strip-bom": "^3.0.0"
+      }
+    },
+    "loader-fs-cache": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/loader-fs-cache/-/loader-fs-cache-1.0.3.tgz",
+      "integrity": "sha512-ldcgZpjNJj71n+2Mf6yetz+c9bM4xpKtNds4LbqXzU/PTdeAX0g3ytnU1AJMEcTk2Lex4Smpe3Q/eCTsvUBxbA==",
+      "requires": {
+        "find-cache-dir": "^0.1.1",
+        "mkdirp": "^0.5.1"
+      },
+      "dependencies": {
+        "find-cache-dir": {
+          "version": "0.1.1",
+          "resolved": "https://registry.npmjs.org/find-cache-dir/-/find-cache-dir-0.1.1.tgz",
+          "integrity": "sha1-yN765XyKUqinhPnjHFfHQumToLk=",
+          "requires": {
+            "commondir": "^1.0.1",
+            "mkdirp": "^0.5.1",
+            "pkg-dir": "^1.0.0"
+          }
+        },
+        "find-up": {
+          "version": "1.1.2",
+          "resolved": "https://registry.npmjs.org/find-up/-/find-up-1.1.2.tgz",
+          "integrity": "sha1-ay6YIrGizgpgq2TWEOzK1TyyTQ8=",
+          "requires": {
+            "path-exists": "^2.0.0",
+            "pinkie-promise": "^2.0.0"
+          }
+        },
+        "path-exists": {
+          "version": "2.1.0",
+          "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-2.1.0.tgz",
+          "integrity": "sha1-D+tsZPD8UY2adU3V77YscCJ2H0s=",
+          "requires": {
+            "pinkie-promise": "^2.0.0"
+          }
+        },
+        "pkg-dir": {
+          "version": "1.0.0",
+          "resolved": "https://registry.npmjs.org/pkg-dir/-/pkg-dir-1.0.0.tgz",
+          "integrity": "sha1-ektQio1bstYp1EcFb/TpyTFM89Q=",
+          "requires": {
+            "find-up": "^1.0.0"
+          }
+        }
+      }
+    },
+    "loader-runner": {
+      "version": "2.4.0",
+      "resolved": "https://registry.npmjs.org/loader-runner/-/loader-runner-2.4.0.tgz",
+      "integrity": "sha512-Jsmr89RcXGIwivFY21FcRrisYZfvLMTWx5kOLc+JTxtpBOG6xML0vzbc6SEQG2FO9/4Fc3wW4LVcB5DmGflaRw=="
+    },
+    "loader-utils": {
+      "version": "1.4.0",
+      "resolved": "https://registry.npmjs.org/loader-utils/-/loader-utils-1.4.0.tgz",
+      "integrity": "sha512-qH0WSMBtn/oHuwjy/NucEgbx5dbxxnxup9s4PVXJUDHZBQY+s0NWA9rJf53RBnQZxfch7euUui7hpoAPvALZdA==",
+      "requires": {
+        "big.js": "^5.2.2",
+        "emojis-list": "^3.0.0",
+        "json5": "^1.0.1"
+      },
+      "dependencies": {
+        "json5": {
+          "version": "1.0.1",
+          "resolved": "https://registry.npmjs.org/json5/-/json5-1.0.1.tgz",
+          "integrity": "sha512-aKS4WQjPenRxiQsC93MNfjx+nbF4PAdYzmd/1JIj8HYzqfbu86beTuNgXDzPknWk0n0uARlyewZo4s++ES36Ow==",
+          "requires": {
+            "minimist": "^1.2.0"
+          }
+        }
+      }
+    },
+    "locate-path": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-2.0.0.tgz",
+      "integrity": "sha1-K1aLJl7slExtnA3pw9u7ygNUzY4=",
+      "requires": {
+        "p-locate": "^2.0.0",
+        "path-exists": "^3.0.0"
+      }
+    },
+    "lodash": {
+      "version": "4.17.15",
+      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.15.tgz",
+      "integrity": "sha512-8xOcRHvCjnocdS5cpwXQXVzmmh5e5+saE2QGoeQmbKmRS6J3VQppPOIt0MnmE+4xlZoumy0GPG0D0MVIQbNA1A=="
+    },
+    "lodash._reinterpolate": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/lodash._reinterpolate/-/lodash._reinterpolate-3.0.0.tgz",
+      "integrity": "sha1-DM8tiRZq8Ds2Y8eWU4t1rG4RTZ0="
+    },
+    "lodash.clone": {
+      "version": "4.5.0",
+      "resolved": "https://registry.npmjs.org/lodash.clone/-/lodash.clone-4.5.0.tgz",
+      "integrity": "sha1-GVhwRQ9aExkkeN9Lw9I9LeoZB7Y=",
+      "dev": true
+    },
+    "lodash.memoize": {
+      "version": "4.1.2",
+      "resolved": "https://registry.npmjs.org/lodash.memoize/-/lodash.memoize-4.1.2.tgz",
+      "integrity": "sha1-vMbEmkKihA7Zl/Mj6tpezRguC/4="
+    },
+    "lodash.sortby": {
+      "version": "4.7.0",
+      "resolved": "https://registry.npmjs.org/lodash.sortby/-/lodash.sortby-4.7.0.tgz",
+      "integrity": "sha1-7dFMgk4sycHgsKG0K7UhBRakJDg="
+    },
+    "lodash.template": {
+      "version": "4.5.0",
+      "resolved": "https://registry.npmjs.org/lodash.template/-/lodash.template-4.5.0.tgz",
+      "integrity": "sha512-84vYFxIkmidUiFxidA/KjjH9pAycqW+h980j7Fuz5qxRtO9pgB7MDFTdys1N7A5mcucRiDyEq4fusljItR1T/A==",
+      "requires": {
+        "lodash._reinterpolate": "^3.0.0",
+        "lodash.templatesettings": "^4.0.0"
+      }
+    },
+    "lodash.templatesettings": {
+      "version": "4.2.0",
+      "resolved": "https://registry.npmjs.org/lodash.templatesettings/-/lodash.templatesettings-4.2.0.tgz",
+      "integrity": "sha512-stgLz+i3Aa9mZgnjr/O+v9ruKZsPsndy7qPZOchbqk2cnTU1ZaldKK+v7m54WoKIyxiuMZTKT2H81F8BeAc3ZQ==",
+      "requires": {
+        "lodash._reinterpolate": "^3.0.0"
+      }
+    },
+    "lodash.throttle": {
+      "version": "4.1.1",
+      "resolved": "https://registry.npmjs.org/lodash.throttle/-/lodash.throttle-4.1.1.tgz",
+      "integrity": "sha1-wj6RtxAkKscMN/HhzaknTMOb8vQ="
+    },
+    "lodash.uniq": {
+      "version": "4.5.0",
+      "resolved": "https://registry.npmjs.org/lodash.uniq/-/lodash.uniq-4.5.0.tgz",
+      "integrity": "sha1-0CJTc662Uq3BvILklFM5qEJ1R3M="
+    },
+    "log-symbols": {
+      "version": "2.2.0",
+      "resolved": "https://registry.npmjs.org/log-symbols/-/log-symbols-2.2.0.tgz",
+      "integrity": "sha512-VeIAFslyIerEJLXHziedo2basKbMKtTw3vfn5IzG0XTjhAVEJyNHnL2p7vc+wBDSdQuUpNw3M2u6xb9QsAY5Eg==",
+      "requires": {
+        "chalk": "^2.0.1"
+      }
+    },
+    "loglevel": {
+      "version": "1.6.8",
+      "resolved": "https://registry.npmjs.org/loglevel/-/loglevel-1.6.8.tgz",
+      "integrity": "sha512-bsU7+gc9AJ2SqpzxwU3+1fedl8zAntbtC5XYlt3s2j1hJcn2PsXSmgN8TaLG/J1/2mod4+cE/3vNL70/c1RNCA=="
+    },
+    "loose-envify": {
+      "version": "1.4.0",
+      "resolved": "https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz",
+      "integrity": "sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==",
+      "requires": {
+        "js-tokens": "^3.0.0 || ^4.0.0"
+      }
+    },
+    "loud-rejection": {
+      "version": "1.6.0",
+      "resolved": "https://registry.npmjs.org/loud-rejection/-/loud-rejection-1.6.0.tgz",
+      "integrity": "sha1-W0b4AUft7leIcPCG0Eghz5mOVR8=",
+      "dev": true,
+      "requires": {
+        "currently-unhandled": "^0.4.1",
+        "signal-exit": "^3.0.0"
+      }
+    },
+    "lower-case": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/lower-case/-/lower-case-2.0.1.tgz",
+      "integrity": "sha512-LiWgfDLLb1dwbFQZsSglpRj+1ctGnayXz3Uv0/WO8n558JycT5fg6zkNcnW0G68Nn0aEldTFeEfmjCfmqry/rQ==",
+      "requires": {
+        "tslib": "^1.10.0"
+      }
+    },
+    "lru-cache": {
+      "version": "5.1.1",
+      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-5.1.1.tgz",
+      "integrity": "sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==",
+      "requires": {
+        "yallist": "^3.0.2"
+      },
+      "dependencies": {
+        "yallist": {
+          "version": "3.1.1",
+          "resolved": "https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz",
+          "integrity": "sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g=="
+        }
+      }
+    },
+    "magic-string": {
+      "version": "0.22.5",
+      "resolved": "https://registry.npmjs.org/magic-string/-/magic-string-0.22.5.tgz",
+      "integrity": "sha512-oreip9rJZkzvA8Qzk9HFs8fZGF/u7H/gtrE8EN6RjKJ9kh2HlC+yQ2QezifqTZfGyiuAV0dRv5a+y/8gBb1m9w==",
+      "dev": true,
+      "requires": {
+        "vlq": "^0.2.2"
+      },
+      "dependencies": {
+        "vlq": {
+          "version": "0.2.3",
+          "resolved": "https://registry.npmjs.org/vlq/-/vlq-0.2.3.tgz",
+          "integrity": "sha512-DRibZL6DsNhIgYQ+wNdWDL2SL3bKPlVrRiBqV5yuMm++op8W4kGFtaQfCs4KEJn0wBZcHVHJ3eoywX8983k1ow==",
+          "dev": true
+        }
+      }
+    },
+    "make-dir": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-2.1.0.tgz",
+      "integrity": "sha512-LS9X+dc8KLxXCb8dni79fLIIUA5VyZoyjSMCwTluaXA0o27cCK0bhXkpgw+sTXVpPy/lSO57ilRixqk0vDmtRA==",
+      "requires": {
+        "pify": "^4.0.1",
+        "semver": "^5.6.0"
+      },
+      "dependencies": {
+        "pify": {
+          "version": "4.0.1",
+          "resolved": "https://registry.npmjs.org/pify/-/pify-4.0.1.tgz",
+          "integrity": "sha512-uB80kBFb/tfd68bVleG9T5GGsGPjJrLAUpR5PZIrhBnIaRTQRjqdJSsIKkOP6OAIFbj7GOrcudc5pNjZ+geV2g=="
+        },
+        "semver": {
+          "version": "5.7.1",
+          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
+          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ=="
+        }
+      }
+    },
+    "makeerror": {
+      "version": "1.0.11",
+      "resolved": "https://registry.npmjs.org/makeerror/-/makeerror-1.0.11.tgz",
+      "integrity": "sha1-4BpckQnyr3lmDk6LlYd5AYT1qWw=",
+      "requires": {
+        "tmpl": "1.0.x"
+      }
+    },
+    "mamacro": {
+      "version": "0.0.3",
+      "resolved": "https://registry.npmjs.org/mamacro/-/mamacro-0.0.3.tgz",
+      "integrity": "sha512-qMEwh+UujcQ+kbz3T6V+wAmO2U8veoq2w+3wY8MquqwVA3jChfwY+Tk52GZKDfACEPjuZ7r2oJLejwpt8jtwTA=="
+    },
+    "map-age-cleaner": {
+      "version": "0.1.3",
+      "resolved": "https://registry.npmjs.org/map-age-cleaner/-/map-age-cleaner-0.1.3.tgz",
+      "integrity": "sha512-bJzx6nMoP6PDLPBFmg7+xRKeFZvFboMrGlxmNj9ClvX53KrmvM5bXFXEWjbz4cz1AFn+jWJ9z/DJSz7hrs0w3w==",
+      "requires": {
+        "p-defer": "^1.0.0"
+      }
+    },
+    "map-cache": {
+      "version": "0.2.2",
+      "resolved": "https://registry.npmjs.org/map-cache/-/map-cache-0.2.2.tgz",
+      "integrity": "sha1-wyq9C9ZSXZsFFkW7TyasXcmKDb8="
+    },
+    "map-obj": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/map-obj/-/map-obj-1.0.1.tgz",
+      "integrity": "sha1-2TPOuSBdgr3PSIb2dCvcK03qFG0=",
+      "dev": true
+    },
+    "map-visit": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/map-visit/-/map-visit-1.0.0.tgz",
+      "integrity": "sha1-7Nyo8TFE5mDxtb1B8S80edmN+48=",
+      "requires": {
+        "object-visit": "^1.0.0"
+      }
+    },
+    "md5-file": {
+      "version": "3.2.3",
+      "resolved": "https://registry.npmjs.org/md5-file/-/md5-file-3.2.3.tgz",
+      "integrity": "sha512-3Tkp1piAHaworfcCgH0jKbTvj1jWWFgbvh2cXaNCgHwyTCBxxvD1Y04rmfpvdPm1P4oXMOpm6+2H7sr7v9v8Fw==",
+      "requires": {
+        "buffer-alloc": "^1.1.0"
+      }
+    },
+    "md5.js": {
+      "version": "1.3.5",
+      "resolved": "https://registry.npmjs.org/md5.js/-/md5.js-1.3.5.tgz",
+      "integrity": "sha512-xitP+WxNPcTTOgnTJcrhM0xvdPepipPSf3I8EIpGKeFLjt3PlJLIDG3u8EX53ZIubkb+5U2+3rELYpEhHhzdkg==",
+      "requires": {
+        "hash-base": "^3.0.0",
+        "inherits": "^2.0.1",
+        "safe-buffer": "^5.1.2"
+      }
+    },
+    "mdn-data": {
+      "version": "2.0.4",
+      "resolved": "https://registry.npmjs.org/mdn-data/-/mdn-data-2.0.4.tgz",
+      "integrity": "sha512-iV3XNKw06j5Q7mi6h+9vbx23Tv7JkjEVgKHW4pimwyDGWm0OIQntJJ+u1C6mg6mK1EaTv42XQ7w76yuzH7M2cA=="
+    },
+    "media-typer": {
+      "version": "0.3.0",
+      "resolved": "https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz",
+      "integrity": "sha1-hxDXrwqmJvj/+hzgAWhUUmMlV0g="
+    },
+    "mem": {
+      "version": "4.3.0",
+      "resolved": "https://registry.npmjs.org/mem/-/mem-4.3.0.tgz",
+      "integrity": "sha512-qX2bG48pTqYRVmDB37rn/6PT7LcR8T7oAX3bf99u1Tt1nzxYfxkgqDwUwolPlXweM0XzBOBFzSx4kfp7KP1s/w==",
+      "requires": {
+        "map-age-cleaner": "^0.1.1",
+        "mimic-fn": "^2.0.0",
+        "p-is-promise": "^2.0.0"
+      }
+    },
+    "memory-fs": {
+      "version": "0.4.1",
+      "resolved": "https://registry.npmjs.org/memory-fs/-/memory-fs-0.4.1.tgz",
+      "integrity": "sha1-OpoguEYlI+RHz7x+i7gO1me/xVI=",
+      "requires": {
+        "errno": "^0.1.3",
+        "readable-stream": "^2.0.1"
+      },
+      "dependencies": {
+        "readable-stream": {
+          "version": "2.3.7",
+          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
+          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
+          "requires": {
+            "core-util-is": "~1.0.0",
+            "inherits": "~2.0.3",
+            "isarray": "~1.0.0",
+            "process-nextick-args": "~2.0.0",
+            "safe-buffer": "~5.1.1",
+            "string_decoder": "~1.1.1",
+            "util-deprecate": "~1.0.1"
+          }
+        },
+        "string_decoder": {
+          "version": "1.1.1",
+          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
+          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
+          "requires": {
+            "safe-buffer": "~5.1.0"
+          }
+        }
+      }
+    },
+    "meow": {
+      "version": "3.7.0",
+      "resolved": "https://registry.npmjs.org/meow/-/meow-3.7.0.tgz",
+      "integrity": "sha1-cstmi0JSKCkKu/qFaJJYcwioAfs=",
+      "dev": true,
+      "requires": {
+        "camelcase-keys": "^2.0.0",
+        "decamelize": "^1.1.2",
+        "loud-rejection": "^1.0.0",
+        "map-obj": "^1.0.1",
+        "minimist": "^1.1.3",
+        "normalize-package-data": "^2.3.4",
+        "object-assign": "^4.0.1",
+        "read-pkg-up": "^1.0.1",
+        "redent": "^1.0.0",
+        "trim-newlines": "^1.0.0"
+      },
+      "dependencies": {
+        "find-up": {
+          "version": "1.1.2",
+          "resolved": "https://registry.npmjs.org/find-up/-/find-up-1.1.2.tgz",
+          "integrity": "sha1-ay6YIrGizgpgq2TWEOzK1TyyTQ8=",
+          "dev": true,
+          "requires": {
+            "path-exists": "^2.0.0",
+            "pinkie-promise": "^2.0.0"
+          }
+        },
+        "indent-string": {
+          "version": "2.1.0",
+          "resolved": "https://registry.npmjs.org/indent-string/-/indent-string-2.1.0.tgz",
+          "integrity": "sha1-ji1INIdCEhtKghi3oTfppSBJ3IA=",
+          "dev": true,
+          "requires": {
+            "repeating": "^2.0.0"
+          }
+        },
+        "load-json-file": {
+          "version": "1.1.0",
+          "resolved": "https://registry.npmjs.org/load-json-file/-/load-json-file-1.1.0.tgz",
+          "integrity": "sha1-lWkFcI1YtLq0wiYbBPWfMcmTdMA=",
+          "dev": true,
+          "requires": {
+            "graceful-fs": "^4.1.2",
+            "parse-json": "^2.2.0",
+            "pify": "^2.0.0",
+            "pinkie-promise": "^2.0.0",
+            "strip-bom": "^2.0.0"
+          }
+        },
+        "parse-json": {
+          "version": "2.2.0",
+          "resolved": "https://registry.npmjs.org/parse-json/-/parse-json-2.2.0.tgz",
+          "integrity": "sha1-9ID0BDTvgHQfhGkJn43qGPVaTck=",
+          "dev": true,
+          "requires": {
+            "error-ex": "^1.2.0"
+          }
+        },
+        "path-exists": {
+          "version": "2.1.0",
+          "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-2.1.0.tgz",
+          "integrity": "sha1-D+tsZPD8UY2adU3V77YscCJ2H0s=",
+          "dev": true,
+          "requires": {
+            "pinkie-promise": "^2.0.0"
+          }
+        },
+        "path-type": {
+          "version": "1.1.0",
+          "resolved": "https://registry.npmjs.org/path-type/-/path-type-1.1.0.tgz",
+          "integrity": "sha1-WcRPfuSR2nBNpBXaWkBwuk+P5EE=",
+          "dev": true,
+          "requires": {
+            "graceful-fs": "^4.1.2",
+            "pify": "^2.0.0",
+            "pinkie-promise": "^2.0.0"
+          }
+        },
+        "pify": {
+          "version": "2.3.0",
+          "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",
+          "integrity": "sha1-7RQaasBDqEnqWISY59yosVMw6Qw=",
+          "dev": true
+        },
+        "read-pkg": {
+          "version": "1.1.0",
+          "resolved": "https://registry.npmjs.org/read-pkg/-/read-pkg-1.1.0.tgz",
+          "integrity": "sha1-9f+qXs0pyzHAR0vKfXVra7KePyg=",
+          "dev": true,
+          "requires": {
+            "load-json-file": "^1.0.0",
+            "normalize-package-data": "^2.3.2",
+            "path-type": "^1.0.0"
+          }
+        },
+        "read-pkg-up": {
+          "version": "1.0.1",
+          "resolved": "https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-1.0.1.tgz",
+          "integrity": "sha1-nWPBMnbAZZGNV/ACpX9AobZD+wI=",
+          "dev": true,
+          "requires": {
+            "find-up": "^1.0.0",
+            "read-pkg": "^1.0.0"
+          }
+        },
+        "redent": {
+          "version": "1.0.0",
+          "resolved": "https://registry.npmjs.org/redent/-/redent-1.0.0.tgz",
+          "integrity": "sha1-z5Fqsf1fHxbfsggi3W7H9zDCr94=",
+          "dev": true,
+          "requires": {
+            "indent-string": "^2.1.0",
+            "strip-indent": "^1.0.1"
+          }
+        },
+        "strip-bom": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-2.0.0.tgz",
+          "integrity": "sha1-YhmoVhZSBJHzV4i9vxRHqZx+aw4=",
+          "dev": true,
+          "requires": {
+            "is-utf8": "^0.2.0"
+          }
+        },
+        "strip-indent": {
+          "version": "1.0.1",
+          "resolved": "https://registry.npmjs.org/strip-indent/-/strip-indent-1.0.1.tgz",
+          "integrity": "sha1-DHlipq3vp7vUrDZkYKY4VSrhoKI=",
+          "dev": true,
+          "requires": {
+            "get-stdin": "^4.0.1"
+          }
+        }
+      }
+    },
+    "merge-deep": {
+      "version": "3.0.2",
+      "resolved": "https://registry.npmjs.org/merge-deep/-/merge-deep-3.0.2.tgz",
+      "integrity": "sha512-T7qC8kg4Zoti1cFd8Cr0M+qaZfOwjlPDEdZIIPPB2JZctjaPM4fX+i7HOId69tAti2fvO6X5ldfYUONDODsrkA==",
+      "requires": {
+        "arr-union": "^3.1.0",
+        "clone-deep": "^0.2.4",
+        "kind-of": "^3.0.2"
+      }
+    },
+    "merge-descriptors": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.1.tgz",
+      "integrity": "sha1-sAqqVW3YtEVoFQ7J0blT8/kMu2E="
+    },
+    "merge-source-map": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/merge-source-map/-/merge-source-map-1.0.4.tgz",
+      "integrity": "sha1-pd5GU42uhNQRTMXqArR3KmNGcB8=",
+      "dev": true,
+      "requires": {
+        "source-map": "^0.5.6"
+      }
+    },
+    "merge-stream": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/merge-stream/-/merge-stream-2.0.0.tgz",
+      "integrity": "sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w=="
+    },
+    "merge2": {
+      "version": "1.3.0",
+      "resolved": "https://registry.npmjs.org/merge2/-/merge2-1.3.0.tgz",
+      "integrity": "sha512-2j4DAdlBOkiSZIsaXk4mTE3sRS02yBHAtfy127xRV3bQUFqXkjHCHLW6Scv7DwNRbIWNHH8zpnz9zMaKXIdvYw=="
+    },
+    "methods": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/methods/-/methods-1.1.2.tgz",
+      "integrity": "sha1-VSmk1nZUE07cxSZmVoNbD4Ua/O4="
+    },
+    "metro": {
+      "version": "0.58.0",
+      "resolved": "https://registry.npmjs.org/metro/-/metro-0.58.0.tgz",
+      "integrity": "sha512-yi/REXX+/s4r7RjzXht+E+qE6nzvFIrEXO5Q61h+70Q7RODMU8EnlpXx04JYk7DevHuMhFaX+NWhCtRINzR4zA==",
+      "requires": {
+        "@babel/code-frame": "^7.0.0",
+        "@babel/core": "^7.0.0",
+        "@babel/generator": "^7.5.0",
+        "@babel/parser": "^7.0.0",
+        "@babel/plugin-external-helpers": "^7.0.0",
+        "@babel/template": "^7.0.0",
+        "@babel/traverse": "^7.0.0",
+        "@babel/types": "^7.0.0",
+        "absolute-path": "^0.0.0",
+        "async": "^2.4.0",
+        "babel-preset-fbjs": "^3.3.0",
+        "buffer-crc32": "^0.2.13",
+        "chalk": "^2.4.1",
+        "ci-info": "^2.0.0",
+        "concat-stream": "^1.6.0",
+        "connect": "^3.6.5",
+        "debug": "^2.2.0",
+        "denodeify": "^1.2.1",
+        "eventemitter3": "^3.0.0",
+        "fbjs": "^1.0.0",
+        "fs-extra": "^1.0.0",
+        "graceful-fs": "^4.1.3",
+        "image-size": "^0.6.0",
+        "invariant": "^2.2.4",
+        "jest-haste-map": "^24.7.1",
+        "jest-worker": "^24.6.0",
+        "json-stable-stringify": "^1.0.1",
+        "lodash.throttle": "^4.1.1",
+        "merge-stream": "^1.0.1",
+        "metro-babel-register": "0.58.0",
+        "metro-babel-transformer": "0.58.0",
+        "metro-cache": "0.58.0",
+        "metro-config": "0.58.0",
+        "metro-core": "0.58.0",
+        "metro-inspector-proxy": "0.58.0",
+        "metro-minify-uglify": "0.58.0",
+        "metro-react-native-babel-preset": "0.58.0",
+        "metro-resolver": "0.58.0",
+        "metro-source-map": "0.58.0",
+        "metro-symbolicate": "0.58.0",
+        "mime-types": "2.1.11",
+        "mkdirp": "^0.5.1",
+        "node-fetch": "^2.2.0",
+        "nullthrows": "^1.1.1",
+        "resolve": "^1.5.0",
+        "rimraf": "^2.5.4",
+        "serialize-error": "^2.1.0",
+        "source-map": "^0.5.6",
+        "strip-ansi": "^4.0.0",
+        "temp": "0.8.3",
+        "throat": "^4.1.0",
+        "wordwrap": "^1.0.0",
+        "write-file-atomic": "^1.2.0",
+        "ws": "^1.1.5",
+        "xpipe": "^1.0.5",
+        "yargs": "^14.2.0"
+      },
+      "dependencies": {
+        "ansi-regex": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz",
+          "integrity": "sha1-7QMXwyIGT3lGbAKWa922Bas32Zg="
+        },
+        "debug": {
+          "version": "2.6.9",
+          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
+          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
+          "requires": {
+            "ms": "2.0.0"
+          }
+        },
+        "emoji-regex": {
+          "version": "7.0.3",
+          "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-7.0.3.tgz",
+          "integrity": "sha512-CwBLREIQ7LvYFB0WyRvwhq5N5qPhc6PMjD6bYggFlI5YyDgl+0vxq5VHbMOFqLg7hfWzmu8T5Z1QofhmTIhItA=="
+        },
+        "eventemitter3": {
+          "version": "3.1.2",
+          "resolved": "https://registry.npmjs.org/eventemitter3/-/eventemitter3-3.1.2.tgz",
+          "integrity": "sha512-tvtQIeLVHjDkJYnzf2dgVMxfuSGJeM/7UCG17TT4EumTfNtF+0nebF/4zWOIkCreAbtNqhGEboB6BWrwqNaw4Q=="
+        },
+        "find-up": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/find-up/-/find-up-3.0.0.tgz",
+          "integrity": "sha512-1yD6RmLI1XBfxugvORwlck6f75tYL+iR0jqwsOrOxMZyGYqUuDhJ0l4AXdO1iX/FTs9cBAMEk1gWSEx1kSbylg==",
+          "requires": {
+            "locate-path": "^3.0.0"
+          }
+        },
+        "fs-extra": {
+          "version": "1.0.0",
+          "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-1.0.0.tgz",
+          "integrity": "sha1-zTzl9+fLYUWIP8rjGR6Yd/hYeVA=",
+          "requires": {
+            "graceful-fs": "^4.1.2",
+            "jsonfile": "^2.1.0",
+            "klaw": "^1.0.0"
+          }
+        },
+        "is-fullwidth-code-point": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
+          "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8="
+        },
+        "jsonfile": {
+          "version": "2.4.0",
+          "resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-2.4.0.tgz",
+          "integrity": "sha1-NzaitCi4e72gzIO1P6PWM6NcKug=",
+          "requires": {
+            "graceful-fs": "^4.1.6"
+          }
+        },
+        "locate-path": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-3.0.0.tgz",
+          "integrity": "sha512-7AO748wWnIhNqAuaty2ZWHkQHRSNfPVIsPIfwEOWO22AmaoVrWavlOcMR5nzTLNYvp36X220/maaRsrec1G65A==",
+          "requires": {
+            "p-locate": "^3.0.0",
+            "path-exists": "^3.0.0"
+          }
+        },
+        "merge-stream": {
+          "version": "1.0.1",
+          "resolved": "https://registry.npmjs.org/merge-stream/-/merge-stream-1.0.1.tgz",
+          "integrity": "sha1-QEEgLVCKNCugAXQAjfDCUbjBNeE=",
+          "requires": {
+            "readable-stream": "^2.0.1"
+          }
+        },
+        "metro-react-native-babel-preset": {
+          "version": "0.58.0",
+          "resolved": "https://registry.npmjs.org/metro-react-native-babel-preset/-/metro-react-native-babel-preset-0.58.0.tgz",
+          "integrity": "sha512-MRriNW+fF6jxABsgPphocUY6mIhmCm8idcrQZ58fT3Iti2vCdtkaK32TyCGUNUptzhUe2/cbE57j4aC+eaodAA==",
+          "requires": {
+            "@babel/plugin-proposal-class-properties": "^7.0.0",
+            "@babel/plugin-proposal-export-default-from": "^7.0.0",
+            "@babel/plugin-proposal-nullish-coalescing-operator": "^7.0.0",
+            "@babel/plugin-proposal-object-rest-spread": "^7.0.0",
+            "@babel/plugin-proposal-optional-catch-binding": "^7.0.0",
+            "@babel/plugin-proposal-optional-chaining": "^7.0.0",
+            "@babel/plugin-syntax-dynamic-import": "^7.0.0",
+            "@babel/plugin-syntax-export-default-from": "^7.0.0",
+            "@babel/plugin-syntax-flow": "^7.2.0",
+            "@babel/plugin-transform-arrow-functions": "^7.0.0",
+            "@babel/plugin-transform-block-scoping": "^7.0.0",
+            "@babel/plugin-transform-classes": "^7.0.0",
+            "@babel/plugin-transform-computed-properties": "^7.0.0",
+            "@babel/plugin-transform-destructuring": "^7.0.0",
+            "@babel/plugin-transform-exponentiation-operator": "^7.0.0",
+            "@babel/plugin-transform-flow-strip-types": "^7.0.0",
+            "@babel/plugin-transform-for-of": "^7.0.0",
+            "@babel/plugin-transform-function-name": "^7.0.0",
+            "@babel/plugin-transform-literals": "^7.0.0",
+            "@babel/plugin-transform-modules-commonjs": "^7.0.0",
+            "@babel/plugin-transform-object-assign": "^7.0.0",
+            "@babel/plugin-transform-parameters": "^7.0.0",
+            "@babel/plugin-transform-react-display-name": "^7.0.0",
+            "@babel/plugin-transform-react-jsx": "^7.0.0",
+            "@babel/plugin-transform-react-jsx-source": "^7.0.0",
+            "@babel/plugin-transform-regenerator": "^7.0.0",
+            "@babel/plugin-transform-runtime": "^7.0.0",
+            "@babel/plugin-transform-shorthand-properties": "^7.0.0",
+            "@babel/plugin-transform-spread": "^7.0.0",
+            "@babel/plugin-transform-sticky-regex": "^7.0.0",
+            "@babel/plugin-transform-template-literals": "^7.0.0",
+            "@babel/plugin-transform-typescript": "^7.5.0",
+            "@babel/plugin-transform-unicode-regex": "^7.0.0",
+            "@babel/template": "^7.0.0",
+            "react-refresh": "^0.4.0"
+          }
+        },
+        "mime-db": {
+          "version": "1.23.0",
+          "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.23.0.tgz",
+          "integrity": "sha1-oxtAcK2uon1zLqMzdApk0OyaZlk="
+        },
+        "mime-types": {
+          "version": "2.1.11",
+          "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.11.tgz",
+          "integrity": "sha1-wlnEcb2oCKhdbNGTtDCl+uRHOzw=",
+          "requires": {
+            "mime-db": "~1.23.0"
+          }
+        },
+        "ms": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
+          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="
+        },
+        "node-fetch": {
+          "version": "2.6.0",
+          "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.6.0.tgz",
+          "integrity": "sha512-8dG4H5ujfvFiqDmVu9fQ5bOHUC15JMjMY/Zumv26oOvvVJjM67KF8koCWIabKQ1GJIa9r2mMZscBq/TbdOcmNA=="
+        },
+        "p-limit": {
+          "version": "2.3.0",
+          "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz",
+          "integrity": "sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==",
+          "requires": {
+            "p-try": "^2.0.0"
+          }
+        },
+        "p-locate": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-3.0.0.tgz",
+          "integrity": "sha512-x+12w/To+4GFfgJhBEpiDcLozRJGegY+Ei7/z0tSLkMmxGZNybVMSfWj9aJn8Z5Fc7dBUNJOOVgPv2H7IwulSQ==",
+          "requires": {
+            "p-limit": "^2.0.0"
+          }
+        },
+        "p-try": {
+          "version": "2.2.0",
+          "resolved": "https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz",
+          "integrity": "sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ=="
+        },
+        "readable-stream": {
+          "version": "2.3.7",
+          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
+          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
+          "requires": {
+            "core-util-is": "~1.0.0",
+            "inherits": "~2.0.3",
+            "isarray": "~1.0.0",
+            "process-nextick-args": "~2.0.0",
+            "safe-buffer": "~5.1.1",
+            "string_decoder": "~1.1.1",
+            "util-deprecate": "~1.0.1"
+          }
+        },
+        "string-width": {
+          "version": "3.1.0",
+          "resolved": "https://registry.npmjs.org/string-width/-/string-width-3.1.0.tgz",
+          "integrity": "sha512-vafcv6KjVZKSgz06oM/H6GDBrAtz8vdhQakGjFIvNrHA6y3HCF1CInLy+QLq8dTJPQ1b+KDUqDFctkdRW44e1w==",
+          "requires": {
+            "emoji-regex": "^7.0.1",
+            "is-fullwidth-code-point": "^2.0.0",
+            "strip-ansi": "^5.1.0"
+          },
+          "dependencies": {
+            "ansi-regex": {
+              "version": "4.1.0",
+              "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",
+              "integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg=="
+            },
+            "strip-ansi": {
+              "version": "5.2.0",
+              "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz",
+              "integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==",
+              "requires": {
+                "ansi-regex": "^4.1.0"
+              }
+            }
+          }
+        },
+        "string_decoder": {
+          "version": "1.1.1",
+          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
+          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
+          "requires": {
+            "safe-buffer": "~5.1.0"
+          }
+        },
+        "strip-ansi": {
+          "version": "4.0.0",
+          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",
+          "integrity": "sha1-qEeQIusaw2iocTibY1JixQXuNo8=",
+          "requires": {
+            "ansi-regex": "^3.0.0"
+          }
+        },
+        "write-file-atomic": {
+          "version": "1.3.4",
+          "resolved": "https://registry.npmjs.org/write-file-atomic/-/write-file-atomic-1.3.4.tgz",
+          "integrity": "sha1-+Aek8LHZ6ROuekgRLmzDrxmRtF8=",
+          "requires": {
+            "graceful-fs": "^4.1.11",
+            "imurmurhash": "^0.1.4",
+            "slide": "^1.1.5"
+          }
+        },
+        "ws": {
+          "version": "1.1.5",
+          "resolved": "https://registry.npmjs.org/ws/-/ws-1.1.5.tgz",
+          "integrity": "sha512-o3KqipXNUdS7wpQzBHSe180lBGO60SoK0yVo3CYJgb2MkobuWuBX6dhkYP5ORCLd55y+SaflMOV5fqAB53ux4w==",
+          "requires": {
+            "options": ">=0.0.5",
+            "ultron": "1.0.x"
+          }
+        },
+        "yargs": {
+          "version": "14.2.3",
+          "resolved": "https://registry.npmjs.org/yargs/-/yargs-14.2.3.tgz",
+          "integrity": "sha512-ZbotRWhF+lkjijC/VhmOT9wSgyBQ7+zr13+YLkhfsSiTriYsMzkTUFP18pFhWwBeMa5gUc1MzbhrO6/VB7c9Xg==",
+          "requires": {
+            "cliui": "^5.0.0",
+            "decamelize": "^1.2.0",
+            "find-up": "^3.0.0",
+            "get-caller-file": "^2.0.1",
+            "require-directory": "^2.1.1",
+            "require-main-filename": "^2.0.0",
+            "set-blocking": "^2.0.0",
+            "string-width": "^3.0.0",
+            "which-module": "^2.0.0",
+            "y18n": "^4.0.0",
+            "yargs-parser": "^15.0.1"
+          }
+        },
+        "yargs-parser": {
+          "version": "15.0.1",
+          "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-15.0.1.tgz",
+          "integrity": "sha512-0OAMV2mAZQrs3FkNpDQcBk1x5HXb8X4twADss4S0Iuk+2dGnLOE/fRHrsYm542GduMveyA77OF4wrNJuanRCWw==",
+          "requires": {
+            "camelcase": "^5.0.0",
+            "decamelize": "^1.2.0"
+          }
+        }
+      }
+    },
+    "metro-babel-register": {
+      "version": "0.58.0",
+      "resolved": "https://registry.npmjs.org/metro-babel-register/-/metro-babel-register-0.58.0.tgz",
+      "integrity": "sha512-P5+G3ufhSYL6cA3a7xkbSJzzFBvtivj/PhWvGXFXnuFssDlMAX1CTktff+0gpka5Cd6B6QLt0UAMWulUAAE4Eg==",
+      "requires": {
+        "@babel/core": "^7.0.0",
+        "@babel/plugin-proposal-class-properties": "^7.0.0",
+        "@babel/plugin-proposal-nullish-coalescing-operator": "^7.0.0",
+        "@babel/plugin-proposal-object-rest-spread": "^7.0.0",
+        "@babel/plugin-proposal-optional-catch-binding": "^7.0.0",
+        "@babel/plugin-proposal-optional-chaining": "^7.0.0",
+        "@babel/plugin-transform-async-to-generator": "^7.0.0",
+        "@babel/plugin-transform-flow-strip-types": "^7.0.0",
+        "@babel/plugin-transform-modules-commonjs": "^7.0.0",
+        "@babel/register": "^7.0.0",
+        "core-js": "^2.2.2",
+        "escape-string-regexp": "^1.0.5"
+      },
+      "dependencies": {
+        "core-js": {
+          "version": "2.6.11",
+          "resolved": "https://registry.npmjs.org/core-js/-/core-js-2.6.11.tgz",
+          "integrity": "sha512-5wjnpaT/3dV+XB4borEsnAYQchn00XSgTAWKDkEqv+K8KevjbzmofK6hfJ9TZIlpj2N0xQpazy7PiRQiWHqzWg=="
+        }
+      }
+    },
+    "metro-babel-transformer": {
+      "version": "0.58.0",
+      "resolved": "https://registry.npmjs.org/metro-babel-transformer/-/metro-babel-transformer-0.58.0.tgz",
+      "integrity": "sha512-yBX3BkRhw2TCNPhe+pmLSgsAEA3huMvnX08UwjFqSXXI1aiqzRQobn92uKd1U5MM1Vx8EtXVomlJb95ZHNAv6A==",
+      "requires": {
+        "@babel/core": "^7.0.0",
+        "metro-source-map": "0.58.0"
+      }
+    },
+    "metro-cache": {
+      "version": "0.58.0",
+      "resolved": "https://registry.npmjs.org/metro-cache/-/metro-cache-0.58.0.tgz",
+      "integrity": "sha512-jjW9zCTKxhgKcVkyQ6LHyna9Zdf4TK/45vvT1fPyyTk1RY82ZYjU1qs+84ycKEd08Ka4YcK9xcUew9SIDJYI8Q==",
+      "requires": {
+        "jest-serializer": "^24.4.0",
+        "metro-core": "0.58.0",
+        "mkdirp": "^0.5.1",
+        "rimraf": "^2.5.4"
+      }
+    },
+    "metro-config": {
+      "version": "0.58.0",
+      "resolved": "https://registry.npmjs.org/metro-config/-/metro-config-0.58.0.tgz",
+      "integrity": "sha512-4vgBliXwL56vjUlYplvGMVSNrJJpkHuLcD+O20trV3FvPxKg4ZsvuOcNSxqDSMU26FCtIEJ15ojcuCbRL7KY0w==",
+      "requires": {
+        "cosmiconfig": "^5.0.5",
+        "jest-validate": "^24.7.0",
+        "metro": "0.58.0",
+        "metro-cache": "0.58.0",
+        "metro-core": "0.58.0",
+        "pretty-format": "^24.7.0"
+      }
+    },
+    "metro-core": {
+      "version": "0.58.0",
+      "resolved": "https://registry.npmjs.org/metro-core/-/metro-core-0.58.0.tgz",
+      "integrity": "sha512-RzXUjGFmCLOyzUqcKDvr91AldGtIOxnzNZrWUIiG8uC3kerVLo0mQp4YH3+XVm6fMNiLMg6iER7HLqD+MbpUjQ==",
+      "requires": {
+        "jest-haste-map": "^24.7.1",
+        "lodash.throttle": "^4.1.1",
+        "metro-resolver": "0.58.0",
+        "wordwrap": "^1.0.0"
+      }
+    },
+    "metro-inspector-proxy": {
+      "version": "0.58.0",
+      "resolved": "https://registry.npmjs.org/metro-inspector-proxy/-/metro-inspector-proxy-0.58.0.tgz",
+      "integrity": "sha512-oFqTyNTJdCdvcw1Ha6SKE7ITbSaoTbO4xpYownIoJR+WZ0ZfxbWpp225JkHuBJm9UcBAnG9c0CME924m3uBbaw==",
+      "requires": {
+        "connect": "^3.6.5",
+        "debug": "^2.2.0",
+        "rxjs": "^5.4.3",
+        "ws": "^1.1.5",
+        "yargs": "^14.2.0"
+      },
+      "dependencies": {
+        "debug": {
+          "version": "2.6.9",
+          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
+          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
+          "requires": {
+            "ms": "2.0.0"
+          }
+        },
+        "emoji-regex": {
+          "version": "7.0.3",
+          "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-7.0.3.tgz",
+          "integrity": "sha512-CwBLREIQ7LvYFB0WyRvwhq5N5qPhc6PMjD6bYggFlI5YyDgl+0vxq5VHbMOFqLg7hfWzmu8T5Z1QofhmTIhItA=="
+        },
+        "find-up": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/find-up/-/find-up-3.0.0.tgz",
+          "integrity": "sha512-1yD6RmLI1XBfxugvORwlck6f75tYL+iR0jqwsOrOxMZyGYqUuDhJ0l4AXdO1iX/FTs9cBAMEk1gWSEx1kSbylg==",
+          "requires": {
+            "locate-path": "^3.0.0"
+          }
+        },
+        "is-fullwidth-code-point": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
+          "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8="
+        },
+        "locate-path": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-3.0.0.tgz",
+          "integrity": "sha512-7AO748wWnIhNqAuaty2ZWHkQHRSNfPVIsPIfwEOWO22AmaoVrWavlOcMR5nzTLNYvp36X220/maaRsrec1G65A==",
+          "requires": {
+            "p-locate": "^3.0.0",
+            "path-exists": "^3.0.0"
+          }
+        },
+        "ms": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
+          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="
+        },
+        "p-limit": {
+          "version": "2.3.0",
+          "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz",
+          "integrity": "sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==",
+          "requires": {
+            "p-try": "^2.0.0"
+          }
+        },
+        "p-locate": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-3.0.0.tgz",
+          "integrity": "sha512-x+12w/To+4GFfgJhBEpiDcLozRJGegY+Ei7/z0tSLkMmxGZNybVMSfWj9aJn8Z5Fc7dBUNJOOVgPv2H7IwulSQ==",
+          "requires": {
+            "p-limit": "^2.0.0"
+          }
+        },
+        "p-try": {
+          "version": "2.2.0",
+          "resolved": "https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz",
+          "integrity": "sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ=="
+        },
+        "rxjs": {
+          "version": "5.5.12",
+          "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-5.5.12.tgz",
+          "integrity": "sha512-xx2itnL5sBbqeeiVgNPVuQQ1nC8Jp2WfNJhXWHmElW9YmrpS9UVnNzhP3EH3HFqexO5Tlp8GhYY+WEcqcVMvGw==",
+          "requires": {
+            "symbol-observable": "1.0.1"
+          }
+        },
+        "string-width": {
+          "version": "3.1.0",
+          "resolved": "https://registry.npmjs.org/string-width/-/string-width-3.1.0.tgz",
+          "integrity": "sha512-vafcv6KjVZKSgz06oM/H6GDBrAtz8vdhQakGjFIvNrHA6y3HCF1CInLy+QLq8dTJPQ1b+KDUqDFctkdRW44e1w==",
+          "requires": {
+            "emoji-regex": "^7.0.1",
+            "is-fullwidth-code-point": "^2.0.0",
+            "strip-ansi": "^5.1.0"
+          }
+        },
+        "symbol-observable": {
+          "version": "1.0.1",
+          "resolved": "https://registry.npmjs.org/symbol-observable/-/symbol-observable-1.0.1.tgz",
+          "integrity": "sha1-g0D8RwLDEi310iKI+IKD9RPT/dQ="
+        },
+        "ws": {
+          "version": "1.1.5",
+          "resolved": "https://registry.npmjs.org/ws/-/ws-1.1.5.tgz",
+          "integrity": "sha512-o3KqipXNUdS7wpQzBHSe180lBGO60SoK0yVo3CYJgb2MkobuWuBX6dhkYP5ORCLd55y+SaflMOV5fqAB53ux4w==",
+          "requires": {
+            "options": ">=0.0.5",
+            "ultron": "1.0.x"
+          }
+        },
+        "yargs": {
+          "version": "14.2.3",
+          "resolved": "https://registry.npmjs.org/yargs/-/yargs-14.2.3.tgz",
+          "integrity": "sha512-ZbotRWhF+lkjijC/VhmOT9wSgyBQ7+zr13+YLkhfsSiTriYsMzkTUFP18pFhWwBeMa5gUc1MzbhrO6/VB7c9Xg==",
+          "requires": {
+            "cliui": "^5.0.0",
+            "decamelize": "^1.2.0",
+            "find-up": "^3.0.0",
+            "get-caller-file": "^2.0.1",
+            "require-directory": "^2.1.1",
+            "require-main-filename": "^2.0.0",
+            "set-blocking": "^2.0.0",
+            "string-width": "^3.0.0",
+            "which-module": "^2.0.0",
+            "y18n": "^4.0.0",
+            "yargs-parser": "^15.0.1"
+          }
+        },
+        "yargs-parser": {
+          "version": "15.0.1",
+          "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-15.0.1.tgz",
+          "integrity": "sha512-0OAMV2mAZQrs3FkNpDQcBk1x5HXb8X4twADss4S0Iuk+2dGnLOE/fRHrsYm542GduMveyA77OF4wrNJuanRCWw==",
+          "requires": {
+            "camelcase": "^5.0.0",
+            "decamelize": "^1.2.0"
+          }
+        }
+      }
+    },
+    "metro-minify-uglify": {
+      "version": "0.58.0",
+      "resolved": "https://registry.npmjs.org/metro-minify-uglify/-/metro-minify-uglify-0.58.0.tgz",
+      "integrity": "sha512-vRHsA7bCi7eCn3LXLm20EfY2NoWDyYOnmWaq/N8LB0OxL2L5DXRqMYAQK+prWGJ5S1yvVnDuuNVP+peQ9851TA==",
+      "requires": {
+        "uglify-es": "^3.1.9"
+      }
+    },
+    "metro-react-native-babel-preset": {
+      "version": "0.56.4",
+      "resolved": "https://registry.npmjs.org/metro-react-native-babel-preset/-/metro-react-native-babel-preset-0.56.4.tgz",
+      "integrity": "sha512-CzbBDM9Rh6w8s1fq+ZqihAh7DDqUAcfo9pPww25+N/eJ7UK436Q7JdfxwdIPpBwLFn6o6MyYn+uwL9OEWBJarA==",
+      "requires": {
+        "@babel/plugin-proposal-class-properties": "^7.0.0",
+        "@babel/plugin-proposal-export-default-from": "^7.0.0",
+        "@babel/plugin-proposal-nullish-coalescing-operator": "^7.0.0",
+        "@babel/plugin-proposal-object-rest-spread": "^7.0.0",
+        "@babel/plugin-proposal-optional-catch-binding": "^7.0.0",
+        "@babel/plugin-proposal-optional-chaining": "^7.0.0",
+        "@babel/plugin-syntax-dynamic-import": "^7.0.0",
+        "@babel/plugin-syntax-export-default-from": "^7.0.0",
+        "@babel/plugin-syntax-flow": "^7.2.0",
+        "@babel/plugin-transform-arrow-functions": "^7.0.0",
+        "@babel/plugin-transform-block-scoping": "^7.0.0",
+        "@babel/plugin-transform-classes": "^7.0.0",
+        "@babel/plugin-transform-computed-properties": "^7.0.0",
+        "@babel/plugin-transform-destructuring": "^7.0.0",
+        "@babel/plugin-transform-exponentiation-operator": "^7.0.0",
+        "@babel/plugin-transform-flow-strip-types": "^7.0.0",
+        "@babel/plugin-transform-for-of": "^7.0.0",
+        "@babel/plugin-transform-function-name": "^7.0.0",
+        "@babel/plugin-transform-literals": "^7.0.0",
+        "@babel/plugin-transform-modules-commonjs": "^7.0.0",
+        "@babel/plugin-transform-object-assign": "^7.0.0",
+        "@babel/plugin-transform-parameters": "^7.0.0",
+        "@babel/plugin-transform-react-display-name": "^7.0.0",
+        "@babel/plugin-transform-react-jsx": "^7.0.0",
+        "@babel/plugin-transform-react-jsx-source": "^7.0.0",
+        "@babel/plugin-transform-regenerator": "^7.0.0",
+        "@babel/plugin-transform-runtime": "^7.0.0",
+        "@babel/plugin-transform-shorthand-properties": "^7.0.0",
+        "@babel/plugin-transform-spread": "^7.0.0",
+        "@babel/plugin-transform-sticky-regex": "^7.0.0",
+        "@babel/plugin-transform-template-literals": "^7.0.0",
+        "@babel/plugin-transform-typescript": "^7.0.0",
+        "@babel/plugin-transform-unicode-regex": "^7.0.0",
+        "@babel/template": "^7.0.0",
+        "react-refresh": "^0.4.0"
+      }
+    },
+    "metro-react-native-babel-transformer": {
+      "version": "0.58.0",
+      "resolved": "https://registry.npmjs.org/metro-react-native-babel-transformer/-/metro-react-native-babel-transformer-0.58.0.tgz",
+      "integrity": "sha512-3A73+cRq1eUPQ8g+hPNGgMUMCGmtQjwqHfoG1DwinAoJ/kr4WOXWWbGZo0xHJNBe/zdHGl0uHcDCp2knPglTdQ==",
+      "requires": {
+        "@babel/core": "^7.0.0",
+        "babel-preset-fbjs": "^3.3.0",
+        "metro-babel-transformer": "0.58.0",
+        "metro-react-native-babel-preset": "0.58.0",
+        "metro-source-map": "0.58.0"
+      },
+      "dependencies": {
+        "metro-react-native-babel-preset": {
+          "version": "0.58.0",
+          "resolved": "https://registry.npmjs.org/metro-react-native-babel-preset/-/metro-react-native-babel-preset-0.58.0.tgz",
+          "integrity": "sha512-MRriNW+fF6jxABsgPphocUY6mIhmCm8idcrQZ58fT3Iti2vCdtkaK32TyCGUNUptzhUe2/cbE57j4aC+eaodAA==",
+          "requires": {
+            "@babel/plugin-proposal-class-properties": "^7.0.0",
+            "@babel/plugin-proposal-export-default-from": "^7.0.0",
+            "@babel/plugin-proposal-nullish-coalescing-operator": "^7.0.0",
+            "@babel/plugin-proposal-object-rest-spread": "^7.0.0",
+            "@babel/plugin-proposal-optional-catch-binding": "^7.0.0",
+            "@babel/plugin-proposal-optional-chaining": "^7.0.0",
+            "@babel/plugin-syntax-dynamic-import": "^7.0.0",
+            "@babel/plugin-syntax-export-default-from": "^7.0.0",
+            "@babel/plugin-syntax-flow": "^7.2.0",
+            "@babel/plugin-transform-arrow-functions": "^7.0.0",
+            "@babel/plugin-transform-block-scoping": "^7.0.0",
+            "@babel/plugin-transform-classes": "^7.0.0",
+            "@babel/plugin-transform-computed-properties": "^7.0.0",
+            "@babel/plugin-transform-destructuring": "^7.0.0",
+            "@babel/plugin-transform-exponentiation-operator": "^7.0.0",
+            "@babel/plugin-transform-flow-strip-types": "^7.0.0",
+            "@babel/plugin-transform-for-of": "^7.0.0",
+            "@babel/plugin-transform-function-name": "^7.0.0",
+            "@babel/plugin-transform-literals": "^7.0.0",
+            "@babel/plugin-transform-modules-commonjs": "^7.0.0",
+            "@babel/plugin-transform-object-assign": "^7.0.0",
+            "@babel/plugin-transform-parameters": "^7.0.0",
+            "@babel/plugin-transform-react-display-name": "^7.0.0",
+            "@babel/plugin-transform-react-jsx": "^7.0.0",
+            "@babel/plugin-transform-react-jsx-source": "^7.0.0",
+            "@babel/plugin-transform-regenerator": "^7.0.0",
+            "@babel/plugin-transform-runtime": "^7.0.0",
+            "@babel/plugin-transform-shorthand-properties": "^7.0.0",
+            "@babel/plugin-transform-spread": "^7.0.0",
+            "@babel/plugin-transform-sticky-regex": "^7.0.0",
+            "@babel/plugin-transform-template-literals": "^7.0.0",
+            "@babel/plugin-transform-typescript": "^7.5.0",
+            "@babel/plugin-transform-unicode-regex": "^7.0.0",
+            "@babel/template": "^7.0.0",
+            "react-refresh": "^0.4.0"
+          }
+        }
+      }
+    },
+    "metro-resolver": {
+      "version": "0.58.0",
+      "resolved": "https://registry.npmjs.org/metro-resolver/-/metro-resolver-0.58.0.tgz",
+      "integrity": "sha512-XFbAKvCHN2iWqKeiRARzEXn69eTDdJVJC7lu16S4dPQJ+Dy82dZBr5Es12iN+NmbJuFgrAuIHbpWrdnA9tOf6Q==",
+      "requires": {
+        "absolute-path": "^0.0.0"
+      }
+    },
+    "metro-source-map": {
+      "version": "0.58.0",
+      "resolved": "https://registry.npmjs.org/metro-source-map/-/metro-source-map-0.58.0.tgz",
+      "integrity": "sha512-yvN1YPmejmgiiS7T1aKBiiUTHPw2Vcm3r2TZ+DY92z/9PR4alysIywrCs/fTHs8rbDcKM5VfPCKGLpkBrbKeOw==",
+      "requires": {
+        "@babel/traverse": "^7.0.0",
+        "@babel/types": "^7.0.0",
+        "invariant": "^2.2.4",
+        "metro-symbolicate": "0.58.0",
+        "ob1": "0.58.0",
+        "source-map": "^0.5.6",
+        "vlq": "^1.0.0"
+      }
+    },
+    "metro-symbolicate": {
+      "version": "0.58.0",
+      "resolved": "https://registry.npmjs.org/metro-symbolicate/-/metro-symbolicate-0.58.0.tgz",
+      "integrity": "sha512-uIVxUQC1E26qOMj13dKROhwAa2FmZk5eR0NcBqej/aXmQhpr8LjJg2sondkoLKUp827Tf/Fm9+pS4icb5XiqCw==",
+      "requires": {
+        "invariant": "^2.2.4",
+        "metro-source-map": "0.58.0",
+        "source-map": "^0.5.6",
+        "through2": "^2.0.1",
+        "vlq": "^1.0.0"
+      }
+    },
+    "microevent.ts": {
+      "version": "0.1.1",
+      "resolved": "https://registry.npmjs.org/microevent.ts/-/microevent.ts-0.1.1.tgz",
+      "integrity": "sha512-jo1OfR4TaEwd5HOrt5+tAZ9mqT4jmpNAusXtyfNzqVm9uiSYFZlKM1wYL4oU7azZW/PxQW53wM0S6OR1JHNa2g=="
+    },
+    "micromatch": {
+      "version": "3.1.10",
+      "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-3.1.10.tgz",
+      "integrity": "sha512-MWikgl9n9M3w+bpsY3He8L+w9eF9338xRl8IAO5viDizwSzziFEyUzo2xrrloB64ADbTf8uA8vRqqttDTOmccg==",
+      "requires": {
+        "arr-diff": "^4.0.0",
+        "array-unique": "^0.3.2",
+        "braces": "^2.3.1",
+        "define-property": "^2.0.2",
+        "extend-shallow": "^3.0.2",
+        "extglob": "^2.0.4",
+        "fragment-cache": "^0.2.1",
+        "kind-of": "^6.0.2",
+        "nanomatch": "^1.2.9",
+        "object.pick": "^1.3.0",
+        "regex-not": "^1.0.0",
+        "snapdragon": "^0.8.1",
+        "to-regex": "^3.0.2"
+      },
+      "dependencies": {
+        "kind-of": {
+          "version": "6.0.3",
+          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.3.tgz",
+          "integrity": "sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw=="
+        }
+      }
+    },
+    "miller-rabin": {
+      "version": "4.0.1",
+      "resolved": "https://registry.npmjs.org/miller-rabin/-/miller-rabin-4.0.1.tgz",
+      "integrity": "sha512-115fLhvZVqWwHPbClyntxEVfVDfl9DLLTuJvq3g2O/Oxi8AiNouAHvDSzHS0viUJc+V5vm3eq91Xwqn9dp4jRA==",
+      "requires": {
+        "bn.js": "^4.0.0",
+        "brorand": "^1.0.1"
+      }
+    },
+    "mime": {
+      "version": "2.4.5",
+      "resolved": "https://registry.npmjs.org/mime/-/mime-2.4.5.tgz",
+      "integrity": "sha512-3hQhEUF027BuxZjQA3s7rIv/7VCQPa27hN9u9g87sEkWaKwQPuXOkVKtOeiyUrnWqTDiOs8Ed2rwg733mB0R5w=="
+    },
+    "mime-db": {
+      "version": "1.44.0",
+      "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.44.0.tgz",
+      "integrity": "sha512-/NOTfLrsPBVeH7YtFPgsVWveuL+4SjjYxaQ1xtM1KMFj7HdxlBlxeyNLzhyJVx7r4rZGJAZ/6lkKCitSc/Nmpg=="
+    },
+    "mime-types": {
+      "version": "2.1.27",
+      "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.27.tgz",
+      "integrity": "sha512-JIhqnCasI9yD+SsmkquHBxTSEuZdQX5BuQnS2Vc7puQQQ+8yiP5AY5uWhpdv4YL4VM5c6iliiYWPgJ/nJQLp7w==",
+      "requires": {
+        "mime-db": "1.44.0"
+      }
+    },
+    "mimic-fn": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/mimic-fn/-/mimic-fn-2.1.0.tgz",
+      "integrity": "sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg=="
+    },
+    "min-indent": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/min-indent/-/min-indent-1.0.0.tgz",
+      "integrity": "sha1-z8RcN+nsDY8KDsPdTvf3w6vjklY="
+    },
+    "mini-create-react-context": {
+      "version": "0.3.2",
+      "resolved": "https://registry.npmjs.org/mini-create-react-context/-/mini-create-react-context-0.3.2.tgz",
+      "integrity": "sha512-2v+OeetEyliMt5VHMXsBhABoJ0/M4RCe7fatd/fBy6SMiKazUSEt3gxxypfnk2SHMkdBYvorHRoQxuGoiwbzAw==",
+      "requires": {
+        "@babel/runtime": "^7.4.0",
+        "gud": "^1.0.0",
+        "tiny-warning": "^1.0.2"
+      }
+    },
+    "mini-css-extract-plugin": {
+      "version": "0.9.0",
+      "resolved": "https://registry.npmjs.org/mini-css-extract-plugin/-/mini-css-extract-plugin-0.9.0.tgz",
+      "integrity": "sha512-lp3GeY7ygcgAmVIcRPBVhIkf8Us7FZjA+ILpal44qLdSu11wmjKQ3d9k15lfD7pO4esu9eUIAW7qiYIBppv40A==",
+      "requires": {
+        "loader-utils": "^1.1.0",
+        "normalize-url": "1.9.1",
+        "schema-utils": "^1.0.0",
+        "webpack-sources": "^1.1.0"
+      },
+      "dependencies": {
+        "schema-utils": {
+          "version": "1.0.0",
+          "resolved": "https://registry.npmjs.org/schema-utils/-/schema-utils-1.0.0.tgz",
+          "integrity": "sha512-i27Mic4KovM/lnGsy8whRCHhc7VicJajAjTrYg11K9zfZXnYIt4k5F+kZkwjnrhKzLic/HLU4j11mjsz2G/75g==",
+          "requires": {
+            "ajv": "^6.1.0",
+            "ajv-errors": "^1.0.0",
+            "ajv-keywords": "^3.1.0"
+          }
+        }
+      }
+    },
+    "minimalistic-assert": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/minimalistic-assert/-/minimalistic-assert-1.0.1.tgz",
+      "integrity": "sha512-UtJcAD4yEaGtjPezWuO9wC4nwUnVH/8/Im3yEHQP4b67cXlD/Qr9hdITCU1xDbSEXg2XKNaP8jsReV7vQd00/A=="
+    },
+    "minimalistic-crypto-utils": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/minimalistic-crypto-utils/-/minimalistic-crypto-utils-1.0.1.tgz",
+      "integrity": "sha1-9sAMHAsIIkblxNmd+4x8CDsrWCo="
+    },
+    "minimatch": {
+      "version": "3.0.4",
+      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.0.4.tgz",
+      "integrity": "sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==",
+      "requires": {
+        "brace-expansion": "^1.1.7"
+      }
+    },
+    "minimist": {
+      "version": "1.2.5",
+      "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.5.tgz",
+      "integrity": "sha512-FM9nNUYrRBAELZQT3xeZQ7fmMOBg6nWNmJKTcgsJeaLstP/UODVpGsr5OhXhhXg6f+qtJ8uiZ+PUxkDWcgIXLw=="
+    },
+    "minipass": {
+      "version": "3.1.1",
+      "resolved": "https://registry.npmjs.org/minipass/-/minipass-3.1.1.tgz",
+      "integrity": "sha512-UFqVihv6PQgwj8/yTGvl9kPz7xIAY+R5z6XYjRInD3Gk3qx6QGSD6zEcpeG4Dy/lQnv1J6zv8ejV90hyYIKf3w==",
+      "requires": {
+        "yallist": "^4.0.0"
+      }
+    },
+    "minipass-collect": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/minipass-collect/-/minipass-collect-1.0.2.tgz",
+      "integrity": "sha512-6T6lH0H8OG9kITm/Jm6tdooIbogG9e0tLgpY6mphXSm/A9u8Nq1ryBG+Qspiub9LjWlBPsPS3tWQ/Botq4FdxA==",
+      "requires": {
+        "minipass": "^3.0.0"
+      }
+    },
+    "minipass-flush": {
+      "version": "1.0.5",
+      "resolved": "https://registry.npmjs.org/minipass-flush/-/minipass-flush-1.0.5.tgz",
+      "integrity": "sha512-JmQSYYpPUqX5Jyn1mXaRwOda1uQ8HP5KAT/oDSLCzt1BYRhQU0/hDtsB1ufZfEEzMZ9aAVmsBw8+FWsIXlClWw==",
+      "requires": {
+        "minipass": "^3.0.0"
+      }
+    },
+    "minipass-pipeline": {
+      "version": "1.2.2",
+      "resolved": "https://registry.npmjs.org/minipass-pipeline/-/minipass-pipeline-1.2.2.tgz",
+      "integrity": "sha512-3JS5A2DKhD2g0Gg8x3yamO0pj7YeKGwVlDS90pF++kxptwx/F+B//roxf9SqYil5tQo65bijy+dAuAFZmYOouA==",
+      "requires": {
+        "minipass": "^3.0.0"
+      }
+    },
+    "mississippi": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/mississippi/-/mississippi-3.0.0.tgz",
+      "integrity": "sha512-x471SsVjUtBRtcvd4BzKE9kFC+/2TeWgKCgw0bZcw1b9l2X3QX5vCWgF+KaZaYm87Ss//rHnWryupDrgLvmSkA==",
+      "requires": {
+        "concat-stream": "^1.5.0",
+        "duplexify": "^3.4.2",
+        "end-of-stream": "^1.1.0",
+        "flush-write-stream": "^1.0.0",
+        "from2": "^2.1.0",
+        "parallel-transform": "^1.1.0",
+        "pump": "^3.0.0",
+        "pumpify": "^1.3.3",
+        "stream-each": "^1.1.0",
+        "through2": "^2.0.0"
+      }
+    },
+    "mixin-deep": {
+      "version": "1.3.2",
+      "resolved": "https://registry.npmjs.org/mixin-deep/-/mixin-deep-1.3.2.tgz",
+      "integrity": "sha512-WRoDn//mXBiJ1H40rqa3vH0toePwSsGb45iInWlTySa+Uu4k3tYUSxa2v1KqAiLtvlrSzaExqS1gtk96A9zvEA==",
+      "requires": {
+        "for-in": "^1.0.2",
+        "is-extendable": "^1.0.1"
+      },
+      "dependencies": {
+        "is-extendable": {
+          "version": "1.0.1",
+          "resolved": "https://registry.npmjs.org/is-extendable/-/is-extendable-1.0.1.tgz",
+          "integrity": "sha512-arnXMxT1hhoKo9k1LZdmlNyJdDDfy2v0fXjFlmok4+i8ul/6WlbVge9bhM74OpNPQPMGUToDtz+KXa1PneJxOA==",
+          "requires": {
+            "is-plain-object": "^2.0.4"
+          }
+        }
+      }
+    },
+    "mixin-object": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/mixin-object/-/mixin-object-2.0.1.tgz",
+      "integrity": "sha1-T7lJRB2rGCVA8f4DW6YOGUel5X4=",
+      "requires": {
+        "for-in": "^0.1.3",
+        "is-extendable": "^0.1.1"
+      },
+      "dependencies": {
+        "for-in": {
+          "version": "0.1.8",
+          "resolved": "https://registry.npmjs.org/for-in/-/for-in-0.1.8.tgz",
+          "integrity": "sha1-2Hc5COMSVhCZUrH9ubP6hn0ndeE="
+        }
+      }
+    },
+    "mkdirp": {
+      "version": "0.5.5",
+      "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.5.tgz",
+      "integrity": "sha512-NKmAlESf6jMGym1++R0Ra7wvhV+wFW63FaSOFPwRahvea0gMUcGUhVeAg/0BC0wiv9ih5NYPB1Wn1UEI1/L+xQ==",
+      "requires": {
+        "minimist": "^1.2.5"
+      }
+    },
+    "move-concurrently": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/move-concurrently/-/move-concurrently-1.0.1.tgz",
+      "integrity": "sha1-viwAX9oy4LKa8fBdfEszIUxwH5I=",
+      "requires": {
+        "aproba": "^1.1.1",
+        "copy-concurrently": "^1.0.0",
+        "fs-write-stream-atomic": "^1.0.8",
+        "mkdirp": "^0.5.1",
+        "rimraf": "^2.5.4",
+        "run-queue": "^1.0.3"
+      }
+    },
+    "ms": {
+      "version": "2.1.2",
+      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
+      "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w=="
+    },
+    "multicast-dns": {
+      "version": "6.2.3",
+      "resolved": "https://registry.npmjs.org/multicast-dns/-/multicast-dns-6.2.3.tgz",
+      "integrity": "sha512-ji6J5enbMyGRHIAkAOu3WdV8nggqviKCEKtXcOqfphZZtQrmHKycfynJ2V7eVPUA4NhJ6V7Wf4TmGbTwKE9B6g==",
+      "requires": {
+        "dns-packet": "^1.3.1",
+        "thunky": "^1.0.2"
+      }
+    },
+    "multicast-dns-service-types": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/multicast-dns-service-types/-/multicast-dns-service-types-1.1.0.tgz",
+      "integrity": "sha1-iZ8R2WhuXgXLkbNdXw5jt3PPyQE="
+    },
+    "mute-stream": {
+      "version": "0.0.8",
+      "resolved": "https://registry.npmjs.org/mute-stream/-/mute-stream-0.0.8.tgz",
+      "integrity": "sha512-nnbWWOkoWyUsTjKrhgD0dcz22mdkSnpYqbEjIm2nhwhuxlSkpywJmBo8h0ZqJdkp73mb90SssHkN4rsRaBAfAA=="
+    },
+    "nan": {
+      "version": "2.14.1",
+      "resolved": "https://registry.npmjs.org/nan/-/nan-2.14.1.tgz",
+      "integrity": "sha512-isWHgVjnFjh2x2yuJ/tj3JbwoHu3UC2dX5G/88Cm24yB6YopVgxvBObDY7n5xW6ExmFhJpSEQqFPvq9zaXc8Jw=="
+    },
+    "nanomatch": {
+      "version": "1.2.13",
+      "resolved": "https://registry.npmjs.org/nanomatch/-/nanomatch-1.2.13.tgz",
+      "integrity": "sha512-fpoe2T0RbHwBTBUOftAfBPaDEi06ufaUai0mE6Yn1kacc3SnTErfb/h+X94VXzI64rKFHYImXSvdwGGCmwOqCA==",
+      "requires": {
+        "arr-diff": "^4.0.0",
+        "array-unique": "^0.3.2",
+        "define-property": "^2.0.2",
+        "extend-shallow": "^3.0.2",
+        "fragment-cache": "^0.2.1",
+        "is-windows": "^1.0.2",
+        "kind-of": "^6.0.2",
+        "object.pick": "^1.3.0",
+        "regex-not": "^1.0.0",
+        "snapdragon": "^0.8.1",
+        "to-regex": "^3.0.1"
+      },
+      "dependencies": {
+        "kind-of": {
+          "version": "6.0.3",
+          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.3.tgz",
+          "integrity": "sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw=="
+        }
+      }
+    },
+    "natural-compare": {
+      "version": "1.4.0",
+      "resolved": "https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz",
+      "integrity": "sha1-Sr6/7tdUHywnrPspvbvRXI1bpPc="
+    },
+    "negotiator": {
+      "version": "0.6.2",
+      "resolved": "https://registry.npmjs.org/negotiator/-/negotiator-0.6.2.tgz",
+      "integrity": "sha512-hZXc7K2e+PgeI1eDBe/10Ard4ekbfrrqG8Ep+8Jmf4JID2bNg7NvCPOZN+kfF574pFQI7mum2AUqDidoKqcTOw=="
+    },
+    "neo-async": {
+      "version": "2.6.1",
+      "resolved": "https://registry.npmjs.org/neo-async/-/neo-async-2.6.1.tgz",
+      "integrity": "sha512-iyam8fBuCUpWeKPGpaNMetEocMt364qkCsfL9JuhjXX6dRnguRVOfk2GZaDpPjcOKiiXCPINZC1GczQ7iTq3Zw=="
+    },
+    "next-tick": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/next-tick/-/next-tick-1.0.0.tgz",
+      "integrity": "sha1-yobR/ogoFpsBICCOPchCS524NCw="
+    },
+    "nice-try": {
+      "version": "1.0.5",
+      "resolved": "https://registry.npmjs.org/nice-try/-/nice-try-1.0.5.tgz",
+      "integrity": "sha512-1nh45deeb5olNY7eX82BkPO7SSxR5SSYJiPTrTdFUVYwAl8CKMA5N9PjTYkHiRjisVcxcQ1HXdLhx2qxxJzLNQ=="
+    },
+    "no-case": {
+      "version": "3.0.3",
+      "resolved": "https://registry.npmjs.org/no-case/-/no-case-3.0.3.tgz",
+      "integrity": "sha512-ehY/mVQCf9BL0gKfsJBvFJen+1V//U+0HQMPrWct40ixE4jnv0bfvxDbWtAHL9EcaPEOJHVVYKoQn1TlZUB8Tw==",
+      "requires": {
+        "lower-case": "^2.0.1",
+        "tslib": "^1.10.0"
+      }
+    },
+    "node-addon-api": {
+      "version": "1.7.1",
+      "resolved": "https://registry.npmjs.org/node-addon-api/-/node-addon-api-1.7.1.tgz",
+      "integrity": "sha512-2+DuKodWvwRTrCfKOeR24KIc5unKjOh8mz17NCzVnHWfjAdDqbfbjqh7gUT+BkXBRQM52+xCHciKWonJ3CbJMQ==",
+      "dev": true
+    },
+    "node-fetch": {
+      "version": "1.7.3",
+      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-1.7.3.tgz",
+      "integrity": "sha512-NhZ4CsKx7cYm2vSrBAr2PvFOe6sWDf0UYLRqA6svUYg7+/TSfVAu49jYC4BvQ4Sms9SZgdqGBgroqfDhJdTyKQ==",
+      "requires": {
+        "encoding": "^0.1.11",
+        "is-stream": "^1.0.1"
+      }
+    },
+    "node-forge": {
+      "version": "0.9.0",
+      "resolved": "https://registry.npmjs.org/node-forge/-/node-forge-0.9.0.tgz",
+      "integrity": "sha512-7ASaDa3pD+lJ3WvXFsxekJQelBKRpne+GOVbLbtHYdd7pFspyeuJHnWfLplGf3SwKGbfs/aYl5V/JCIaHVUKKQ=="
+    },
+    "node-gyp": {
+      "version": "3.8.0",
+      "resolved": "https://registry.npmjs.org/node-gyp/-/node-gyp-3.8.0.tgz",
+      "integrity": "sha512-3g8lYefrRRzvGeSowdJKAKyks8oUpLEd/DyPV4eMhVlhJ0aNaZqIrNUIPuEWWTAoPqyFkfGrM67MC69baqn6vA==",
+      "dev": true,
+      "requires": {
+        "fstream": "^1.0.0",
+        "glob": "^7.0.3",
+        "graceful-fs": "^4.1.2",
+        "mkdirp": "^0.5.0",
+        "nopt": "2 || 3",
+        "npmlog": "0 || 1 || 2 || 3 || 4",
+        "osenv": "0",
+        "request": "^2.87.0",
+        "rimraf": "2",
+        "semver": "~5.3.0",
+        "tar": "^2.0.0",
+        "which": "1"
+      },
+      "dependencies": {
+        "semver": {
+          "version": "5.3.0",
+          "resolved": "https://registry.npmjs.org/semver/-/semver-5.3.0.tgz",
+          "integrity": "sha1-myzl094C0XxgEq0yaqa00M9U+U8=",
+          "dev": true
+        }
+      }
+    },
+    "node-gyp-build": {
+      "version": "3.7.0",
+      "resolved": "https://registry.npmjs.org/node-gyp-build/-/node-gyp-build-3.7.0.tgz",
+      "integrity": "sha512-L/Eg02Epx6Si2NXmedx+Okg+4UHqmaf3TNcxd50SF9NQGcJaON3AtU++kax69XV7YWz4tUspqZSAsVofhFKG2w==",
+      "optional": true
+    },
+    "node-int64": {
+      "version": "0.4.0",
+      "resolved": "https://registry.npmjs.org/node-int64/-/node-int64-0.4.0.tgz",
+      "integrity": "sha1-h6kGXNs1XTGC2PlM4RGIuCXGijs="
+    },
+    "node-libs-browser": {
+      "version": "2.2.1",
+      "resolved": "https://registry.npmjs.org/node-libs-browser/-/node-libs-browser-2.2.1.tgz",
+      "integrity": "sha512-h/zcD8H9kaDZ9ALUWwlBUDo6TKF8a7qBSCSEGfjTVIYeqsioSKaAX+BN7NgiMGp6iSIXZ3PxgCu8KS3b71YK5Q==",
+      "requires": {
+        "assert": "^1.1.1",
+        "browserify-zlib": "^0.2.0",
+        "buffer": "^4.3.0",
+        "console-browserify": "^1.1.0",
+        "constants-browserify": "^1.0.0",
+        "crypto-browserify": "^3.11.0",
+        "domain-browser": "^1.1.1",
+        "events": "^3.0.0",
+        "https-browserify": "^1.0.0",
+        "os-browserify": "^0.3.0",
+        "path-browserify": "0.0.1",
+        "process": "^0.11.10",
+        "punycode": "^1.2.4",
+        "querystring-es3": "^0.2.0",
+        "readable-stream": "^2.3.3",
+        "stream-browserify": "^2.0.1",
+        "stream-http": "^2.7.2",
+        "string_decoder": "^1.0.0",
+        "timers-browserify": "^2.0.4",
+        "tty-browserify": "0.0.0",
+        "url": "^0.11.0",
+        "util": "^0.11.0",
+        "vm-browserify": "^1.0.1"
+      },
+      "dependencies": {
+        "punycode": {
+          "version": "1.4.1",
+          "resolved": "https://registry.npmjs.org/punycode/-/punycode-1.4.1.tgz",
+          "integrity": "sha1-wNWmOycYgArY4esPpSachN1BhF4="
+        },
+        "readable-stream": {
+          "version": "2.3.7",
+          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
+          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
+          "requires": {
+            "core-util-is": "~1.0.0",
+            "inherits": "~2.0.3",
+            "isarray": "~1.0.0",
+            "process-nextick-args": "~2.0.0",
+            "safe-buffer": "~5.1.1",
+            "string_decoder": "~1.1.1",
+            "util-deprecate": "~1.0.1"
+          },
+          "dependencies": {
+            "string_decoder": {
+              "version": "1.1.1",
+              "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
+              "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
+              "requires": {
+                "safe-buffer": "~5.1.0"
+              }
+            }
+          }
+        },
+        "util": {
+          "version": "0.11.1",
+          "resolved": "https://registry.npmjs.org/util/-/util-0.11.1.tgz",
+          "integrity": "sha512-HShAsny+zS2TZfaXxD9tYj4HQGlBezXZMZuM/S5PKLLoZkShZiGk9o5CzukI1LVHZvjdvZ2Sj1aW/Ndn2NB/HQ==",
+          "requires": {
+            "inherits": "2.0.3"
+          },
+          "dependencies": {
+            "inherits": {
+              "version": "2.0.3",
+              "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz",
+              "integrity": "sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4="
+            }
+          }
+        }
+      }
+    },
+    "node-modules-regexp": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/node-modules-regexp/-/node-modules-regexp-1.0.0.tgz",
+      "integrity": "sha1-jZ2+KJZKSsVxLpExZCEHxx6Q7EA="
+    },
+    "node-notifier": {
+      "version": "5.4.3",
+      "resolved": "https://registry.npmjs.org/node-notifier/-/node-notifier-5.4.3.tgz",
+      "integrity": "sha512-M4UBGcs4jeOK9CjTsYwkvH6/MzuUmGCyTW+kCY7uO+1ZVr0+FHGdPdIf5CCLqAaxnRrWidyoQlNkMIIVwbKB8Q==",
+      "requires": {
+        "growly": "^1.3.0",
+        "is-wsl": "^1.1.0",
+        "semver": "^5.5.0",
+        "shellwords": "^0.1.1",
+        "which": "^1.3.0"
+      },
+      "dependencies": {
+        "semver": {
+          "version": "5.7.1",
+          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
+          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ=="
+        }
+      }
+    },
+    "node-releases": {
+      "version": "1.1.53",
+      "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-1.1.53.tgz",
+      "integrity": "sha512-wp8zyQVwef2hpZ/dJH7SfSrIPD6YoJz6BDQDpGEkcA0s3LpAQoxBIYmfIq6QAhC1DhwsyCgTaTTcONwX8qzCuQ=="
+    },
+    "node-sass": {
+      "version": "4.14.1",
+      "resolved": "https://registry.npmjs.org/node-sass/-/node-sass-4.14.1.tgz",
+      "integrity": "sha512-sjCuOlvGyCJS40R8BscF5vhVlQjNN069NtQ1gSxyK1u9iqvn6tf7O1R4GNowVZfiZUCRt5MmMs1xd+4V/7Yr0g==",
+      "dev": true,
+      "requires": {
+        "async-foreach": "^0.1.3",
+        "chalk": "^1.1.1",
+        "cross-spawn": "^3.0.0",
+        "gaze": "^1.0.0",
+        "get-stdin": "^4.0.1",
+        "glob": "^7.0.3",
+        "in-publish": "^2.0.0",
+        "lodash": "^4.17.15",
+        "meow": "^3.7.0",
+        "mkdirp": "^0.5.1",
+        "nan": "^2.13.2",
+        "node-gyp": "^3.8.0",
+        "npmlog": "^4.0.0",
+        "request": "^2.88.0",
+        "sass-graph": "2.2.5",
+        "stdout-stream": "^1.4.0",
+        "true-case-path": "^1.0.2"
+      },
+      "dependencies": {
+        "ansi-regex": {
+          "version": "2.1.1",
+          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",
+          "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8=",
+          "dev": true
+        },
+        "ansi-styles": {
+          "version": "2.2.1",
+          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz",
+          "integrity": "sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4=",
+          "dev": true
+        },
+        "chalk": {
+          "version": "1.1.3",
+          "resolved": "https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz",
+          "integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
+          "dev": true,
+          "requires": {
+            "ansi-styles": "^2.2.1",
+            "escape-string-regexp": "^1.0.2",
+            "has-ansi": "^2.0.0",
+            "strip-ansi": "^3.0.0",
+            "supports-color": "^2.0.0"
+          }
+        },
+        "cross-spawn": {
+          "version": "3.0.1",
+          "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-3.0.1.tgz",
+          "integrity": "sha1-ElYDfsufDF9549bvE14wdwGEuYI=",
+          "dev": true,
+          "requires": {
+            "lru-cache": "^4.0.1",
+            "which": "^1.2.9"
+          }
+        },
+        "lru-cache": {
+          "version": "4.1.5",
+          "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-4.1.5.tgz",
+          "integrity": "sha512-sWZlbEP2OsHNkXrMl5GYk/jKk70MBng6UU4YI/qGDYbgf6YbP4EvmqISbXCoJiRKs+1bSpFHVgQxvJ17F2li5g==",
+          "dev": true,
+          "requires": {
+            "pseudomap": "^1.0.2",
+            "yallist": "^2.1.2"
+          }
+        },
+        "strip-ansi": {
+          "version": "3.0.1",
+          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",
+          "integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",
+          "dev": true,
+          "requires": {
+            "ansi-regex": "^2.0.0"
+          }
+        },
+        "supports-color": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz",
+          "integrity": "sha1-U10EXOa2Nj+kARcIRimZXp3zJMc=",
+          "dev": true
+        },
+        "yallist": {
+          "version": "2.1.2",
+          "resolved": "https://registry.npmjs.org/yallist/-/yallist-2.1.2.tgz",
+          "integrity": "sha1-HBH5IY8HYImkfdUS+TxmmaaoHVI=",
+          "dev": true
+        }
+      }
+    },
+    "node-stream-zip": {
+      "version": "1.10.1",
+      "resolved": "https://registry.npmjs.org/node-stream-zip/-/node-stream-zip-1.10.1.tgz",
+      "integrity": "sha512-fd2jdfvs3xJhSGpipy3EgCHGgFMXZkJh6HeQ8LURfMUW9oHcPEMWLXO657MtMRGJCHvQYQk6dTHZmNycu87PEg=="
+    },
+    "noop-fn": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/noop-fn/-/noop-fn-1.0.0.tgz",
+      "integrity": "sha1-XzPUfxPSFQ35PgywNmmemC94/78="
+    },
+    "nopt": {
+      "version": "3.0.6",
+      "resolved": "https://registry.npmjs.org/nopt/-/nopt-3.0.6.tgz",
+      "integrity": "sha1-xkZdvwirzU2zWTF/eaxopkayj/k=",
+      "dev": true,
+      "requires": {
+        "abbrev": "1"
+      }
+    },
+    "normalize-html-whitespace": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/normalize-html-whitespace/-/normalize-html-whitespace-1.0.0.tgz",
+      "integrity": "sha512-9ui7CGtOOlehQu0t/OhhlmDyc71mKVlv+4vF+me4iZLPrNtRL2xoquEdfZxasC/bdQi/Hr3iTrpyRKIG+ocabA==",
+      "dev": true
+    },
+    "normalize-package-data": {
+      "version": "2.5.0",
+      "resolved": "https://registry.npmjs.org/normalize-package-data/-/normalize-package-data-2.5.0.tgz",
+      "integrity": "sha512-/5CMN3T0R4XTj4DcGaexo+roZSdSFW/0AOOTROrjxzCG1wrWXEsGbRKevjlIL+ZDE4sZlJr5ED4YW0yqmkK+eA==",
+      "requires": {
+        "hosted-git-info": "^2.1.4",
+        "resolve": "^1.10.0",
+        "semver": "2 || 3 || 4 || 5",
+        "validate-npm-package-license": "^3.0.1"
+      },
+      "dependencies": {
+        "semver": {
+          "version": "5.7.1",
+          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
+          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ=="
+        }
+      }
+    },
+    "normalize-path": {
+      "version": "2.1.1",
+      "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-2.1.1.tgz",
+      "integrity": "sha1-GrKLVW4Zg2Oowab35vogE3/mrtk=",
+      "requires": {
+        "remove-trailing-separator": "^1.0.1"
+      }
+    },
+    "normalize-range": {
+      "version": "0.1.2",
+      "resolved": "https://registry.npmjs.org/normalize-range/-/normalize-range-0.1.2.tgz",
+      "integrity": "sha1-LRDAa9/TEuqXd2laTShDlFa3WUI="
+    },
+    "normalize-url": {
+      "version": "1.9.1",
+      "resolved": "https://registry.npmjs.org/normalize-url/-/normalize-url-1.9.1.tgz",
+      "integrity": "sha1-LMDWazHqIwNkWENuNiDYWVTGbDw=",
+      "requires": {
+        "object-assign": "^4.0.1",
+        "prepend-http": "^1.0.0",
+        "query-string": "^4.1.0",
+        "sort-keys": "^1.0.0"
+      }
+    },
+    "npm-run-path": {
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/npm-run-path/-/npm-run-path-2.0.2.tgz",
+      "integrity": "sha1-NakjLfo11wZ7TLLd8jV7GHFTbF8=",
+      "requires": {
+        "path-key": "^2.0.0"
+      }
+    },
+    "npmlog": {
+      "version": "4.1.2",
+      "resolved": "https://registry.npmjs.org/npmlog/-/npmlog-4.1.2.tgz",
+      "integrity": "sha512-2uUqazuKlTaSI/dC8AzicUck7+IrEaOnN/e0jd3Xtt1KcGpwx30v50mL7oPyr/h9bL3E4aZccVwpwP+5W9Vjkg==",
+      "dev": true,
+      "requires": {
+        "are-we-there-yet": "~1.1.2",
+        "console-control-strings": "~1.1.0",
+        "gauge": "~2.7.3",
+        "set-blocking": "~2.0.0"
+      }
+    },
+    "nth-check": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/nth-check/-/nth-check-1.0.2.tgz",
+      "integrity": "sha512-WeBOdju8SnzPN5vTUJYxYUxLeXpCaVP5i5e0LF8fg7WORF2Wd7wFX/pk0tYZk7s8T+J7VLy0Da6J1+wCT0AtHg==",
+      "requires": {
+        "boolbase": "~1.0.0"
+      }
+    },
+    "nullthrows": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/nullthrows/-/nullthrows-1.1.1.tgz",
+      "integrity": "sha512-2vPPEi+Z7WqML2jZYddDIfy5Dqb0r2fze2zTxNNknZaFpVHU3mFB3R+DWeJWGVx0ecvttSGlJTI+WG+8Z4cDWw=="
+    },
+    "num2fraction": {
+      "version": "1.2.2",
+      "resolved": "https://registry.npmjs.org/num2fraction/-/num2fraction-1.2.2.tgz",
+      "integrity": "sha1-b2gragJ6Tp3fpFZM0lidHU5mnt4="
+    },
+    "number-is-nan": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/number-is-nan/-/number-is-nan-1.0.1.tgz",
+      "integrity": "sha1-CXtgK1NCKlIsGvuHkDGDNpQaAR0="
+    },
+    "nwsapi": {
+      "version": "2.2.0",
+      "resolved": "https://registry.npmjs.org/nwsapi/-/nwsapi-2.2.0.tgz",
+      "integrity": "sha512-h2AatdwYH+JHiZpv7pt/gSX1XoRGb7L/qSIeuqA6GwYoF9w1vP1cw42TO0aI2pNyshRK5893hNSl+1//vHK7hQ=="
+    },
+    "oauth-sign": {
+      "version": "0.9.0",
+      "resolved": "https://registry.npmjs.org/oauth-sign/-/oauth-sign-0.9.0.tgz",
+      "integrity": "sha512-fexhUFFPTGV8ybAtSIGbV6gOkSv8UtRbDBnAyLQw4QPKkgNlsH2ByPGtMUqdWkos6YCRmAqViwgZrJc/mRDzZQ=="
+    },
+    "ob1": {
+      "version": "0.58.0",
+      "resolved": "https://registry.npmjs.org/ob1/-/ob1-0.58.0.tgz",
+      "integrity": "sha512-uZP44cbowAfHafP1k4skpWItk5iHCoRevMfrnUvYCfyNNPPJd3rfDCyj0exklWi2gDXvjlj2ObsfiqP/bs/J7Q=="
+    },
+    "object-assign": {
+      "version": "4.1.1",
+      "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
+      "integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM="
+    },
+    "object-copy": {
+      "version": "0.1.0",
+      "resolved": "https://registry.npmjs.org/object-copy/-/object-copy-0.1.0.tgz",
+      "integrity": "sha1-fn2Fi3gb18mRpBupde04EnVOmYw=",
+      "requires": {
+        "copy-descriptor": "^0.1.0",
+        "define-property": "^0.2.5",
+        "kind-of": "^3.0.3"
+      },
+      "dependencies": {
+        "define-property": {
+          "version": "0.2.5",
+          "resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",
+          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",
+          "requires": {
+            "is-descriptor": "^0.1.0"
+          }
+        }
+      }
+    },
+    "object-hash": {
+      "version": "2.0.3",
+      "resolved": "https://registry.npmjs.org/object-hash/-/object-hash-2.0.3.tgz",
+      "integrity": "sha512-JPKn0GMu+Fa3zt3Bmr66JhokJU5BaNBIh4ZeTlaCBzrBsOeXzwcKKAK1tbLiPKgvwmPXsDvvLHoWh5Bm7ofIYg=="
+    },
+    "object-inspect": {
+      "version": "1.7.0",
+      "resolved": "https://registry.npmjs.org/object-inspect/-/object-inspect-1.7.0.tgz",
+      "integrity": "sha512-a7pEHdh1xKIAgTySUGgLMx/xwDZskN1Ud6egYYN3EdRW4ZMPNEDUTF+hwy2LUC+Bl+SyLXANnwz/jyh/qutKUw=="
+    },
+    "object-is": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/object-is/-/object-is-1.1.2.tgz",
+      "integrity": "sha512-5lHCz+0uufF6wZ7CRFWJN3hp8Jqblpgve06U5CMQ3f//6iDjPr2PEo9MWCjEssDsa+UZEL4PkFpr+BMop6aKzQ==",
+      "requires": {
+        "define-properties": "^1.1.3",
+        "es-abstract": "^1.17.5"
+      }
+    },
+    "object-keys": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/object-keys/-/object-keys-1.1.1.tgz",
+      "integrity": "sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA=="
+    },
+    "object-path": {
+      "version": "0.11.4",
+      "resolved": "https://registry.npmjs.org/object-path/-/object-path-0.11.4.tgz",
+      "integrity": "sha1-NwrnUvvzfePqcKhhwju6iRVpGUk="
+    },
+    "object-visit": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/object-visit/-/object-visit-1.0.1.tgz",
+      "integrity": "sha1-95xEk68MU3e1n+OdOV5BBC3QRbs=",
+      "requires": {
+        "isobject": "^3.0.0"
+      }
+    },
+    "object.assign": {
+      "version": "4.1.0",
+      "resolved": "https://registry.npmjs.org/object.assign/-/object.assign-4.1.0.tgz",
+      "integrity": "sha512-exHJeq6kBKj58mqGyTQ9DFvrZC/eR6OwxzoM9YRoGBqrXYonaFyGiFMuc9VZrXf7DarreEwMpurG3dd+CNyW5w==",
+      "requires": {
+        "define-properties": "^1.1.2",
+        "function-bind": "^1.1.1",
+        "has-symbols": "^1.0.0",
+        "object-keys": "^1.0.11"
+      }
+    },
+    "object.entries": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/object.entries/-/object.entries-1.1.1.tgz",
+      "integrity": "sha512-ilqR7BgdyZetJutmDPfXCDffGa0/Yzl2ivVNpbx/g4UeWrCdRnFDUBrKJGLhGieRHDATnyZXWBeCb29k9CJysQ==",
+      "requires": {
+        "define-properties": "^1.1.3",
+        "es-abstract": "^1.17.0-next.1",
+        "function-bind": "^1.1.1",
+        "has": "^1.0.3"
+      }
+    },
+    "object.fromentries": {
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/object.fromentries/-/object.fromentries-2.0.2.tgz",
+      "integrity": "sha512-r3ZiBH7MQppDJVLx6fhD618GKNG40CZYH9wgwdhKxBDDbQgjeWGGd4AtkZad84d291YxvWe7bJGuE65Anh0dxQ==",
+      "requires": {
+        "define-properties": "^1.1.3",
+        "es-abstract": "^1.17.0-next.1",
+        "function-bind": "^1.1.1",
+        "has": "^1.0.3"
+      }
+    },
+    "object.getownpropertydescriptors": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/object.getownpropertydescriptors/-/object.getownpropertydescriptors-2.1.0.tgz",
+      "integrity": "sha512-Z53Oah9A3TdLoblT7VKJaTDdXdT+lQO+cNpKVnya5JDe9uLvzu1YyY1yFDFrcxrlRgWrEFH0jJtD/IbuwjcEVg==",
+      "requires": {
+        "define-properties": "^1.1.3",
+        "es-abstract": "^1.17.0-next.1"
+      }
+    },
+    "object.pick": {
+      "version": "1.3.0",
+      "resolved": "https://registry.npmjs.org/object.pick/-/object.pick-1.3.0.tgz",
+      "integrity": "sha1-h6EKxMFpS9Lhy/U1kaZhQftd10c=",
+      "requires": {
+        "isobject": "^3.0.1"
+      }
+    },
+    "object.values": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/object.values/-/object.values-1.1.1.tgz",
+      "integrity": "sha512-WTa54g2K8iu0kmS/us18jEmdv1a4Wi//BZ/DTVYEcH0XhLM5NYdpDHja3gt57VrZLcNAO2WGA+KpWsDBaHt6eA==",
+      "requires": {
+        "define-properties": "^1.1.3",
+        "es-abstract": "^1.17.0-next.1",
+        "function-bind": "^1.1.1",
+        "has": "^1.0.3"
+      }
+    },
+    "obuf": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/obuf/-/obuf-1.1.2.tgz",
+      "integrity": "sha512-PX1wu0AmAdPqOL1mWhqmlOd8kOIZQwGZw6rh7uby9fTc5lhaOWFLX3I6R1hrF9k3zUY40e6igsLGkDXK92LJNg=="
+    },
+    "on-finished": {
+      "version": "2.3.0",
+      "resolved": "https://registry.npmjs.org/on-finished/-/on-finished-2.3.0.tgz",
+      "integrity": "sha1-IPEzZIGwg811M3mSoWlxqi2QaUc=",
+      "requires": {
+        "ee-first": "1.1.1"
+      }
+    },
+    "on-headers": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/on-headers/-/on-headers-1.0.2.tgz",
+      "integrity": "sha512-pZAE+FJLoyITytdqK0U5s+FIpjN0JP3OzFi/u8Rx+EV5/W+JTWGXG8xFzevE7AjBfDqHv/8vL8qQsIhHnqRkrA=="
+    },
+    "once": {
+      "version": "1.4.0",
+      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
+      "integrity": "sha1-WDsap3WWHUsROsF9nFC6753Xa9E=",
+      "requires": {
+        "wrappy": "1"
+      }
+    },
+    "onetime": {
+      "version": "5.1.0",
+      "resolved": "https://registry.npmjs.org/onetime/-/onetime-5.1.0.tgz",
+      "integrity": "sha512-5NcSkPHhwTVFIQN+TUqXoS5+dlElHXdpAWu9I0HP20YOtIi+aZ0Ct82jdlILDxjLEAWwvm+qj1m6aEtsDVmm6Q==",
+      "requires": {
+        "mimic-fn": "^2.1.0"
+      }
+    },
+    "open": {
+      "version": "7.0.3",
+      "resolved": "https://registry.npmjs.org/open/-/open-7.0.3.tgz",
+      "integrity": "sha512-sP2ru2v0P290WFfv49Ap8MF6PkzGNnGlAwHweB4WR4mr5d2d0woiCluUeJ218w7/+PmoBy9JmYgD5A4mLcWOFA==",
+      "requires": {
+        "is-docker": "^2.0.0",
+        "is-wsl": "^2.1.1"
+      },
+      "dependencies": {
+        "is-wsl": {
+          "version": "2.2.0",
+          "resolved": "https://registry.npmjs.org/is-wsl/-/is-wsl-2.2.0.tgz",
+          "integrity": "sha512-fKzAra0rGJUUBwGBgNkHZuToZcn+TtXHpeCgmkMJMMYx1sQDYaCSyjJBSCa2nH1DGm7s3n1oBnohoVTBaN7Lww==",
+          "requires": {
+            "is-docker": "^2.0.0"
+          }
+        }
+      }
+    },
+    "opn": {
+      "version": "5.5.0",
+      "resolved": "https://registry.npmjs.org/opn/-/opn-5.5.0.tgz",
+      "integrity": "sha512-PqHpggC9bLV0VeWcdKhkpxY+3JTzetLSqTCWL/z/tFIbI6G8JCjondXklT1JinczLz2Xib62sSp0T/gKT4KksA==",
+      "requires": {
+        "is-wsl": "^1.1.0"
+      }
+    },
+    "optimize-css-assets-webpack-plugin": {
+      "version": "5.0.3",
+      "resolved": "https://registry.npmjs.org/optimize-css-assets-webpack-plugin/-/optimize-css-assets-webpack-plugin-5.0.3.tgz",
+      "integrity": "sha512-q9fbvCRS6EYtUKKSwI87qm2IxlyJK5b4dygW1rKUBT6mMDhdG5e5bZT63v6tnJR9F9FB/H5a0HTmtw+laUBxKA==",
+      "requires": {
+        "cssnano": "^4.1.10",
+        "last-call-webpack-plugin": "^3.0.0"
+      }
+    },
+    "optionator": {
+      "version": "0.8.3",
+      "resolved": "https://registry.npmjs.org/optionator/-/optionator-0.8.3.tgz",
+      "integrity": "sha512-+IW9pACdk3XWmmTXG8m3upGUJst5XRGzxMRjXzAuJ1XnIFNvfhjjIuYkDvysnPQ7qzqVzLt78BCruntqRhWQbA==",
+      "requires": {
+        "deep-is": "~0.1.3",
+        "fast-levenshtein": "~2.0.6",
+        "levn": "~0.3.0",
+        "prelude-ls": "~1.1.2",
+        "type-check": "~0.3.2",
+        "word-wrap": "~1.2.3"
+      }
+    },
+    "options": {
+      "version": "0.0.6",
+      "resolved": "https://registry.npmjs.org/options/-/options-0.0.6.tgz",
+      "integrity": "sha1-7CLTEoBrtT5zF3Pnza788cZDEo8="
+    },
+    "ora": {
+      "version": "3.4.0",
+      "resolved": "https://registry.npmjs.org/ora/-/ora-3.4.0.tgz",
+      "integrity": "sha512-eNwHudNbO1folBP3JsZ19v9azXWtQZjICdr3Q0TDPIaeBQ3mXLrh54wM+er0+hSp+dWKf+Z8KM58CYzEyIYxYg==",
+      "requires": {
+        "chalk": "^2.4.2",
+        "cli-cursor": "^2.1.0",
+        "cli-spinners": "^2.0.0",
+        "log-symbols": "^2.2.0",
+        "strip-ansi": "^5.2.0",
+        "wcwidth": "^1.0.1"
+      },
+      "dependencies": {
+        "cli-cursor": {
+          "version": "2.1.0",
+          "resolved": "https://registry.npmjs.org/cli-cursor/-/cli-cursor-2.1.0.tgz",
+          "integrity": "sha1-s12sN2R5+sw+lHR9QdDQ9SOP/LU=",
+          "requires": {
+            "restore-cursor": "^2.0.0"
+          }
+        },
+        "mimic-fn": {
+          "version": "1.2.0",
+          "resolved": "https://registry.npmjs.org/mimic-fn/-/mimic-fn-1.2.0.tgz",
+          "integrity": "sha512-jf84uxzwiuiIVKiOLpfYk7N46TSy8ubTonmneY9vrpHNAnp0QBt2BxWV9dO3/j+BoVAb+a5G6YDPW3M5HOdMWQ=="
+        },
+        "onetime": {
+          "version": "2.0.1",
+          "resolved": "https://registry.npmjs.org/onetime/-/onetime-2.0.1.tgz",
+          "integrity": "sha1-BnQoIw/WdEOyeUsiu6UotoZ5YtQ=",
+          "requires": {
+            "mimic-fn": "^1.0.0"
+          }
+        },
+        "restore-cursor": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/restore-cursor/-/restore-cursor-2.0.0.tgz",
+          "integrity": "sha1-n37ih/gv0ybU/RYpI9YhKe7g368=",
+          "requires": {
+            "onetime": "^2.0.0",
+            "signal-exit": "^3.0.2"
+          }
+        }
+      }
+    },
+    "original": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/original/-/original-1.0.2.tgz",
+      "integrity": "sha512-hyBVl6iqqUOJ8FqRe+l/gS8H+kKYjrEndd5Pm1MfBtsEKA038HkkdbAl/72EAXGyonD/PFsvmVG+EvcIpliMBg==",
+      "requires": {
+        "url-parse": "^1.4.3"
+      }
+    },
+    "os-browserify": {
+      "version": "0.3.0",
+      "resolved": "https://registry.npmjs.org/os-browserify/-/os-browserify-0.3.0.tgz",
+      "integrity": "sha1-hUNzx/XCMVkU/Jv8a9gjj92h7Cc="
+    },
+    "os-homedir": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/os-homedir/-/os-homedir-1.0.2.tgz",
+      "integrity": "sha1-/7xJiDNuDoM94MFox+8VISGqf7M=",
+      "dev": true
+    },
+    "os-locale": {
+      "version": "3.1.0",
+      "resolved": "https://registry.npmjs.org/os-locale/-/os-locale-3.1.0.tgz",
+      "integrity": "sha512-Z8l3R4wYWM40/52Z+S265okfFj8Kt2cC2MKY+xNi3kFs+XGI7WXu/I309QQQYbRW4ijiZ+yxs9pqEhJh0DqW3Q==",
+      "requires": {
+        "execa": "^1.0.0",
+        "lcid": "^2.0.0",
+        "mem": "^4.0.0"
+      }
+    },
+    "os-tmpdir": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/os-tmpdir/-/os-tmpdir-1.0.2.tgz",
+      "integrity": "sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ="
+    },
+    "osenv": {
+      "version": "0.1.5",
+      "resolved": "https://registry.npmjs.org/osenv/-/osenv-0.1.5.tgz",
+      "integrity": "sha512-0CWcCECdMVc2Rw3U5w9ZjqX6ga6ubk1xDVKxtBQPK7wis/0F2r9T6k4ydGYhecl7YUBxBVxhL5oisPsNxAPe2g==",
+      "dev": true,
+      "requires": {
+        "os-homedir": "^1.0.0",
+        "os-tmpdir": "^1.0.0"
+      }
+    },
+    "p-defer": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/p-defer/-/p-defer-1.0.0.tgz",
+      "integrity": "sha1-n26xgvbJqozXQwBKfU+WsZaw+ww="
+    },
+    "p-each-series": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/p-each-series/-/p-each-series-1.0.0.tgz",
+      "integrity": "sha1-kw89Et0fUOdDRFeiLNbwSsatf3E=",
+      "requires": {
+        "p-reduce": "^1.0.0"
+      }
+    },
+    "p-finally": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/p-finally/-/p-finally-1.0.0.tgz",
+      "integrity": "sha1-P7z7FbiZpEEjs0ttzBi3JDNqLK4="
+    },
+    "p-is-promise": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/p-is-promise/-/p-is-promise-2.1.0.tgz",
+      "integrity": "sha512-Y3W0wlRPK8ZMRbNq97l4M5otioeA5lm1z7bkNkxCka8HSPjR0xRWmpCmc9utiaLP9Jb1eD8BgeIxTW4AIF45Pg=="
+    },
+    "p-limit": {
+      "version": "1.3.0",
+      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-1.3.0.tgz",
+      "integrity": "sha512-vvcXsLAJ9Dr5rQOPk7toZQZJApBl2K4J6dANSsEuh6QI41JYcsS/qhTGa9ErIUUgK3WNQoJYvylxvjqmiqEA9Q==",
+      "requires": {
+        "p-try": "^1.0.0"
+      }
+    },
+    "p-locate": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-2.0.0.tgz",
+      "integrity": "sha1-IKAQOyIqcMj9OcwuWAaA893l7EM=",
+      "requires": {
+        "p-limit": "^1.1.0"
+      }
+    },
+    "p-map": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/p-map/-/p-map-3.0.0.tgz",
+      "integrity": "sha512-d3qXVTF/s+W+CdJ5A29wywV2n8CQQYahlgz2bFiA+4eVNJbHJodPZ+/gXwPGh0bOqA+j8S+6+ckmvLGPk1QpxQ==",
+      "requires": {
+        "aggregate-error": "^3.0.0"
+      }
+    },
+    "p-reduce": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/p-reduce/-/p-reduce-1.0.0.tgz",
+      "integrity": "sha1-GMKw3ZNqRpClKfgjH1ig/bakffo="
+    },
+    "p-retry": {
+      "version": "3.0.1",
+      "resolved": "https://registry.npmjs.org/p-retry/-/p-retry-3.0.1.tgz",
+      "integrity": "sha512-XE6G4+YTTkT2a0UWb2kjZe8xNwf8bIbnqpc/IS/idOBVhyves0mK5OJgeocjx7q5pvX/6m23xuzVPYT1uGM73w==",
+      "requires": {
+        "retry": "^0.12.0"
+      }
+    },
+    "p-try": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/p-try/-/p-try-1.0.0.tgz",
+      "integrity": "sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M="
+    },
+    "pako": {
+      "version": "1.0.11",
+      "resolved": "https://registry.npmjs.org/pako/-/pako-1.0.11.tgz",
+      "integrity": "sha512-4hLB8Py4zZce5s4yd9XzopqwVv/yGNhV1Bl8NTmCq1763HeK2+EwVTv+leGeL13Dnh2wfbqowVPXCIO0z4taYw=="
+    },
+    "parallel-transform": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/parallel-transform/-/parallel-transform-1.2.0.tgz",
+      "integrity": "sha512-P2vSmIu38uIlvdcU7fDkyrxj33gTUy/ABO5ZUbGowxNCopBq/OoD42bP4UmMrJoPyk4Uqf0mu3mtWBhHCZD8yg==",
+      "requires": {
+        "cyclist": "^1.0.1",
+        "inherits": "^2.0.3",
+        "readable-stream": "^2.1.5"
+      },
+      "dependencies": {
+        "readable-stream": {
+          "version": "2.3.7",
+          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
+          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
+          "requires": {
+            "core-util-is": "~1.0.0",
+            "inherits": "~2.0.3",
+            "isarray": "~1.0.0",
+            "process-nextick-args": "~2.0.0",
+            "safe-buffer": "~5.1.1",
+            "string_decoder": "~1.1.1",
+            "util-deprecate": "~1.0.1"
+          }
+        },
+        "string_decoder": {
+          "version": "1.1.1",
+          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
+          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
+          "requires": {
+            "safe-buffer": "~5.1.0"
+          }
+        }
+      }
+    },
+    "param-case": {
+      "version": "3.0.3",
+      "resolved": "https://registry.npmjs.org/param-case/-/param-case-3.0.3.tgz",
+      "integrity": "sha512-VWBVyimc1+QrzappRs7waeN2YmoZFCGXWASRYX1/rGHtXqEcrGEIDm+jqIwFa2fRXNgQEwrxaYuIrX0WcAguTA==",
+      "requires": {
+        "dot-case": "^3.0.3",
+        "tslib": "^1.10.0"
+      }
+    },
+    "parcel": {
+      "version": "1.12.4",
+      "resolved": "https://registry.npmjs.org/parcel/-/parcel-1.12.4.tgz",
+      "integrity": "sha512-qfc74e2/R4pCoU6L/ZZnK9k3iDS6ir4uHea0e9th9w52eehcAGf2ido/iABq9PBXdsIOe4NSY3oUm7Khe7+S3w==",
+      "dev": true,
+      "requires": {
+        "@babel/code-frame": "^7.0.0",
+        "@babel/core": "^7.4.4",
+        "@babel/generator": "^7.4.4",
+        "@babel/parser": "^7.4.4",
+        "@babel/plugin-transform-flow-strip-types": "^7.4.4",
+        "@babel/plugin-transform-modules-commonjs": "^7.4.4",
+        "@babel/plugin-transform-react-jsx": "^7.0.0",
+        "@babel/preset-env": "^7.4.4",
+        "@babel/runtime": "^7.4.4",
+        "@babel/template": "^7.4.4",
+        "@babel/traverse": "^7.4.4",
+        "@babel/types": "^7.4.4",
+        "@iarna/toml": "^2.2.0",
+        "@parcel/fs": "^1.11.0",
+        "@parcel/logger": "^1.11.1",
+        "@parcel/utils": "^1.11.0",
+        "@parcel/watcher": "^1.12.1",
+        "@parcel/workers": "^1.11.0",
+        "ansi-to-html": "^0.6.4",
+        "babylon-walk": "^1.0.2",
+        "browserslist": "^4.1.0",
+        "chalk": "^2.1.0",
+        "clone": "^2.1.1",
+        "command-exists": "^1.2.6",
+        "commander": "^2.11.0",
+        "core-js": "^2.6.5",
+        "cross-spawn": "^6.0.4",
+        "css-modules-loader-core": "^1.1.0",
+        "cssnano": "^4.0.0",
+        "deasync": "^0.1.14",
+        "dotenv": "^5.0.0",
+        "dotenv-expand": "^5.1.0",
+        "envinfo": "^7.3.1",
+        "fast-glob": "^2.2.2",
+        "filesize": "^3.6.0",
+        "get-port": "^3.2.0",
+        "htmlnano": "^0.2.2",
+        "is-glob": "^4.0.0",
+        "is-url": "^1.2.2",
+        "js-yaml": "^3.10.0",
+        "json5": "^1.0.1",
+        "micromatch": "^3.0.4",
+        "mkdirp": "^0.5.1",
+        "node-forge": "^0.7.1",
+        "node-libs-browser": "^2.0.0",
+        "opn": "^5.1.0",
+        "postcss": "^7.0.11",
+        "postcss-value-parser": "^3.3.1",
+        "posthtml": "^0.11.2",
+        "posthtml-parser": "^0.4.0",
+        "posthtml-render": "^1.1.3",
+        "resolve": "^1.4.0",
+        "semver": "^5.4.1",
+        "serialize-to-js": "^3.0.0",
+        "serve-static": "^1.12.4",
+        "source-map": "0.6.1",
+        "terser": "^3.7.3",
+        "v8-compile-cache": "^2.0.0",
+        "ws": "^5.1.1"
+      },
+      "dependencies": {
+        "clone": {
+          "version": "2.1.2",
+          "resolved": "https://registry.npmjs.org/clone/-/clone-2.1.2.tgz",
+          "integrity": "sha1-G39Ln1kfHo+DZwQBYANFoCiHQ18=",
+          "dev": true
+        },
+        "core-js": {
+          "version": "2.6.11",
+          "resolved": "https://registry.npmjs.org/core-js/-/core-js-2.6.11.tgz",
+          "integrity": "sha512-5wjnpaT/3dV+XB4borEsnAYQchn00XSgTAWKDkEqv+K8KevjbzmofK6hfJ9TZIlpj2N0xQpazy7PiRQiWHqzWg==",
+          "dev": true
+        },
+        "dotenv": {
+          "version": "5.0.1",
+          "resolved": "https://registry.npmjs.org/dotenv/-/dotenv-5.0.1.tgz",
+          "integrity": "sha512-4As8uPrjfwb7VXC+WnLCbXK7y+Ueb2B3zgNCePYfhxS1PYeaO1YTeplffTEcbfLhvFNGLAz90VvJs9yomG7bow==",
+          "dev": true
+        },
+        "filesize": {
+          "version": "3.6.1",
+          "resolved": "https://registry.npmjs.org/filesize/-/filesize-3.6.1.tgz",
+          "integrity": "sha512-7KjR1vv6qnicaPMi1iiTcI85CyYwRO/PSFCu6SvqL8jN2Wjt/NIYQTFtFs7fSDCYOstUkEWIQGFUg5YZQfjlcg==",
+          "dev": true
+        },
+        "json5": {
+          "version": "1.0.1",
+          "resolved": "https://registry.npmjs.org/json5/-/json5-1.0.1.tgz",
+          "integrity": "sha512-aKS4WQjPenRxiQsC93MNfjx+nbF4PAdYzmd/1JIj8HYzqfbu86beTuNgXDzPknWk0n0uARlyewZo4s++ES36Ow==",
+          "dev": true,
+          "requires": {
+            "minimist": "^1.2.0"
+          }
+        },
+        "node-forge": {
+          "version": "0.7.6",
+          "resolved": "https://registry.npmjs.org/node-forge/-/node-forge-0.7.6.tgz",
+          "integrity": "sha512-sol30LUpz1jQFBjOKwbjxijiE3b6pjd74YwfD0fJOKPjF+fONKb2Yg8rYgS6+bK6VDl+/wfr4IYpC7jDzLUIfw==",
+          "dev": true
+        },
+        "postcss-value-parser": {
+          "version": "3.3.1",
+          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
+          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ==",
+          "dev": true
+        },
+        "semver": {
+          "version": "5.7.1",
+          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
+          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
+          "dev": true
+        },
+        "source-map": {
+          "version": "0.6.1",
+          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
+          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
+          "dev": true
+        },
+        "terser": {
+          "version": "3.17.0",
+          "resolved": "https://registry.npmjs.org/terser/-/terser-3.17.0.tgz",
+          "integrity": "sha512-/FQzzPJmCpjAH9Xvk2paiWrFq+5M6aVOf+2KRbwhByISDX/EujxsK+BAvrhb6H+2rtrLCHK9N01wO014vrIwVQ==",
+          "dev": true,
+          "requires": {
+            "commander": "^2.19.0",
+            "source-map": "~0.6.1",
+            "source-map-support": "~0.5.10"
+          }
+        },
+        "ws": {
+          "version": "5.2.2",
+          "resolved": "https://registry.npmjs.org/ws/-/ws-5.2.2.tgz",
+          "integrity": "sha512-jaHFD6PFv6UgoIVda6qZllptQsMlDEJkTQcybzzXDYM1XO9Y8em691FGMPmM46WGyLU4z9KMgQN+qrux/nhlHA==",
+          "dev": true,
+          "requires": {
+            "async-limiter": "~1.0.0"
+          }
+        }
+      }
+    },
+    "parent-module": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz",
+      "integrity": "sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==",
+      "requires": {
+        "callsites": "^3.0.0"
+      },
+      "dependencies": {
+        "callsites": {
+          "version": "3.1.0",
+          "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",
+          "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ=="
+        }
+      }
+    },
+    "parse-asn1": {
+      "version": "5.1.5",
+      "resolved": "https://registry.npmjs.org/parse-asn1/-/parse-asn1-5.1.5.tgz",
+      "integrity": "sha512-jkMYn1dcJqF6d5CpU689bq7w/b5ALS9ROVSpQDPrZsqqesUJii9qutvoT5ltGedNXMO2e16YUWIghG9KxaViTQ==",
+      "requires": {
+        "asn1.js": "^4.0.0",
+        "browserify-aes": "^1.0.0",
+        "create-hash": "^1.1.0",
+        "evp_bytestokey": "^1.0.0",
+        "pbkdf2": "^3.0.3",
+        "safe-buffer": "^5.1.1"
+      }
+    },
+    "parse-json": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/parse-json/-/parse-json-4.0.0.tgz",
+      "integrity": "sha1-vjX1Qlvh9/bHRxhPmKeIy5lHfuA=",
+      "requires": {
+        "error-ex": "^1.3.1",
+        "json-parse-better-errors": "^1.0.1"
+      }
+    },
+    "parse5": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/parse5/-/parse5-4.0.0.tgz",
+      "integrity": "sha512-VrZ7eOd3T1Fk4XWNXMgiGBK/z0MG48BWG2uQNU4I72fkQuKUTZpl+u9k+CxEG0twMVzSmXEEz12z5Fnw1jIQFA=="
+    },
+    "parseurl": {
+      "version": "1.3.3",
+      "resolved": "https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz",
+      "integrity": "sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ=="
+    },
+    "pascal-case": {
+      "version": "3.1.1",
+      "resolved": "https://registry.npmjs.org/pascal-case/-/pascal-case-3.1.1.tgz",
+      "integrity": "sha512-XIeHKqIrsquVTQL2crjq3NfJUxmdLasn3TYOU0VBM+UX2a6ztAWBlJQBePLGY7VHW8+2dRadeIPK5+KImwTxQA==",
+      "requires": {
+        "no-case": "^3.0.3",
+        "tslib": "^1.10.0"
+      }
+    },
+    "pascalcase": {
+      "version": "0.1.1",
+      "resolved": "https://registry.npmjs.org/pascalcase/-/pascalcase-0.1.1.tgz",
+      "integrity": "sha1-s2PlXoAGym/iF4TS2yK9FdeRfxQ="
+    },
+    "path-browserify": {
+      "version": "0.0.1",
+      "resolved": "https://registry.npmjs.org/path-browserify/-/path-browserify-0.0.1.tgz",
+      "integrity": "sha512-BapA40NHICOS+USX9SN4tyhq+A2RrN/Ws5F0Z5aMHDp98Fl86lX8Oti8B7uN93L4Ifv4fHOEA+pQw87gmMO/lQ=="
+    },
+    "path-dirname": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/path-dirname/-/path-dirname-1.0.2.tgz",
+      "integrity": "sha1-zDPSTVJeCZpTiMAzbG4yuRYGCeA="
+    },
+    "path-exists": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-3.0.0.tgz",
+      "integrity": "sha1-zg6+ql94yxiSXqfYENe1mwEP1RU="
+    },
+    "path-is-absolute": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
+      "integrity": "sha1-F0uSaHNVNP+8es5r9TpanhtcX18="
+    },
+    "path-is-inside": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/path-is-inside/-/path-is-inside-1.0.2.tgz",
+      "integrity": "sha1-NlQX3t5EQw0cEa9hAn+s8HS9/FM="
+    },
+    "path-key": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/path-key/-/path-key-2.0.1.tgz",
+      "integrity": "sha1-QRyttXTFoUDTpLGRDUDYDMn0C0A="
+    },
+    "path-parse": {
+      "version": "1.0.6",
+      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.6.tgz",
+      "integrity": "sha512-GSmOT2EbHrINBf9SR7CDELwlJ8AENk3Qn7OikK4nFYAu3Ote2+JYNVvkpAEQm3/TLNEJFD/xZJjzyxg3KBWOzw=="
+    },
+    "path-to-regexp": {
+      "version": "0.1.7",
+      "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.7.tgz",
+      "integrity": "sha1-32BBeABfUi8V60SQ5yR6G/qmf4w="
+    },
+    "path-type": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/path-type/-/path-type-3.0.0.tgz",
+      "integrity": "sha512-T2ZUsdZFHgA3u4e5PfPbjd7HDDpxPnQb5jN0SrDsjNSuVXHJqtwTnWqG0B1jZrgmJ/7lj1EmVIByWt1gxGkWvg==",
+      "requires": {
+        "pify": "^3.0.0"
+      }
+    },
+    "pbkdf2": {
+      "version": "3.0.17",
+      "resolved": "https://registry.npmjs.org/pbkdf2/-/pbkdf2-3.0.17.tgz",
+      "integrity": "sha512-U/il5MsrZp7mGg3mSQfn742na2T+1/vHDCG5/iTI3X9MKUuYUZVLQhyRsg06mCgDBTd57TxzgZt7P+fYfjRLtA==",
+      "requires": {
+        "create-hash": "^1.1.2",
+        "create-hmac": "^1.1.4",
+        "ripemd160": "^2.0.1",
+        "safe-buffer": "^5.0.1",
+        "sha.js": "^2.4.8"
+      }
+    },
+    "performance-now": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/performance-now/-/performance-now-2.1.0.tgz",
+      "integrity": "sha1-Ywn04OX6kT7BxpMHrjZLSzd8nns="
+    },
+    "physical-cpu-count": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/physical-cpu-count/-/physical-cpu-count-2.0.0.tgz",
+      "integrity": "sha1-GN4vl+S/epVRrXURlCtUlverpmA=",
+      "dev": true
+    },
+    "picomatch": {
+      "version": "2.2.2",
+      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.2.2.tgz",
+      "integrity": "sha512-q0M/9eZHzmr0AulXyPwNfZjtwZ/RBZlbN3K3CErVrk50T2ASYI7Bye0EvekFY3IP1Nt2DHu0re+V2ZHIpMkuWg=="
+    },
+    "pify": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/pify/-/pify-3.0.0.tgz",
+      "integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
+    },
+    "pinkie": {
+      "version": "2.0.4",
+      "resolved": "https://registry.npmjs.org/pinkie/-/pinkie-2.0.4.tgz",
+      "integrity": "sha1-clVrgM+g1IqXToDnckjoDtT3+HA="
+    },
+    "pinkie-promise": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/pinkie-promise/-/pinkie-promise-2.0.1.tgz",
+      "integrity": "sha1-ITXW36ejWMBprJsXh3YogihFD/o=",
+      "requires": {
+        "pinkie": "^2.0.0"
+      }
+    },
+    "pirates": {
+      "version": "4.0.1",
+      "resolved": "https://registry.npmjs.org/pirates/-/pirates-4.0.1.tgz",
+      "integrity": "sha512-WuNqLTbMI3tmfef2TKxlQmAiLHKtFhlsCZnPIpuv2Ow0RDVO8lfy1Opf4NUzlMXLjPl+Men7AuVdX6TA+s+uGA==",
+      "requires": {
+        "node-modules-regexp": "^1.0.0"
+      }
+    },
+    "pkg-dir": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/pkg-dir/-/pkg-dir-3.0.0.tgz",
+      "integrity": "sha512-/E57AYkoeQ25qkxMj5PBOVgF8Kiu/h7cYS30Z5+R7WaiCCBfLq58ZI/dSeaEKb9WVJV5n/03QwrN3IeWIFllvw==",
+      "requires": {
+        "find-up": "^3.0.0"
+      },
+      "dependencies": {
+        "find-up": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/find-up/-/find-up-3.0.0.tgz",
+          "integrity": "sha512-1yD6RmLI1XBfxugvORwlck6f75tYL+iR0jqwsOrOxMZyGYqUuDhJ0l4AXdO1iX/FTs9cBAMEk1gWSEx1kSbylg==",
+          "requires": {
+            "locate-path": "^3.0.0"
+          }
+        },
+        "locate-path": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-3.0.0.tgz",
+          "integrity": "sha512-7AO748wWnIhNqAuaty2ZWHkQHRSNfPVIsPIfwEOWO22AmaoVrWavlOcMR5nzTLNYvp36X220/maaRsrec1G65A==",
+          "requires": {
+            "p-locate": "^3.0.0",
+            "path-exists": "^3.0.0"
+          }
+        },
+        "p-limit": {
+          "version": "2.3.0",
+          "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz",
+          "integrity": "sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==",
+          "requires": {
+            "p-try": "^2.0.0"
+          }
+        },
+        "p-locate": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-3.0.0.tgz",
+          "integrity": "sha512-x+12w/To+4GFfgJhBEpiDcLozRJGegY+Ei7/z0tSLkMmxGZNybVMSfWj9aJn8Z5Fc7dBUNJOOVgPv2H7IwulSQ==",
+          "requires": {
+            "p-limit": "^2.0.0"
+          }
+        },
+        "p-try": {
+          "version": "2.2.0",
+          "resolved": "https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz",
+          "integrity": "sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ=="
+        }
+      }
+    },
+    "pkg-up": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/pkg-up/-/pkg-up-2.0.0.tgz",
+      "integrity": "sha1-yBmscoBZpGHKscOImivjxJoATX8=",
+      "requires": {
+        "find-up": "^2.1.0"
+      }
+    },
+    "pn": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/pn/-/pn-1.1.0.tgz",
+      "integrity": "sha512-2qHaIQr2VLRFoxe2nASzsV6ef4yOOH+Fi9FBOVH6cqeSgUnoyySPZkxzLuzd+RYOQTRpROA0ztTMqxROKSb/nA=="
+    },
+    "pnp-webpack-plugin": {
+      "version": "1.6.4",
+      "resolved": "https://registry.npmjs.org/pnp-webpack-plugin/-/pnp-webpack-plugin-1.6.4.tgz",
+      "integrity": "sha512-7Wjy+9E3WwLOEL30D+m8TSTF7qJJUJLONBnwQp0518siuMxUQUbgZwssaFX+QKlZkjHZcw/IpZCt/H0srrntSg==",
+      "requires": {
+        "ts-pnp": "^1.1.6"
+      }
+    },
+    "popper.js": {
+      "version": "1.16.1",
+      "resolved": "https://registry.npmjs.org/popper.js/-/popper.js-1.16.1.tgz",
+      "integrity": "sha512-Wb4p1J4zyFTbM+u6WuO4XstYx4Ky9Cewe4DWrel7B0w6VVICvPwdOpotjzcf6eD8TsckVnIMNONQyPIUFOUbCQ=="
+    },
+    "portfinder": {
+      "version": "1.0.26",
+      "resolved": "https://registry.npmjs.org/portfinder/-/portfinder-1.0.26.tgz",
+      "integrity": "sha512-Xi7mKxJHHMI3rIUrnm/jjUgwhbYMkp/XKEcZX3aG4BrumLpq3nmoQMX+ClYnDZnZ/New7IatC1no5RX0zo1vXQ==",
+      "requires": {
+        "async": "^2.6.2",
+        "debug": "^3.1.1",
+        "mkdirp": "^0.5.1"
+      },
+      "dependencies": {
+        "debug": {
+          "version": "3.2.6",
+          "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.6.tgz",
+          "integrity": "sha512-mel+jf7nrtEl5Pn1Qx46zARXKDpBbvzezse7p7LqINmdoIk8PYP5SySaxEmYv6TZ0JyEKA1hsCId6DIhgITtWQ==",
+          "requires": {
+            "ms": "^2.1.1"
+          }
+        }
+      }
+    },
+    "posix-character-classes": {
+      "version": "0.1.1",
+      "resolved": "https://registry.npmjs.org/posix-character-classes/-/posix-character-classes-0.1.1.tgz",
+      "integrity": "sha1-AerA/jta9xoqbAL+q7jB/vfgDqs="
+    },
+    "postcss": {
+      "version": "7.0.28",
+      "resolved": "https://registry.npmjs.org/postcss/-/postcss-7.0.28.tgz",
+      "integrity": "sha512-YU6nVhyWIsVtlNlnAj1fHTsUKW5qxm3KEgzq2Jj6KTEFOTK8QWR12eIDvrlWhiSTK8WIBFTBhOJV4DY6dUuEbw==",
+      "requires": {
+        "chalk": "^2.4.2",
+        "source-map": "^0.6.1",
+        "supports-color": "^6.1.0"
+      },
+      "dependencies": {
+        "source-map": {
+          "version": "0.6.1",
+          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
+          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="
+        },
+        "supports-color": {
+          "version": "6.1.0",
+          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-6.1.0.tgz",
+          "integrity": "sha512-qe1jfm1Mg7Nq/NSh6XE24gPXROEVsWHxC1LIx//XNlD9iw7YZQGjZNjYN7xGaEG6iKdA8EtNFW6R0gjnVXp+wQ==",
+          "requires": {
+            "has-flag": "^3.0.0"
+          }
+        }
+      }
+    },
+    "postcss-attribute-case-insensitive": {
+      "version": "4.0.2",
+      "resolved": "https://registry.npmjs.org/postcss-attribute-case-insensitive/-/postcss-attribute-case-insensitive-4.0.2.tgz",
+      "integrity": "sha512-clkFxk/9pcdb4Vkn0hAHq3YnxBQ2p0CGD1dy24jN+reBck+EWxMbxSUqN4Yj7t0w8csl87K6p0gxBe1utkJsYA==",
+      "requires": {
+        "postcss": "^7.0.2",
+        "postcss-selector-parser": "^6.0.2"
+      }
+    },
+    "postcss-browser-comments": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/postcss-browser-comments/-/postcss-browser-comments-3.0.0.tgz",
+      "integrity": "sha512-qfVjLfq7HFd2e0HW4s1dvU8X080OZdG46fFbIBFjW7US7YPDcWfRvdElvwMJr2LI6hMmD+7LnH2HcmXTs+uOig==",
+      "requires": {
+        "postcss": "^7"
+      }
+    },
+    "postcss-calc": {
+      "version": "7.0.2",
+      "resolved": "https://registry.npmjs.org/postcss-calc/-/postcss-calc-7.0.2.tgz",
+      "integrity": "sha512-rofZFHUg6ZIrvRwPeFktv06GdbDYLcGqh9EwiMutZg+a0oePCCw1zHOEiji6LCpyRcjTREtPASuUqeAvYlEVvQ==",
+      "requires": {
+        "postcss": "^7.0.27",
+        "postcss-selector-parser": "^6.0.2",
+        "postcss-value-parser": "^4.0.2"
+      }
+    },
+    "postcss-color-functional-notation": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/postcss-color-functional-notation/-/postcss-color-functional-notation-2.0.1.tgz",
+      "integrity": "sha512-ZBARCypjEDofW4P6IdPVTLhDNXPRn8T2s1zHbZidW6rPaaZvcnCS2soYFIQJrMZSxiePJ2XIYTlcb2ztr/eT2g==",
+      "requires": {
+        "postcss": "^7.0.2",
+        "postcss-values-parser": "^2.0.0"
+      }
+    },
+    "postcss-color-gray": {
+      "version": "5.0.0",
+      "resolved": "https://registry.npmjs.org/postcss-color-gray/-/postcss-color-gray-5.0.0.tgz",
+      "integrity": "sha512-q6BuRnAGKM/ZRpfDascZlIZPjvwsRye7UDNalqVz3s7GDxMtqPY6+Q871liNxsonUw8oC61OG+PSaysYpl1bnw==",
+      "requires": {
+        "@csstools/convert-colors": "^1.4.0",
+        "postcss": "^7.0.5",
+        "postcss-values-parser": "^2.0.0"
+      }
+    },
+    "postcss-color-hex-alpha": {
+      "version": "5.0.3",
+      "resolved": "https://registry.npmjs.org/postcss-color-hex-alpha/-/postcss-color-hex-alpha-5.0.3.tgz",
+      "integrity": "sha512-PF4GDel8q3kkreVXKLAGNpHKilXsZ6xuu+mOQMHWHLPNyjiUBOr75sp5ZKJfmv1MCus5/DWUGcK9hm6qHEnXYw==",
+      "requires": {
+        "postcss": "^7.0.14",
+        "postcss-values-parser": "^2.0.1"
+      }
+    },
+    "postcss-color-mod-function": {
+      "version": "3.0.3",
+      "resolved": "https://registry.npmjs.org/postcss-color-mod-function/-/postcss-color-mod-function-3.0.3.tgz",
+      "integrity": "sha512-YP4VG+xufxaVtzV6ZmhEtc+/aTXH3d0JLpnYfxqTvwZPbJhWqp8bSY3nfNzNRFLgB4XSaBA82OE4VjOOKpCdVQ==",
+      "requires": {
+        "@csstools/convert-colors": "^1.4.0",
+        "postcss": "^7.0.2",
+        "postcss-values-parser": "^2.0.0"
+      }
+    },
+    "postcss-color-rebeccapurple": {
+      "version": "4.0.1",
+      "resolved": "https://registry.npmjs.org/postcss-color-rebeccapurple/-/postcss-color-rebeccapurple-4.0.1.tgz",
+      "integrity": "sha512-aAe3OhkS6qJXBbqzvZth2Au4V3KieR5sRQ4ptb2b2O8wgvB3SJBsdG+jsn2BZbbwekDG8nTfcCNKcSfe/lEy8g==",
+      "requires": {
+        "postcss": "^7.0.2",
+        "postcss-values-parser": "^2.0.0"
+      }
+    },
+    "postcss-colormin": {
+      "version": "4.0.3",
+      "resolved": "https://registry.npmjs.org/postcss-colormin/-/postcss-colormin-4.0.3.tgz",
+      "integrity": "sha512-WyQFAdDZpExQh32j0U0feWisZ0dmOtPl44qYmJKkq9xFWY3p+4qnRzCHeNrkeRhwPHz9bQ3mo0/yVkaply0MNw==",
+      "requires": {
+        "browserslist": "^4.0.0",
+        "color": "^3.0.0",
+        "has": "^1.0.0",
+        "postcss": "^7.0.0",
+        "postcss-value-parser": "^3.0.0"
+      },
+      "dependencies": {
+        "postcss-value-parser": {
+          "version": "3.3.1",
+          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
+          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ=="
+        }
+      }
+    },
+    "postcss-convert-values": {
+      "version": "4.0.1",
+      "resolved": "https://registry.npmjs.org/postcss-convert-values/-/postcss-convert-values-4.0.1.tgz",
+      "integrity": "sha512-Kisdo1y77KUC0Jmn0OXU/COOJbzM8cImvw1ZFsBgBgMgb1iL23Zs/LXRe3r+EZqM3vGYKdQ2YJVQ5VkJI+zEJQ==",
+      "requires": {
+        "postcss": "^7.0.0",
+        "postcss-value-parser": "^3.0.0"
+      },
+      "dependencies": {
+        "postcss-value-parser": {
+          "version": "3.3.1",
+          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
+          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ=="
+        }
+      }
+    },
+    "postcss-custom-media": {
+      "version": "7.0.8",
+      "resolved": "https://registry.npmjs.org/postcss-custom-media/-/postcss-custom-media-7.0.8.tgz",
+      "integrity": "sha512-c9s5iX0Ge15o00HKbuRuTqNndsJUbaXdiNsksnVH8H4gdc+zbLzr/UasOwNG6CTDpLFekVY4672eWdiiWu2GUg==",
+      "requires": {
+        "postcss": "^7.0.14"
+      }
+    },
+    "postcss-custom-properties": {
+      "version": "8.0.11",
+      "resolved": "https://registry.npmjs.org/postcss-custom-properties/-/postcss-custom-properties-8.0.11.tgz",
+      "integrity": "sha512-nm+o0eLdYqdnJ5abAJeXp4CEU1c1k+eB2yMCvhgzsds/e0umabFrN6HoTy/8Q4K5ilxERdl/JD1LO5ANoYBeMA==",
+      "requires": {
+        "postcss": "^7.0.17",
+        "postcss-values-parser": "^2.0.1"
+      }
+    },
+    "postcss-custom-selectors": {
+      "version": "5.1.2",
+      "resolved": "https://registry.npmjs.org/postcss-custom-selectors/-/postcss-custom-selectors-5.1.2.tgz",
+      "integrity": "sha512-DSGDhqinCqXqlS4R7KGxL1OSycd1lydugJ1ky4iRXPHdBRiozyMHrdu0H3o7qNOCiZwySZTUI5MV0T8QhCLu+w==",
+      "requires": {
+        "postcss": "^7.0.2",
+        "postcss-selector-parser": "^5.0.0-rc.3"
+      },
+      "dependencies": {
+        "cssesc": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/cssesc/-/cssesc-2.0.0.tgz",
+          "integrity": "sha512-MsCAG1z9lPdoO/IUMLSBWBSVxVtJ1395VGIQ+Fc2gNdkQ1hNDnQdw3YhA71WJCBW1vdwA0cAnk/DnW6bqoEUYg=="
+        },
+        "postcss-selector-parser": {
+          "version": "5.0.0",
+          "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-5.0.0.tgz",
+          "integrity": "sha512-w+zLE5Jhg6Liz8+rQOWEAwtwkyqpfnmsinXjXg6cY7YIONZZtgvE0v2O0uhQBs0peNomOJwWRKt6JBfTdTd3OQ==",
+          "requires": {
+            "cssesc": "^2.0.0",
+            "indexes-of": "^1.0.1",
+            "uniq": "^1.0.1"
+          }
+        }
+      }
+    },
+    "postcss-dir-pseudo-class": {
+      "version": "5.0.0",
+      "resolved": "https://registry.npmjs.org/postcss-dir-pseudo-class/-/postcss-dir-pseudo-class-5.0.0.tgz",
+      "integrity": "sha512-3pm4oq8HYWMZePJY+5ANriPs3P07q+LW6FAdTlkFH2XqDdP4HeeJYMOzn0HYLhRSjBO3fhiqSwwU9xEULSrPgw==",
+      "requires": {
+        "postcss": "^7.0.2",
+        "postcss-selector-parser": "^5.0.0-rc.3"
+      },
+      "dependencies": {
+        "cssesc": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/cssesc/-/cssesc-2.0.0.tgz",
+          "integrity": "sha512-MsCAG1z9lPdoO/IUMLSBWBSVxVtJ1395VGIQ+Fc2gNdkQ1hNDnQdw3YhA71WJCBW1vdwA0cAnk/DnW6bqoEUYg=="
+        },
+        "postcss-selector-parser": {
+          "version": "5.0.0",
+          "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-5.0.0.tgz",
+          "integrity": "sha512-w+zLE5Jhg6Liz8+rQOWEAwtwkyqpfnmsinXjXg6cY7YIONZZtgvE0v2O0uhQBs0peNomOJwWRKt6JBfTdTd3OQ==",
+          "requires": {
+            "cssesc": "^2.0.0",
+            "indexes-of": "^1.0.1",
+            "uniq": "^1.0.1"
+          }
+        }
+      }
+    },
+    "postcss-discard-comments": {
+      "version": "4.0.2",
+      "resolved": "https://registry.npmjs.org/postcss-discard-comments/-/postcss-discard-comments-4.0.2.tgz",
+      "integrity": "sha512-RJutN259iuRf3IW7GZyLM5Sw4GLTOH8FmsXBnv8Ab/Tc2k4SR4qbV4DNbyyY4+Sjo362SyDmW2DQ7lBSChrpkg==",
+      "requires": {
+        "postcss": "^7.0.0"
+      }
+    },
+    "postcss-discard-duplicates": {
+      "version": "4.0.2",
+      "resolved": "https://registry.npmjs.org/postcss-discard-duplicates/-/postcss-discard-duplicates-4.0.2.tgz",
+      "integrity": "sha512-ZNQfR1gPNAiXZhgENFfEglF93pciw0WxMkJeVmw8eF+JZBbMD7jp6C67GqJAXVZP2BWbOztKfbsdmMp/k8c6oQ==",
+      "requires": {
+        "postcss": "^7.0.0"
+      }
+    },
+    "postcss-discard-empty": {
+      "version": "4.0.1",
+      "resolved": "https://registry.npmjs.org/postcss-discard-empty/-/postcss-discard-empty-4.0.1.tgz",
+      "integrity": "sha512-B9miTzbznhDjTfjvipfHoqbWKwd0Mj+/fL5s1QOz06wufguil+Xheo4XpOnc4NqKYBCNqqEzgPv2aPBIJLox0w==",
+      "requires": {
+        "postcss": "^7.0.0"
+      }
+    },
+    "postcss-discard-overridden": {
+      "version": "4.0.1",
+      "resolved": "https://registry.npmjs.org/postcss-discard-overridden/-/postcss-discard-overridden-4.0.1.tgz",
+      "integrity": "sha512-IYY2bEDD7g1XM1IDEsUT4//iEYCxAmP5oDSFMVU/JVvT7gh+l4fmjciLqGgwjdWpQIdb0Che2VX00QObS5+cTg==",
+      "requires": {
+        "postcss": "^7.0.0"
+      }
+    },
+    "postcss-double-position-gradients": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/postcss-double-position-gradients/-/postcss-double-position-gradients-1.0.0.tgz",
+      "integrity": "sha512-G+nV8EnQq25fOI8CH/B6krEohGWnF5+3A6H/+JEpOncu5dCnkS1QQ6+ct3Jkaepw1NGVqqOZH6lqrm244mCftA==",
+      "requires": {
+        "postcss": "^7.0.5",
+        "postcss-values-parser": "^2.0.0"
+      }
+    },
+    "postcss-env-function": {
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/postcss-env-function/-/postcss-env-function-2.0.2.tgz",
+      "integrity": "sha512-rwac4BuZlITeUbiBq60h/xbLzXY43qOsIErngWa4l7Mt+RaSkT7QBjXVGTcBHupykkblHMDrBFh30zchYPaOUw==",
+      "requires": {
+        "postcss": "^7.0.2",
+        "postcss-values-parser": "^2.0.0"
+      }
+    },
+    "postcss-flexbugs-fixes": {
+      "version": "4.1.0",
+      "resolved": "https://registry.npmjs.org/postcss-flexbugs-fixes/-/postcss-flexbugs-fixes-4.1.0.tgz",
+      "integrity": "sha512-jr1LHxQvStNNAHlgco6PzY308zvLklh7SJVYuWUwyUQncofaAlD2l+P/gxKHOdqWKe7xJSkVLFF/2Tp+JqMSZA==",
+      "requires": {
+        "postcss": "^7.0.0"
+      }
+    },
+    "postcss-focus-visible": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/postcss-focus-visible/-/postcss-focus-visible-4.0.0.tgz",
+      "integrity": "sha512-Z5CkWBw0+idJHSV6+Bgf2peDOFf/x4o+vX/pwcNYrWpXFrSfTkQ3JQ1ojrq9yS+upnAlNRHeg8uEwFTgorjI8g==",
+      "requires": {
+        "postcss": "^7.0.2"
+      }
+    },
+    "postcss-focus-within": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/postcss-focus-within/-/postcss-focus-within-3.0.0.tgz",
+      "integrity": "sha512-W0APui8jQeBKbCGZudW37EeMCjDeVxKgiYfIIEo8Bdh5SpB9sxds/Iq8SEuzS0Q4YFOlG7EPFulbbxujpkrV2w==",
+      "requires": {
+        "postcss": "^7.0.2"
+      }
+    },
+    "postcss-font-variant": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/postcss-font-variant/-/postcss-font-variant-4.0.0.tgz",
+      "integrity": "sha512-M8BFYKOvCrI2aITzDad7kWuXXTm0YhGdP9Q8HanmN4EF1Hmcgs1KK5rSHylt/lUJe8yLxiSwWAHdScoEiIxztg==",
+      "requires": {
+        "postcss": "^7.0.2"
+      }
+    },
+    "postcss-gap-properties": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/postcss-gap-properties/-/postcss-gap-properties-2.0.0.tgz",
+      "integrity": "sha512-QZSqDaMgXCHuHTEzMsS2KfVDOq7ZFiknSpkrPJY6jmxbugUPTuSzs/vuE5I3zv0WAS+3vhrlqhijiprnuQfzmg==",
+      "requires": {
+        "postcss": "^7.0.2"
+      }
+    },
+    "postcss-image-set-function": {
+      "version": "3.0.1",
+      "resolved": "https://registry.npmjs.org/postcss-image-set-function/-/postcss-image-set-function-3.0.1.tgz",
+      "integrity": "sha512-oPTcFFip5LZy8Y/whto91L9xdRHCWEMs3e1MdJxhgt4jy2WYXfhkng59fH5qLXSCPN8k4n94p1Czrfe5IOkKUw==",
+      "requires": {
+        "postcss": "^7.0.2",
+        "postcss-values-parser": "^2.0.0"
+      }
+    },
+    "postcss-initial": {
+      "version": "3.0.2",
+      "resolved": "https://registry.npmjs.org/postcss-initial/-/postcss-initial-3.0.2.tgz",
+      "integrity": "sha512-ugA2wKonC0xeNHgirR4D3VWHs2JcU08WAi1KFLVcnb7IN89phID6Qtg2RIctWbnvp1TM2BOmDtX8GGLCKdR8YA==",
+      "requires": {
+        "lodash.template": "^4.5.0",
+        "postcss": "^7.0.2"
+      }
+    },
+    "postcss-lab-function": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/postcss-lab-function/-/postcss-lab-function-2.0.1.tgz",
+      "integrity": "sha512-whLy1IeZKY+3fYdqQFuDBf8Auw+qFuVnChWjmxm/UhHWqNHZx+B99EwxTvGYmUBqe3Fjxs4L1BoZTJmPu6usVg==",
+      "requires": {
+        "@csstools/convert-colors": "^1.4.0",
+        "postcss": "^7.0.2",
+        "postcss-values-parser": "^2.0.0"
+      }
+    },
+    "postcss-load-config": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/postcss-load-config/-/postcss-load-config-2.1.0.tgz",
+      "integrity": "sha512-4pV3JJVPLd5+RueiVVB+gFOAa7GWc25XQcMp86Zexzke69mKf6Nx9LRcQywdz7yZI9n1udOxmLuAwTBypypF8Q==",
+      "requires": {
+        "cosmiconfig": "^5.0.0",
+        "import-cwd": "^2.0.0"
+      }
+    },
+    "postcss-loader": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/postcss-loader/-/postcss-loader-3.0.0.tgz",
+      "integrity": "sha512-cLWoDEY5OwHcAjDnkyRQzAXfs2jrKjXpO/HQFcc5b5u/r7aa471wdmChmwfnv7x2u840iat/wi0lQ5nbRgSkUA==",
+      "requires": {
+        "loader-utils": "^1.1.0",
+        "postcss": "^7.0.0",
+        "postcss-load-config": "^2.0.0",
+        "schema-utils": "^1.0.0"
+      },
+      "dependencies": {
+        "schema-utils": {
+          "version": "1.0.0",
+          "resolved": "https://registry.npmjs.org/schema-utils/-/schema-utils-1.0.0.tgz",
+          "integrity": "sha512-i27Mic4KovM/lnGsy8whRCHhc7VicJajAjTrYg11K9zfZXnYIt4k5F+kZkwjnrhKzLic/HLU4j11mjsz2G/75g==",
+          "requires": {
+            "ajv": "^6.1.0",
+            "ajv-errors": "^1.0.0",
+            "ajv-keywords": "^3.1.0"
+          }
+        }
+      }
+    },
+    "postcss-logical": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/postcss-logical/-/postcss-logical-3.0.0.tgz",
+      "integrity": "sha512-1SUKdJc2vuMOmeItqGuNaC+N8MzBWFWEkAnRnLpFYj1tGGa7NqyVBujfRtgNa2gXR+6RkGUiB2O5Vmh7E2RmiA==",
+      "requires": {
+        "postcss": "^7.0.2"
+      }
+    },
+    "postcss-media-minmax": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/postcss-media-minmax/-/postcss-media-minmax-4.0.0.tgz",
+      "integrity": "sha512-fo9moya6qyxsjbFAYl97qKO9gyre3qvbMnkOZeZwlsW6XYFsvs2DMGDlchVLfAd8LHPZDxivu/+qW2SMQeTHBw==",
+      "requires": {
+        "postcss": "^7.0.2"
+      }
+    },
+    "postcss-merge-longhand": {
+      "version": "4.0.11",
+      "resolved": "https://registry.npmjs.org/postcss-merge-longhand/-/postcss-merge-longhand-4.0.11.tgz",
+      "integrity": "sha512-alx/zmoeXvJjp7L4mxEMjh8lxVlDFX1gqWHzaaQewwMZiVhLo42TEClKaeHbRf6J7j82ZOdTJ808RtN0ZOZwvw==",
+      "requires": {
+        "css-color-names": "0.0.4",
+        "postcss": "^7.0.0",
+        "postcss-value-parser": "^3.0.0",
+        "stylehacks": "^4.0.0"
+      },
+      "dependencies": {
+        "postcss-value-parser": {
+          "version": "3.3.1",
+          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
+          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ=="
+        }
+      }
+    },
+    "postcss-merge-rules": {
+      "version": "4.0.3",
+      "resolved": "https://registry.npmjs.org/postcss-merge-rules/-/postcss-merge-rules-4.0.3.tgz",
+      "integrity": "sha512-U7e3r1SbvYzO0Jr3UT/zKBVgYYyhAz0aitvGIYOYK5CPmkNih+WDSsS5tvPrJ8YMQYlEMvsZIiqmn7HdFUaeEQ==",
+      "requires": {
+        "browserslist": "^4.0.0",
+        "caniuse-api": "^3.0.0",
+        "cssnano-util-same-parent": "^4.0.0",
+        "postcss": "^7.0.0",
+        "postcss-selector-parser": "^3.0.0",
+        "vendors": "^1.0.0"
+      },
+      "dependencies": {
+        "postcss-selector-parser": {
+          "version": "3.1.2",
+          "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-3.1.2.tgz",
+          "integrity": "sha512-h7fJ/5uWuRVyOtkO45pnt1Ih40CEleeyCHzipqAZO2e5H20g25Y48uYnFUiShvY4rZWNJ/Bib/KVPmanaCtOhA==",
+          "requires": {
+            "dot-prop": "^5.2.0",
+            "indexes-of": "^1.0.1",
+            "uniq": "^1.0.1"
+          }
+        }
+      }
+    },
+    "postcss-minify-font-values": {
+      "version": "4.0.2",
+      "resolved": "https://registry.npmjs.org/postcss-minify-font-values/-/postcss-minify-font-values-4.0.2.tgz",
+      "integrity": "sha512-j85oO6OnRU9zPf04+PZv1LYIYOprWm6IA6zkXkrJXyRveDEuQggG6tvoy8ir8ZwjLxLuGfNkCZEQG7zan+Hbtg==",
+      "requires": {
+        "postcss": "^7.0.0",
+        "postcss-value-parser": "^3.0.0"
+      },
+      "dependencies": {
+        "postcss-value-parser": {
+          "version": "3.3.1",
+          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
+          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ=="
+        }
+      }
+    },
+    "postcss-minify-gradients": {
+      "version": "4.0.2",
+      "resolved": "https://registry.npmjs.org/postcss-minify-gradients/-/postcss-minify-gradients-4.0.2.tgz",
+      "integrity": "sha512-qKPfwlONdcf/AndP1U8SJ/uzIJtowHlMaSioKzebAXSG4iJthlWC9iSWznQcX4f66gIWX44RSA841HTHj3wK+Q==",
+      "requires": {
+        "cssnano-util-get-arguments": "^4.0.0",
+        "is-color-stop": "^1.0.0",
+        "postcss": "^7.0.0",
+        "postcss-value-parser": "^3.0.0"
+      },
+      "dependencies": {
+        "postcss-value-parser": {
+          "version": "3.3.1",
+          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
+          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ=="
+        }
+      }
+    },
+    "postcss-minify-params": {
+      "version": "4.0.2",
+      "resolved": "https://registry.npmjs.org/postcss-minify-params/-/postcss-minify-params-4.0.2.tgz",
+      "integrity": "sha512-G7eWyzEx0xL4/wiBBJxJOz48zAKV2WG3iZOqVhPet/9geefm/Px5uo1fzlHu+DOjT+m0Mmiz3jkQzVHe6wxAWg==",
+      "requires": {
+        "alphanum-sort": "^1.0.0",
+        "browserslist": "^4.0.0",
+        "cssnano-util-get-arguments": "^4.0.0",
+        "postcss": "^7.0.0",
+        "postcss-value-parser": "^3.0.0",
+        "uniqs": "^2.0.0"
+      },
+      "dependencies": {
+        "postcss-value-parser": {
+          "version": "3.3.1",
+          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
+          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ=="
+        }
+      }
+    },
+    "postcss-minify-selectors": {
+      "version": "4.0.2",
+      "resolved": "https://registry.npmjs.org/postcss-minify-selectors/-/postcss-minify-selectors-4.0.2.tgz",
+      "integrity": "sha512-D5S1iViljXBj9kflQo4YutWnJmwm8VvIsU1GeXJGiG9j8CIg9zs4voPMdQDUmIxetUOh60VilsNzCiAFTOqu3g==",
+      "requires": {
+        "alphanum-sort": "^1.0.0",
+        "has": "^1.0.0",
+        "postcss": "^7.0.0",
+        "postcss-selector-parser": "^3.0.0"
+      },
+      "dependencies": {
+        "postcss-selector-parser": {
+          "version": "3.1.2",
+          "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-3.1.2.tgz",
+          "integrity": "sha512-h7fJ/5uWuRVyOtkO45pnt1Ih40CEleeyCHzipqAZO2e5H20g25Y48uYnFUiShvY4rZWNJ/Bib/KVPmanaCtOhA==",
+          "requires": {
+            "dot-prop": "^5.2.0",
+            "indexes-of": "^1.0.1",
+            "uniq": "^1.0.1"
+          }
+        }
+      }
+    },
+    "postcss-modules-extract-imports": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/postcss-modules-extract-imports/-/postcss-modules-extract-imports-2.0.0.tgz",
+      "integrity": "sha512-LaYLDNS4SG8Q5WAWqIJgdHPJrDDr/Lv775rMBFUbgjTz6j34lUznACHcdRWroPvXANP2Vj7yNK57vp9eFqzLWQ==",
+      "requires": {
+        "postcss": "^7.0.5"
+      }
+    },
+    "postcss-modules-local-by-default": {
+      "version": "3.0.2",
+      "resolved": "https://registry.npmjs.org/postcss-modules-local-by-default/-/postcss-modules-local-by-default-3.0.2.tgz",
+      "integrity": "sha512-jM/V8eqM4oJ/22j0gx4jrp63GSvDH6v86OqyTHHUvk4/k1vceipZsaymiZ5PvocqZOl5SFHiFJqjs3la0wnfIQ==",
+      "requires": {
+        "icss-utils": "^4.1.1",
+        "postcss": "^7.0.16",
+        "postcss-selector-parser": "^6.0.2",
+        "postcss-value-parser": "^4.0.0"
+      }
+    },
+    "postcss-modules-scope": {
+      "version": "2.2.0",
+      "resolved": "https://registry.npmjs.org/postcss-modules-scope/-/postcss-modules-scope-2.2.0.tgz",
+      "integrity": "sha512-YyEgsTMRpNd+HmyC7H/mh3y+MeFWevy7V1evVhJWewmMbjDHIbZbOXICC2y+m1xI1UVfIT1HMW/O04Hxyu9oXQ==",
+      "requires": {
+        "postcss": "^7.0.6",
+        "postcss-selector-parser": "^6.0.0"
+      }
+    },
+    "postcss-modules-values": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/postcss-modules-values/-/postcss-modules-values-3.0.0.tgz",
+      "integrity": "sha512-1//E5jCBrZ9DmRX+zCtmQtRSV6PV42Ix7Bzj9GbwJceduuf7IqP8MgeTXuRDHOWj2m0VzZD5+roFWDuU8RQjcg==",
+      "requires": {
+        "icss-utils": "^4.0.0",
+        "postcss": "^7.0.6"
+      }
+    },
+    "postcss-nesting": {
+      "version": "7.0.1",
+      "resolved": "https://registry.npmjs.org/postcss-nesting/-/postcss-nesting-7.0.1.tgz",
+      "integrity": "sha512-FrorPb0H3nuVq0Sff7W2rnc3SmIcruVC6YwpcS+k687VxyxO33iE1amna7wHuRVzM8vfiYofXSBHNAZ3QhLvYg==",
+      "requires": {
+        "postcss": "^7.0.2"
+      }
+    },
+    "postcss-normalize": {
+      "version": "8.0.1",
+      "resolved": "https://registry.npmjs.org/postcss-normalize/-/postcss-normalize-8.0.1.tgz",
+      "integrity": "sha512-rt9JMS/m9FHIRroDDBGSMsyW1c0fkvOJPy62ggxSHUldJO7B195TqFMqIf+lY5ezpDcYOV4j86aUp3/XbxzCCQ==",
+      "requires": {
+        "@csstools/normalize.css": "^10.1.0",
+        "browserslist": "^4.6.2",
+        "postcss": "^7.0.17",
+        "postcss-browser-comments": "^3.0.0",
+        "sanitize.css": "^10.0.0"
+      }
+    },
+    "postcss-normalize-charset": {
+      "version": "4.0.1",
+      "resolved": "https://registry.npmjs.org/postcss-normalize-charset/-/postcss-normalize-charset-4.0.1.tgz",
+      "integrity": "sha512-gMXCrrlWh6G27U0hF3vNvR3w8I1s2wOBILvA87iNXaPvSNo5uZAMYsZG7XjCUf1eVxuPfyL4TJ7++SGZLc9A3g==",
+      "requires": {
+        "postcss": "^7.0.0"
+      }
+    },
+    "postcss-normalize-display-values": {
+      "version": "4.0.2",
+      "resolved": "https://registry.npmjs.org/postcss-normalize-display-values/-/postcss-normalize-display-values-4.0.2.tgz",
+      "integrity": "sha512-3F2jcsaMW7+VtRMAqf/3m4cPFhPD3EFRgNs18u+k3lTJJlVe7d0YPO+bnwqo2xg8YiRpDXJI2u8A0wqJxMsQuQ==",
+      "requires": {
+        "cssnano-util-get-match": "^4.0.0",
+        "postcss": "^7.0.0",
+        "postcss-value-parser": "^3.0.0"
+      },
+      "dependencies": {
+        "postcss-value-parser": {
+          "version": "3.3.1",
+          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
+          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ=="
+        }
+      }
+    },
+    "postcss-normalize-positions": {
+      "version": "4.0.2",
+      "resolved": "https://registry.npmjs.org/postcss-normalize-positions/-/postcss-normalize-positions-4.0.2.tgz",
+      "integrity": "sha512-Dlf3/9AxpxE+NF1fJxYDeggi5WwV35MXGFnnoccP/9qDtFrTArZ0D0R+iKcg5WsUd8nUYMIl8yXDCtcrT8JrdA==",
+      "requires": {
+        "cssnano-util-get-arguments": "^4.0.0",
+        "has": "^1.0.0",
+        "postcss": "^7.0.0",
+        "postcss-value-parser": "^3.0.0"
+      },
+      "dependencies": {
+        "postcss-value-parser": {
+          "version": "3.3.1",
+          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
+          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ=="
+        }
+      }
+    },
+    "postcss-normalize-repeat-style": {
+      "version": "4.0.2",
+      "resolved": "https://registry.npmjs.org/postcss-normalize-repeat-style/-/postcss-normalize-repeat-style-4.0.2.tgz",
+      "integrity": "sha512-qvigdYYMpSuoFs3Is/f5nHdRLJN/ITA7huIoCyqqENJe9PvPmLhNLMu7QTjPdtnVf6OcYYO5SHonx4+fbJE1+Q==",
+      "requires": {
+        "cssnano-util-get-arguments": "^4.0.0",
+        "cssnano-util-get-match": "^4.0.0",
+        "postcss": "^7.0.0",
+        "postcss-value-parser": "^3.0.0"
+      },
+      "dependencies": {
+        "postcss-value-parser": {
+          "version": "3.3.1",
+          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
+          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ=="
+        }
+      }
+    },
+    "postcss-normalize-string": {
+      "version": "4.0.2",
+      "resolved": "https://registry.npmjs.org/postcss-normalize-string/-/postcss-normalize-string-4.0.2.tgz",
+      "integrity": "sha512-RrERod97Dnwqq49WNz8qo66ps0swYZDSb6rM57kN2J+aoyEAJfZ6bMx0sx/F9TIEX0xthPGCmeyiam/jXif0eA==",
+      "requires": {
+        "has": "^1.0.0",
+        "postcss": "^7.0.0",
+        "postcss-value-parser": "^3.0.0"
+      },
+      "dependencies": {
+        "postcss-value-parser": {
+          "version": "3.3.1",
+          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
+          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ=="
+        }
+      }
+    },
+    "postcss-normalize-timing-functions": {
+      "version": "4.0.2",
+      "resolved": "https://registry.npmjs.org/postcss-normalize-timing-functions/-/postcss-normalize-timing-functions-4.0.2.tgz",
+      "integrity": "sha512-acwJY95edP762e++00Ehq9L4sZCEcOPyaHwoaFOhIwWCDfik6YvqsYNxckee65JHLKzuNSSmAdxwD2Cud1Z54A==",
+      "requires": {
+        "cssnano-util-get-match": "^4.0.0",
+        "postcss": "^7.0.0",
+        "postcss-value-parser": "^3.0.0"
+      },
+      "dependencies": {
+        "postcss-value-parser": {
+          "version": "3.3.1",
+          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
+          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ=="
+        }
+      }
+    },
+    "postcss-normalize-unicode": {
+      "version": "4.0.1",
+      "resolved": "https://registry.npmjs.org/postcss-normalize-unicode/-/postcss-normalize-unicode-4.0.1.tgz",
+      "integrity": "sha512-od18Uq2wCYn+vZ/qCOeutvHjB5jm57ToxRaMeNuf0nWVHaP9Hua56QyMF6fs/4FSUnVIw0CBPsU0K4LnBPwYwg==",
+      "requires": {
+        "browserslist": "^4.0.0",
+        "postcss": "^7.0.0",
+        "postcss-value-parser": "^3.0.0"
+      },
+      "dependencies": {
+        "postcss-value-parser": {
+          "version": "3.3.1",
+          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
+          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ=="
+        }
+      }
+    },
+    "postcss-normalize-url": {
+      "version": "4.0.1",
+      "resolved": "https://registry.npmjs.org/postcss-normalize-url/-/postcss-normalize-url-4.0.1.tgz",
+      "integrity": "sha512-p5oVaF4+IHwu7VpMan/SSpmpYxcJMtkGppYf0VbdH5B6hN8YNmVyJLuY9FmLQTzY3fag5ESUUHDqM+heid0UVA==",
+      "requires": {
+        "is-absolute-url": "^2.0.0",
+        "normalize-url": "^3.0.0",
+        "postcss": "^7.0.0",
+        "postcss-value-parser": "^3.0.0"
+      },
+      "dependencies": {
+        "normalize-url": {
+          "version": "3.3.0",
+          "resolved": "https://registry.npmjs.org/normalize-url/-/normalize-url-3.3.0.tgz",
+          "integrity": "sha512-U+JJi7duF1o+u2pynbp2zXDW2/PADgC30f0GsHZtRh+HOcXHnw137TrNlyxxRvWW5fjKd3bcLHPxofWuCjaeZg=="
+        },
+        "postcss-value-parser": {
+          "version": "3.3.1",
+          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
+          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ=="
+        }
+      }
+    },
+    "postcss-normalize-whitespace": {
+      "version": "4.0.2",
+      "resolved": "https://registry.npmjs.org/postcss-normalize-whitespace/-/postcss-normalize-whitespace-4.0.2.tgz",
+      "integrity": "sha512-tO8QIgrsI3p95r8fyqKV+ufKlSHh9hMJqACqbv2XknufqEDhDvbguXGBBqxw9nsQoXWf0qOqppziKJKHMD4GtA==",
+      "requires": {
+        "postcss": "^7.0.0",
+        "postcss-value-parser": "^3.0.0"
+      },
+      "dependencies": {
+        "postcss-value-parser": {
+          "version": "3.3.1",
+          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
+          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ=="
+        }
+      }
+    },
+    "postcss-ordered-values": {
+      "version": "4.1.2",
+      "resolved": "https://registry.npmjs.org/postcss-ordered-values/-/postcss-ordered-values-4.1.2.tgz",
+      "integrity": "sha512-2fCObh5UanxvSxeXrtLtlwVThBvHn6MQcu4ksNT2tsaV2Fg76R2CV98W7wNSlX+5/pFwEyaDwKLLoEV7uRybAw==",
+      "requires": {
+        "cssnano-util-get-arguments": "^4.0.0",
+        "postcss": "^7.0.0",
+        "postcss-value-parser": "^3.0.0"
+      },
+      "dependencies": {
+        "postcss-value-parser": {
+          "version": "3.3.1",
+          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
+          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ=="
+        }
+      }
+    },
+    "postcss-overflow-shorthand": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/postcss-overflow-shorthand/-/postcss-overflow-shorthand-2.0.0.tgz",
+      "integrity": "sha512-aK0fHc9CBNx8jbzMYhshZcEv8LtYnBIRYQD5i7w/K/wS9c2+0NSR6B3OVMu5y0hBHYLcMGjfU+dmWYNKH0I85g==",
+      "requires": {
+        "postcss": "^7.0.2"
+      }
+    },
+    "postcss-page-break": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/postcss-page-break/-/postcss-page-break-2.0.0.tgz",
+      "integrity": "sha512-tkpTSrLpfLfD9HvgOlJuigLuk39wVTbbd8RKcy8/ugV2bNBUW3xU+AIqyxhDrQr1VUj1RmyJrBn1YWrqUm9zAQ==",
+      "requires": {
+        "postcss": "^7.0.2"
+      }
+    },
+    "postcss-place": {
+      "version": "4.0.1",
+      "resolved": "https://registry.npmjs.org/postcss-place/-/postcss-place-4.0.1.tgz",
+      "integrity": "sha512-Zb6byCSLkgRKLODj/5mQugyuj9bvAAw9LqJJjgwz5cYryGeXfFZfSXoP1UfveccFmeq0b/2xxwcTEVScnqGxBg==",
+      "requires": {
+        "postcss": "^7.0.2",
+        "postcss-values-parser": "^2.0.0"
+      }
+    },
+    "postcss-preset-env": {
+      "version": "6.7.0",
+      "resolved": "https://registry.npmjs.org/postcss-preset-env/-/postcss-preset-env-6.7.0.tgz",
+      "integrity": "sha512-eU4/K5xzSFwUFJ8hTdTQzo2RBLbDVt83QZrAvI07TULOkmyQlnYlpwep+2yIK+K+0KlZO4BvFcleOCCcUtwchg==",
+      "requires": {
+        "autoprefixer": "^9.6.1",
+        "browserslist": "^4.6.4",
+        "caniuse-lite": "^1.0.30000981",
+        "css-blank-pseudo": "^0.1.4",
+        "css-has-pseudo": "^0.10.0",
+        "css-prefers-color-scheme": "^3.1.1",
+        "cssdb": "^4.4.0",
+        "postcss": "^7.0.17",
+        "postcss-attribute-case-insensitive": "^4.0.1",
+        "postcss-color-functional-notation": "^2.0.1",
+        "postcss-color-gray": "^5.0.0",
+        "postcss-color-hex-alpha": "^5.0.3",
+        "postcss-color-mod-function": "^3.0.3",
+        "postcss-color-rebeccapurple": "^4.0.1",
+        "postcss-custom-media": "^7.0.8",
+        "postcss-custom-properties": "^8.0.11",
+        "postcss-custom-selectors": "^5.1.2",
+        "postcss-dir-pseudo-class": "^5.0.0",
+        "postcss-double-position-gradients": "^1.0.0",
+        "postcss-env-function": "^2.0.2",
+        "postcss-focus-visible": "^4.0.0",
+        "postcss-focus-within": "^3.0.0",
+        "postcss-font-variant": "^4.0.0",
+        "postcss-gap-properties": "^2.0.0",
+        "postcss-image-set-function": "^3.0.1",
+        "postcss-initial": "^3.0.0",
+        "postcss-lab-function": "^2.0.1",
+        "postcss-logical": "^3.0.0",
+        "postcss-media-minmax": "^4.0.0",
+        "postcss-nesting": "^7.0.0",
+        "postcss-overflow-shorthand": "^2.0.0",
+        "postcss-page-break": "^2.0.0",
+        "postcss-place": "^4.0.1",
+        "postcss-pseudo-class-any-link": "^6.0.0",
+        "postcss-replace-overflow-wrap": "^3.0.0",
+        "postcss-selector-matches": "^4.0.0",
+        "postcss-selector-not": "^4.0.0"
+      }
+    },
+    "postcss-pseudo-class-any-link": {
+      "version": "6.0.0",
+      "resolved": "https://registry.npmjs.org/postcss-pseudo-class-any-link/-/postcss-pseudo-class-any-link-6.0.0.tgz",
+      "integrity": "sha512-lgXW9sYJdLqtmw23otOzrtbDXofUdfYzNm4PIpNE322/swES3VU9XlXHeJS46zT2onFO7V1QFdD4Q9LiZj8mew==",
+      "requires": {
+        "postcss": "^7.0.2",
+        "postcss-selector-parser": "^5.0.0-rc.3"
+      },
+      "dependencies": {
+        "cssesc": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/cssesc/-/cssesc-2.0.0.tgz",
+          "integrity": "sha512-MsCAG1z9lPdoO/IUMLSBWBSVxVtJ1395VGIQ+Fc2gNdkQ1hNDnQdw3YhA71WJCBW1vdwA0cAnk/DnW6bqoEUYg=="
+        },
+        "postcss-selector-parser": {
+          "version": "5.0.0",
+          "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-5.0.0.tgz",
+          "integrity": "sha512-w+zLE5Jhg6Liz8+rQOWEAwtwkyqpfnmsinXjXg6cY7YIONZZtgvE0v2O0uhQBs0peNomOJwWRKt6JBfTdTd3OQ==",
+          "requires": {
+            "cssesc": "^2.0.0",
+            "indexes-of": "^1.0.1",
+            "uniq": "^1.0.1"
+          }
+        }
+      }
+    },
+    "postcss-reduce-initial": {
+      "version": "4.0.3",
+      "resolved": "https://registry.npmjs.org/postcss-reduce-initial/-/postcss-reduce-initial-4.0.3.tgz",
+      "integrity": "sha512-gKWmR5aUulSjbzOfD9AlJiHCGH6AEVLaM0AV+aSioxUDd16qXP1PCh8d1/BGVvpdWn8k/HiK7n6TjeoXN1F7DA==",
+      "requires": {
+        "browserslist": "^4.0.0",
+        "caniuse-api": "^3.0.0",
+        "has": "^1.0.0",
+        "postcss": "^7.0.0"
+      }
+    },
+    "postcss-reduce-transforms": {
+      "version": "4.0.2",
+      "resolved": "https://registry.npmjs.org/postcss-reduce-transforms/-/postcss-reduce-transforms-4.0.2.tgz",
+      "integrity": "sha512-EEVig1Q2QJ4ELpJXMZR8Vt5DQx8/mo+dGWSR7vWXqcob2gQLyQGsionYcGKATXvQzMPn6DSN1vTN7yFximdIAg==",
+      "requires": {
+        "cssnano-util-get-match": "^4.0.0",
+        "has": "^1.0.0",
+        "postcss": "^7.0.0",
+        "postcss-value-parser": "^3.0.0"
+      },
+      "dependencies": {
+        "postcss-value-parser": {
+          "version": "3.3.1",
+          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
+          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ=="
+        }
+      }
+    },
+    "postcss-replace-overflow-wrap": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/postcss-replace-overflow-wrap/-/postcss-replace-overflow-wrap-3.0.0.tgz",
+      "integrity": "sha512-2T5hcEHArDT6X9+9dVSPQdo7QHzG4XKclFT8rU5TzJPDN7RIRTbO9c4drUISOVemLj03aezStHCR2AIcr8XLpw==",
+      "requires": {
+        "postcss": "^7.0.2"
+      }
+    },
+    "postcss-safe-parser": {
+      "version": "4.0.1",
+      "resolved": "https://registry.npmjs.org/postcss-safe-parser/-/postcss-safe-parser-4.0.1.tgz",
+      "integrity": "sha512-xZsFA3uX8MO3yAda03QrG3/Eg1LN3EPfjjf07vke/46HERLZyHrTsQ9E1r1w1W//fWEhtYNndo2hQplN2cVpCQ==",
+      "requires": {
+        "postcss": "^7.0.0"
+      }
+    },
+    "postcss-selector-matches": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/postcss-selector-matches/-/postcss-selector-matches-4.0.0.tgz",
+      "integrity": "sha512-LgsHwQR/EsRYSqlwdGzeaPKVT0Ml7LAT6E75T8W8xLJY62CE4S/l03BWIt3jT8Taq22kXP08s2SfTSzaraoPww==",
+      "requires": {
+        "balanced-match": "^1.0.0",
+        "postcss": "^7.0.2"
+      }
+    },
+    "postcss-selector-not": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/postcss-selector-not/-/postcss-selector-not-4.0.0.tgz",
+      "integrity": "sha512-W+bkBZRhqJaYN8XAnbbZPLWMvZD1wKTu0UxtFKdhtGjWYmxhkUneoeOhRJKdAE5V7ZTlnbHfCR+6bNwK9e1dTQ==",
+      "requires": {
+        "balanced-match": "^1.0.0",
+        "postcss": "^7.0.2"
+      }
+    },
+    "postcss-selector-parser": {
+      "version": "6.0.2",
+      "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-6.0.2.tgz",
+      "integrity": "sha512-36P2QR59jDTOAiIkqEprfJDsoNrvwFei3eCqKd1Y0tUsBimsq39BLp7RD+JWny3WgB1zGhJX8XVePwm9k4wdBg==",
+      "requires": {
+        "cssesc": "^3.0.0",
+        "indexes-of": "^1.0.1",
+        "uniq": "^1.0.1"
+      }
+    },
+    "postcss-svgo": {
+      "version": "4.0.2",
+      "resolved": "https://registry.npmjs.org/postcss-svgo/-/postcss-svgo-4.0.2.tgz",
+      "integrity": "sha512-C6wyjo3VwFm0QgBy+Fu7gCYOkCmgmClghO+pjcxvrcBKtiKt0uCF+hvbMO1fyv5BMImRK90SMb+dwUnfbGd+jw==",
+      "requires": {
+        "is-svg": "^3.0.0",
+        "postcss": "^7.0.0",
+        "postcss-value-parser": "^3.0.0",
+        "svgo": "^1.0.0"
+      },
+      "dependencies": {
+        "postcss-value-parser": {
+          "version": "3.3.1",
+          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
+          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ=="
+        }
+      }
+    },
+    "postcss-unique-selectors": {
+      "version": "4.0.1",
+      "resolved": "https://registry.npmjs.org/postcss-unique-selectors/-/postcss-unique-selectors-4.0.1.tgz",
+      "integrity": "sha512-+JanVaryLo9QwZjKrmJgkI4Fn8SBgRO6WXQBJi7KiAVPlmxikB5Jzc4EvXMT2H0/m0RjrVVm9rGNhZddm/8Spg==",
+      "requires": {
+        "alphanum-sort": "^1.0.0",
+        "postcss": "^7.0.0",
+        "uniqs": "^2.0.0"
+      }
+    },
+    "postcss-value-parser": {
+      "version": "4.1.0",
+      "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-4.1.0.tgz",
+      "integrity": "sha512-97DXOFbQJhk71ne5/Mt6cOu6yxsSfM0QGQyl0L25Gca4yGWEGJaig7l7gbCX623VqTBNGLRLaVUCnNkcedlRSQ=="
+    },
+    "postcss-values-parser": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/postcss-values-parser/-/postcss-values-parser-2.0.1.tgz",
+      "integrity": "sha512-2tLuBsA6P4rYTNKCXYG/71C7j1pU6pK503suYOmn4xYrQIzW+opD+7FAFNuGSdZC/3Qfy334QbeMu7MEb8gOxg==",
+      "requires": {
+        "flatten": "^1.0.2",
+        "indexes-of": "^1.0.1",
+        "uniq": "^1.0.1"
+      }
+    },
+    "posthtml": {
+      "version": "0.11.6",
+      "resolved": "https://registry.npmjs.org/posthtml/-/posthtml-0.11.6.tgz",
+      "integrity": "sha512-C2hrAPzmRdpuL3iH0TDdQ6XCc9M7Dcc3zEW5BLerY65G4tWWszwv6nG/ksi6ul5i2mx22ubdljgktXCtNkydkw==",
+      "dev": true,
+      "requires": {
+        "posthtml-parser": "^0.4.1",
+        "posthtml-render": "^1.1.5"
+      }
+    },
+    "posthtml-parser": {
+      "version": "0.4.2",
+      "resolved": "https://registry.npmjs.org/posthtml-parser/-/posthtml-parser-0.4.2.tgz",
+      "integrity": "sha512-BUIorsYJTvS9UhXxPTzupIztOMVNPa/HtAm9KHni9z6qEfiJ1bpOBL5DfUOL9XAc3XkLIEzBzpph+Zbm4AdRAg==",
+      "dev": true,
+      "requires": {
+        "htmlparser2": "^3.9.2"
+      }
+    },
+    "posthtml-render": {
+      "version": "1.2.2",
+      "resolved": "https://registry.npmjs.org/posthtml-render/-/posthtml-render-1.2.2.tgz",
+      "integrity": "sha512-MbIXTWwAfJ9qET6Zl29UNwJcDJEEz9Zkr5oDhiujitJa7YBJwEpbkX2cmuklCDxubTMoRWpid3q8DrSyGnUUzQ==",
+      "dev": true
+    },
+    "pouchdb-collections": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/pouchdb-collections/-/pouchdb-collections-1.0.1.tgz",
+      "integrity": "sha1-/mOhfal3YRq+98uAJssalVP9g1k="
+    },
+    "prelude-ls": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.1.2.tgz",
+      "integrity": "sha1-IZMqVJ9eUv/ZqCf1cOBL5iqX2lQ="
+    },
+    "prepend-http": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/prepend-http/-/prepend-http-1.0.4.tgz",
+      "integrity": "sha1-1PRWKwzjaW5BrFLQ4ALlemNdxtw="
+    },
+    "pretty-bytes": {
+      "version": "5.3.0",
+      "resolved": "https://registry.npmjs.org/pretty-bytes/-/pretty-bytes-5.3.0.tgz",
+      "integrity": "sha512-hjGrh+P926p4R4WbaB6OckyRtO0F0/lQBiT+0gnxjV+5kjPBrfVBFCsCLbMqVQeydvIoouYTCmmEURiH3R1Bdg=="
+    },
+    "pretty-error": {
+      "version": "2.1.1",
+      "resolved": "https://registry.npmjs.org/pretty-error/-/pretty-error-2.1.1.tgz",
+      "integrity": "sha1-X0+HyPkeWuPzuoerTPXgOxoX8aM=",
+      "requires": {
+        "renderkid": "^2.0.1",
+        "utila": "~0.4"
+      }
+    },
+    "pretty-format": {
+      "version": "24.9.0",
+      "resolved": "https://registry.npmjs.org/pretty-format/-/pretty-format-24.9.0.tgz",
+      "integrity": "sha512-00ZMZUiHaJrNfk33guavqgvfJS30sLYf0f8+Srklv0AMPodGGHcoHgksZ3OThYnIvOd+8yMCn0YiEOogjlgsnA==",
+      "requires": {
+        "@jest/types": "^24.9.0",
+        "ansi-regex": "^4.0.0",
+        "ansi-styles": "^3.2.0",
+        "react-is": "^16.8.4"
+      },
+      "dependencies": {
+        "ansi-regex": {
+          "version": "4.1.0",
+          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",
+          "integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg=="
+        }
+      }
+    },
+    "private": {
+      "version": "0.1.8",
+      "resolved": "https://registry.npmjs.org/private/-/private-0.1.8.tgz",
+      "integrity": "sha512-VvivMrbvd2nKkiG38qjULzlc+4Vx4wm/whI9pQD35YrARNnhxeiRktSOhSukRLFNlzg6Br/cJPet5J/u19r/mg=="
+    },
+    "process": {
+      "version": "0.11.10",
+      "resolved": "https://registry.npmjs.org/process/-/process-0.11.10.tgz",
+      "integrity": "sha1-czIwDoQBYb2j5podHZGn1LwW8YI="
+    },
+    "process-nextick-args": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.1.tgz",
+      "integrity": "sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag=="
+    },
+    "progress": {
+      "version": "2.0.3",
+      "resolved": "https://registry.npmjs.org/progress/-/progress-2.0.3.tgz",
+      "integrity": "sha512-7PiHtLll5LdnKIMw100I+8xJXR5gW2QwWYkT6iJva0bXitZKa/XMrSbdmg3r2Xnaidz9Qumd0VPaMrZlF9V9sA=="
+    },
+    "promise": {
+      "version": "8.1.0",
+      "resolved": "https://registry.npmjs.org/promise/-/promise-8.1.0.tgz",
+      "integrity": "sha512-W04AqnILOL/sPRXziNicCjSNRruLAuIHEOVBazepu0545DDNGYHz7ar9ZgZ1fMU8/MA4mVxp5rkBWRi6OXIy3Q==",
+      "requires": {
+        "asap": "~2.0.6"
+      }
+    },
+    "promise-inflight": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/promise-inflight/-/promise-inflight-1.0.1.tgz",
+      "integrity": "sha1-mEcocL8igTL8vdhoEputEsPAKeM="
+    },
+    "prompts": {
+      "version": "2.3.2",
+      "resolved": "https://registry.npmjs.org/prompts/-/prompts-2.3.2.tgz",
+      "integrity": "sha512-Q06uKs2CkNYVID0VqwfAl9mipo99zkBv/n2JtWY89Yxa3ZabWSrs0e2KTudKVa3peLUvYXMefDqIleLPVUBZMA==",
+      "requires": {
+        "kleur": "^3.0.3",
+        "sisteransi": "^1.0.4"
+      }
+    },
+    "prop-types": {
+      "version": "15.7.2",
+      "resolved": "https://registry.npmjs.org/prop-types/-/prop-types-15.7.2.tgz",
+      "integrity": "sha512-8QQikdH7//R2vurIJSutZ1smHYTcLpRWEOlHnzcWHmBYrOGUysKwSsrC89BCiFj3CbrfJ/nXFdJepOVrY1GCHQ==",
+      "requires": {
+        "loose-envify": "^1.4.0",
+        "object-assign": "^4.1.1",
+        "react-is": "^16.8.1"
+      }
+    },
+    "proxy-addr": {
+      "version": "2.0.6",
+      "resolved": "https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.6.tgz",
+      "integrity": "sha512-dh/frvCBVmSsDYzw6n926jv974gddhkFPfiN8hPOi30Wax25QZyZEGveluCgliBnqmuM+UJmBErbAUFIoDbjOw==",
+      "requires": {
+        "forwarded": "~0.1.2",
+        "ipaddr.js": "1.9.1"
+      }
+    },
+    "prr": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/prr/-/prr-1.0.1.tgz",
+      "integrity": "sha1-0/wRS6BplaRexok/SEzrHXj19HY="
+    },
+    "pseudomap": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/pseudomap/-/pseudomap-1.0.2.tgz",
+      "integrity": "sha1-8FKijacOYYkX7wqKw0wa5aaChrM=",
+      "dev": true
+    },
+    "psl": {
+      "version": "1.8.0",
+      "resolved": "https://registry.npmjs.org/psl/-/psl-1.8.0.tgz",
+      "integrity": "sha512-RIdOzyoavK+hA18OGGWDqUTsCLhtA7IcZ/6NCs4fFJaHBDab+pDDmDIByWFRQJq2Cd7r1OoQxBGKOaztq+hjIQ=="
+    },
+    "public-encrypt": {
+      "version": "4.0.3",
+      "resolved": "https://registry.npmjs.org/public-encrypt/-/public-encrypt-4.0.3.tgz",
+      "integrity": "sha512-zVpa8oKZSz5bTMTFClc1fQOnyyEzpl5ozpi1B5YcvBrdohMjH2rfsBtyXcuNuwjsDIXmBYlF2N5FlJYhR29t8Q==",
+      "requires": {
+        "bn.js": "^4.1.0",
+        "browserify-rsa": "^4.0.0",
+        "create-hash": "^1.1.0",
+        "parse-asn1": "^5.0.0",
+        "randombytes": "^2.0.1",
+        "safe-buffer": "^5.1.2"
+      }
+    },
+    "pump": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/pump/-/pump-3.0.0.tgz",
+      "integrity": "sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==",
+      "requires": {
+        "end-of-stream": "^1.1.0",
+        "once": "^1.3.1"
+      }
+    },
+    "pumpify": {
+      "version": "1.5.1",
+      "resolved": "https://registry.npmjs.org/pumpify/-/pumpify-1.5.1.tgz",
+      "integrity": "sha512-oClZI37HvuUJJxSKKrC17bZ9Cu0ZYhEAGPsPUy9KlMUmv9dKX2o77RUmq7f3XjIxbwyGwYzbzQ1L2Ks8sIradQ==",
+      "requires": {
+        "duplexify": "^3.6.0",
+        "inherits": "^2.0.3",
+        "pump": "^2.0.0"
+      },
+      "dependencies": {
+        "pump": {
+          "version": "2.0.1",
+          "resolved": "https://registry.npmjs.org/pump/-/pump-2.0.1.tgz",
+          "integrity": "sha512-ruPMNRkN3MHP1cWJc9OWr+T/xDP0jhXYCLfJcBuX54hhfIBnaQmAUMfDcG4DM5UMWByBbJY69QSphm3jtDKIkA==",
+          "requires": {
+            "end-of-stream": "^1.1.0",
+            "once": "^1.3.1"
+          }
+        }
+      }
+    },
+    "punycode": {
+      "version": "2.1.1",
+      "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.1.1.tgz",
+      "integrity": "sha512-XRsRjdf+j5ml+y/6GKHPZbrF/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A=="
+    },
+    "purgecss": {
+      "version": "1.4.2",
+      "resolved": "https://registry.npmjs.org/purgecss/-/purgecss-1.4.2.tgz",
+      "integrity": "sha512-hkOreFTgiyMHMmC2BxzdIw5DuC6kxAbP/gGOGd3MEsF3+5m69rIvUEPaxrnoUtfODTFKe9hcXjGwC6jcjoyhOw==",
+      "dev": true,
+      "requires": {
+        "glob": "^7.1.3",
+        "postcss": "^7.0.14",
+        "postcss-selector-parser": "^6.0.0",
+        "yargs": "^14.0.0"
+      },
+      "dependencies": {
+        "emoji-regex": {
+          "version": "7.0.3",
+          "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-7.0.3.tgz",
+          "integrity": "sha512-CwBLREIQ7LvYFB0WyRvwhq5N5qPhc6PMjD6bYggFlI5YyDgl+0vxq5VHbMOFqLg7hfWzmu8T5Z1QofhmTIhItA==",
+          "dev": true
+        },
+        "find-up": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/find-up/-/find-up-3.0.0.tgz",
+          "integrity": "sha512-1yD6RmLI1XBfxugvORwlck6f75tYL+iR0jqwsOrOxMZyGYqUuDhJ0l4AXdO1iX/FTs9cBAMEk1gWSEx1kSbylg==",
+          "dev": true,
+          "requires": {
+            "locate-path": "^3.0.0"
+          }
+        },
+        "is-fullwidth-code-point": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
+          "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8=",
+          "dev": true
+        },
+        "locate-path": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-3.0.0.tgz",
+          "integrity": "sha512-7AO748wWnIhNqAuaty2ZWHkQHRSNfPVIsPIfwEOWO22AmaoVrWavlOcMR5nzTLNYvp36X220/maaRsrec1G65A==",
+          "dev": true,
+          "requires": {
+            "p-locate": "^3.0.0",
+            "path-exists": "^3.0.0"
+          }
+        },
+        "p-limit": {
+          "version": "2.3.0",
+          "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz",
+          "integrity": "sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==",
+          "dev": true,
+          "requires": {
+            "p-try": "^2.0.0"
+          }
+        },
+        "p-locate": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-3.0.0.tgz",
+          "integrity": "sha512-x+12w/To+4GFfgJhBEpiDcLozRJGegY+Ei7/z0tSLkMmxGZNybVMSfWj9aJn8Z5Fc7dBUNJOOVgPv2H7IwulSQ==",
+          "dev": true,
+          "requires": {
+            "p-limit": "^2.0.0"
+          }
+        },
+        "p-try": {
+          "version": "2.2.0",
+          "resolved": "https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz",
+          "integrity": "sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==",
+          "dev": true
+        },
+        "string-width": {
+          "version": "3.1.0",
+          "resolved": "https://registry.npmjs.org/string-width/-/string-width-3.1.0.tgz",
+          "integrity": "sha512-vafcv6KjVZKSgz06oM/H6GDBrAtz8vdhQakGjFIvNrHA6y3HCF1CInLy+QLq8dTJPQ1b+KDUqDFctkdRW44e1w==",
+          "dev": true,
+          "requires": {
+            "emoji-regex": "^7.0.1",
+            "is-fullwidth-code-point": "^2.0.0",
+            "strip-ansi": "^5.1.0"
+          }
+        },
+        "yargs": {
+          "version": "14.2.3",
+          "resolved": "https://registry.npmjs.org/yargs/-/yargs-14.2.3.tgz",
+          "integrity": "sha512-ZbotRWhF+lkjijC/VhmOT9wSgyBQ7+zr13+YLkhfsSiTriYsMzkTUFP18pFhWwBeMa5gUc1MzbhrO6/VB7c9Xg==",
+          "dev": true,
+          "requires": {
+            "cliui": "^5.0.0",
+            "decamelize": "^1.2.0",
+            "find-up": "^3.0.0",
+            "get-caller-file": "^2.0.1",
+            "require-directory": "^2.1.1",
+            "require-main-filename": "^2.0.0",
+            "set-blocking": "^2.0.0",
+            "string-width": "^3.0.0",
+            "which-module": "^2.0.0",
+            "y18n": "^4.0.0",
+            "yargs-parser": "^15.0.1"
+          }
+        },
+        "yargs-parser": {
+          "version": "15.0.1",
+          "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-15.0.1.tgz",
+          "integrity": "sha512-0OAMV2mAZQrs3FkNpDQcBk1x5HXb8X4twADss4S0Iuk+2dGnLOE/fRHrsYm542GduMveyA77OF4wrNJuanRCWw==",
+          "dev": true,
+          "requires": {
+            "camelcase": "^5.0.0",
+            "decamelize": "^1.2.0"
+          }
+        }
+      }
+    },
+    "q": {
+      "version": "1.5.1",
+      "resolved": "https://registry.npmjs.org/q/-/q-1.5.1.tgz",
+      "integrity": "sha1-fjL3W0E4EpHQRhHxvxQQmsAGUdc="
+    },
+    "qs": {
+      "version": "6.5.2",
+      "resolved": "https://registry.npmjs.org/qs/-/qs-6.5.2.tgz",
+      "integrity": "sha512-N5ZAX4/LxJmF+7wN74pUD6qAh9/wnvdQcjq9TZjevvXzSUo7bfmw91saqMjzGS2xq91/odN2dW/WOl7qQHNDGA=="
+    },
+    "query-string": {
+      "version": "4.3.4",
+      "resolved": "https://registry.npmjs.org/query-string/-/query-string-4.3.4.tgz",
+      "integrity": "sha1-u7aTucqRXCMlFbIosaArYJBD2+s=",
+      "requires": {
+        "object-assign": "^4.1.0",
+        "strict-uri-encode": "^1.0.0"
+      }
+    },
+    "querystring": {
+      "version": "0.2.0",
+      "resolved": "https://registry.npmjs.org/querystring/-/querystring-0.2.0.tgz",
+      "integrity": "sha1-sgmEkgO7Jd+CDadW50cAWHhSFiA="
+    },
+    "querystring-es3": {
+      "version": "0.2.1",
+      "resolved": "https://registry.npmjs.org/querystring-es3/-/querystring-es3-0.2.1.tgz",
+      "integrity": "sha1-nsYfeQSYdXB9aUFFlv2Qek1xHnM="
+    },
+    "querystringify": {
+      "version": "2.1.1",
+      "resolved": "https://registry.npmjs.org/querystringify/-/querystringify-2.1.1.tgz",
+      "integrity": "sha512-w7fLxIRCRT7U8Qu53jQnJyPkYZIaR4n5151KMfcJlO/A9397Wxb1amJvROTK6TOnp7PfoAmg/qXiNHI+08jRfA=="
+    },
+    "quote-stream": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/quote-stream/-/quote-stream-1.0.2.tgz",
+      "integrity": "sha1-hJY/jJwmuULhU/7rU6rnRlK34LI=",
+      "dev": true,
+      "requires": {
+        "buffer-equal": "0.0.1",
+        "minimist": "^1.1.3",
+        "through2": "^2.0.0"
+      }
+    },
+    "raf": {
+      "version": "3.4.1",
+      "resolved": "https://registry.npmjs.org/raf/-/raf-3.4.1.tgz",
+      "integrity": "sha512-Sq4CW4QhwOHE8ucn6J34MqtZCeWFP2aQSmrlroYgqAV1PjStIhJXxYuTgUIfkEk7zTLjmIjLmU5q+fbD1NnOJA==",
+      "requires": {
+        "performance-now": "^2.1.0"
+      }
+    },
+    "randombytes": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/randombytes/-/randombytes-2.1.0.tgz",
+      "integrity": "sha512-vYl3iOX+4CKUWuxGi9Ukhie6fsqXqS9FE2Zaic4tNFD2N2QQaXOMFbuKK4QmDHC0JO6B1Zp41J0LpT0oR68amQ==",
+      "requires": {
+        "safe-buffer": "^5.1.0"
+      }
+    },
+    "randomfill": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/randomfill/-/randomfill-1.0.4.tgz",
+      "integrity": "sha512-87lcbR8+MhcWcUiQ+9e+Rwx8MyR2P7qnt15ynUlbm3TU/fjbgz4GsvfSUDTemtCCtVCqb4ZcEFlyPNTh9bBTLw==",
+      "requires": {
+        "randombytes": "^2.0.5",
+        "safe-buffer": "^5.1.0"
+      }
+    },
+    "range-parser": {
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz",
+      "integrity": "sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg=="
+    },
+    "raw-body": {
+      "version": "2.4.0",
+      "resolved": "https://registry.npmjs.org/raw-body/-/raw-body-2.4.0.tgz",
+      "integrity": "sha512-4Oz8DUIwdvoa5qMJelxipzi/iJIi40O5cGV1wNYp5hvZP8ZN0T+jiNkL0QepXs+EsQ9XJ8ipEDoiH70ySUJP3Q==",
+      "requires": {
+        "bytes": "3.1.0",
+        "http-errors": "1.7.2",
+        "iconv-lite": "0.4.24",
+        "unpipe": "1.0.0"
+      },
+      "dependencies": {
+        "bytes": {
+          "version": "3.1.0",
+          "resolved": "https://registry.npmjs.org/bytes/-/bytes-3.1.0.tgz",
+          "integrity": "sha512-zauLjrfCG+xvoyaqLoV8bLVXXNGC4JqlxFCutSDWA6fJrTo2ZuvLYTqZ7aHBLZSMOopbzwv8f+wZcVzfVTI2Dg=="
+        }
+      }
+    },
+    "react": {
+      "version": "16.13.1",
+      "resolved": "https://registry.npmjs.org/react/-/react-16.13.1.tgz",
+      "integrity": "sha512-YMZQQq32xHLX0bz5Mnibv1/LHb3Sqzngu7xstSM+vrkE5Kzr9xE0yMByK5kMoTK30YVJE61WfbxIFFvfeDKT1w==",
+      "dev": true,
+      "requires": {
+        "loose-envify": "^1.1.0",
+        "object-assign": "^4.1.1",
+        "prop-types": "^15.6.2"
+      }
+    },
+    "react-app-polyfill": {
+      "version": "1.0.6",
+      "resolved": "https://registry.npmjs.org/react-app-polyfill/-/react-app-polyfill-1.0.6.tgz",
+      "integrity": "sha512-OfBnObtnGgLGfweORmdZbyEz+3dgVePQBb3zipiaDsMHV1NpWm0rDFYIVXFV/AK+x4VIIfWHhrdMIeoTLyRr2g==",
+      "requires": {
+        "core-js": "^3.5.0",
+        "object-assign": "^4.1.1",
+        "promise": "^8.0.3",
+        "raf": "^3.4.1",
+        "regenerator-runtime": "^0.13.3",
+        "whatwg-fetch": "^3.0.0"
+      }
+    },
+    "react-dev-utils": {
+      "version": "10.2.1",
+      "resolved": "https://registry.npmjs.org/react-dev-utils/-/react-dev-utils-10.2.1.tgz",
+      "integrity": "sha512-XxTbgJnYZmxuPtY3y/UV0D8/65NKkmaia4rXzViknVnZeVlklSh8u6TnaEYPfAi/Gh1TP4mEOXHI6jQOPbeakQ==",
+      "requires": {
+        "@babel/code-frame": "7.8.3",
+        "address": "1.1.2",
+        "browserslist": "4.10.0",
+        "chalk": "2.4.2",
+        "cross-spawn": "7.0.1",
+        "detect-port-alt": "1.1.6",
+        "escape-string-regexp": "2.0.0",
+        "filesize": "6.0.1",
+        "find-up": "4.1.0",
+        "fork-ts-checker-webpack-plugin": "3.1.1",
+        "global-modules": "2.0.0",
+        "globby": "8.0.2",
+        "gzip-size": "5.1.1",
+        "immer": "1.10.0",
+        "inquirer": "7.0.4",
+        "is-root": "2.1.0",
+        "loader-utils": "1.2.3",
+        "open": "^7.0.2",
+        "pkg-up": "3.1.0",
+        "react-error-overlay": "^6.0.7",
+        "recursive-readdir": "2.2.2",
+        "shell-quote": "1.7.2",
+        "strip-ansi": "6.0.0",
+        "text-table": "0.2.0"
+      },
+      "dependencies": {
+        "ansi-regex": {
+          "version": "4.1.0",
+          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",
+          "integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg=="
+        },
+        "browserslist": {
+          "version": "4.10.0",
+          "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.10.0.tgz",
+          "integrity": "sha512-TpfK0TDgv71dzuTsEAlQiHeWQ/tiPqgNZVdv046fvNtBZrjbv2O3TsWCDU0AWGJJKCF/KsjNdLzR9hXOsh/CfA==",
+          "requires": {
+            "caniuse-lite": "^1.0.30001035",
+            "electron-to-chromium": "^1.3.378",
+            "node-releases": "^1.1.52",
+            "pkg-up": "^3.1.0"
+          }
+        },
+        "cross-spawn": {
+          "version": "7.0.1",
+          "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.1.tgz",
+          "integrity": "sha512-u7v4o84SwFpD32Z8IIcPZ6z1/ie24O6RU3RbtL5Y316l3KuHVPx9ItBgWQ6VlfAFnRnTtMUrsQ9MUUTuEZjogg==",
+          "requires": {
+            "path-key": "^3.1.0",
+            "shebang-command": "^2.0.0",
+            "which": "^2.0.1"
+          }
+        },
+        "emojis-list": {
+          "version": "2.1.0",
+          "resolved": "https://registry.npmjs.org/emojis-list/-/emojis-list-2.1.0.tgz",
+          "integrity": "sha1-TapNnbAPmBmIDHn6RXrlsJof04k="
+        },
+        "escape-string-regexp": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-2.0.0.tgz",
+          "integrity": "sha512-UpzcLCXolUWcNu5HtVMHYdXJjArjsF9C0aNnquZYY4uW/Vu0miy5YoWvbV345HauVvcAUnpRuhMMcqTcGOY2+w=="
+        },
+        "find-up": {
+          "version": "4.1.0",
+          "resolved": "https://registry.npmjs.org/find-up/-/find-up-4.1.0.tgz",
+          "integrity": "sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==",
+          "requires": {
+            "locate-path": "^5.0.0",
+            "path-exists": "^4.0.0"
+          },
+          "dependencies": {
+            "locate-path": {
+              "version": "5.0.0",
+              "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-5.0.0.tgz",
+              "integrity": "sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==",
+              "requires": {
+                "p-locate": "^4.1.0"
+              }
+            },
+            "p-locate": {
+              "version": "4.1.0",
+              "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-4.1.0.tgz",
+              "integrity": "sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==",
+              "requires": {
+                "p-limit": "^2.2.0"
+              }
+            },
+            "path-exists": {
+              "version": "4.0.0",
+              "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
+              "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w=="
+            }
+          }
+        },
+        "inquirer": {
+          "version": "7.0.4",
+          "resolved": "https://registry.npmjs.org/inquirer/-/inquirer-7.0.4.tgz",
+          "integrity": "sha512-Bu5Td5+j11sCkqfqmUTiwv+tWisMtP0L7Q8WrqA2C/BbBhy1YTdFrvjjlrKq8oagA/tLQBski2Gcx/Sqyi2qSQ==",
+          "requires": {
+            "ansi-escapes": "^4.2.1",
+            "chalk": "^2.4.2",
+            "cli-cursor": "^3.1.0",
+            "cli-width": "^2.0.0",
+            "external-editor": "^3.0.3",
+            "figures": "^3.0.0",
+            "lodash": "^4.17.15",
+            "mute-stream": "0.0.8",
+            "run-async": "^2.2.0",
+            "rxjs": "^6.5.3",
+            "string-width": "^4.1.0",
+            "strip-ansi": "^5.1.0",
+            "through": "^2.3.6"
+          },
+          "dependencies": {
+            "strip-ansi": {
+              "version": "5.2.0",
+              "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz",
+              "integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==",
+              "requires": {
+                "ansi-regex": "^4.1.0"
+              }
+            }
+          }
+        },
+        "json5": {
+          "version": "1.0.1",
+          "resolved": "https://registry.npmjs.org/json5/-/json5-1.0.1.tgz",
+          "integrity": "sha512-aKS4WQjPenRxiQsC93MNfjx+nbF4PAdYzmd/1JIj8HYzqfbu86beTuNgXDzPknWk0n0uARlyewZo4s++ES36Ow==",
+          "requires": {
+            "minimist": "^1.2.0"
+          }
+        },
+        "loader-utils": {
+          "version": "1.2.3",
+          "resolved": "https://registry.npmjs.org/loader-utils/-/loader-utils-1.2.3.tgz",
+          "integrity": "sha512-fkpz8ejdnEMG3s37wGL07iSBDg99O9D5yflE9RGNH3hRdx9SOwYfnGYdZOUIZitN8E+E2vkq3MUMYMvPYl5ZZA==",
+          "requires": {
+            "big.js": "^5.2.2",
+            "emojis-list": "^2.0.0",
+            "json5": "^1.0.1"
+          }
+        },
+        "locate-path": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-3.0.0.tgz",
+          "integrity": "sha512-7AO748wWnIhNqAuaty2ZWHkQHRSNfPVIsPIfwEOWO22AmaoVrWavlOcMR5nzTLNYvp36X220/maaRsrec1G65A==",
+          "requires": {
+            "p-locate": "^3.0.0",
+            "path-exists": "^3.0.0"
+          }
+        },
+        "p-limit": {
+          "version": "2.3.0",
+          "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz",
+          "integrity": "sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==",
+          "requires": {
+            "p-try": "^2.0.0"
+          }
+        },
+        "p-locate": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-3.0.0.tgz",
+          "integrity": "sha512-x+12w/To+4GFfgJhBEpiDcLozRJGegY+Ei7/z0tSLkMmxGZNybVMSfWj9aJn8Z5Fc7dBUNJOOVgPv2H7IwulSQ==",
+          "requires": {
+            "p-limit": "^2.0.0"
+          }
+        },
+        "p-try": {
+          "version": "2.2.0",
+          "resolved": "https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz",
+          "integrity": "sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ=="
+        },
+        "path-key": {
+          "version": "3.1.1",
+          "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
+          "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q=="
+        },
+        "pkg-up": {
+          "version": "3.1.0",
+          "resolved": "https://registry.npmjs.org/pkg-up/-/pkg-up-3.1.0.tgz",
+          "integrity": "sha512-nDywThFk1i4BQK4twPQ6TA4RT8bDY96yeuCVBWL3ePARCiEKDRSrNGbFIgUJpLp+XeIR65v8ra7WuJOFUBtkMA==",
+          "requires": {
+            "find-up": "^3.0.0"
+          },
+          "dependencies": {
+            "find-up": {
+              "version": "3.0.0",
+              "resolved": "https://registry.npmjs.org/find-up/-/find-up-3.0.0.tgz",
+              "integrity": "sha512-1yD6RmLI1XBfxugvORwlck6f75tYL+iR0jqwsOrOxMZyGYqUuDhJ0l4AXdO1iX/FTs9cBAMEk1gWSEx1kSbylg==",
+              "requires": {
+                "locate-path": "^3.0.0"
+              }
+            }
+          }
+        },
+        "shebang-command": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
+          "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
+          "requires": {
+            "shebang-regex": "^3.0.0"
+          }
+        },
+        "shebang-regex": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
+          "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A=="
+        },
+        "strip-ansi": {
+          "version": "6.0.0",
+          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.0.tgz",
+          "integrity": "sha512-AuvKTrTfQNYNIctbR1K/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==",
+          "requires": {
+            "ansi-regex": "^5.0.0"
+          },
+          "dependencies": {
+            "ansi-regex": {
+              "version": "5.0.0",
+              "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.0.tgz",
+              "integrity": "sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f/lg=="
+            }
+          }
+        },
+        "which": {
+          "version": "2.0.2",
+          "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
+          "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
+          "requires": {
+            "isexe": "^2.0.0"
+          }
+        }
+      }
+    },
+    "react-dom": {
+      "version": "16.13.1",
+      "resolved": "https://registry.npmjs.org/react-dom/-/react-dom-16.13.1.tgz",
+      "integrity": "sha512-81PIMmVLnCNLO/fFOQxdQkvEq/+Hfpv24XNJfpyZhTRfO0QcmQIF/PgCa1zCOj2w1hrn12MFLyaJ/G0+Mxtfag==",
+      "dev": true,
+      "requires": {
+        "loose-envify": "^1.1.0",
+        "object-assign": "^4.1.1",
+        "prop-types": "^15.6.2",
+        "scheduler": "^0.19.1"
+      }
+    },
+    "react-error-overlay": {
+      "version": "6.0.7",
+      "resolved": "https://registry.npmjs.org/react-error-overlay/-/react-error-overlay-6.0.7.tgz",
+      "integrity": "sha512-TAv1KJFh3RhqxNvhzxj6LeT5NWklP6rDr2a0jaTfsZ5wSZWHOGeqQyejUp3xxLfPt2UpyJEcVQB/zyPcmonNFA=="
+    },
+    "react-is": {
+      "version": "16.13.1",
+      "resolved": "https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz",
+      "integrity": "sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ=="
+    },
+    "react-lifecycles-compat": {
+      "version": "3.0.4",
+      "resolved": "https://registry.npmjs.org/react-lifecycles-compat/-/react-lifecycles-compat-3.0.4.tgz",
+      "integrity": "sha512-fBASbA6LnOU9dOU2eW7aQ8xmYBSXUIWr+UmF9b1efZBazGNO+rcXT/icdKnYm2pTwcRylVUYwW7H1PHfLekVzA=="
+    },
+    "react-native-reanimated": {
+      "version": "1.8.0",
+      "resolved": "https://registry.npmjs.org/react-native-reanimated/-/react-native-reanimated-1.8.0.tgz",
+      "integrity": "sha512-vGTt94lE5fsZmfMwERWFIsCr5LHsyllOESeNvlKryLgAg7h4cnJ5XSmVSy4L3qogdgFYCL6HEgY+s7tQmKXiiQ==",
+      "requires": {
+        "fbjs": "^1.0.0"
+      }
+    },
+    "react-native-safe-area-context": {
+      "version": "0.7.3",
+      "resolved": "https://registry.npmjs.org/react-native-safe-area-context/-/react-native-safe-area-context-0.7.3.tgz",
+      "integrity": "sha512-9Uqu1vlXPi+2cKW/CW6OnHxA76mWC4kF3wvlqzq4DY8hn37AeiXtLFs2WkxH4yXQRrnJdP6ivc65Lz+MqwRZAA=="
+    },
+    "react-native-safe-area-view": {
+      "version": "0.14.9",
+      "resolved": "https://registry.npmjs.org/react-native-safe-area-view/-/react-native-safe-area-view-0.14.9.tgz",
+      "integrity": "sha512-WII/ulhpVyL/qbYb7vydq7dJAfZRBcEhg4/UWt6F6nAKpLa3gAceMOxBxI914ppwSP/TdUsandFy6lkJQE0z4A==",
+      "requires": {
+        "hoist-non-react-statics": "^2.3.1"
+      },
+      "dependencies": {
+        "hoist-non-react-statics": {
+          "version": "2.5.5",
+          "resolved": "https://registry.npmjs.org/hoist-non-react-statics/-/hoist-non-react-statics-2.5.5.tgz",
+          "integrity": "sha512-rqcy4pJo55FTTLWt+bU8ukscqHeE/e9KWvsOW2b/a3afxQZhwkQdT1rPPCJ0rYXdj4vNcasY8zHTH+jF/qStxw=="
+        }
+      }
+    },
+    "react-native-screens": {
+      "version": "2.7.0",
+      "resolved": "https://registry.npmjs.org/react-native-screens/-/react-native-screens-2.7.0.tgz",
+      "integrity": "sha512-n/23IBOkrTKCfuUd6tFeRkn3lB2QZ3cmvoubRscR0JU/Zl4/ZyKmwnFmUv1/Fr+2GH/H8UTX59kEKDYYg3dMgA=="
+    },
+    "react-native-view-shot": {
+      "version": "3.1.2",
+      "resolved": "https://registry.npmjs.org/react-native-view-shot/-/react-native-view-shot-3.1.2.tgz",
+      "integrity": "sha512-9u9fPtp6a52UMoZ/UCPrCjKZk8tnkI9To0Eh6yYnLKFEGkRZ7Chm6DqwDJbYJHeZrheCCopaD5oEOnRqhF4L2Q=="
+    },
+    "react-navigation": {
+      "version": "4.3.9",
+      "resolved": "https://registry.npmjs.org/react-navigation/-/react-navigation-4.3.9.tgz",
+      "integrity": "sha512-nqAHS7jL1hgFPZeYt1vU8zVuF2Ay3bVVdCYvJSFJ9UvQZOtqPr/Wen/Ya9fRc+AvTtf3+AJn97K8xIiz2HHusQ==",
+      "requires": {
+        "@react-navigation/core": "^3.7.6",
+        "@react-navigation/native": "^3.7.13"
+      }
+    },
+    "react-popper": {
+      "version": "1.3.7",
+      "resolved": "https://registry.npmjs.org/react-popper/-/react-popper-1.3.7.tgz",
+      "integrity": "sha512-nmqYTx7QVjCm3WUZLeuOomna138R1luC4EqkW3hxJUrAe+3eNz3oFCLYdnPwILfn0mX1Ew2c3wctrjlUMYYUww==",
+      "requires": {
+        "@babel/runtime": "^7.1.2",
+        "create-react-context": "^0.3.0",
+        "deep-equal": "^1.1.1",
+        "popper.js": "^1.14.4",
+        "prop-types": "^15.6.1",
+        "typed-styles": "^0.0.7",
+        "warning": "^4.0.2"
+      }
+    },
+    "react-redux": {
+      "version": "7.2.0",
+      "resolved": "https://registry.npmjs.org/react-redux/-/react-redux-7.2.0.tgz",
+      "integrity": "sha512-EvCAZYGfOLqwV7gh849xy9/pt55rJXPwmYvI4lilPM5rUT/1NxuuN59ipdBksRVSvz0KInbPnp4IfoXJXCqiDA==",
+      "requires": {
+        "@babel/runtime": "^7.5.5",
+        "hoist-non-react-statics": "^3.3.0",
+        "loose-envify": "^1.4.0",
+        "prop-types": "^15.7.2",
+        "react-is": "^16.9.0"
+      }
+    },
+    "react-refresh": {
+      "version": "0.4.2",
+      "resolved": "https://registry.npmjs.org/react-refresh/-/react-refresh-0.4.2.tgz",
+      "integrity": "sha512-kv5QlFFSZWo7OlJFNYbxRtY66JImuP2LcrFgyJfQaf85gSP+byzG21UbDQEYjU7f//ny8rwiEkO6py2Y+fEgAQ=="
+    },
+    "react-router": {
+      "version": "5.1.2",
+      "resolved": "https://registry.npmjs.org/react-router/-/react-router-5.1.2.tgz",
+      "integrity": "sha512-yjEuMFy1ONK246B+rsa0cUam5OeAQ8pyclRDgpxuSCrAlJ1qN9uZ5IgyKC7gQg0w8OM50NXHEegPh/ks9YuR2A==",
+      "requires": {
+        "@babel/runtime": "^7.1.2",
+        "history": "^4.9.0",
+        "hoist-non-react-statics": "^3.1.0",
+        "loose-envify": "^1.3.1",
+        "mini-create-react-context": "^0.3.0",
+        "path-to-regexp": "^1.7.0",
+        "prop-types": "^15.6.2",
+        "react-is": "^16.6.0",
+        "tiny-invariant": "^1.0.2",
+        "tiny-warning": "^1.0.0"
+      },
+      "dependencies": {
+        "isarray": {
+          "version": "0.0.1",
+          "resolved": "https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz",
+          "integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8="
+        },
+        "path-to-regexp": {
+          "version": "1.8.0",
+          "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-1.8.0.tgz",
+          "integrity": "sha512-n43JRhlUKUAlibEJhPeir1ncUID16QnEjNpwzNdO3Lm4ywrBpBZ5oLD0I6br9evr1Y9JTqwRtAh7JLoOzAQdVA==",
+          "requires": {
+            "isarray": "0.0.1"
+          }
+        }
+      }
+    },
+    "react-router-dom": {
+      "version": "5.1.2",
+      "resolved": "https://registry.npmjs.org/react-router-dom/-/react-router-dom-5.1.2.tgz",
+      "integrity": "sha512-7BPHAaIwWpZS074UKaw1FjVdZBSVWEk8IuDXdB+OkLb8vd/WRQIpA4ag9WQk61aEfQs47wHyjWUoUGGZxpQXew==",
+      "requires": {
+        "@babel/runtime": "^7.1.2",
+        "history": "^4.9.0",
+        "loose-envify": "^1.3.1",
+        "prop-types": "^15.6.2",
+        "react-router": "5.1.2",
+        "tiny-invariant": "^1.0.2",
+        "tiny-warning": "^1.0.0"
+      }
+    },
+    "react-scripts": {
+      "version": "3.4.1",
+      "resolved": "https://registry.npmjs.org/react-scripts/-/react-scripts-3.4.1.tgz",
+      "integrity": "sha512-JpTdi/0Sfd31mZA6Ukx+lq5j1JoKItX7qqEK4OiACjVQletM1P38g49d9/D0yTxp9FrSF+xpJFStkGgKEIRjlQ==",
+      "requires": {
+        "@babel/core": "7.9.0",
+        "@svgr/webpack": "4.3.3",
+        "@typescript-eslint/eslint-plugin": "^2.10.0",
+        "@typescript-eslint/parser": "^2.10.0",
+        "babel-eslint": "10.1.0",
+        "babel-jest": "^24.9.0",
+        "babel-loader": "8.1.0",
+        "babel-plugin-named-asset-import": "^0.3.6",
+        "babel-preset-react-app": "^9.1.2",
+        "camelcase": "^5.3.1",
+        "case-sensitive-paths-webpack-plugin": "2.3.0",
+        "css-loader": "3.4.2",
+        "dotenv": "8.2.0",
+        "dotenv-expand": "5.1.0",
+        "eslint": "^6.6.0",
+        "eslint-config-react-app": "^5.2.1",
+        "eslint-loader": "3.0.3",
+        "eslint-plugin-flowtype": "4.6.0",
+        "eslint-plugin-import": "2.20.1",
+        "eslint-plugin-jsx-a11y": "6.2.3",
+        "eslint-plugin-react": "7.19.0",
+        "eslint-plugin-react-hooks": "^1.6.1",
+        "file-loader": "4.3.0",
+        "fs-extra": "^8.1.0",
+        "fsevents": "2.1.2",
+        "html-webpack-plugin": "4.0.0-beta.11",
+        "identity-obj-proxy": "3.0.0",
+        "jest": "24.9.0",
+        "jest-environment-jsdom-fourteen": "1.0.1",
+        "jest-resolve": "24.9.0",
+        "jest-watch-typeahead": "0.4.2",
+        "mini-css-extract-plugin": "0.9.0",
+        "optimize-css-assets-webpack-plugin": "5.0.3",
+        "pnp-webpack-plugin": "1.6.4",
+        "postcss-flexbugs-fixes": "4.1.0",
+        "postcss-loader": "3.0.0",
+        "postcss-normalize": "8.0.1",
+        "postcss-preset-env": "6.7.0",
+        "postcss-safe-parser": "4.0.1",
+        "react-app-polyfill": "^1.0.6",
+        "react-dev-utils": "^10.2.1",
+        "resolve": "1.15.0",
+        "resolve-url-loader": "3.1.1",
+        "sass-loader": "8.0.2",
+        "semver": "6.3.0",
+        "style-loader": "0.23.1",
+        "terser-webpack-plugin": "2.3.5",
+        "ts-pnp": "1.1.6",
+        "url-loader": "2.3.0",
+        "webpack": "4.42.0",
+        "webpack-dev-server": "3.10.3",
+        "webpack-manifest-plugin": "2.2.0",
+        "workbox-webpack-plugin": "4.3.1"
+      }
+    },
+    "react-transition-group": {
+      "version": "2.9.0",
+      "resolved": "https://registry.npmjs.org/react-transition-group/-/react-transition-group-2.9.0.tgz",
+      "integrity": "sha512-+HzNTCHpeQyl4MJ/bdE0u6XRMe9+XG/+aL4mCxVN4DnPBQ0/5bfHWPDuOZUzYdMj94daZaZdCCc1Dzt9R/xSSg==",
+      "requires": {
+        "dom-helpers": "^3.4.0",
+        "loose-envify": "^1.4.0",
+        "prop-types": "^15.6.2",
+        "react-lifecycles-compat": "^3.0.4"
+      }
+    },
+    "reactstrap": {
+      "version": "8.4.1",
+      "resolved": "https://registry.npmjs.org/reactstrap/-/reactstrap-8.4.1.tgz",
+      "integrity": "sha512-oAjp9PYYUGKl7SLXwrQ1oRIrYw0MqfO2mUqYgGapFKHG2uwjEtLip5rYxtMujkGx3COjH5FX1WtcfNU4oqpH0Q==",
+      "requires": {
+        "@babel/runtime": "^7.2.0",
+        "classnames": "^2.2.3",
+        "prop-types": "^15.5.8",
+        "react-lifecycles-compat": "^3.0.4",
+        "react-popper": "^1.3.6",
+        "react-transition-group": "^2.3.1"
+      }
+    },
+    "read-pkg": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/read-pkg/-/read-pkg-3.0.0.tgz",
+      "integrity": "sha1-nLxoaXj+5l0WwA4rGcI3/Pbjg4k=",
+      "requires": {
+        "load-json-file": "^4.0.0",
+        "normalize-package-data": "^2.3.2",
+        "path-type": "^3.0.0"
+      }
+    },
+    "read-pkg-up": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-4.0.0.tgz",
+      "integrity": "sha512-6etQSH7nJGsK0RbG/2TeDzZFa8shjQ1um+SwQQ5cwKy0dhSXdOncEhb1CPpvQG4h7FyOV6EB6YlV0yJvZQNAkA==",
+      "requires": {
+        "find-up": "^3.0.0",
+        "read-pkg": "^3.0.0"
+      },
+      "dependencies": {
+        "find-up": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/find-up/-/find-up-3.0.0.tgz",
+          "integrity": "sha512-1yD6RmLI1XBfxugvORwlck6f75tYL+iR0jqwsOrOxMZyGYqUuDhJ0l4AXdO1iX/FTs9cBAMEk1gWSEx1kSbylg==",
+          "requires": {
+            "locate-path": "^3.0.0"
+          }
+        },
+        "locate-path": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-3.0.0.tgz",
+          "integrity": "sha512-7AO748wWnIhNqAuaty2ZWHkQHRSNfPVIsPIfwEOWO22AmaoVrWavlOcMR5nzTLNYvp36X220/maaRsrec1G65A==",
+          "requires": {
+            "p-locate": "^3.0.0",
+            "path-exists": "^3.0.0"
+          }
+        },
+        "p-limit": {
+          "version": "2.3.0",
+          "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz",
+          "integrity": "sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==",
+          "requires": {
+            "p-try": "^2.0.0"
+          }
+        },
+        "p-locate": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-3.0.0.tgz",
+          "integrity": "sha512-x+12w/To+4GFfgJhBEpiDcLozRJGegY+Ei7/z0tSLkMmxGZNybVMSfWj9aJn8Z5Fc7dBUNJOOVgPv2H7IwulSQ==",
+          "requires": {
+            "p-limit": "^2.0.0"
+          }
+        },
+        "p-try": {
+          "version": "2.2.0",
+          "resolved": "https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz",
+          "integrity": "sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ=="
+        }
+      }
+    },
+    "readable-stream": {
+      "version": "3.6.0",
+      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-3.6.0.tgz",
+      "integrity": "sha512-BViHy7LKeTz4oNnkcLJ+lVSL6vpiFeX6/d3oSH8zCW7UxP2onchk+vTGB143xuFjHS3deTgkKoXXymXqymiIdA==",
+      "requires": {
+        "inherits": "^2.0.3",
+        "string_decoder": "^1.1.1",
+        "util-deprecate": "^1.0.1"
+      }
+    },
+    "readdirp": {
+      "version": "3.4.0",
+      "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-3.4.0.tgz",
+      "integrity": "sha512-0xe001vZBnJEK+uKcj8qOhyAKPzIT+gStxWr3LCB0DwcXR5NZJ3IaC+yGnHCYzB/S7ov3m3EEbZI2zeNvX+hGQ==",
+      "requires": {
+        "picomatch": "^2.2.1"
+      }
+    },
+    "realpath-native": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/realpath-native/-/realpath-native-1.1.0.tgz",
+      "integrity": "sha512-wlgPA6cCIIg9gKz0fgAPjnzh4yR/LnXovwuo9hvyGvx3h8nX4+/iLZplfUWasXpqD8BdnGnP5njOFjkUwPzvjA==",
+      "requires": {
+        "util.promisify": "^1.0.0"
+      }
+    },
+    "recursive-readdir": {
+      "version": "2.2.2",
+      "resolved": "https://registry.npmjs.org/recursive-readdir/-/recursive-readdir-2.2.2.tgz",
+      "integrity": "sha512-nRCcW9Sj7NuZwa2XvH9co8NPeXUBhZP7CRKJtU+cS6PW9FpCIFoI5ib0NT1ZrbNuPoRy0ylyCaUL8Gih4LSyFg==",
+      "requires": {
+        "minimatch": "3.0.4"
+      }
+    },
+    "redent": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/redent/-/redent-3.0.0.tgz",
+      "integrity": "sha512-6tDA8g98We0zd0GvVeMT9arEOnTw9qM03L9cJXaCjrip1OO764RDBLBfrB4cwzNGDj5OA5ioymC9GkizgWJDUg==",
+      "requires": {
+        "indent-string": "^4.0.0",
+        "strip-indent": "^3.0.0"
+      }
+    },
+    "redux": {
+      "version": "4.0.5",
+      "resolved": "https://registry.npmjs.org/redux/-/redux-4.0.5.tgz",
+      "integrity": "sha512-VSz1uMAH24DM6MF72vcojpYPtrTUu3ByVWfPL1nPfVRb5mZVTve5GnNCUV53QM/BZ66xfWrm0CTWoM+Xlz8V1w==",
+      "requires": {
+        "loose-envify": "^1.4.0",
+        "symbol-observable": "^1.2.0"
+      }
+    },
+    "regenerate": {
+      "version": "1.4.0",
+      "resolved": "https://registry.npmjs.org/regenerate/-/regenerate-1.4.0.tgz",
+      "integrity": "sha512-1G6jJVDWrt0rK99kBjvEtziZNCICAuvIPkSiUFIQxVP06RCVpq3dmDo2oi6ABpYaDYaTRr67BEhL8r1wgEZZKg=="
+    },
+    "regenerate-unicode-properties": {
+      "version": "8.2.0",
+      "resolved": "https://registry.npmjs.org/regenerate-unicode-properties/-/regenerate-unicode-properties-8.2.0.tgz",
+      "integrity": "sha512-F9DjY1vKLo/tPePDycuH3dn9H1OTPIkVD9Kz4LODu+F2C75mgjAJ7x/gwy6ZcSNRAAkhNlJSOHRe8k3p+K9WhA==",
+      "requires": {
+        "regenerate": "^1.4.0"
+      }
+    },
+    "regenerator-runtime": {
+      "version": "0.13.5",
+      "resolved": "https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.13.5.tgz",
+      "integrity": "sha512-ZS5w8CpKFinUzOwW3c83oPeVXoNsrLsaCoLtJvAClH135j/R77RuymhiSErhm2lKcwSCIpmvIWSbDkIfAqKQlA=="
+    },
+    "regenerator-transform": {
+      "version": "0.14.4",
+      "resolved": "https://registry.npmjs.org/regenerator-transform/-/regenerator-transform-0.14.4.tgz",
+      "integrity": "sha512-EaJaKPBI9GvKpvUz2mz4fhx7WPgvwRLY9v3hlNHWmAuJHI13T4nwKnNvm5RWJzEdnI5g5UwtOww+S8IdoUC2bw==",
+      "requires": {
+        "@babel/runtime": "^7.8.4",
+        "private": "^0.1.8"
+      }
+    },
+    "regex-not": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/regex-not/-/regex-not-1.0.2.tgz",
+      "integrity": "sha512-J6SDjUgDxQj5NusnOtdFxDwN/+HWykR8GELwctJ7mdqhcyy1xEc4SRFHUXvxTp661YaVKAjfRLZ9cCqS6tn32A==",
+      "requires": {
+        "extend-shallow": "^3.0.2",
+        "safe-regex": "^1.1.0"
+      }
+    },
+    "regex-parser": {
+      "version": "2.2.10",
+      "resolved": "https://registry.npmjs.org/regex-parser/-/regex-parser-2.2.10.tgz",
+      "integrity": "sha512-8t6074A68gHfU8Neftl0Le6KTDwfGAj7IyjPIMSfikI2wJUTHDMaIq42bUsfVnj8mhx0R+45rdUXHGpN164avA=="
+    },
+    "regexp.prototype.flags": {
+      "version": "1.3.0",
+      "resolved": "https://registry.npmjs.org/regexp.prototype.flags/-/regexp.prototype.flags-1.3.0.tgz",
+      "integrity": "sha512-2+Q0C5g951OlYlJz6yu5/M33IcsESLlLfsyIaLJaG4FA2r4yP8MvVMJUUP/fVBkSpbbbZlS5gynbEWLipiiXiQ==",
+      "requires": {
+        "define-properties": "^1.1.3",
+        "es-abstract": "^1.17.0-next.1"
+      }
+    },
+    "regexpp": {
+      "version": "3.1.0",
+      "resolved": "https://registry.npmjs.org/regexpp/-/regexpp-3.1.0.tgz",
+      "integrity": "sha512-ZOIzd8yVsQQA7j8GCSlPGXwg5PfmA1mrq0JP4nGhh54LaKN3xdai/vHUDu74pKwV8OxseMS65u2NImosQcSD0Q=="
+    },
+    "regexpu-core": {
+      "version": "4.7.0",
+      "resolved": "https://registry.npmjs.org/regexpu-core/-/regexpu-core-4.7.0.tgz",
+      "integrity": "sha512-TQ4KXRnIn6tz6tjnrXEkD/sshygKH/j5KzK86X8MkeHyZ8qst/LZ89j3X4/8HEIfHANTFIP/AbXakeRhWIl5YQ==",
+      "requires": {
+        "regenerate": "^1.4.0",
+        "regenerate-unicode-properties": "^8.2.0",
+        "regjsgen": "^0.5.1",
+        "regjsparser": "^0.6.4",
+        "unicode-match-property-ecmascript": "^1.0.4",
+        "unicode-match-property-value-ecmascript": "^1.2.0"
+      }
+    },
+    "regjsgen": {
+      "version": "0.5.1",
+      "resolved": "https://registry.npmjs.org/regjsgen/-/regjsgen-0.5.1.tgz",
+      "integrity": "sha512-5qxzGZjDs9w4tzT3TPhCJqWdCc3RLYwy9J2NB0nm5Lz+S273lvWcpjaTGHsT1dc6Hhfq41uSEOw8wBmxrKOuyg=="
+    },
+    "regjsparser": {
+      "version": "0.6.4",
+      "resolved": "https://registry.npmjs.org/regjsparser/-/regjsparser-0.6.4.tgz",
+      "integrity": "sha512-64O87/dPDgfk8/RQqC4gkZoGyyWFIEUTTh80CU6CWuK5vkCGyekIx+oKcEIYtP/RAxSQltCZHCNu/mdd7fqlJw==",
+      "requires": {
+        "jsesc": "~0.5.0"
+      },
+      "dependencies": {
+        "jsesc": {
+          "version": "0.5.0",
+          "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-0.5.0.tgz",
+          "integrity": "sha1-597mbjXW/Bb3EP6R1c9p9w8IkR0="
+        }
+      }
+    },
+    "relateurl": {
+      "version": "0.2.7",
+      "resolved": "https://registry.npmjs.org/relateurl/-/relateurl-0.2.7.tgz",
+      "integrity": "sha1-VNvzd+UUQKypCkzSdGANP/LYiKk="
+    },
+    "remove-trailing-separator": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/remove-trailing-separator/-/remove-trailing-separator-1.1.0.tgz",
+      "integrity": "sha1-wkvOKig62tW8P1jg1IJJuSN52O8="
+    },
+    "renderkid": {
+      "version": "2.0.3",
+      "resolved": "https://registry.npmjs.org/renderkid/-/renderkid-2.0.3.tgz",
+      "integrity": "sha512-z8CLQp7EZBPCwCnncgf9C4XAi3WR0dv+uWu/PjIyhhAb5d6IJ/QZqlHFprHeKT+59//V6BNUsLbvN8+2LarxGA==",
+      "requires": {
+        "css-select": "^1.1.0",
+        "dom-converter": "^0.2",
+        "htmlparser2": "^3.3.0",
+        "strip-ansi": "^3.0.0",
+        "utila": "^0.4.0"
+      },
+      "dependencies": {
+        "ansi-regex": {
+          "version": "2.1.1",
+          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",
+          "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8="
+        },
+        "css-select": {
+          "version": "1.2.0",
+          "resolved": "https://registry.npmjs.org/css-select/-/css-select-1.2.0.tgz",
+          "integrity": "sha1-KzoRBTnFNV8c2NMUYj6HCxIeyFg=",
+          "requires": {
+            "boolbase": "~1.0.0",
+            "css-what": "2.1",
+            "domutils": "1.5.1",
+            "nth-check": "~1.0.1"
+          }
+        },
+        "css-what": {
+          "version": "2.1.3",
+          "resolved": "https://registry.npmjs.org/css-what/-/css-what-2.1.3.tgz",
+          "integrity": "sha512-a+EPoD+uZiNfh+5fxw2nO9QwFa6nJe2Or35fGY6Ipw1R3R4AGz1d1TEZrCegvw2YTmZ0jXirGYlzxxpYSHwpEg=="
+        },
+        "domutils": {
+          "version": "1.5.1",
+          "resolved": "https://registry.npmjs.org/domutils/-/domutils-1.5.1.tgz",
+          "integrity": "sha1-3NhIiib1Y9YQeeSMn3t+Mjc2gs8=",
+          "requires": {
+            "dom-serializer": "0",
+            "domelementtype": "1"
+          }
+        },
+        "strip-ansi": {
+          "version": "3.0.1",
+          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",
+          "integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",
+          "requires": {
+            "ansi-regex": "^2.0.0"
+          }
+        }
+      }
+    },
+    "repeat-element": {
+      "version": "1.1.3",
+      "resolved": "https://registry.npmjs.org/repeat-element/-/repeat-element-1.1.3.tgz",
+      "integrity": "sha512-ahGq0ZnV5m5XtZLMb+vP76kcAM5nkLqk0lpqAuojSKGgQtn4eRi4ZZGm2olo2zKFH+sMsWaqOCW1dqAnOru72g=="
+    },
+    "repeat-string": {
+      "version": "1.6.1",
+      "resolved": "https://registry.npmjs.org/repeat-string/-/repeat-string-1.6.1.tgz",
+      "integrity": "sha1-jcrkcOHIirwtYA//Sndihtp15jc="
+    },
+    "repeating": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/repeating/-/repeating-2.0.1.tgz",
+      "integrity": "sha1-UhTFOpJtNVJwdSf7q0FdvAjQbdo=",
+      "dev": true,
+      "requires": {
+        "is-finite": "^1.0.0"
+      }
+    },
+    "request": {
+      "version": "2.88.2",
+      "resolved": "https://registry.npmjs.org/request/-/request-2.88.2.tgz",
+      "integrity": "sha512-MsvtOrfG9ZcrOwAW+Qi+F6HbD0CWXEh9ou77uOb7FM2WPhwT7smM833PzanhJLsgXjN89Ir6V2PczXNnMpwKhw==",
+      "requires": {
+        "aws-sign2": "~0.7.0",
+        "aws4": "^1.8.0",
+        "caseless": "~0.12.0",
+        "combined-stream": "~1.0.6",
+        "extend": "~3.0.2",
+        "forever-agent": "~0.6.1",
+        "form-data": "~2.3.2",
+        "har-validator": "~5.1.3",
+        "http-signature": "~1.2.0",
+        "is-typedarray": "~1.0.0",
+        "isstream": "~0.1.2",
+        "json-stringify-safe": "~5.0.1",
+        "mime-types": "~2.1.19",
+        "oauth-sign": "~0.9.0",
+        "performance-now": "^2.1.0",
+        "qs": "~6.5.2",
+        "safe-buffer": "^5.1.2",
+        "tough-cookie": "~2.5.0",
+        "tunnel-agent": "^0.6.0",
+        "uuid": "^3.3.2"
+      }
+    },
+    "request-promise-core": {
+      "version": "1.1.3",
+      "resolved": "https://registry.npmjs.org/request-promise-core/-/request-promise-core-1.1.3.tgz",
+      "integrity": "sha512-QIs2+ArIGQVp5ZYbWD5ZLCY29D5CfWizP8eWnm8FoGD1TX61veauETVQbrV60662V0oFBkrDOuaBI8XgtuyYAQ==",
+      "requires": {
+        "lodash": "^4.17.15"
+      }
+    },
+    "request-promise-native": {
+      "version": "1.0.8",
+      "resolved": "https://registry.npmjs.org/request-promise-native/-/request-promise-native-1.0.8.tgz",
+      "integrity": "sha512-dapwLGqkHtwL5AEbfenuzjTYg35Jd6KPytsC2/TLkVMz8rm+tNt72MGUWT1RP/aYawMpN6HqbNGBQaRcBtjQMQ==",
+      "requires": {
+        "request-promise-core": "1.1.3",
+        "stealthy-require": "^1.1.1",
+        "tough-cookie": "^2.3.3"
+      }
+    },
+    "require-directory": {
+      "version": "2.1.1",
+      "resolved": "https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz",
+      "integrity": "sha1-jGStX9MNqxyXbiNE/+f3kqam30I="
+    },
+    "require-main-filename": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/require-main-filename/-/require-main-filename-2.0.0.tgz",
+      "integrity": "sha512-NKN5kMDylKuldxYLSUfrbo5Tuzh4hd+2E8NPPX02mZtn1VuREQToYe/ZdlJy+J3uCpfaiGF05e7B8W0iXbQHmg=="
+    },
+    "requires-port": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/requires-port/-/requires-port-1.0.0.tgz",
+      "integrity": "sha1-kl0mAdOaxIXgkc8NpcbmlNw9yv8="
+    },
+    "reselect": {
+      "version": "3.0.1",
+      "resolved": "https://registry.npmjs.org/reselect/-/reselect-3.0.1.tgz",
+      "integrity": "sha1-79qpjqdFEyTQkrKyFjpqHXqaIUc="
+    },
+    "resolve": {
+      "version": "1.15.0",
+      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.15.0.tgz",
+      "integrity": "sha512-+hTmAldEGE80U2wJJDC1lebb5jWqvTYAfm3YZ1ckk1gBr0MnCqUKlwK1e+anaFljIl+F5tR5IoZcm4ZDA1zMQw==",
+      "requires": {
+        "path-parse": "^1.0.6"
+      }
+    },
+    "resolve-cwd": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/resolve-cwd/-/resolve-cwd-2.0.0.tgz",
+      "integrity": "sha1-AKn3OHVW4nA46uIyyqNypqWbZlo=",
+      "requires": {
+        "resolve-from": "^3.0.0"
+      }
+    },
+    "resolve-from": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-3.0.0.tgz",
+      "integrity": "sha1-six699nWiBvItuZTM17rywoYh0g="
+    },
+    "resolve-pathname": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/resolve-pathname/-/resolve-pathname-3.0.0.tgz",
+      "integrity": "sha512-C7rARubxI8bXFNB/hqcp/4iUeIXJhJZvFPFPiSPRnhU5UPxzMFIl+2E6yY6c4k9giDJAhtV+enfA+G89N6Csng=="
+    },
+    "resolve-url": {
+      "version": "0.2.1",
+      "resolved": "https://registry.npmjs.org/resolve-url/-/resolve-url-0.2.1.tgz",
+      "integrity": "sha1-LGN/53yJOv0qZj/iGqkIAGjiBSo="
+    },
+    "resolve-url-loader": {
+      "version": "3.1.1",
+      "resolved": "https://registry.npmjs.org/resolve-url-loader/-/resolve-url-loader-3.1.1.tgz",
+      "integrity": "sha512-K1N5xUjj7v0l2j/3Sgs5b8CjrrgtC70SmdCuZiJ8tSyb5J+uk3FoeZ4b7yTnH6j7ngI+Bc5bldHJIa8hYdu2gQ==",
+      "requires": {
+        "adjust-sourcemap-loader": "2.0.0",
+        "camelcase": "5.3.1",
+        "compose-function": "3.0.3",
+        "convert-source-map": "1.7.0",
+        "es6-iterator": "2.0.3",
+        "loader-utils": "1.2.3",
+        "postcss": "7.0.21",
+        "rework": "1.0.1",
+        "rework-visit": "1.0.0",
+        "source-map": "0.6.1"
+      },
+      "dependencies": {
+        "emojis-list": {
+          "version": "2.1.0",
+          "resolved": "https://registry.npmjs.org/emojis-list/-/emojis-list-2.1.0.tgz",
+          "integrity": "sha1-TapNnbAPmBmIDHn6RXrlsJof04k="
+        },
+        "json5": {
+          "version": "1.0.1",
+          "resolved": "https://registry.npmjs.org/json5/-/json5-1.0.1.tgz",
+          "integrity": "sha512-aKS4WQjPenRxiQsC93MNfjx+nbF4PAdYzmd/1JIj8HYzqfbu86beTuNgXDzPknWk0n0uARlyewZo4s++ES36Ow==",
+          "requires": {
+            "minimist": "^1.2.0"
+          }
+        },
+        "loader-utils": {
+          "version": "1.2.3",
+          "resolved": "https://registry.npmjs.org/loader-utils/-/loader-utils-1.2.3.tgz",
+          "integrity": "sha512-fkpz8ejdnEMG3s37wGL07iSBDg99O9D5yflE9RGNH3hRdx9SOwYfnGYdZOUIZitN8E+E2vkq3MUMYMvPYl5ZZA==",
+          "requires": {
+            "big.js": "^5.2.2",
+            "emojis-list": "^2.0.0",
+            "json5": "^1.0.1"
+          }
+        },
+        "postcss": {
+          "version": "7.0.21",
+          "resolved": "https://registry.npmjs.org/postcss/-/postcss-7.0.21.tgz",
+          "integrity": "sha512-uIFtJElxJo29QC753JzhidoAhvp/e/Exezkdhfmt8AymWT6/5B7W1WmponYWkHk2eg6sONyTch0A3nkMPun3SQ==",
+          "requires": {
+            "chalk": "^2.4.2",
+            "source-map": "^0.6.1",
+            "supports-color": "^6.1.0"
+          }
+        },
+        "source-map": {
+          "version": "0.6.1",
+          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
+          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="
+        },
+        "supports-color": {
+          "version": "6.1.0",
+          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-6.1.0.tgz",
+          "integrity": "sha512-qe1jfm1Mg7Nq/NSh6XE24gPXROEVsWHxC1LIx//XNlD9iw7YZQGjZNjYN7xGaEG6iKdA8EtNFW6R0gjnVXp+wQ==",
+          "requires": {
+            "has-flag": "^3.0.0"
+          }
+        }
+      }
+    },
+    "restore-cursor": {
+      "version": "3.1.0",
+      "resolved": "https://registry.npmjs.org/restore-cursor/-/restore-cursor-3.1.0.tgz",
+      "integrity": "sha512-l+sSefzHpj5qimhFSE5a8nufZYAM3sBSVMAPtYkmC+4EH2anSGaEMXSD0izRQbu9nfyQ9y5JrVmp7E8oZrUjvA==",
+      "requires": {
+        "onetime": "^5.1.0",
+        "signal-exit": "^3.0.2"
+      }
+    },
+    "resumer": {
+      "version": "0.0.0",
+      "resolved": "https://registry.npmjs.org/resumer/-/resumer-0.0.0.tgz",
+      "integrity": "sha1-8ej0YeQGS6Oegq883CqMiT0HZ1k=",
+      "requires": {
+        "through": "~2.3.4"
+      }
+    },
+    "ret": {
+      "version": "0.1.15",
+      "resolved": "https://registry.npmjs.org/ret/-/ret-0.1.15.tgz",
+      "integrity": "sha512-TTlYpa+OL+vMMNG24xSlQGEJ3B/RzEfUlLct7b5G/ytav+wPrplCpVMFuwzXbkecJrb6IYo1iFb0S9v37754mg=="
+    },
+    "retry": {
+      "version": "0.12.0",
+      "resolved": "https://registry.npmjs.org/retry/-/retry-0.12.0.tgz",
+      "integrity": "sha1-G0KmJmoh8HQh0bC1S33BZ7AcATs="
+    },
+    "rework": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/rework/-/rework-1.0.1.tgz",
+      "integrity": "sha1-MIBqhBNCtUUQqkEQhQzUhTQUSqc=",
+      "requires": {
+        "convert-source-map": "^0.3.3",
+        "css": "^2.0.0"
+      },
+      "dependencies": {
+        "convert-source-map": {
+          "version": "0.3.5",
+          "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-0.3.5.tgz",
+          "integrity": "sha1-8dgClQr33SYxof6+BZZVDIarMZA="
+        }
+      }
+    },
+    "rework-visit": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/rework-visit/-/rework-visit-1.0.0.tgz",
+      "integrity": "sha1-mUWygD8hni96ygCtuLyfZA+ELJo="
+    },
+    "rgb-regex": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/rgb-regex/-/rgb-regex-1.0.1.tgz",
+      "integrity": "sha1-wODWiC3w4jviVKR16O3UGRX+rrE="
+    },
+    "rgba-regex": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/rgba-regex/-/rgba-regex-1.0.0.tgz",
+      "integrity": "sha1-QzdOLiyglosO8VI0YLfXMP8i7rM="
+    },
+    "rimraf": {
+      "version": "2.6.3",
+      "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.6.3.tgz",
+      "integrity": "sha512-mwqeW5XsA2qAejG46gYdENaxXjx9onRNCfn7L0duuP4hCuTIi/QO7PDK07KJfp1d+izWPrzEJDcSqBa0OZQriA==",
+      "requires": {
+        "glob": "^7.1.3"
+      }
+    },
+    "ripemd160": {
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/ripemd160/-/ripemd160-2.0.2.tgz",
+      "integrity": "sha512-ii4iagi25WusVoiC4B4lq7pbXfAp3D9v5CwfkY33vffw2+pkDjY1D8GaN7spsxvCSx8dkPqOZCEZyfxcmJG2IA==",
+      "requires": {
+        "hash-base": "^3.0.0",
+        "inherits": "^2.0.1"
+      }
+    },
+    "rsvp": {
+      "version": "4.8.5",
+      "resolved": "https://registry.npmjs.org/rsvp/-/rsvp-4.8.5.tgz",
+      "integrity": "sha512-nfMOlASu9OnRJo1mbEk2cz0D56a1MBNrJ7orjRZQG10XDyuvwksKbuXNp6qa+kbn839HwjwhBzhFmdsaEAfauA=="
+    },
+    "run-async": {
+      "version": "2.4.1",
+      "resolved": "https://registry.npmjs.org/run-async/-/run-async-2.4.1.tgz",
+      "integrity": "sha512-tvVnVv01b8c1RrA6Ep7JkStj85Guv/YrMcwqYQnwjsAS2cTmmPGBBjAjpCW7RrSodNSoE2/qg9O4bceNvUuDgQ=="
+    },
+    "run-queue": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/run-queue/-/run-queue-1.0.3.tgz",
+      "integrity": "sha1-6Eg5bwV9Ij8kOGkkYY4laUFh7Ec=",
+      "requires": {
+        "aproba": "^1.1.1"
+      }
+    },
+    "rx-lite": {
+      "version": "4.0.8",
+      "resolved": "https://registry.npmjs.org/rx-lite/-/rx-lite-4.0.8.tgz",
+      "integrity": "sha1-Cx4Rr4vESDbwSmQH6S2kJGe3lEQ="
+    },
+    "rx-lite-aggregates": {
+      "version": "4.0.8",
+      "resolved": "https://registry.npmjs.org/rx-lite-aggregates/-/rx-lite-aggregates-4.0.8.tgz",
+      "integrity": "sha1-dTuHqJoRyVRnxKwWJsTvxOBcZ74=",
+      "requires": {
+        "rx-lite": "*"
+      }
+    },
+    "rxjs": {
+      "version": "6.5.5",
+      "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-6.5.5.tgz",
+      "integrity": "sha512-WfQI+1gohdf0Dai/Bbmk5L5ItH5tYqm3ki2c5GdWhKjalzjg93N3avFjVStyZZz+A2Em+ZxKH5bNghw9UeylGQ==",
+      "requires": {
+        "tslib": "^1.9.0"
+      }
+    },
+    "safe-buffer": {
+      "version": "5.1.2",
+      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
+      "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g=="
+    },
+    "safe-regex": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/safe-regex/-/safe-regex-1.1.0.tgz",
+      "integrity": "sha1-QKNmnzsHfR6UPURinhV91IAjvy4=",
+      "requires": {
+        "ret": "~0.1.10"
+      }
+    },
+    "safer-buffer": {
+      "version": "2.1.2",
+      "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
+      "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg=="
+    },
+    "sane": {
+      "version": "4.1.0",
+      "resolved": "https://registry.npmjs.org/sane/-/sane-4.1.0.tgz",
+      "integrity": "sha512-hhbzAgTIX8O7SHfp2c8/kREfEn4qO/9q8C9beyY6+tvZ87EpoZ3i1RIEvp27YBswnNbY9mWd6paKVmKbAgLfZA==",
+      "requires": {
+        "@cnakazawa/watch": "^1.0.3",
+        "anymatch": "^2.0.0",
+        "capture-exit": "^2.0.0",
+        "exec-sh": "^0.3.2",
+        "execa": "^1.0.0",
+        "fb-watchman": "^2.0.0",
+        "micromatch": "^3.1.4",
+        "minimist": "^1.1.1",
+        "walker": "~1.0.5"
+      }
+    },
+    "sanitize.css": {
+      "version": "10.0.0",
+      "resolved": "https://registry.npmjs.org/sanitize.css/-/sanitize.css-10.0.0.tgz",
+      "integrity": "sha512-vTxrZz4dX5W86M6oVWVdOVe72ZiPs41Oi7Z6Km4W5Turyz28mrXSJhhEBZoRtzJWIv3833WKVwLSDWWkEfupMg=="
+    },
+    "sass-graph": {
+      "version": "2.2.5",
+      "resolved": "https://registry.npmjs.org/sass-graph/-/sass-graph-2.2.5.tgz",
+      "integrity": "sha512-VFWDAHOe6mRuT4mZRd4eKE+d8Uedrk6Xnh7Sh9b4NGufQLQjOrvf/MQoOdx+0s92L89FeyUUNfU597j/3uNpag==",
+      "dev": true,
+      "requires": {
+        "glob": "^7.0.0",
+        "lodash": "^4.0.0",
+        "scss-tokenizer": "^0.2.3",
+        "yargs": "^13.3.2"
+      }
+    },
+    "sass-loader": {
+      "version": "8.0.2",
+      "resolved": "https://registry.npmjs.org/sass-loader/-/sass-loader-8.0.2.tgz",
+      "integrity": "sha512-7o4dbSK8/Ol2KflEmSco4jTjQoV988bM82P9CZdmo9hR3RLnvNc0ufMNdMrB0caq38JQ/FgF4/7RcbcfKzxoFQ==",
+      "requires": {
+        "clone-deep": "^4.0.1",
+        "loader-utils": "^1.2.3",
+        "neo-async": "^2.6.1",
+        "schema-utils": "^2.6.1",
+        "semver": "^6.3.0"
+      },
+      "dependencies": {
+        "clone-deep": {
+          "version": "4.0.1",
+          "resolved": "https://registry.npmjs.org/clone-deep/-/clone-deep-4.0.1.tgz",
+          "integrity": "sha512-neHB9xuzh/wk0dIHweyAXv2aPGZIVk3pLMe+/RNzINf17fe0OG96QroktYAUm7SM1PBnzTabaLboqqxDyMU+SQ==",
+          "requires": {
+            "is-plain-object": "^2.0.4",
+            "kind-of": "^6.0.2",
+            "shallow-clone": "^3.0.0"
+          }
+        },
+        "kind-of": {
+          "version": "6.0.3",
+          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.3.tgz",
+          "integrity": "sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw=="
+        },
+        "shallow-clone": {
+          "version": "3.0.1",
+          "resolved": "https://registry.npmjs.org/shallow-clone/-/shallow-clone-3.0.1.tgz",
+          "integrity": "sha512-/6KqX+GVUdqPuPPd2LxDDxzX6CAbjJehAAOKlNpqqUpAqPM6HeL8f+o3a+JsyGjn2lv0WY8UsTgUJjU9Ok55NA==",
+          "requires": {
+            "kind-of": "^6.0.2"
+          }
+        }
+      }
+    },
+    "sax": {
+      "version": "1.2.4",
+      "resolved": "https://registry.npmjs.org/sax/-/sax-1.2.4.tgz",
+      "integrity": "sha512-NqVDv9TpANUjFm0N8uM5GxL36UgKi9/atZw+x7YFnQ8ckwFGKrl4xX4yWtrey3UJm5nP1kUbnYgLopqWNSRhWw=="
+    },
+    "saxes": {
+      "version": "3.1.11",
+      "resolved": "https://registry.npmjs.org/saxes/-/saxes-3.1.11.tgz",
+      "integrity": "sha512-Ydydq3zC+WYDJK1+gRxRapLIED9PWeSuuS41wqyoRmzvhhh9nc+QQrVMKJYzJFULazeGhzSV0QleN2wD3boh2g==",
+      "requires": {
+        "xmlchars": "^2.1.1"
+      }
+    },
+    "scheduler": {
+      "version": "0.19.1",
+      "resolved": "https://registry.npmjs.org/scheduler/-/scheduler-0.19.1.tgz",
+      "integrity": "sha512-n/zwRWRYSUj0/3g/otKDRPMh6qv2SYMWNq85IEa8iZyAv8od9zDYpGSnpBEjNgcMNq6Scbu5KfIPxNF72R/2EA==",
+      "dev": true,
+      "requires": {
+        "loose-envify": "^1.1.0",
+        "object-assign": "^4.1.1"
+      }
+    },
+    "schema-utils": {
+      "version": "2.6.6",
+      "resolved": "https://registry.npmjs.org/schema-utils/-/schema-utils-2.6.6.tgz",
+      "integrity": "sha512-wHutF/WPSbIi9x6ctjGGk2Hvl0VOz5l3EKEuKbjPlB30mKZUzb9A5k9yEXRX3pwyqVLPvpfZZEllaFq/M718hA==",
+      "requires": {
+        "ajv": "^6.12.0",
+        "ajv-keywords": "^3.4.1"
+      }
+    },
+    "scss-tokenizer": {
+      "version": "0.2.3",
+      "resolved": "https://registry.npmjs.org/scss-tokenizer/-/scss-tokenizer-0.2.3.tgz",
+      "integrity": "sha1-jrBtualyMzOCTT9VMGQRSYR85dE=",
+      "dev": true,
+      "requires": {
+        "js-base64": "^2.1.8",
+        "source-map": "^0.4.2"
+      },
+      "dependencies": {
+        "source-map": {
+          "version": "0.4.4",
+          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.4.4.tgz",
+          "integrity": "sha1-66T12pwNyZneaAMti092FzZSA2s=",
+          "dev": true,
+          "requires": {
+            "amdefine": ">=0.0.4"
+          }
+        }
+      }
+    },
+    "select-hose": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/select-hose/-/select-hose-2.0.0.tgz",
+      "integrity": "sha1-Yl2GWPhlr0Psliv8N2o3NZpJlMo="
+    },
+    "selfsigned": {
+      "version": "1.10.7",
+      "resolved": "https://registry.npmjs.org/selfsigned/-/selfsigned-1.10.7.tgz",
+      "integrity": "sha512-8M3wBCzeWIJnQfl43IKwOmC4H/RAp50S8DF60znzjW5GVqTcSe2vWclt7hmYVPkKPlHWOu5EaWOMZ2Y6W8ZXTA==",
+      "requires": {
+        "node-forge": "0.9.0"
+      }
+    },
+    "semver": {
+      "version": "6.3.0",
+      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
+      "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw=="
+    },
+    "send": {
+      "version": "0.17.1",
+      "resolved": "https://registry.npmjs.org/send/-/send-0.17.1.tgz",
+      "integrity": "sha512-BsVKsiGcQMFwT8UxypobUKyv7irCNRHk1T0G680vk88yf6LBByGcZJOTJCrTP2xVN6yI+XjPJcNuE3V4fT9sAg==",
+      "requires": {
+        "debug": "2.6.9",
+        "depd": "~1.1.2",
+        "destroy": "~1.0.4",
+        "encodeurl": "~1.0.2",
+        "escape-html": "~1.0.3",
+        "etag": "~1.8.1",
+        "fresh": "0.5.2",
+        "http-errors": "~1.7.2",
+        "mime": "1.6.0",
+        "ms": "2.1.1",
+        "on-finished": "~2.3.0",
+        "range-parser": "~1.2.1",
+        "statuses": "~1.5.0"
+      },
+      "dependencies": {
+        "debug": {
+          "version": "2.6.9",
+          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
+          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
+          "requires": {
+            "ms": "2.0.0"
+          },
+          "dependencies": {
+            "ms": {
+              "version": "2.0.0",
+              "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
+              "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="
+            }
+          }
+        },
+        "mime": {
+          "version": "1.6.0",
+          "resolved": "https://registry.npmjs.org/mime/-/mime-1.6.0.tgz",
+          "integrity": "sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg=="
+        },
+        "ms": {
+          "version": "2.1.1",
+          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.1.tgz",
+          "integrity": "sha512-tgp+dl5cGk28utYktBsrFqA7HKgrhgPsg6Z/EfhWI4gl1Hwq8B/GmY/0oXZ6nF8hDVesS/FpnYaD/kOWhYQvyg=="
+        }
+      }
+    },
+    "serialize-error": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/serialize-error/-/serialize-error-2.1.0.tgz",
+      "integrity": "sha1-ULZ51WNc34Rme9yOWa9OW4HV9go="
+    },
+    "serialize-javascript": {
+      "version": "2.1.2",
+      "resolved": "https://registry.npmjs.org/serialize-javascript/-/serialize-javascript-2.1.2.tgz",
+      "integrity": "sha512-rs9OggEUF0V4jUSecXazOYsLfu7OGK2qIn3c7IPBiffz32XniEp/TX9Xmc9LQfK2nQ2QKHvZ2oygKUGU0lG4jQ=="
+    },
+    "serialize-to-js": {
+      "version": "3.1.1",
+      "resolved": "https://registry.npmjs.org/serialize-to-js/-/serialize-to-js-3.1.1.tgz",
+      "integrity": "sha512-F+NGU0UHMBO4Q965tjw7rvieNVjlH6Lqi2emq/Lc9LUURYJbiCzmpi4Cy1OOjjVPtxu0c+NE85LU6968Wko5ZA==",
+      "dev": true
+    },
+    "serve-index": {
+      "version": "1.9.1",
+      "resolved": "https://registry.npmjs.org/serve-index/-/serve-index-1.9.1.tgz",
+      "integrity": "sha1-03aNabHn2C5c4FD/9bRTvqEqkjk=",
+      "requires": {
+        "accepts": "~1.3.4",
+        "batch": "0.6.1",
+        "debug": "2.6.9",
+        "escape-html": "~1.0.3",
+        "http-errors": "~1.6.2",
+        "mime-types": "~2.1.17",
+        "parseurl": "~1.3.2"
+      },
+      "dependencies": {
+        "debug": {
+          "version": "2.6.9",
+          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
+          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
+          "requires": {
+            "ms": "2.0.0"
+          }
+        },
+        "http-errors": {
+          "version": "1.6.3",
+          "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-1.6.3.tgz",
+          "integrity": "sha1-i1VoC7S+KDoLW/TqLjhYC+HZMg0=",
+          "requires": {
+            "depd": "~1.1.2",
+            "inherits": "2.0.3",
+            "setprototypeof": "1.1.0",
+            "statuses": ">= 1.4.0 < 2"
+          }
+        },
+        "inherits": {
+          "version": "2.0.3",
+          "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz",
+          "integrity": "sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4="
+        },
+        "ms": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
+          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="
+        },
+        "setprototypeof": {
+          "version": "1.1.0",
+          "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.1.0.tgz",
+          "integrity": "sha512-BvE/TwpZX4FXExxOxZyRGQQv651MSwmWKZGqvmPcRIjDqWub67kTKuIMx43cZZrS/cBBzwBcNDWoFxt2XEFIpQ=="
+        }
+      }
+    },
+    "serve-static": {
+      "version": "1.14.1",
+      "resolved": "https://registry.npmjs.org/serve-static/-/serve-static-1.14.1.tgz",
+      "integrity": "sha512-JMrvUwE54emCYWlTI+hGrGv5I8dEwmco/00EvkzIIsR7MqrHonbD9pO2MOfFnpFntl7ecpZs+3mW+XbQZu9QCg==",
+      "requires": {
+        "encodeurl": "~1.0.2",
+        "escape-html": "~1.0.3",
+        "parseurl": "~1.3.3",
+        "send": "0.17.1"
+      }
+    },
+    "set-blocking": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/set-blocking/-/set-blocking-2.0.0.tgz",
+      "integrity": "sha1-BF+XgtARrppoA93TgrJDkrPYkPc="
+    },
+    "set-value": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/set-value/-/set-value-2.0.1.tgz",
+      "integrity": "sha512-JxHc1weCN68wRY0fhCoXpyK55m/XPHafOmK4UWD7m2CI14GMcFypt4w/0+NV5f/ZMby2F6S2wwA7fgynh9gWSw==",
+      "requires": {
+        "extend-shallow": "^2.0.1",
+        "is-extendable": "^0.1.1",
+        "is-plain-object": "^2.0.3",
+        "split-string": "^3.0.1"
+      },
+      "dependencies": {
+        "extend-shallow": {
+          "version": "2.0.1",
+          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
+          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
+          "requires": {
+            "is-extendable": "^0.1.0"
+          }
+        }
+      }
+    },
+    "setimmediate": {
+      "version": "1.0.5",
+      "resolved": "https://registry.npmjs.org/setimmediate/-/setimmediate-1.0.5.tgz",
+      "integrity": "sha1-KQy7Iy4waULX1+qbg3Mqt4VvgoU="
+    },
+    "setprototypeof": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.1.1.tgz",
+      "integrity": "sha512-JvdAWfbXeIGaZ9cILp38HntZSFSo3mWg6xGcJJsd+d4aRMOqauag1C63dJfDw7OaMYwEbHMOxEZ1lqVRYP2OAw=="
+    },
+    "sha.js": {
+      "version": "2.4.11",
+      "resolved": "https://registry.npmjs.org/sha.js/-/sha.js-2.4.11.tgz",
+      "integrity": "sha512-QMEp5B7cftE7APOjk5Y6xgrbWu+WkLVQwk8JNjZ8nKRciZaByEW6MubieAiToS7+dwvrjGhH8jRXz3MVd0AYqQ==",
+      "requires": {
+        "inherits": "^2.0.1",
+        "safe-buffer": "^5.0.1"
+      }
+    },
+    "shallow-clone": {
+      "version": "0.1.2",
+      "resolved": "https://registry.npmjs.org/shallow-clone/-/shallow-clone-0.1.2.tgz",
+      "integrity": "sha1-WQnodLp3EG1zrEFM/sH/yofZcGA=",
+      "requires": {
+        "is-extendable": "^0.1.1",
+        "kind-of": "^2.0.1",
+        "lazy-cache": "^0.2.3",
+        "mixin-object": "^2.0.1"
+      },
+      "dependencies": {
+        "kind-of": {
+          "version": "2.0.1",
+          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-2.0.1.tgz",
+          "integrity": "sha1-AY7HpM5+OobLkUG+UZ0kyPqpgbU=",
+          "requires": {
+            "is-buffer": "^1.0.2"
+          }
+        },
+        "lazy-cache": {
+          "version": "0.2.7",
+          "resolved": "https://registry.npmjs.org/lazy-cache/-/lazy-cache-0.2.7.tgz",
+          "integrity": "sha1-f+3fLctu23fRHvHRF6tf/fCrG2U="
+        }
+      }
+    },
+    "shallow-copy": {
+      "version": "0.0.1",
+      "resolved": "https://registry.npmjs.org/shallow-copy/-/shallow-copy-0.0.1.tgz",
+      "integrity": "sha1-QV9CcC1z2BAzApLMXuhurhoRoXA=",
+      "dev": true
+    },
+    "shebang-command": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-1.2.0.tgz",
+      "integrity": "sha1-RKrGW2lbAzmJaMOfNj/uXer98eo=",
+      "requires": {
+        "shebang-regex": "^1.0.0"
+      }
+    },
+    "shebang-regex": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-1.0.0.tgz",
+      "integrity": "sha1-2kL0l0DAtC2yypcoVxyxkMmO/qM="
+    },
+    "shell-quote": {
+      "version": "1.7.2",
+      "resolved": "https://registry.npmjs.org/shell-quote/-/shell-quote-1.7.2.tgz",
+      "integrity": "sha512-mRz/m/JVscCrkMyPqHc/bczi3OQHkLTqXHEFu0zDhK/qfv3UcOA4SVmRCLmos4bhjr9ekVQubj/R7waKapmiQg=="
+    },
+    "shellwords": {
+      "version": "0.1.1",
+      "resolved": "https://registry.npmjs.org/shellwords/-/shellwords-0.1.1.tgz",
+      "integrity": "sha512-vFwSUfQvqybiICwZY5+DAWIPLKsWO31Q91JSKl3UYv+K5c2QRPzn0qzec6QPu1Qc9eHYItiP3NdJqNVqetYAww=="
+    },
+    "side-channel": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/side-channel/-/side-channel-1.0.2.tgz",
+      "integrity": "sha512-7rL9YlPHg7Ancea1S96Pa8/QWb4BtXL/TZvS6B8XFetGBeuhAsfmUspK6DokBeZ64+Kj9TCNRD/30pVz1BvQNA==",
+      "requires": {
+        "es-abstract": "^1.17.0-next.1",
+        "object-inspect": "^1.7.0"
+      }
+    },
+    "sigmund": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/sigmund/-/sigmund-1.0.1.tgz",
+      "integrity": "sha1-P/IfGYytIXX587eBhT/ZTQ0ZtZA="
+    },
+    "signal-exit": {
+      "version": "3.0.3",
+      "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.3.tgz",
+      "integrity": "sha512-VUJ49FC8U1OxwZLxIbTTrDvLnf/6TDgxZcK8wxR8zs13xpx7xbG60ndBlhNrFi2EMuFRoeDoJO7wthSLq42EjA=="
+    },
+    "simple-swizzle": {
+      "version": "0.2.2",
+      "resolved": "https://registry.npmjs.org/simple-swizzle/-/simple-swizzle-0.2.2.tgz",
+      "integrity": "sha1-pNprY1/8zMoz9w0Xy5JZLeleVXo=",
+      "requires": {
+        "is-arrayish": "^0.3.1"
+      },
+      "dependencies": {
+        "is-arrayish": {
+          "version": "0.3.2",
+          "resolved": "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.3.2.tgz",
+          "integrity": "sha512-eVRqCvVlZbuw3GrM63ovNSNAeA1K16kaR/LRY/92w0zxQ5/1YzwblUX652i4Xs9RwAGjW9d9y6X88t8OaAJfWQ=="
+        }
+      }
+    },
+    "sisteransi": {
+      "version": "1.0.5",
+      "resolved": "https://registry.npmjs.org/sisteransi/-/sisteransi-1.0.5.tgz",
+      "integrity": "sha512-bLGGlR1QxBcynn2d5YmDX4MGjlZvy2MRBDRNHLJ8VI6l6+9FUiyTFNJ0IveOSP0bcXgVDPRcfGqA0pjaqUpfVg=="
+    },
+    "slash": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/slash/-/slash-2.0.0.tgz",
+      "integrity": "sha512-ZYKh3Wh2z1PpEXWr0MpSBZ0V6mZHAQfYevttO11c51CaWjGTaadiKZ+wVt1PbMlDV5qhMFslpZCemhwOK7C89A=="
+    },
+    "slice-ansi": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/slice-ansi/-/slice-ansi-2.1.0.tgz",
+      "integrity": "sha512-Qu+VC3EwYLldKa1fCxuuvULvSJOKEgk9pi8dZeCVK7TqBfUNTH4sFkk4joj8afVSfAYgJoSOetjx9QWOJ5mYoQ==",
+      "requires": {
+        "ansi-styles": "^3.2.0",
+        "astral-regex": "^1.0.0",
+        "is-fullwidth-code-point": "^2.0.0"
+      },
+      "dependencies": {
+        "is-fullwidth-code-point": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
+          "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8="
+        }
+      }
+    },
+    "slide": {
+      "version": "1.1.6",
+      "resolved": "https://registry.npmjs.org/slide/-/slide-1.1.6.tgz",
+      "integrity": "sha1-VusCfWW00tzmyy4tMsTUr8nh1wc="
+    },
+    "snapdragon": {
+      "version": "0.8.2",
+      "resolved": "https://registry.npmjs.org/snapdragon/-/snapdragon-0.8.2.tgz",
+      "integrity": "sha512-FtyOnWN/wCHTVXOMwvSv26d+ko5vWlIDD6zoUJ7LW8vh+ZBC8QdljveRP+crNrtBwioEUWy/4dMtbBjA4ioNlg==",
+      "requires": {
+        "base": "^0.11.1",
+        "debug": "^2.2.0",
+        "define-property": "^0.2.5",
+        "extend-shallow": "^2.0.1",
+        "map-cache": "^0.2.2",
+        "source-map": "^0.5.6",
+        "source-map-resolve": "^0.5.0",
+        "use": "^3.1.0"
+      },
+      "dependencies": {
+        "debug": {
+          "version": "2.6.9",
+          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
+          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
+          "requires": {
+            "ms": "2.0.0"
+          }
+        },
+        "define-property": {
+          "version": "0.2.5",
+          "resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",
+          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",
+          "requires": {
+            "is-descriptor": "^0.1.0"
+          }
+        },
+        "extend-shallow": {
+          "version": "2.0.1",
+          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
+          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
+          "requires": {
+            "is-extendable": "^0.1.0"
+          }
+        },
+        "ms": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
+          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="
+        }
+      }
+    },
+    "snapdragon-node": {
+      "version": "2.1.1",
+      "resolved": "https://registry.npmjs.org/snapdragon-node/-/snapdragon-node-2.1.1.tgz",
+      "integrity": "sha512-O27l4xaMYt/RSQ5TR3vpWCAB5Kb/czIcqUFOM/C4fYcLnbZUc1PkjTAMjof2pBWaSTwOUd6qUHcFGVGj7aIwnw==",
+      "requires": {
+        "define-property": "^1.0.0",
+        "isobject": "^3.0.0",
+        "snapdragon-util": "^3.0.1"
+      },
+      "dependencies": {
+        "define-property": {
+          "version": "1.0.0",
+          "resolved": "https://registry.npmjs.org/define-property/-/define-property-1.0.0.tgz",
+          "integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
+          "requires": {
+            "is-descriptor": "^1.0.0"
+          }
+        },
+        "is-accessor-descriptor": {
+          "version": "1.0.0",
+          "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz",
+          "integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK6LUY94dYPEE7Lh0ZkZKcQ==",
+          "requires": {
+            "kind-of": "^6.0.0"
+          }
+        },
+        "is-data-descriptor": {
+          "version": "1.0.0",
+          "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz",
+          "integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRFRXcHYVkdeaP50Q5rE/jLQ==",
+          "requires": {
+            "kind-of": "^6.0.0"
+          }
+        },
+        "is-descriptor": {
+          "version": "1.0.2",
+          "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.2.tgz",
+          "integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9k1T2hOH3miL8n8WtiYVtg==",
+          "requires": {
+            "is-accessor-descriptor": "^1.0.0",
+            "is-data-descriptor": "^1.0.0",
+            "kind-of": "^6.0.2"
+          }
+        },
+        "kind-of": {
+          "version": "6.0.3",
+          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.3.tgz",
+          "integrity": "sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw=="
+        }
+      }
+    },
+    "snapdragon-util": {
+      "version": "3.0.1",
+      "resolved": "https://registry.npmjs.org/snapdragon-util/-/snapdragon-util-3.0.1.tgz",
+      "integrity": "sha512-mbKkMdQKsjX4BAL4bRYTj21edOf8cN7XHdYUJEe+Zn99hVEYcMvKPct1IqNe7+AZPirn8BCDOQBHQZknqmKlZQ==",
+      "requires": {
+        "kind-of": "^3.2.0"
+      }
+    },
+    "sockjs": {
+      "version": "0.3.19",
+      "resolved": "https://registry.npmjs.org/sockjs/-/sockjs-0.3.19.tgz",
+      "integrity": "sha512-V48klKZl8T6MzatbLlzzRNhMepEys9Y4oGFpypBFFn1gLI/QQ9HtLLyWJNbPlwGLelOVOEijUbTTJeLLI59jLw==",
+      "requires": {
+        "faye-websocket": "^0.10.0",
+        "uuid": "^3.0.1"
+      }
+    },
+    "sockjs-client": {
+      "version": "1.4.0",
+      "resolved": "https://registry.npmjs.org/sockjs-client/-/sockjs-client-1.4.0.tgz",
+      "integrity": "sha512-5zaLyO8/nri5cua0VtOrFXBPK1jbL4+1cebT/mmKA1E1ZXOvJrII75bPu0l0k843G/+iAbhEqzyKr0w/eCCj7g==",
+      "requires": {
+        "debug": "^3.2.5",
+        "eventsource": "^1.0.7",
+        "faye-websocket": "~0.11.1",
+        "inherits": "^2.0.3",
+        "json3": "^3.3.2",
+        "url-parse": "^1.4.3"
+      },
+      "dependencies": {
+        "debug": {
+          "version": "3.2.6",
+          "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.6.tgz",
+          "integrity": "sha512-mel+jf7nrtEl5Pn1Qx46zARXKDpBbvzezse7p7LqINmdoIk8PYP5SySaxEmYv6TZ0JyEKA1hsCId6DIhgITtWQ==",
+          "requires": {
+            "ms": "^2.1.1"
+          }
+        },
+        "faye-websocket": {
+          "version": "0.11.3",
+          "resolved": "https://registry.npmjs.org/faye-websocket/-/faye-websocket-0.11.3.tgz",
+          "integrity": "sha512-D2y4bovYpzziGgbHYtGCMjlJM36vAl/y+xUyn1C+FVx8szd1E+86KwVw6XvYSzOP8iMpm1X0I4xJD+QtUb36OA==",
+          "requires": {
+            "websocket-driver": ">=0.5.1"
+          }
+        }
+      }
+    },
+    "sort-keys": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/sort-keys/-/sort-keys-1.1.2.tgz",
+      "integrity": "sha1-RBttTTRnmPG05J6JIK37oOVD+a0=",
+      "requires": {
+        "is-plain-obj": "^1.0.0"
+      }
+    },
+    "source-list-map": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/source-list-map/-/source-list-map-2.0.1.tgz",
+      "integrity": "sha512-qnQ7gVMxGNxsiL4lEuJwe/To8UnK7fAnmbGEEH8RpLouuKbeEm0lhbQVFIrNSuB+G7tVrAlVsZgETT5nljf+Iw=="
+    },
+    "source-map": {
+      "version": "0.5.7",
+      "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.5.7.tgz",
+      "integrity": "sha1-igOdLRAh0i0eoUyA2OpGi6LvP8w="
+    },
+    "source-map-resolve": {
+      "version": "0.5.3",
+      "resolved": "https://registry.npmjs.org/source-map-resolve/-/source-map-resolve-0.5.3.tgz",
+      "integrity": "sha512-Htz+RnsXWk5+P2slx5Jh3Q66vhQj1Cllm0zvnaY98+NFx+Dv2CF/f5O/t8x+KaNdrdIAsruNzoh/KpialbqAnw==",
+      "requires": {
+        "atob": "^2.1.2",
+        "decode-uri-component": "^0.2.0",
+        "resolve-url": "^0.2.1",
+        "source-map-url": "^0.4.0",
+        "urix": "^0.1.0"
+      }
+    },
+    "source-map-support": {
+      "version": "0.5.19",
+      "resolved": "https://registry.npmjs.org/source-map-support/-/source-map-support-0.5.19.tgz",
+      "integrity": "sha512-Wonm7zOCIJzBGQdB+thsPar0kYuCIzYvxZwlBa87yi/Mdjv7Tip2cyVbLj5o0cFPN4EVkuTwb3GDDyUx2DGnGw==",
+      "requires": {
+        "buffer-from": "^1.0.0",
+        "source-map": "^0.6.0"
+      },
+      "dependencies": {
+        "source-map": {
+          "version": "0.6.1",
+          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
+          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="
+        }
+      }
+    },
+    "source-map-url": {
+      "version": "0.4.0",
+      "resolved": "https://registry.npmjs.org/source-map-url/-/source-map-url-0.4.0.tgz",
+      "integrity": "sha1-PpNdfd1zYxuXZZlW1VEo6HtQhKM="
+    },
+    "spdx-correct": {
+      "version": "3.1.0",
+      "resolved": "https://registry.npmjs.org/spdx-correct/-/spdx-correct-3.1.0.tgz",
+      "integrity": "sha512-lr2EZCctC2BNR7j7WzJ2FpDznxky1sjfxvvYEyzxNyb6lZXHODmEoJeFu4JupYlkfha1KZpJyoqiJ7pgA1qq8Q==",
+      "requires": {
+        "spdx-expression-parse": "^3.0.0",
+        "spdx-license-ids": "^3.0.0"
+      }
+    },
+    "spdx-exceptions": {
+      "version": "2.3.0",
+      "resolved": "https://registry.npmjs.org/spdx-exceptions/-/spdx-exceptions-2.3.0.tgz",
+      "integrity": "sha512-/tTrYOC7PPI1nUAgx34hUpqXuyJG+DTHJTnIULG4rDygi4xu/tfgmq1e1cIRwRzwZgo4NLySi+ricLkZkw4i5A=="
+    },
+    "spdx-expression-parse": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/spdx-expression-parse/-/spdx-expression-parse-3.0.0.tgz",
+      "integrity": "sha512-Yg6D3XpRD4kkOmTpdgbUiEJFKghJH03fiC1OPll5h/0sO6neh2jqRDVHOQ4o/LMea0tgCkbMgea5ip/e+MkWyg==",
+      "requires": {
+        "spdx-exceptions": "^2.1.0",
+        "spdx-license-ids": "^3.0.0"
+      }
+    },
+    "spdx-license-ids": {
+      "version": "3.0.5",
+      "resolved": "https://registry.npmjs.org/spdx-license-ids/-/spdx-license-ids-3.0.5.tgz",
+      "integrity": "sha512-J+FWzZoynJEXGphVIS+XEh3kFSjZX/1i9gFBaWQcB+/tmpe2qUsSBABpcxqxnAxFdiUFEgAX1bjYGQvIZmoz9Q=="
+    },
+    "spdy": {
+      "version": "4.0.2",
+      "resolved": "https://registry.npmjs.org/spdy/-/spdy-4.0.2.tgz",
+      "integrity": "sha512-r46gZQZQV+Kl9oItvl1JZZqJKGr+oEkB08A6BzkiR7593/7IbtuncXHd2YoYeTsG4157ZssMu9KYvUHLcjcDoA==",
+      "requires": {
+        "debug": "^4.1.0",
+        "handle-thing": "^2.0.0",
+        "http-deceiver": "^1.2.7",
+        "select-hose": "^2.0.0",
+        "spdy-transport": "^3.0.0"
+      }
+    },
+    "spdy-transport": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/spdy-transport/-/spdy-transport-3.0.0.tgz",
+      "integrity": "sha512-hsLVFE5SjA6TCisWeJXFKniGGOpBgMLmerfO2aCyCU5s7nJ/rpAepqmFifv/GCbSbueEeAJJnmSQ2rKC/g8Fcw==",
+      "requires": {
+        "debug": "^4.1.0",
+        "detect-node": "^2.0.4",
+        "hpack.js": "^2.1.6",
+        "obuf": "^1.1.2",
+        "readable-stream": "^3.0.6",
+        "wbuf": "^1.7.3"
+      }
+    },
+    "split-on-first": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/split-on-first/-/split-on-first-1.1.0.tgz",
+      "integrity": "sha512-43ZssAJaMusuKWL8sKUBQXHWOpq8d6CfN/u1p4gUzfJkM05C8rxTmYrkIPTXapZpORA6LkkzcUulJ8FqA7Uudw=="
+    },
+    "split-string": {
+      "version": "3.1.0",
+      "resolved": "https://registry.npmjs.org/split-string/-/split-string-3.1.0.tgz",
+      "integrity": "sha512-NzNVhJDYpwceVVii8/Hu6DKfD2G+NrQHlS/V/qgv763EYudVwEcMQNxd2lh+0VrUByXN/oJkl5grOhYWvQUYiw==",
+      "requires": {
+        "extend-shallow": "^3.0.0"
+      }
+    },
+    "sprintf-js": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz",
+      "integrity": "sha1-BOaSb2YolTVPPdAVIDYzuFcpfiw="
+    },
+    "sshpk": {
+      "version": "1.16.1",
+      "resolved": "https://registry.npmjs.org/sshpk/-/sshpk-1.16.1.tgz",
+      "integrity": "sha512-HXXqVUq7+pcKeLqqZj6mHFUMvXtOJt1uoUx09pFW6011inTMxqI8BA8PM95myrIyyKwdnzjdFjLiE6KBPVtJIg==",
+      "requires": {
+        "asn1": "~0.2.3",
+        "assert-plus": "^1.0.0",
+        "bcrypt-pbkdf": "^1.0.0",
+        "dashdash": "^1.12.0",
+        "ecc-jsbn": "~0.1.1",
+        "getpass": "^0.1.1",
+        "jsbn": "~0.1.0",
+        "safer-buffer": "^2.0.2",
+        "tweetnacl": "~0.14.0"
+      }
+    },
+    "ssri": {
+      "version": "7.1.0",
+      "resolved": "https://registry.npmjs.org/ssri/-/ssri-7.1.0.tgz",
+      "integrity": "sha512-77/WrDZUWocK0mvA5NTRQyveUf+wsrIc6vyrxpS8tVvYBcX215QbafrJR3KtkpskIzoFLqqNuuYQvxaMjXJ/0g==",
+      "requires": {
+        "figgy-pudding": "^3.5.1",
+        "minipass": "^3.1.1"
+      }
+    },
+    "stable": {
+      "version": "0.1.8",
+      "resolved": "https://registry.npmjs.org/stable/-/stable-0.1.8.tgz",
+      "integrity": "sha512-ji9qxRnOVfcuLDySj9qzhGSEFVobyt1kIOSkj1qZzYLzq7Tos/oUUWvotUPQLlrsidqsK6tBH89Bc9kL5zHA6w=="
+    },
+    "stack-utils": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/stack-utils/-/stack-utils-1.0.2.tgz",
+      "integrity": "sha512-MTX+MeG5U994cazkjd/9KNAapsHnibjMLnfXodlkXw76JEea0UiNzrqidzo1emMwk7w5Qhc9jd4Bn9TBb1MFwA=="
+    },
+    "static-eval": {
+      "version": "2.0.5",
+      "resolved": "https://registry.npmjs.org/static-eval/-/static-eval-2.0.5.tgz",
+      "integrity": "sha512-nNbV6LbGtMBgv7e9LFkt5JV8RVlRsyJrphfAt9tOtBBW/SfnzZDf2KnS72an8e434A+9e/BmJuTxeGPvrAK7KA==",
+      "dev": true,
+      "requires": {
+        "escodegen": "^1.11.1"
+      }
+    },
+    "static-extend": {
+      "version": "0.1.2",
+      "resolved": "https://registry.npmjs.org/static-extend/-/static-extend-0.1.2.tgz",
+      "integrity": "sha1-YICcOcv/VTNyJv1eC1IPNB8ftcY=",
+      "requires": {
+        "define-property": "^0.2.5",
+        "object-copy": "^0.1.0"
+      },
+      "dependencies": {
+        "define-property": {
+          "version": "0.2.5",
+          "resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",
+          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",
+          "requires": {
+            "is-descriptor": "^0.1.0"
+          }
+        }
+      }
+    },
+    "static-module": {
+      "version": "2.2.5",
+      "resolved": "https://registry.npmjs.org/static-module/-/static-module-2.2.5.tgz",
+      "integrity": "sha512-D8vv82E/Kpmz3TXHKG8PPsCPg+RAX6cbCOyvjM6x04qZtQ47EtJFVwRsdov3n5d6/6ynrOY9XB4JkaZwB2xoRQ==",
+      "dev": true,
+      "requires": {
+        "concat-stream": "~1.6.0",
+        "convert-source-map": "^1.5.1",
+        "duplexer2": "~0.1.4",
+        "escodegen": "~1.9.0",
+        "falafel": "^2.1.0",
+        "has": "^1.0.1",
+        "magic-string": "^0.22.4",
+        "merge-source-map": "1.0.4",
+        "object-inspect": "~1.4.0",
+        "quote-stream": "~1.0.2",
+        "readable-stream": "~2.3.3",
+        "shallow-copy": "~0.0.1",
+        "static-eval": "^2.0.0",
+        "through2": "~2.0.3"
+      },
+      "dependencies": {
+        "escodegen": {
+          "version": "1.9.1",
+          "resolved": "https://registry.npmjs.org/escodegen/-/escodegen-1.9.1.tgz",
+          "integrity": "sha512-6hTjO1NAWkHnDk3OqQ4YrCuwwmGHL9S3nPlzBOUG/R44rda3wLNrfvQ5fkSGjyhHFKM7ALPKcKGrwvCLe0lC7Q==",
+          "dev": true,
+          "requires": {
+            "esprima": "^3.1.3",
+            "estraverse": "^4.2.0",
+            "esutils": "^2.0.2",
+            "optionator": "^0.8.1",
+            "source-map": "~0.6.1"
+          }
+        },
+        "esprima": {
+          "version": "3.1.3",
+          "resolved": "https://registry.npmjs.org/esprima/-/esprima-3.1.3.tgz",
+          "integrity": "sha1-/cpRzuYTOJXjyI1TXOSdv/YqRjM=",
+          "dev": true
+        },
+        "object-inspect": {
+          "version": "1.4.1",
+          "resolved": "https://registry.npmjs.org/object-inspect/-/object-inspect-1.4.1.tgz",
+          "integrity": "sha512-wqdhLpfCUbEsoEwl3FXwGyv8ief1k/1aUdIPCqVnupM6e8l63BEJdiF/0swtn04/8p05tG/T0FrpTlfwvljOdw==",
+          "dev": true
+        },
+        "readable-stream": {
+          "version": "2.3.7",
+          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
+          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
+          "dev": true,
+          "requires": {
+            "core-util-is": "~1.0.0",
+            "inherits": "~2.0.3",
+            "isarray": "~1.0.0",
+            "process-nextick-args": "~2.0.0",
+            "safe-buffer": "~5.1.1",
+            "string_decoder": "~1.1.1",
+            "util-deprecate": "~1.0.1"
+          }
+        },
+        "source-map": {
+          "version": "0.6.1",
+          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
+          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
+          "dev": true,
+          "optional": true
+        },
+        "string_decoder": {
+          "version": "1.1.1",
+          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
+          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
+          "dev": true,
+          "requires": {
+            "safe-buffer": "~5.1.0"
+          }
+        }
+      }
+    },
+    "statuses": {
+      "version": "1.5.0",
+      "resolved": "https://registry.npmjs.org/statuses/-/statuses-1.5.0.tgz",
+      "integrity": "sha1-Fhx9rBd2Wf2YEfQ3cfqZOBR4Yow="
+    },
+    "stdout-stream": {
+      "version": "1.4.1",
+      "resolved": "https://registry.npmjs.org/stdout-stream/-/stdout-stream-1.4.1.tgz",
+      "integrity": "sha512-j4emi03KXqJWcIeF8eIXkjMFN1Cmb8gUlDYGeBALLPo5qdyTfA9bOtl8m33lRoC+vFMkP3gl0WsDr6+gzxbbTA==",
+      "dev": true,
+      "requires": {
+        "readable-stream": "^2.0.1"
+      },
+      "dependencies": {
+        "readable-stream": {
+          "version": "2.3.7",
+          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
+          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
+          "dev": true,
+          "requires": {
+            "core-util-is": "~1.0.0",
+            "inherits": "~2.0.3",
+            "isarray": "~1.0.0",
+            "process-nextick-args": "~2.0.0",
+            "safe-buffer": "~5.1.1",
+            "string_decoder": "~1.1.1",
+            "util-deprecate": "~1.0.1"
+          }
+        },
+        "string_decoder": {
+          "version": "1.1.1",
+          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
+          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
+          "dev": true,
+          "requires": {
+            "safe-buffer": "~5.1.0"
+          }
+        }
+      }
+    },
+    "stealthy-require": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/stealthy-require/-/stealthy-require-1.1.1.tgz",
+      "integrity": "sha1-NbCYdbT/SfJqd35QmzCQoyJr8ks="
+    },
+    "stream-browserify": {
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/stream-browserify/-/stream-browserify-2.0.2.tgz",
+      "integrity": "sha512-nX6hmklHs/gr2FuxYDltq8fJA1GDlxKQCz8O/IM4atRqBH8OORmBNgfvW5gG10GT/qQ9u0CzIvr2X5Pkt6ntqg==",
+      "requires": {
+        "inherits": "~2.0.1",
+        "readable-stream": "^2.0.2"
+      },
+      "dependencies": {
+        "readable-stream": {
+          "version": "2.3.7",
+          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
+          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
+          "requires": {
+            "core-util-is": "~1.0.0",
+            "inherits": "~2.0.3",
+            "isarray": "~1.0.0",
+            "process-nextick-args": "~2.0.0",
+            "safe-buffer": "~5.1.1",
+            "string_decoder": "~1.1.1",
+            "util-deprecate": "~1.0.1"
+          }
+        },
+        "string_decoder": {
+          "version": "1.1.1",
+          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
+          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
+          "requires": {
+            "safe-buffer": "~5.1.0"
+          }
+        }
+      }
+    },
+    "stream-each": {
+      "version": "1.2.3",
+      "resolved": "https://registry.npmjs.org/stream-each/-/stream-each-1.2.3.tgz",
+      "integrity": "sha512-vlMC2f8I2u/bZGqkdfLQW/13Zihpej/7PmSiMQsbYddxuTsJp8vRe2x2FvVExZg7FaOds43ROAuFJwPR4MTZLw==",
+      "requires": {
+        "end-of-stream": "^1.1.0",
+        "stream-shift": "^1.0.0"
+      }
+    },
+    "stream-http": {
+      "version": "2.8.3",
+      "resolved": "https://registry.npmjs.org/stream-http/-/stream-http-2.8.3.tgz",
+      "integrity": "sha512-+TSkfINHDo4J+ZobQLWiMouQYB+UVYFttRA94FpEzzJ7ZdqcL4uUUQ7WkdkI4DSozGmgBUE/a47L+38PenXhUw==",
+      "requires": {
+        "builtin-status-codes": "^3.0.0",
+        "inherits": "^2.0.1",
+        "readable-stream": "^2.3.6",
+        "to-arraybuffer": "^1.0.0",
+        "xtend": "^4.0.0"
+      },
+      "dependencies": {
+        "readable-stream": {
+          "version": "2.3.7",
+          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
+          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
+          "requires": {
+            "core-util-is": "~1.0.0",
+            "inherits": "~2.0.3",
+            "isarray": "~1.0.0",
+            "process-nextick-args": "~2.0.0",
+            "safe-buffer": "~5.1.1",
+            "string_decoder": "~1.1.1",
+            "util-deprecate": "~1.0.1"
+          }
+        },
+        "string_decoder": {
+          "version": "1.1.1",
+          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
+          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
+          "requires": {
+            "safe-buffer": "~5.1.0"
+          }
+        }
+      }
+    },
+    "stream-shift": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/stream-shift/-/stream-shift-1.0.1.tgz",
+      "integrity": "sha512-AiisoFqQ0vbGcZgQPY1cdP2I76glaVA/RauYR4G4thNFgkTqr90yXTo4LYX60Jl+sIlPNHHdGSwo01AvbKUSVQ=="
+    },
+    "strict-uri-encode": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/strict-uri-encode/-/strict-uri-encode-1.1.0.tgz",
+      "integrity": "sha1-J5siXfHVgrH1TmWt3UNS4Y+qBxM="
+    },
+    "string-length": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/string-length/-/string-length-2.0.0.tgz",
+      "integrity": "sha1-1A27aGo6zpYMHP/KVivyxF+DY+0=",
+      "requires": {
+        "astral-regex": "^1.0.0",
+        "strip-ansi": "^4.0.0"
+      },
+      "dependencies": {
+        "ansi-regex": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz",
+          "integrity": "sha1-7QMXwyIGT3lGbAKWa922Bas32Zg="
+        },
+        "strip-ansi": {
+          "version": "4.0.0",
+          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",
+          "integrity": "sha1-qEeQIusaw2iocTibY1JixQXuNo8=",
+          "requires": {
+            "ansi-regex": "^3.0.0"
+          }
+        }
+      }
+    },
+    "string-width": {
+      "version": "4.2.0",
+      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.0.tgz",
+      "integrity": "sha512-zUz5JD+tgqtuDjMhwIg5uFVV3dtqZ9yQJlZVfq4I01/K5Paj5UHj7VyrQOJvzawSVlKpObApbfD0Ed6yJc+1eg==",
+      "requires": {
+        "emoji-regex": "^8.0.0",
+        "is-fullwidth-code-point": "^3.0.0",
+        "strip-ansi": "^6.0.0"
+      },
+      "dependencies": {
+        "strip-ansi": {
+          "version": "6.0.0",
+          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.0.tgz",
+          "integrity": "sha512-AuvKTrTfQNYNIctbR1K/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==",
+          "requires": {
+            "ansi-regex": "^5.0.0"
+          }
+        }
+      }
+    },
+    "string.prototype.matchall": {
+      "version": "4.0.2",
+      "resolved": "https://registry.npmjs.org/string.prototype.matchall/-/string.prototype.matchall-4.0.2.tgz",
+      "integrity": "sha512-N/jp6O5fMf9os0JU3E72Qhf590RSRZU/ungsL/qJUYVTNv7hTG0P/dbPjxINVN9jpscu3nzYwKESU3P3RY5tOg==",
+      "requires": {
+        "define-properties": "^1.1.3",
+        "es-abstract": "^1.17.0",
+        "has-symbols": "^1.0.1",
+        "internal-slot": "^1.0.2",
+        "regexp.prototype.flags": "^1.3.0",
+        "side-channel": "^1.0.2"
+      }
+    },
+    "string.prototype.trimend": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/string.prototype.trimend/-/string.prototype.trimend-1.0.1.tgz",
+      "integrity": "sha512-LRPxFUaTtpqYsTeNKaFOw3R4bxIzWOnbQ837QfBylo8jIxtcbK/A/sMV7Q+OAV/vWo+7s25pOE10KYSjaSO06g==",
+      "requires": {
+        "define-properties": "^1.1.3",
+        "es-abstract": "^1.17.5"
+      }
+    },
+    "string.prototype.trimleft": {
+      "version": "2.1.2",
+      "resolved": "https://registry.npmjs.org/string.prototype.trimleft/-/string.prototype.trimleft-2.1.2.tgz",
+      "integrity": "sha512-gCA0tza1JBvqr3bfAIFJGqfdRTyPae82+KTnm3coDXkZN9wnuW3HjGgN386D7hfv5CHQYCI022/rJPVlqXyHSw==",
+      "requires": {
+        "define-properties": "^1.1.3",
+        "es-abstract": "^1.17.5",
+        "string.prototype.trimstart": "^1.0.0"
+      }
+    },
+    "string.prototype.trimright": {
+      "version": "2.1.2",
+      "resolved": "https://registry.npmjs.org/string.prototype.trimright/-/string.prototype.trimright-2.1.2.tgz",
+      "integrity": "sha512-ZNRQ7sY3KroTaYjRS6EbNiiHrOkjihL9aQE/8gfQ4DtAC/aEBRHFJa44OmoWxGGqXuJlfKkZW4WcXErGr+9ZFg==",
+      "requires": {
+        "define-properties": "^1.1.3",
+        "es-abstract": "^1.17.5",
+        "string.prototype.trimend": "^1.0.0"
+      }
+    },
+    "string.prototype.trimstart": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/string.prototype.trimstart/-/string.prototype.trimstart-1.0.1.tgz",
+      "integrity": "sha512-XxZn+QpvrBI1FOcg6dIpxUPgWCPuNXvMD72aaRaUQv1eD4e/Qy8i/hFTe0BUmD60p/QA6bh1avmuPTfNjqVWRw==",
+      "requires": {
+        "define-properties": "^1.1.3",
+        "es-abstract": "^1.17.5"
+      }
+    },
+    "string_decoder": {
+      "version": "1.3.0",
+      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.3.0.tgz",
+      "integrity": "sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==",
+      "requires": {
+        "safe-buffer": "~5.2.0"
+      },
+      "dependencies": {
+        "safe-buffer": {
+          "version": "5.2.0",
+          "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.0.tgz",
+          "integrity": "sha512-fZEwUGbVl7kouZs1jCdMLdt95hdIv0ZeHg6L7qPeciMZhZ+/gdesW4wgTARkrFWEpspjEATAzUGPG8N2jJiwbg=="
+        }
+      }
+    },
+    "stringify-object": {
+      "version": "3.3.0",
+      "resolved": "https://registry.npmjs.org/stringify-object/-/stringify-object-3.3.0.tgz",
+      "integrity": "sha512-rHqiFh1elqCQ9WPLIC8I0Q/g/wj5J1eMkyoiD6eoQApWHP0FtlK7rqnhmabL5VUY9JQCcqwwvlOaSuutekgyrw==",
+      "requires": {
+        "get-own-enumerable-property-symbols": "^3.0.0",
+        "is-obj": "^1.0.1",
+        "is-regexp": "^1.0.0"
+      },
+      "dependencies": {
+        "is-obj": {
+          "version": "1.0.1",
+          "resolved": "https://registry.npmjs.org/is-obj/-/is-obj-1.0.1.tgz",
+          "integrity": "sha1-PkcprB9f3gJc19g6iW2rn09n2w8="
+        }
+      }
+    },
+    "strip-ansi": {
+      "version": "5.2.0",
+      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz",
+      "integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==",
+      "requires": {
+        "ansi-regex": "^4.1.0"
+      },
+      "dependencies": {
+        "ansi-regex": {
+          "version": "4.1.0",
+          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",
+          "integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg=="
+        }
+      }
+    },
+    "strip-bom": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-3.0.0.tgz",
+      "integrity": "sha1-IzTBjpx1n3vdVv3vfprj1YjmjtM="
+    },
+    "strip-comments": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/strip-comments/-/strip-comments-1.0.2.tgz",
+      "integrity": "sha512-kL97alc47hoyIQSV165tTt9rG5dn4w1dNnBhOQ3bOU1Nc1hel09jnXANaHJ7vzHLd4Ju8kseDGzlev96pghLFw==",
+      "requires": {
+        "babel-extract-comments": "^1.0.0",
+        "babel-plugin-transform-object-rest-spread": "^6.26.0"
+      }
+    },
+    "strip-eof": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/strip-eof/-/strip-eof-1.0.0.tgz",
+      "integrity": "sha1-u0P/VZim6wXYm1n80SnJgzE2Br8="
+    },
+    "strip-indent": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/strip-indent/-/strip-indent-3.0.0.tgz",
+      "integrity": "sha512-laJTa3Jb+VQpaC6DseHhF7dXVqHTfJPCRDaEbid/drOhgitgYku/letMUqOXFoWV0zIIUbjpdH2t+tYj4bQMRQ==",
+      "requires": {
+        "min-indent": "^1.0.0"
+      }
+    },
+    "strip-json-comments": {
+      "version": "3.1.0",
+      "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.0.tgz",
+      "integrity": "sha512-e6/d0eBu7gHtdCqFt0xJr642LdToM5/cN4Qb9DbHjVx1CP5RyeM+zH7pbecEmDv/lBqb0QH+6Uqq75rxFPkM0w=="
+    },
+    "style-loader": {
+      "version": "0.23.1",
+      "resolved": "https://registry.npmjs.org/style-loader/-/style-loader-0.23.1.tgz",
+      "integrity": "sha512-XK+uv9kWwhZMZ1y7mysB+zoihsEj4wneFWAS5qoiLwzW0WzSqMrrsIy+a3zkQJq0ipFtBpX5W3MqyRIBF/WFGg==",
+      "requires": {
+        "loader-utils": "^1.1.0",
+        "schema-utils": "^1.0.0"
+      },
+      "dependencies": {
+        "schema-utils": {
+          "version": "1.0.0",
+          "resolved": "https://registry.npmjs.org/schema-utils/-/schema-utils-1.0.0.tgz",
+          "integrity": "sha512-i27Mic4KovM/lnGsy8whRCHhc7VicJajAjTrYg11K9zfZXnYIt4k5F+kZkwjnrhKzLic/HLU4j11mjsz2G/75g==",
+          "requires": {
+            "ajv": "^6.1.0",
+            "ajv-errors": "^1.0.0",
+            "ajv-keywords": "^3.1.0"
+          }
+        }
+      }
+    },
+    "stylehacks": {
+      "version": "4.0.3",
+      "resolved": "https://registry.npmjs.org/stylehacks/-/stylehacks-4.0.3.tgz",
+      "integrity": "sha512-7GlLk9JwlElY4Y6a/rmbH2MhVlTyVmiJd1PfTCqFaIBEGMYNsrO/v3SeGTdhBThLg4Z+NbOk/qFMwCa+J+3p/g==",
+      "requires": {
+        "browserslist": "^4.0.0",
+        "postcss": "^7.0.0",
+        "postcss-selector-parser": "^3.0.0"
+      },
+      "dependencies": {
+        "postcss-selector-parser": {
+          "version": "3.1.2",
+          "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-3.1.2.tgz",
+          "integrity": "sha512-h7fJ/5uWuRVyOtkO45pnt1Ih40CEleeyCHzipqAZO2e5H20g25Y48uYnFUiShvY4rZWNJ/Bib/KVPmanaCtOhA==",
+          "requires": {
+            "dot-prop": "^5.2.0",
+            "indexes-of": "^1.0.1",
+            "uniq": "^1.0.1"
+          }
+        }
+      }
+    },
+    "sudo-prompt": {
+      "version": "9.2.1",
+      "resolved": "https://registry.npmjs.org/sudo-prompt/-/sudo-prompt-9.2.1.tgz",
+      "integrity": "sha512-Mu7R0g4ig9TUuGSxJavny5Rv0egCEtpZRNMrZaYS1vxkiIxGiGUwoezU3LazIQ+KE04hTrTfNPgxU5gzi7F5Pw=="
+    },
+    "supports-color": {
+      "version": "5.5.0",
+      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
+      "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
+      "requires": {
+        "has-flag": "^3.0.0"
+      }
+    },
+    "svg-parser": {
+      "version": "2.0.4",
+      "resolved": "https://registry.npmjs.org/svg-parser/-/svg-parser-2.0.4.tgz",
+      "integrity": "sha512-e4hG1hRwoOdRb37cIMSgzNsxyzKfayW6VOflrwvR+/bzrkyxY/31WkbgnQpgtrNp1SdpJvpUAGTa/ZoiPNDuRQ=="
+    },
+    "svgo": {
+      "version": "1.3.2",
+      "resolved": "https://registry.npmjs.org/svgo/-/svgo-1.3.2.tgz",
+      "integrity": "sha512-yhy/sQYxR5BkC98CY7o31VGsg014AKLEPxdfhora76l36hD9Rdy5NZA/Ocn6yayNPgSamYdtX2rFJdcv07AYVw==",
+      "requires": {
+        "chalk": "^2.4.1",
+        "coa": "^2.0.2",
+        "css-select": "^2.0.0",
+        "css-select-base-adapter": "^0.1.1",
+        "css-tree": "1.0.0-alpha.37",
+        "csso": "^4.0.2",
+        "js-yaml": "^3.13.1",
+        "mkdirp": "~0.5.1",
+        "object.values": "^1.1.0",
+        "sax": "~1.2.4",
+        "stable": "^0.1.8",
+        "unquote": "~1.1.1",
+        "util.promisify": "~1.0.0"
+      }
+    },
+    "symbol-observable": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/symbol-observable/-/symbol-observable-1.2.0.tgz",
+      "integrity": "sha512-e900nM8RRtGhlV36KGEU9k65K3mPb1WV70OdjfxlG2EAuM1noi/E/BaW/uMhL7bPEssK8QV57vN3esixjUvcXQ=="
+    },
+    "symbol-tree": {
+      "version": "3.2.4",
+      "resolved": "https://registry.npmjs.org/symbol-tree/-/symbol-tree-3.2.4.tgz",
+      "integrity": "sha512-9QNk5KwDF+Bvz+PyObkmSYjI5ksVUYtjW7AU22r2NKcfLJcXp96hkDWU3+XndOsUb+AQ9QhfzfCT2O+CNWT5Tw=="
+    },
+    "table": {
+      "version": "5.4.6",
+      "resolved": "https://registry.npmjs.org/table/-/table-5.4.6.tgz",
+      "integrity": "sha512-wmEc8m4fjnob4gt5riFRtTu/6+4rSe12TpAELNSqHMfF3IqnA+CH37USM6/YR3qRZv7e56kAEAtd6nKZaxe0Ug==",
+      "requires": {
+        "ajv": "^6.10.2",
+        "lodash": "^4.17.14",
+        "slice-ansi": "^2.1.0",
+        "string-width": "^3.0.0"
+      },
+      "dependencies": {
+        "emoji-regex": {
+          "version": "7.0.3",
+          "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-7.0.3.tgz",
+          "integrity": "sha512-CwBLREIQ7LvYFB0WyRvwhq5N5qPhc6PMjD6bYggFlI5YyDgl+0vxq5VHbMOFqLg7hfWzmu8T5Z1QofhmTIhItA=="
+        },
+        "is-fullwidth-code-point": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
+          "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8="
+        },
+        "string-width": {
+          "version": "3.1.0",
+          "resolved": "https://registry.npmjs.org/string-width/-/string-width-3.1.0.tgz",
+          "integrity": "sha512-vafcv6KjVZKSgz06oM/H6GDBrAtz8vdhQakGjFIvNrHA6y3HCF1CInLy+QLq8dTJPQ1b+KDUqDFctkdRW44e1w==",
+          "requires": {
+            "emoji-regex": "^7.0.1",
+            "is-fullwidth-code-point": "^2.0.0",
+            "strip-ansi": "^5.1.0"
+          }
+        }
+      }
+    },
+    "tapable": {
+      "version": "1.1.3",
+      "resolved": "https://registry.npmjs.org/tapable/-/tapable-1.1.3.tgz",
+      "integrity": "sha512-4WK/bYZmj8xLr+HUCODHGF1ZFzsYffasLUgEiMBY4fgtltdO6B4WJtlSbPaDTLpYTcGVwM2qLnFTICEcNxs3kA=="
+    },
+    "tape": {
+      "version": "3.6.1",
+      "resolved": "https://registry.npmjs.org/tape/-/tape-3.6.1.tgz",
+      "integrity": "sha1-SJPdU+KApfWMDOswwsDrs7zVHh8=",
+      "requires": {
+        "deep-equal": "~0.2.0",
+        "defined": "~0.0.0",
+        "glob": "~3.2.9",
+        "inherits": "~2.0.1",
+        "object-inspect": "~0.4.0",
+        "resumer": "~0.0.0",
+        "through": "~2.3.4"
+      },
+      "dependencies": {
+        "deep-equal": {
+          "version": "0.2.2",
+          "resolved": "https://registry.npmjs.org/deep-equal/-/deep-equal-0.2.2.tgz",
+          "integrity": "sha1-hLdFiW80xoTpjyzg5Cq69Du6AX0="
+        },
+        "glob": {
+          "version": "3.2.11",
+          "resolved": "https://registry.npmjs.org/glob/-/glob-3.2.11.tgz",
+          "integrity": "sha1-Spc/Y1uRkPcV0QmH1cAP0oFevj0=",
+          "requires": {
+            "inherits": "2",
+            "minimatch": "0.3"
+          }
+        },
+        "lru-cache": {
+          "version": "2.7.3",
+          "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-2.7.3.tgz",
+          "integrity": "sha1-bUUk6LlV+V1PW1iFHOId1y+06VI="
+        },
+        "minimatch": {
+          "version": "0.3.0",
+          "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-0.3.0.tgz",
+          "integrity": "sha1-J12O2qxPG7MyZHIInnlJyDlGmd0=",
+          "requires": {
+            "lru-cache": "2",
+            "sigmund": "~1.0.0"
+          }
+        },
+        "object-inspect": {
+          "version": "0.4.0",
+          "resolved": "https://registry.npmjs.org/object-inspect/-/object-inspect-0.4.0.tgz",
+          "integrity": "sha1-9RV8EWwUVbJDsG7pdwM5LFrYn+w="
+        }
+      }
+    },
+    "tar": {
+      "version": "2.2.2",
+      "resolved": "https://registry.npmjs.org/tar/-/tar-2.2.2.tgz",
+      "integrity": "sha512-FCEhQ/4rE1zYv9rYXJw/msRqsnmlje5jHP6huWeBZ704jUTy02c5AZyWujpMR1ax6mVw9NyJMfuK2CMDWVIfgA==",
+      "dev": true,
+      "requires": {
+        "block-stream": "*",
+        "fstream": "^1.0.12",
+        "inherits": "2"
+      }
+    },
+    "temp": {
+      "version": "0.8.3",
+      "resolved": "https://registry.npmjs.org/temp/-/temp-0.8.3.tgz",
+      "integrity": "sha1-4Ma8TSa5AxJEEOT+2BEDAU38H1k=",
+      "requires": {
+        "os-tmpdir": "^1.0.0",
+        "rimraf": "~2.2.6"
+      },
+      "dependencies": {
+        "rimraf": {
+          "version": "2.2.8",
+          "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.2.8.tgz",
+          "integrity": "sha1-5Dm+Kq7jJzIZUnMPmaiSnk/FBYI="
+        }
+      }
+    },
+    "terser": {
+      "version": "4.6.13",
+      "resolved": "https://registry.npmjs.org/terser/-/terser-4.6.13.tgz",
+      "integrity": "sha512-wMvqukYgVpQlymbnNbabVZbtM6PN63AzqexpwJL8tbh/mRT9LE5o+ruVduAGL7D6Fpjl+Q+06U5I9Ul82odAhw==",
+      "requires": {
+        "commander": "^2.20.0",
+        "source-map": "~0.6.1",
+        "source-map-support": "~0.5.12"
+      },
+      "dependencies": {
+        "source-map": {
+          "version": "0.6.1",
+          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
+          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="
+        }
+      }
+    },
+    "terser-webpack-plugin": {
+      "version": "2.3.5",
+      "resolved": "https://registry.npmjs.org/terser-webpack-plugin/-/terser-webpack-plugin-2.3.5.tgz",
+      "integrity": "sha512-WlWksUoq+E4+JlJ+h+U+QUzXpcsMSSNXkDy9lBVkSqDn1w23Gg29L/ary9GeJVYCGiNJJX7LnVc4bwL1N3/g1w==",
+      "requires": {
+        "cacache": "^13.0.1",
+        "find-cache-dir": "^3.2.0",
+        "jest-worker": "^25.1.0",
+        "p-limit": "^2.2.2",
+        "schema-utils": "^2.6.4",
+        "serialize-javascript": "^2.1.2",
+        "source-map": "^0.6.1",
+        "terser": "^4.4.3",
+        "webpack-sources": "^1.4.3"
+      },
+      "dependencies": {
+        "find-cache-dir": {
+          "version": "3.3.1",
+          "resolved": "https://registry.npmjs.org/find-cache-dir/-/find-cache-dir-3.3.1.tgz",
+          "integrity": "sha512-t2GDMt3oGC/v+BMwzmllWDuJF/xcDtE5j/fCGbqDD7OLuJkj0cfh1YSA5VKPvwMeLFLNDBkwOKZ2X85jGLVftQ==",
+          "requires": {
+            "commondir": "^1.0.1",
+            "make-dir": "^3.0.2",
+            "pkg-dir": "^4.1.0"
+          }
+        },
+        "find-up": {
+          "version": "4.1.0",
+          "resolved": "https://registry.npmjs.org/find-up/-/find-up-4.1.0.tgz",
+          "integrity": "sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==",
+          "requires": {
+            "locate-path": "^5.0.0",
+            "path-exists": "^4.0.0"
+          }
+        },
+        "has-flag": {
+          "version": "4.0.0",
+          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
+          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ=="
+        },
+        "jest-worker": {
+          "version": "25.5.0",
+          "resolved": "https://registry.npmjs.org/jest-worker/-/jest-worker-25.5.0.tgz",
+          "integrity": "sha512-/dsSmUkIy5EBGfv/IjjqmFxrNAUpBERfGs1oHROyD7yxjG/w+t0GOJDX8O1k32ySmd7+a5IhnJU2qQFcJ4n1vw==",
+          "requires": {
+            "merge-stream": "^2.0.0",
+            "supports-color": "^7.0.0"
+          }
+        },
+        "locate-path": {
+          "version": "5.0.0",
+          "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-5.0.0.tgz",
+          "integrity": "sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==",
+          "requires": {
+            "p-locate": "^4.1.0"
+          }
+        },
+        "make-dir": {
+          "version": "3.1.0",
+          "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-3.1.0.tgz",
+          "integrity": "sha512-g3FeP20LNwhALb/6Cz6Dd4F2ngze0jz7tbzrD2wAV+o9FeNHe4rL+yK2md0J/fiSf1sa1ADhXqi5+oVwOM/eGw==",
+          "requires": {
+            "semver": "^6.0.0"
+          }
+        },
+        "p-limit": {
+          "version": "2.3.0",
+          "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz",
+          "integrity": "sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==",
+          "requires": {
+            "p-try": "^2.0.0"
+          }
+        },
+        "p-locate": {
+          "version": "4.1.0",
+          "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-4.1.0.tgz",
+          "integrity": "sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==",
+          "requires": {
+            "p-limit": "^2.2.0"
+          }
+        },
+        "p-try": {
+          "version": "2.2.0",
+          "resolved": "https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz",
+          "integrity": "sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ=="
+        },
+        "path-exists": {
+          "version": "4.0.0",
+          "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
+          "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w=="
+        },
+        "pkg-dir": {
+          "version": "4.2.0",
+          "resolved": "https://registry.npmjs.org/pkg-dir/-/pkg-dir-4.2.0.tgz",
+          "integrity": "sha512-HRDzbaKjC+AOWVXxAU/x54COGeIv9eb+6CkDSQoNTt4XyWoIJvuPsXizxu/Fr23EiekbtZwmh1IcIG/l/a10GQ==",
+          "requires": {
+            "find-up": "^4.0.0"
+          }
+        },
+        "source-map": {
+          "version": "0.6.1",
+          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
+          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="
+        },
+        "supports-color": {
+          "version": "7.1.0",
+          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.1.0.tgz",
+          "integrity": "sha512-oRSIpR8pxT1Wr2FquTNnGet79b3BWljqOuoW/h4oBhxJ/HUbX5nX6JSruTkvXDCFMwDPvsaTTbvMLKZWSy0R5g==",
+          "requires": {
+            "has-flag": "^4.0.0"
+          }
+        }
+      }
+    },
+    "test-exclude": {
+      "version": "5.2.3",
+      "resolved": "https://registry.npmjs.org/test-exclude/-/test-exclude-5.2.3.tgz",
+      "integrity": "sha512-M+oxtseCFO3EDtAaGH7iiej3CBkzXqFMbzqYAACdzKui4eZA+pq3tZEwChvOdNfa7xxy8BfbmgJSIr43cC/+2g==",
+      "requires": {
+        "glob": "^7.1.3",
+        "minimatch": "^3.0.4",
+        "read-pkg-up": "^4.0.0",
+        "require-main-filename": "^2.0.0"
+      }
+    },
+    "text-table": {
+      "version": "0.2.0",
+      "resolved": "https://registry.npmjs.org/text-table/-/text-table-0.2.0.tgz",
+      "integrity": "sha1-f17oI66AUgfACvLfSoTsP8+lcLQ="
+    },
+    "throat": {
+      "version": "4.1.0",
+      "resolved": "https://registry.npmjs.org/throat/-/throat-4.1.0.tgz",
+      "integrity": "sha1-iQN8vJLFarGJJua6TLsgDhVnKmo="
+    },
+    "through": {
+      "version": "2.3.8",
+      "resolved": "https://registry.npmjs.org/through/-/through-2.3.8.tgz",
+      "integrity": "sha1-DdTJ/6q8NXlgsbckEV1+Doai4fU="
+    },
+    "through2": {
+      "version": "2.0.5",
+      "resolved": "https://registry.npmjs.org/through2/-/through2-2.0.5.tgz",
+      "integrity": "sha512-/mrRod8xqpA+IHSLyGCQ2s8SPHiCDEeQJSep1jqLYeEUClOFG2Qsh+4FU6G9VeqpZnGW/Su8LQGc4YKni5rYSQ==",
+      "requires": {
+        "readable-stream": "~2.3.6",
+        "xtend": "~4.0.1"
+      },
+      "dependencies": {
+        "readable-stream": {
+          "version": "2.3.7",
+          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
+          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
+          "requires": {
+            "core-util-is": "~1.0.0",
+            "inherits": "~2.0.3",
+            "isarray": "~1.0.0",
+            "process-nextick-args": "~2.0.0",
+            "safe-buffer": "~5.1.1",
+            "string_decoder": "~1.1.1",
+            "util-deprecate": "~1.0.1"
+          }
+        },
+        "string_decoder": {
+          "version": "1.1.1",
+          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
+          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
+          "requires": {
+            "safe-buffer": "~5.1.0"
+          }
+        }
+      }
+    },
+    "thunky": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/thunky/-/thunky-1.1.0.tgz",
+      "integrity": "sha512-eHY7nBftgThBqOyHGVN+l8gF0BucP09fMo0oO/Lb0w1OF80dJv+lDVpXG60WMQvkcxAkNybKsrEIE3ZtKGmPrA=="
+    },
+    "timers-browserify": {
+      "version": "2.0.11",
+      "resolved": "https://registry.npmjs.org/timers-browserify/-/timers-browserify-2.0.11.tgz",
+      "integrity": "sha512-60aV6sgJ5YEbzUdn9c8kYGIqOubPoUdqQCul3SBAsRCZ40s6Y5cMcrW4dt3/k/EsbLVJNl9n6Vz3fTc+k2GeKQ==",
+      "requires": {
+        "setimmediate": "^1.0.4"
+      }
+    },
+    "timsort": {
+      "version": "0.3.0",
+      "resolved": "https://registry.npmjs.org/timsort/-/timsort-0.3.0.tgz",
+      "integrity": "sha1-QFQRqOfmM5/mTbmiNN4R3DHgK9Q="
+    },
+    "tiny-inflate": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/tiny-inflate/-/tiny-inflate-1.0.3.tgz",
+      "integrity": "sha512-pkY1fj1cKHb2seWDy0B16HeWyczlJA9/WW3u3c4z/NiWDsO3DOU5D7nhTLE9CF0yXv/QZFY7sEJmj24dK+Rrqw==",
+      "dev": true
+    },
+    "tiny-invariant": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/tiny-invariant/-/tiny-invariant-1.1.0.tgz",
+      "integrity": "sha512-ytxQvrb1cPc9WBEI/HSeYYoGD0kWnGEOR8RY6KomWLBVhqz0RgTwVO9dLrGz7dC+nN9llyI7OKAgRq8Vq4ZBSw=="
+    },
+    "tiny-queue": {
+      "version": "0.2.1",
+      "resolved": "https://registry.npmjs.org/tiny-queue/-/tiny-queue-0.2.1.tgz",
+      "integrity": "sha1-JaZ/LG4lOyypQZd7XvdELvl6YEY="
+    },
+    "tiny-warning": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/tiny-warning/-/tiny-warning-1.0.3.tgz",
+      "integrity": "sha512-lBN9zLN/oAf68o3zNXYrdCt1kP8WsiGW8Oo2ka41b2IM5JL/S1CTyX1rW0mb/zSuJun0ZUrDxx4sqvYS2FWzPA=="
+    },
+    "tmp": {
+      "version": "0.0.33",
+      "resolved": "https://registry.npmjs.org/tmp/-/tmp-0.0.33.tgz",
+      "integrity": "sha512-jRCJlojKnZ3addtTOjdIqoRuPEKBvNXcGYqzO6zWZX8KfKEpnGY5jfggJQ3EjKuu8D4bJRr0y+cYJFmYbImXGw==",
+      "requires": {
+        "os-tmpdir": "~1.0.2"
+      }
+    },
+    "tmpl": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/tmpl/-/tmpl-1.0.4.tgz",
+      "integrity": "sha1-I2QN17QtAEM5ERQIIOXPRA5SHdE="
+    },
+    "to-arraybuffer": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/to-arraybuffer/-/to-arraybuffer-1.0.1.tgz",
+      "integrity": "sha1-fSKbH8xjfkZsoIEYCDanqr/4P0M="
+    },
+    "to-fast-properties": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/to-fast-properties/-/to-fast-properties-2.0.0.tgz",
+      "integrity": "sha1-3F5pjL0HkmW8c+A3doGk5Og/YW4="
+    },
+    "to-object-path": {
+      "version": "0.3.0",
+      "resolved": "https://registry.npmjs.org/to-object-path/-/to-object-path-0.3.0.tgz",
+      "integrity": "sha1-KXWIt7Dn4KwI4E5nL4XB9JmeF68=",
+      "requires": {
+        "kind-of": "^3.0.2"
+      }
+    },
+    "to-regex": {
+      "version": "3.0.2",
+      "resolved": "https://registry.npmjs.org/to-regex/-/to-regex-3.0.2.tgz",
+      "integrity": "sha512-FWtleNAtZ/Ki2qtqej2CXTOayOH9bHDQF+Q48VpWyDXjbYxA4Yz8iDB31zXOBUlOHHKidDbqGVrTUvQMPmBGBw==",
+      "requires": {
+        "define-property": "^2.0.2",
+        "extend-shallow": "^3.0.2",
+        "regex-not": "^1.0.2",
+        "safe-regex": "^1.1.0"
+      }
+    },
+    "to-regex-range": {
+      "version": "2.1.1",
+      "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-2.1.1.tgz",
+      "integrity": "sha1-fIDBe53+vlmeJzZ+DU3VWQFB2zg=",
+      "requires": {
+        "is-number": "^3.0.0",
+        "repeat-string": "^1.6.1"
+      }
+    },
+    "toidentifier": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.0.tgz",
+      "integrity": "sha512-yaOH/Pk/VEhBWWTlhI+qXxDFXlejDGcQipMlyxda9nthulaxLZUNcUqFxokp0vcYnvteJln5FNQDRrxj3YcbVw=="
+    },
+    "tough-cookie": {
+      "version": "2.5.0",
+      "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.5.0.tgz",
+      "integrity": "sha512-nlLsUzgm1kfLXSXfRZMc1KLAugd4hqJHDTvc2hDIwS3mZAfMEuMbc03SujMF+GEcpaX/qboeycw6iO8JwVv2+g==",
+      "requires": {
+        "psl": "^1.1.28",
+        "punycode": "^2.1.1"
+      }
+    },
+    "tr46": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/tr46/-/tr46-1.0.1.tgz",
+      "integrity": "sha1-qLE/1r/SSJUZZ0zN5VujaTtwbQk=",
+      "requires": {
+        "punycode": "^2.1.0"
+      }
+    },
+    "trim-newlines": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/trim-newlines/-/trim-newlines-1.0.0.tgz",
+      "integrity": "sha1-WIeWa7WCpFA6QetST301ARgVphM=",
+      "dev": true
+    },
+    "true-case-path": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/true-case-path/-/true-case-path-1.0.3.tgz",
+      "integrity": "sha512-m6s2OdQe5wgpFMC+pAJ+q9djG82O2jcHPOI6RNg1yy9rCYR+WD6Nbpl32fDpfC56nirdRy+opFa/Vk7HYhqaew==",
+      "dev": true,
+      "requires": {
+        "glob": "^7.1.2"
+      }
+    },
+    "ts-pnp": {
+      "version": "1.1.6",
+      "resolved": "https://registry.npmjs.org/ts-pnp/-/ts-pnp-1.1.6.tgz",
+      "integrity": "sha512-CrG5GqAAzMT7144Cl+UIFP7mz/iIhiy+xQ6GGcnjTezhALT02uPMRw7tgDSESgB5MsfKt55+GPWw4ir1kVtMIQ=="
+    },
+    "tslib": {
+      "version": "1.11.1",
+      "resolved": "https://registry.npmjs.org/tslib/-/tslib-1.11.1.tgz",
+      "integrity": "sha512-aZW88SY8kQbU7gpV19lN24LtXh/yD4ZZg6qieAJDDg+YBsJcSmLGK9QpnUjAKVG/xefmvJGd1WUmfpT/g6AJGA=="
+    },
+    "tsutils": {
+      "version": "3.17.1",
+      "resolved": "https://registry.npmjs.org/tsutils/-/tsutils-3.17.1.tgz",
+      "integrity": "sha512-kzeQ5B8H3w60nFY2g8cJIuH7JDpsALXySGtwGJ0p2LSjLgay3NdIpqq5SoOBe46bKDW2iq25irHCr8wjomUS2g==",
+      "requires": {
+        "tslib": "^1.8.1"
+      }
+    },
+    "tty-browserify": {
+      "version": "0.0.0",
+      "resolved": "https://registry.npmjs.org/tty-browserify/-/tty-browserify-0.0.0.tgz",
+      "integrity": "sha1-oVe6QC2iTpv5V/mqadUk7tQpAaY="
+    },
+    "tunnel-agent": {
+      "version": "0.6.0",
+      "resolved": "https://registry.npmjs.org/tunnel-agent/-/tunnel-agent-0.6.0.tgz",
+      "integrity": "sha1-J6XeoGs2sEoKmWZ3SykIaPD8QP0=",
+      "requires": {
+        "safe-buffer": "^5.0.1"
+      }
+    },
+    "tweetnacl": {
+      "version": "0.14.5",
+      "resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-0.14.5.tgz",
+      "integrity": "sha1-WuaBd/GS1EViadEIr6k/+HQ/T2Q="
+    },
+    "type": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/type/-/type-1.2.0.tgz",
+      "integrity": "sha512-+5nt5AAniqsCnu2cEQQdpzCAh33kVx8n0VoFidKpB1dVVLAN/F+bgVOqOJqOnEnrhp222clB5p3vUlD+1QAnfg=="
+    },
+    "type-check": {
+      "version": "0.3.2",
+      "resolved": "https://registry.npmjs.org/type-check/-/type-check-0.3.2.tgz",
+      "integrity": "sha1-WITKtRLPHTVeP7eE8wgEsrUg23I=",
+      "requires": {
+        "prelude-ls": "~1.1.2"
+      }
+    },
+    "type-fest": {
+      "version": "0.8.1",
+      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.8.1.tgz",
+      "integrity": "sha512-4dbzIzqvjtgiM5rw1k5rEHtBANKmdudhGyBEajN01fEyhaAIhsoKNy6y7+IN93IfpFtwY9iqi7kD+xwKhQsNJA=="
+    },
+    "type-is": {
+      "version": "1.6.18",
+      "resolved": "https://registry.npmjs.org/type-is/-/type-is-1.6.18.tgz",
+      "integrity": "sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==",
+      "requires": {
+        "media-typer": "0.3.0",
+        "mime-types": "~2.1.24"
+      }
+    },
+    "typed-styles": {
+      "version": "0.0.7",
+      "resolved": "https://registry.npmjs.org/typed-styles/-/typed-styles-0.0.7.tgz",
+      "integrity": "sha512-pzP0PWoZUhsECYjABgCGQlRGL1n7tOHsgwYv3oIiEpJwGhFTuty/YNeduxQYzXXa3Ge5BdT6sHYIQYpl4uJ+5Q=="
+    },
+    "typedarray": {
+      "version": "0.0.6",
+      "resolved": "https://registry.npmjs.org/typedarray/-/typedarray-0.0.6.tgz",
+      "integrity": "sha1-hnrHTjhkGHsdPUfZlqeOxciDB3c="
+    },
+    "ua-parser-js": {
+      "version": "0.7.21",
+      "resolved": "https://registry.npmjs.org/ua-parser-js/-/ua-parser-js-0.7.21.tgz",
+      "integrity": "sha512-+O8/qh/Qj8CgC6eYBVBykMrNtp5Gebn4dlGD/kKXVkJNDwyrAwSIqwz8CDf+tsAIWVycKcku6gIXJ0qwx/ZXaQ=="
+    },
+    "uglify-es": {
+      "version": "3.3.9",
+      "resolved": "https://registry.npmjs.org/uglify-es/-/uglify-es-3.3.9.tgz",
+      "integrity": "sha512-r+MU0rfv4L/0eeW3xZrd16t4NZfK8Ld4SWVglYBb7ez5uXFWHuVRs6xCTrf1yirs9a4j4Y27nn7SRfO6v67XsQ==",
+      "requires": {
+        "commander": "~2.13.0",
+        "source-map": "~0.6.1"
+      },
+      "dependencies": {
+        "commander": {
+          "version": "2.13.0",
+          "resolved": "https://registry.npmjs.org/commander/-/commander-2.13.0.tgz",
+          "integrity": "sha512-MVuS359B+YzaWqjCL/c+22gfryv+mCBPHAv3zyVI2GN8EY6IRP8VwtasXn8jyyhvvq84R4ImN1OKRtcbIasjYA=="
+        },
+        "source-map": {
+          "version": "0.6.1",
+          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
+          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="
+        }
+      }
+    },
+    "ultron": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/ultron/-/ultron-1.0.2.tgz",
+      "integrity": "sha1-rOEWq1V80Zc4ak6I9GhTeMiy5Po="
+    },
+    "uncss": {
+      "version": "0.17.3",
+      "resolved": "https://registry.npmjs.org/uncss/-/uncss-0.17.3.tgz",
+      "integrity": "sha512-ksdDWl81YWvF/X14fOSw4iu8tESDHFIeyKIeDrK6GEVTQvqJc1WlOEXqostNwOCi3qAj++4EaLsdAgPmUbEyog==",
+      "dev": true,
+      "requires": {
+        "commander": "^2.20.0",
+        "glob": "^7.1.4",
+        "is-absolute-url": "^3.0.1",
+        "is-html": "^1.1.0",
+        "jsdom": "^14.1.0",
+        "lodash": "^4.17.15",
+        "postcss": "^7.0.17",
+        "postcss-selector-parser": "6.0.2",
+        "request": "^2.88.0"
+      },
+      "dependencies": {
+        "acorn": {
+          "version": "6.4.1",
+          "resolved": "https://registry.npmjs.org/acorn/-/acorn-6.4.1.tgz",
+          "integrity": "sha512-ZVA9k326Nwrj3Cj9jlh3wGFutC2ZornPNARZwsNYqQYgN0EsV2d53w5RN/co65Ohn4sUAUtb1rSUAOD6XN9idA==",
+          "dev": true
+        },
+        "is-absolute-url": {
+          "version": "3.0.3",
+          "resolved": "https://registry.npmjs.org/is-absolute-url/-/is-absolute-url-3.0.3.tgz",
+          "integrity": "sha512-opmNIX7uFnS96NtPmhWQgQx6/NYFgsUXYMllcfzwWKUMwfo8kku1TvE6hkNcH+Q1ts5cMVrsY7j0bxXQDciu9Q==",
+          "dev": true
+        },
+        "jsdom": {
+          "version": "14.1.0",
+          "resolved": "https://registry.npmjs.org/jsdom/-/jsdom-14.1.0.tgz",
+          "integrity": "sha512-O901mfJSuTdwU2w3Sn+74T+RnDVP+FuV5fH8tcPWyqrseRAb0s5xOtPgCFiPOtLcyK7CLIJwPyD83ZqQWvA5ng==",
+          "dev": true,
+          "requires": {
+            "abab": "^2.0.0",
+            "acorn": "^6.0.4",
+            "acorn-globals": "^4.3.0",
+            "array-equal": "^1.0.0",
+            "cssom": "^0.3.4",
+            "cssstyle": "^1.1.1",
+            "data-urls": "^1.1.0",
+            "domexception": "^1.0.1",
+            "escodegen": "^1.11.0",
+            "html-encoding-sniffer": "^1.0.2",
+            "nwsapi": "^2.1.3",
+            "parse5": "5.1.0",
+            "pn": "^1.1.0",
+            "request": "^2.88.0",
+            "request-promise-native": "^1.0.5",
+            "saxes": "^3.1.9",
+            "symbol-tree": "^3.2.2",
+            "tough-cookie": "^2.5.0",
+            "w3c-hr-time": "^1.0.1",
+            "w3c-xmlserializer": "^1.1.2",
+            "webidl-conversions": "^4.0.2",
+            "whatwg-encoding": "^1.0.5",
+            "whatwg-mimetype": "^2.3.0",
+            "whatwg-url": "^7.0.0",
+            "ws": "^6.1.2",
+            "xml-name-validator": "^3.0.0"
+          }
+        },
+        "parse5": {
+          "version": "5.1.0",
+          "resolved": "https://registry.npmjs.org/parse5/-/parse5-5.1.0.tgz",
+          "integrity": "sha512-fxNG2sQjHvlVAYmzBZS9YlDp6PTSSDwa98vkD4QgVDDCAo84z5X1t5XyJQ62ImdLXx5NdIIfihey6xpum9/gRQ==",
+          "dev": true
+        },
+        "whatwg-url": {
+          "version": "7.1.0",
+          "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-7.1.0.tgz",
+          "integrity": "sha512-WUu7Rg1DroM7oQvGWfOiAK21n74Gg+T4elXEQYkOhtyLeWiJFoOGLXPKI/9gzIie9CtwVLm8wtw6YJdKyxSjeg==",
+          "dev": true,
+          "requires": {
+            "lodash.sortby": "^4.7.0",
+            "tr46": "^1.0.1",
+            "webidl-conversions": "^4.0.2"
+          }
+        },
+        "ws": {
+          "version": "6.2.1",
+          "resolved": "https://registry.npmjs.org/ws/-/ws-6.2.1.tgz",
+          "integrity": "sha512-GIyAXC2cB7LjvpgMt9EKS2ldqr0MTrORaleiOno6TweZ6r3TKtoFQWay/2PceJ3RuBasOHzXNn5Lrw1X0bEjqA==",
+          "dev": true,
+          "requires": {
+            "async-limiter": "~1.0.0"
+          }
+        }
+      }
+    },
+    "unicode-canonical-property-names-ecmascript": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/unicode-canonical-property-names-ecmascript/-/unicode-canonical-property-names-ecmascript-1.0.4.tgz",
+      "integrity": "sha512-jDrNnXWHd4oHiTZnx/ZG7gtUTVp+gCcTTKr8L0HjlwphROEW3+Him+IpvC+xcJEFegapiMZyZe02CyuOnRmbnQ=="
+    },
+    "unicode-match-property-ecmascript": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/unicode-match-property-ecmascript/-/unicode-match-property-ecmascript-1.0.4.tgz",
+      "integrity": "sha512-L4Qoh15vTfntsn4P1zqnHulG0LdXgjSO035fEpdtp6YxXhMT51Q6vgM5lYdG/5X3MjS+k/Y9Xw4SFCY9IkR0rg==",
+      "requires": {
+        "unicode-canonical-property-names-ecmascript": "^1.0.4",
+        "unicode-property-aliases-ecmascript": "^1.0.4"
+      }
+    },
+    "unicode-match-property-value-ecmascript": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/unicode-match-property-value-ecmascript/-/unicode-match-property-value-ecmascript-1.2.0.tgz",
+      "integrity": "sha512-wjuQHGQVofmSJv1uVISKLE5zO2rNGzM/KCYZch/QQvez7C1hUhBIuZ701fYXExuufJFMPhv2SyL8CyoIfMLbIQ=="
+    },
+    "unicode-property-aliases-ecmascript": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/unicode-property-aliases-ecmascript/-/unicode-property-aliases-ecmascript-1.1.0.tgz",
+      "integrity": "sha512-PqSoPh/pWetQ2phoj5RLiaqIk4kCNwoV3CI+LfGmWLKI3rE3kl1h59XpX2BjgDrmbxD9ARtQobPGU1SguCYuQg=="
+    },
+    "unicode-trie": {
+      "version": "0.3.1",
+      "resolved": "https://registry.npmjs.org/unicode-trie/-/unicode-trie-0.3.1.tgz",
+      "integrity": "sha1-1nHd3YkQGgi6w3tqUWEBBgIFIIU=",
+      "dev": true,
+      "requires": {
+        "pako": "^0.2.5",
+        "tiny-inflate": "^1.0.0"
+      },
+      "dependencies": {
+        "pako": {
+          "version": "0.2.9",
+          "resolved": "https://registry.npmjs.org/pako/-/pako-0.2.9.tgz",
+          "integrity": "sha1-8/dSL073gjSNqBYbrZ7P1Rv4OnU=",
+          "dev": true
+        }
+      }
+    },
+    "unimodules-app-loader": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/unimodules-app-loader/-/unimodules-app-loader-1.0.2.tgz",
+      "integrity": "sha512-ryRAqSndIkCnWAr5jzSL6yjOrCBeIihItELUTykzi4ZxYV9j4Yl0Sd5+VKl1v/UvB6UNdgIGY4oU7S1b173/FA=="
+    },
+    "unimodules-barcode-scanner-interface": {
+      "version": "5.1.0",
+      "resolved": "https://registry.npmjs.org/unimodules-barcode-scanner-interface/-/unimodules-barcode-scanner-interface-5.1.0.tgz",
+      "integrity": "sha512-FUau0mm4sBOGmlekltY0iAimJ438w3rtWiv6hcjE77Map527aCH3GyjnZSw78raVxe598EXhWHviuwRxOGINYg=="
+    },
+    "unimodules-camera-interface": {
+      "version": "5.1.0",
+      "resolved": "https://registry.npmjs.org/unimodules-camera-interface/-/unimodules-camera-interface-5.1.0.tgz",
+      "integrity": "sha512-uwBmZ3XS6vkdzRAmiDhUE/P7fafN7ufXoRuBDGoX/Q9kIiKg61D8HzTmhLMelvJFW6eCjoBJfh/zRyZ54qcjGg=="
+    },
+    "unimodules-constants-interface": {
+      "version": "5.1.0",
+      "resolved": "https://registry.npmjs.org/unimodules-constants-interface/-/unimodules-constants-interface-5.1.0.tgz",
+      "integrity": "sha512-TlrqwtKt2G0QH4Fn1ko3tRtLX+eUGSnCBuu1TiAGlsQ5FM/1+AGuJNftHdUwZY1DncIAlw6lhNW+amv0hw5ocg=="
+    },
+    "unimodules-face-detector-interface": {
+      "version": "5.1.0",
+      "resolved": "https://registry.npmjs.org/unimodules-face-detector-interface/-/unimodules-face-detector-interface-5.1.0.tgz",
+      "integrity": "sha512-0qDA6j1WvPM98q32aKvRdFhgSa9Nu8lqNUlrgE740UTYsAmfQl8lM/r2TOuR1k3dVC14q33YvLizSOYM5FLhAw=="
+    },
+    "unimodules-file-system-interface": {
+      "version": "5.1.0",
+      "resolved": "https://registry.npmjs.org/unimodules-file-system-interface/-/unimodules-file-system-interface-5.1.0.tgz",
+      "integrity": "sha512-G2QXhEXY3uHuDD50MWI7C/nesbVlf2C0QHTs+fAt1VpmWYWfdDaeqgO67f/QRz8FH8xm3ul9XvgP6nA+P0xfIg=="
+    },
+    "unimodules-font-interface": {
+      "version": "5.1.0",
+      "resolved": "https://registry.npmjs.org/unimodules-font-interface/-/unimodules-font-interface-5.1.0.tgz",
+      "integrity": "sha512-ZKycNecNN0xxGIo9Db2n8RYU+ijlc+hzpE5acVSiIlmMjTsiOODRLkF++yKsZxglGXn/blgtBLrcTQr4jJV4MQ=="
+    },
+    "unimodules-image-loader-interface": {
+      "version": "5.1.0",
+      "resolved": "https://registry.npmjs.org/unimodules-image-loader-interface/-/unimodules-image-loader-interface-5.1.0.tgz",
+      "integrity": "sha512-yU1OPWMtZ9QcW5CxLE1DYWrpJGZ1hRGdoFG3vyk4syUS8QsCPR0HXqcI6KlTpI6wcLA0+HtS+1CmgJCMCUDd4w=="
+    },
+    "unimodules-permissions-interface": {
+      "version": "5.1.0",
+      "resolved": "https://registry.npmjs.org/unimodules-permissions-interface/-/unimodules-permissions-interface-5.1.0.tgz",
+      "integrity": "sha512-3Mz9A4a+iYF57ZeE99nidRPNM7dX3dzTZRvRQyCP5+CvsEmGNlLTIbTQ7fxKECoe3I6cjw94gNSirxIbwb3lDg=="
+    },
+    "unimodules-sensors-interface": {
+      "version": "5.1.0",
+      "resolved": "https://registry.npmjs.org/unimodules-sensors-interface/-/unimodules-sensors-interface-5.1.0.tgz",
+      "integrity": "sha512-v8nRFRHtl4jFI1aiAmWurPKDuvboSxj0qoqpy/IB3xkkzBfw4KsZQ1b1yomwNbv9cCqIkFxaNAOzyrvVZrz/dA=="
+    },
+    "unimodules-task-manager-interface": {
+      "version": "5.1.0",
+      "resolved": "https://registry.npmjs.org/unimodules-task-manager-interface/-/unimodules-task-manager-interface-5.1.0.tgz",
+      "integrity": "sha512-t7FSWOdw4ev9SlqPzfw9rOKlFyryZbrcmjEr0n6HtPXqZ4NRfPqXtYSjoVWswGb3iGr3GPOIHZ/OQ6Z6StL1NA=="
+    },
+    "union-value": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/union-value/-/union-value-1.0.1.tgz",
+      "integrity": "sha512-tJfXmxMeWYnczCVs7XAEvIV7ieppALdyepWMkHkwciRpZraG/xwT+s2JN8+pr1+8jCRf80FFzvr+MpQeeoF4Xg==",
+      "requires": {
+        "arr-union": "^3.1.0",
+        "get-value": "^2.0.6",
+        "is-extendable": "^0.1.1",
+        "set-value": "^2.0.1"
+      }
+    },
+    "uniq": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/uniq/-/uniq-1.0.1.tgz",
+      "integrity": "sha1-sxxa6CVIRKOoKBVBzisEuGWnNP8="
+    },
+    "uniqs": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/uniqs/-/uniqs-2.0.0.tgz",
+      "integrity": "sha1-/+3ks2slKQaW5uFl1KWe25mOawI="
+    },
+    "unique-filename": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/unique-filename/-/unique-filename-1.1.1.tgz",
+      "integrity": "sha512-Vmp0jIp2ln35UTXuryvjzkjGdRyf9b2lTXuSYUiPmzRcl3FDtYqAwOnTJkAngD9SWhnoJzDbTKwaOrZ+STtxNQ==",
+      "requires": {
+        "unique-slug": "^2.0.0"
+      }
+    },
+    "unique-slug": {
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/unique-slug/-/unique-slug-2.0.2.tgz",
+      "integrity": "sha512-zoWr9ObaxALD3DOPfjPSqxt4fnZiWblxHIgeWqW8x7UqDzEtHEQLzji2cuJYQFCU6KmoJikOYAZlrTHHebjx2w==",
+      "requires": {
+        "imurmurhash": "^0.1.4"
+      }
+    },
+    "universalify": {
+      "version": "0.1.2",
+      "resolved": "https://registry.npmjs.org/universalify/-/universalify-0.1.2.tgz",
+      "integrity": "sha512-rBJeI5CXAlmy1pV+617WB9J63U6XcazHHF2f2dbJix4XzpUF0RS3Zbj0FGIOCAva5P/d/GBOYaACQ1w+0azUkg=="
+    },
+    "unpipe": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz",
+      "integrity": "sha1-sr9O6FFKrmFltIF4KdIbLvSZBOw="
+    },
+    "unquote": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/unquote/-/unquote-1.1.1.tgz",
+      "integrity": "sha1-j97XMk7G6IoP+LkF58CYzcCG1UQ="
+    },
+    "unset-value": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/unset-value/-/unset-value-1.0.0.tgz",
+      "integrity": "sha1-g3aHP30jNRef+x5vw6jtDfyKtVk=",
+      "requires": {
+        "has-value": "^0.3.1",
+        "isobject": "^3.0.0"
+      },
+      "dependencies": {
+        "has-value": {
+          "version": "0.3.1",
+          "resolved": "https://registry.npmjs.org/has-value/-/has-value-0.3.1.tgz",
+          "integrity": "sha1-ex9YutpiyoJ+wKIHgCVlSEWZXh8=",
+          "requires": {
+            "get-value": "^2.0.3",
+            "has-values": "^0.1.4",
+            "isobject": "^2.0.0"
+          },
+          "dependencies": {
+            "isobject": {
+              "version": "2.1.0",
+              "resolved": "https://registry.npmjs.org/isobject/-/isobject-2.1.0.tgz",
+              "integrity": "sha1-8GVWEJaj8dou9GJy+BXIQNh+DIk=",
+              "requires": {
+                "isarray": "1.0.0"
+              }
+            }
+          }
+        },
+        "has-values": {
+          "version": "0.1.4",
+          "resolved": "https://registry.npmjs.org/has-values/-/has-values-0.1.4.tgz",
+          "integrity": "sha1-bWHeldkd/Km5oCCJrThL/49it3E="
+        }
+      }
+    },
+    "upath": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/upath/-/upath-1.2.0.tgz",
+      "integrity": "sha512-aZwGpamFO61g3OlfT7OQCHqhGnW43ieH9WZeP7QxN/G/jS4jfqUkZxoryvJgVPEcrl5NL/ggHsSmLMHuH64Lhg=="
+    },
+    "uri-js": {
+      "version": "4.2.2",
+      "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.2.2.tgz",
+      "integrity": "sha512-KY9Frmirql91X2Qgjry0Wd4Y+YTdrdZheS8TFwvkbLWf/G5KNJDCh6pKL5OZctEW4+0Baa5idK2ZQuELRwPznQ==",
+      "requires": {
+        "punycode": "^2.1.0"
+      }
+    },
+    "urix": {
+      "version": "0.1.0",
+      "resolved": "https://registry.npmjs.org/urix/-/urix-0.1.0.tgz",
+      "integrity": "sha1-2pN/emLiH+wf0Y1Js1wpNQZ6bHI="
+    },
+    "url": {
+      "version": "0.11.0",
+      "resolved": "https://registry.npmjs.org/url/-/url-0.11.0.tgz",
+      "integrity": "sha1-ODjpfPxgUh63PFJajlW/3Z4uKPE=",
+      "requires": {
+        "punycode": "1.3.2",
+        "querystring": "0.2.0"
+      },
+      "dependencies": {
+        "punycode": {
+          "version": "1.3.2",
+          "resolved": "https://registry.npmjs.org/punycode/-/punycode-1.3.2.tgz",
+          "integrity": "sha1-llOgNvt8HuQjQvIyXM7v6jkmxI0="
+        }
+      }
+    },
+    "url-loader": {
+      "version": "2.3.0",
+      "resolved": "https://registry.npmjs.org/url-loader/-/url-loader-2.3.0.tgz",
+      "integrity": "sha512-goSdg8VY+7nPZKUEChZSEtW5gjbS66USIGCeSJ1OVOJ7Yfuh/36YxCwMi5HVEJh6mqUYOoy3NJ0vlOMrWsSHog==",
+      "requires": {
+        "loader-utils": "^1.2.3",
+        "mime": "^2.4.4",
+        "schema-utils": "^2.5.0"
+      }
+    },
+    "url-parse": {
+      "version": "1.4.7",
+      "resolved": "https://registry.npmjs.org/url-parse/-/url-parse-1.4.7.tgz",
+      "integrity": "sha512-d3uaVyzDB9tQoSXFvuSUNFibTd9zxd2bkVrDRvF5TmvWWQwqE4lgYJ5m+x1DbecWkw+LK4RNl2CU1hHuOKPVlg==",
+      "requires": {
+        "querystringify": "^2.1.1",
+        "requires-port": "^1.0.0"
+      }
+    },
+    "use": {
+      "version": "3.1.1",
+      "resolved": "https://registry.npmjs.org/use/-/use-3.1.1.tgz",
+      "integrity": "sha512-cwESVXlO3url9YWlFW/TA9cshCEhtu7IKJ/p5soJ/gGpj7vbvFrAY/eIioQ6Dw23KjZhYgiIo8HOs1nQ2vr/oQ=="
+    },
+    "utf-8-validate": {
+      "version": "5.0.2",
+      "resolved": "https://registry.npmjs.org/utf-8-validate/-/utf-8-validate-5.0.2.tgz",
+      "integrity": "sha512-SwV++i2gTD5qh2XqaPzBnNX88N6HdyhQrNNRykvcS0QKvItV9u3vPEJr+X5Hhfb1JC0r0e1alL0iB09rY8+nmw==",
+      "optional": true,
+      "requires": {
+        "node-gyp-build": "~3.7.0"
+      }
+    },
+    "util": {
+      "version": "0.10.3",
+      "resolved": "https://registry.npmjs.org/util/-/util-0.10.3.tgz",
+      "integrity": "sha1-evsa/lCAUkZInj23/g7TeTNqwPk=",
+      "requires": {
+        "inherits": "2.0.1"
+      },
+      "dependencies": {
+        "inherits": {
+          "version": "2.0.1",
+          "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.1.tgz",
+          "integrity": "sha1-sX0I0ya0Qj5Wjv9xn5GwscvfafE="
+        }
+      }
+    },
+    "util-deprecate": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
+      "integrity": "sha1-RQ1Nyfpw3nMnYvvS1KKJgUGaDM8="
+    },
+    "util.promisify": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/util.promisify/-/util.promisify-1.0.1.tgz",
+      "integrity": "sha512-g9JpC/3He3bm38zsLupWryXHoEcS22YHthuPQSJdMy6KNrzIRzWqcsHzD/WUnqe45whVou4VIsPew37DoXWNrA==",
+      "requires": {
+        "define-properties": "^1.1.3",
+        "es-abstract": "^1.17.2",
+        "has-symbols": "^1.0.1",
+        "object.getownpropertydescriptors": "^2.1.0"
+      }
+    },
+    "utila": {
+      "version": "0.4.0",
+      "resolved": "https://registry.npmjs.org/utila/-/utila-0.4.0.tgz",
+      "integrity": "sha1-ihagXURWV6Oupe7MWxKk+lN5dyw="
+    },
+    "utils-merge": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz",
+      "integrity": "sha1-n5VxD1CiZ5R7LMwSR0HBAoQn5xM="
+    },
+    "uuid": {
+      "version": "3.4.0",
+      "resolved": "https://registry.npmjs.org/uuid/-/uuid-3.4.0.tgz",
+      "integrity": "sha512-HjSDRw6gZE5JMggctHBcjVak08+KEVhSIiDzFnT9S9aegmp85S/bReBVTb4QTFaRNptJ9kuYaNhnbNEOkbKb/A=="
+    },
+    "v8-compile-cache": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/v8-compile-cache/-/v8-compile-cache-2.1.0.tgz",
+      "integrity": "sha512-usZBT3PW+LOjM25wbqIlZwPeJV+3OSz3M1k1Ws8snlW39dZyYL9lOGC5FgPVHfk0jKmjiDV8Z0mIbVQPiwFs7g=="
+    },
+    "validate-npm-package-license": {
+      "version": "3.0.4",
+      "resolved": "https://registry.npmjs.org/validate-npm-package-license/-/validate-npm-package-license-3.0.4.tgz",
+      "integrity": "sha512-DpKm2Ui/xN7/HQKCtpZxoRWBhZ9Z0kqtygG8XCgNQ8ZlDnxuQmWhj566j8fN4Cu3/JmbhsDo7fcAJq4s9h27Ew==",
+      "requires": {
+        "spdx-correct": "^3.0.0",
+        "spdx-expression-parse": "^3.0.0"
+      }
+    },
+    "value-equal": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/value-equal/-/value-equal-1.0.1.tgz",
+      "integrity": "sha512-NOJ6JZCAWr0zlxZt+xqCHNTEKOsrks2HQd4MqhP1qy4z1SkbEP467eNx6TgDKXMvUOb+OENfJCZwM+16n7fRfw=="
+    },
+    "vary": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/vary/-/vary-1.1.2.tgz",
+      "integrity": "sha1-IpnwLG3tMNSllhsLn3RSShj2NPw="
+    },
+    "vendors": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/vendors/-/vendors-1.0.4.tgz",
+      "integrity": "sha512-/juG65kTL4Cy2su4P8HjtkTxk6VmJDiOPBufWniqQ6wknac6jNiXS9vU+hO3wgusiyqWlzTbVHi0dyJqRONg3w=="
+    },
+    "verror": {
+      "version": "1.10.0",
+      "resolved": "https://registry.npmjs.org/verror/-/verror-1.10.0.tgz",
+      "integrity": "sha1-OhBcoXBTr1XW4nDB+CiGguGNpAA=",
+      "requires": {
+        "assert-plus": "^1.0.0",
+        "core-util-is": "1.0.2",
+        "extsprintf": "^1.2.0"
+      }
+    },
+    "vlq": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/vlq/-/vlq-1.0.1.tgz",
+      "integrity": "sha512-gQpnTgkubC6hQgdIcRdYGDSDc+SaujOdyesZQMv6JlfQee/9Mp0Qhnys6WxDWvQnL5WZdT7o2Ul187aSt0Rq+w=="
+    },
+    "vm-browserify": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/vm-browserify/-/vm-browserify-1.1.2.tgz",
+      "integrity": "sha512-2ham8XPWTONajOR0ohOKOHXkm3+gaBmGut3SRuu75xLd/RRaY6vqgh8NBYYk7+RW3u5AtzPQZG8F10LHkl0lAQ=="
+    },
+    "w3c-hr-time": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/w3c-hr-time/-/w3c-hr-time-1.0.2.tgz",
+      "integrity": "sha512-z8P5DvDNjKDoFIHK7q8r8lackT6l+jo/Ye3HOle7l9nICP9lf1Ci25fy9vHd0JOWewkIFzXIEig3TdKT7JQ5fQ==",
+      "requires": {
+        "browser-process-hrtime": "^1.0.0"
+      }
+    },
+    "w3c-xmlserializer": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/w3c-xmlserializer/-/w3c-xmlserializer-1.1.2.tgz",
+      "integrity": "sha512-p10l/ayESzrBMYWRID6xbuCKh2Fp77+sA0doRuGn4tTIMrrZVeqfpKjXHY+oDh3K4nLdPgNwMTVP6Vp4pvqbNg==",
+      "requires": {
+        "domexception": "^1.0.1",
+        "webidl-conversions": "^4.0.2",
+        "xml-name-validator": "^3.0.0"
+      }
+    },
+    "wait-for-expect": {
+      "version": "3.0.2",
+      "resolved": "https://registry.npmjs.org/wait-for-expect/-/wait-for-expect-3.0.2.tgz",
+      "integrity": "sha512-cfS1+DZxuav1aBYbaO/kE06EOS8yRw7qOFoD3XtjTkYvCvh3zUvNST8DXK/nPaeqIzIv3P3kL3lRJn8iwOiSag=="
+    },
+    "walker": {
+      "version": "1.0.7",
+      "resolved": "https://registry.npmjs.org/walker/-/walker-1.0.7.tgz",
+      "integrity": "sha1-L3+bj9ENZ3JisYqITijRlhjgKPs=",
+      "requires": {
+        "makeerror": "1.0.x"
+      }
+    },
+    "warning": {
+      "version": "4.0.3",
+      "resolved": "https://registry.npmjs.org/warning/-/warning-4.0.3.tgz",
+      "integrity": "sha512-rpJyN222KWIvHJ/F53XSZv0Zl/accqHR8et1kpaMTD/fLCRxtV8iX8czMzY7sVZupTI3zcUTg8eycS2kNF9l6w==",
+      "requires": {
+        "loose-envify": "^1.0.0"
+      }
+    },
+    "watchpack": {
+      "version": "1.6.1",
+      "resolved": "https://registry.npmjs.org/watchpack/-/watchpack-1.6.1.tgz",
+      "integrity": "sha512-+IF9hfUFOrYOOaKyfaI7h7dquUIOgyEMoQMLA7OP5FxegKA2+XdXThAZ9TU2kucfhDH7rfMHs1oPYziVGWRnZA==",
+      "requires": {
+        "chokidar": "^2.1.8",
+        "graceful-fs": "^4.1.2",
+        "neo-async": "^2.5.0"
+      },
+      "dependencies": {
+        "binary-extensions": {
+          "version": "1.13.1",
+          "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-1.13.1.tgz",
+          "integrity": "sha512-Un7MIEDdUC5gNpcGDV97op1Ywk748MpHcFTHoYs6qnj1Z3j7I53VG3nwZhKzoBZmbdRNnb6WRdFlwl7tSDuZGw=="
+        },
+        "chokidar": {
+          "version": "2.1.8",
+          "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-2.1.8.tgz",
+          "integrity": "sha512-ZmZUazfOzf0Nve7duiCKD23PFSCs4JPoYyccjUFF3aQkQadqBhfzhjkwBH2mNOG9cTBwhamM37EIsIkZw3nRgg==",
+          "requires": {
+            "anymatch": "^2.0.0",
+            "async-each": "^1.0.1",
+            "braces": "^2.3.2",
+            "fsevents": "^1.2.7",
+            "glob-parent": "^3.1.0",
+            "inherits": "^2.0.3",
+            "is-binary-path": "^1.0.0",
+            "is-glob": "^4.0.0",
+            "normalize-path": "^3.0.0",
+            "path-is-absolute": "^1.0.0",
+            "readdirp": "^2.2.1",
+            "upath": "^1.1.1"
+          }
+        },
+        "fsevents": {
+          "version": "1.2.12",
+          "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-1.2.12.tgz",
+          "integrity": "sha512-Ggd/Ktt7E7I8pxZRbGIs7vwqAPscSESMrCSkx2FtWeqmheJgCo2R74fTsZFCifr0VTPwqRpPv17+6b8Zp7th0Q==",
+          "optional": true,
+          "requires": {
+            "bindings": "^1.5.0",
+            "nan": "^2.12.1",
+            "node-pre-gyp": "*"
+          },
+          "dependencies": {
+            "abbrev": {
+              "version": "1.1.1",
+              "bundled": true,
+              "optional": true
+            },
+            "ansi-regex": {
+              "version": "2.1.1",
+              "bundled": true,
+              "optional": true
+            },
+            "aproba": {
+              "version": "1.2.0",
+              "bundled": true,
+              "optional": true
+            },
+            "are-we-there-yet": {
+              "version": "1.1.5",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "delegates": "^1.0.0",
+                "readable-stream": "^2.0.6"
+              }
+            },
+            "balanced-match": {
+              "version": "1.0.0",
+              "bundled": true,
+              "optional": true
+            },
+            "brace-expansion": {
+              "version": "1.1.11",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "balanced-match": "^1.0.0",
+                "concat-map": "0.0.1"
+              }
+            },
+            "chownr": {
+              "version": "1.1.4",
+              "bundled": true,
+              "optional": true
+            },
+            "code-point-at": {
+              "version": "1.1.0",
+              "bundled": true,
+              "optional": true
+            },
+            "concat-map": {
+              "version": "0.0.1",
+              "bundled": true,
+              "optional": true
+            },
+            "console-control-strings": {
+              "version": "1.1.0",
+              "bundled": true,
+              "optional": true
+            },
+            "core-util-is": {
+              "version": "1.0.2",
+              "bundled": true,
+              "optional": true
+            },
+            "debug": {
+              "version": "3.2.6",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "ms": "^2.1.1"
+              }
+            },
+            "deep-extend": {
+              "version": "0.6.0",
+              "bundled": true,
+              "optional": true
+            },
+            "delegates": {
+              "version": "1.0.0",
+              "bundled": true,
+              "optional": true
+            },
+            "detect-libc": {
+              "version": "1.0.3",
+              "bundled": true,
+              "optional": true
+            },
+            "fs-minipass": {
+              "version": "1.2.7",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "minipass": "^2.6.0"
+              }
+            },
+            "fs.realpath": {
+              "version": "1.0.0",
+              "bundled": true,
+              "optional": true
+            },
+            "gauge": {
+              "version": "2.7.4",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "aproba": "^1.0.3",
+                "console-control-strings": "^1.0.0",
+                "has-unicode": "^2.0.0",
+                "object-assign": "^4.1.0",
+                "signal-exit": "^3.0.0",
+                "string-width": "^1.0.1",
+                "strip-ansi": "^3.0.1",
+                "wide-align": "^1.1.0"
+              }
+            },
+            "glob": {
+              "version": "7.1.6",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "fs.realpath": "^1.0.0",
+                "inflight": "^1.0.4",
+                "inherits": "2",
+                "minimatch": "^3.0.4",
+                "once": "^1.3.0",
+                "path-is-absolute": "^1.0.0"
+              }
+            },
+            "has-unicode": {
+              "version": "2.0.1",
+              "bundled": true,
+              "optional": true
+            },
+            "iconv-lite": {
+              "version": "0.4.24",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "safer-buffer": ">= 2.1.2 < 3"
+              }
+            },
+            "ignore-walk": {
+              "version": "3.0.3",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "minimatch": "^3.0.4"
+              }
+            },
+            "inflight": {
+              "version": "1.0.6",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "once": "^1.3.0",
+                "wrappy": "1"
+              }
+            },
+            "inherits": {
+              "version": "2.0.4",
+              "bundled": true,
+              "optional": true
+            },
+            "ini": {
+              "version": "1.3.5",
+              "bundled": true,
+              "optional": true
+            },
+            "is-fullwidth-code-point": {
+              "version": "1.0.0",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "number-is-nan": "^1.0.0"
+              }
+            },
+            "isarray": {
+              "version": "1.0.0",
+              "bundled": true,
+              "optional": true
+            },
+            "minimatch": {
+              "version": "3.0.4",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "brace-expansion": "^1.1.7"
+              }
+            },
+            "minimist": {
+              "version": "1.2.5",
+              "bundled": true,
+              "optional": true
+            },
+            "minipass": {
+              "version": "2.9.0",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "safe-buffer": "^5.1.2",
+                "yallist": "^3.0.0"
+              }
+            },
+            "minizlib": {
+              "version": "1.3.3",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "minipass": "^2.9.0"
+              }
+            },
+            "mkdirp": {
+              "version": "0.5.3",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "minimist": "^1.2.5"
+              }
+            },
+            "ms": {
+              "version": "2.1.2",
+              "bundled": true,
+              "optional": true
+            },
+            "needle": {
+              "version": "2.3.3",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "debug": "^3.2.6",
+                "iconv-lite": "^0.4.4",
+                "sax": "^1.2.4"
+              }
+            },
+            "node-pre-gyp": {
+              "version": "0.14.0",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "detect-libc": "^1.0.2",
+                "mkdirp": "^0.5.1",
+                "needle": "^2.2.1",
+                "nopt": "^4.0.1",
+                "npm-packlist": "^1.1.6",
+                "npmlog": "^4.0.2",
+                "rc": "^1.2.7",
+                "rimraf": "^2.6.1",
+                "semver": "^5.3.0",
+                "tar": "^4.4.2"
+              }
+            },
+            "nopt": {
+              "version": "4.0.3",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "abbrev": "1",
+                "osenv": "^0.1.4"
+              }
+            },
+            "npm-bundled": {
+              "version": "1.1.1",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "npm-normalize-package-bin": "^1.0.1"
+              }
+            },
+            "npm-normalize-package-bin": {
+              "version": "1.0.1",
+              "bundled": true,
+              "optional": true
+            },
+            "npm-packlist": {
+              "version": "1.4.8",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "ignore-walk": "^3.0.1",
+                "npm-bundled": "^1.0.1",
+                "npm-normalize-package-bin": "^1.0.1"
+              }
+            },
+            "npmlog": {
+              "version": "4.1.2",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "are-we-there-yet": "~1.1.2",
+                "console-control-strings": "~1.1.0",
+                "gauge": "~2.7.3",
+                "set-blocking": "~2.0.0"
+              }
+            },
+            "number-is-nan": {
+              "version": "1.0.1",
+              "bundled": true,
+              "optional": true
+            },
+            "object-assign": {
+              "version": "4.1.1",
+              "bundled": true,
+              "optional": true
+            },
+            "once": {
+              "version": "1.4.0",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "wrappy": "1"
+              }
+            },
+            "os-homedir": {
+              "version": "1.0.2",
+              "bundled": true,
+              "optional": true
+            },
+            "os-tmpdir": {
+              "version": "1.0.2",
+              "bundled": true,
+              "optional": true
+            },
+            "osenv": {
+              "version": "0.1.5",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "os-homedir": "^1.0.0",
+                "os-tmpdir": "^1.0.0"
+              }
+            },
+            "path-is-absolute": {
+              "version": "1.0.1",
+              "bundled": true,
+              "optional": true
+            },
+            "process-nextick-args": {
+              "version": "2.0.1",
+              "bundled": true,
+              "optional": true
+            },
+            "rc": {
+              "version": "1.2.8",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "deep-extend": "^0.6.0",
+                "ini": "~1.3.0",
+                "minimist": "^1.2.0",
+                "strip-json-comments": "~2.0.1"
+              }
+            },
+            "readable-stream": {
+              "version": "2.3.7",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "core-util-is": "~1.0.0",
+                "inherits": "~2.0.3",
+                "isarray": "~1.0.0",
+                "process-nextick-args": "~2.0.0",
+                "safe-buffer": "~5.1.1",
+                "string_decoder": "~1.1.1",
+                "util-deprecate": "~1.0.1"
+              }
+            },
+            "rimraf": {
+              "version": "2.7.1",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "glob": "^7.1.3"
+              }
+            },
+            "safe-buffer": {
+              "version": "5.1.2",
+              "bundled": true,
+              "optional": true
+            },
+            "safer-buffer": {
+              "version": "2.1.2",
+              "bundled": true,
+              "optional": true
+            },
+            "sax": {
+              "version": "1.2.4",
+              "bundled": true,
+              "optional": true
+            },
+            "semver": {
+              "version": "5.7.1",
+              "bundled": true,
+              "optional": true
+            },
+            "set-blocking": {
+              "version": "2.0.0",
+              "bundled": true,
+              "optional": true
+            },
+            "signal-exit": {
+              "version": "3.0.2",
+              "bundled": true,
+              "optional": true
+            },
+            "string-width": {
+              "version": "1.0.2",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "code-point-at": "^1.0.0",
+                "is-fullwidth-code-point": "^1.0.0",
+                "strip-ansi": "^3.0.0"
+              }
+            },
+            "string_decoder": {
+              "version": "1.1.1",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "safe-buffer": "~5.1.0"
+              }
+            },
+            "strip-ansi": {
+              "version": "3.0.1",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "ansi-regex": "^2.0.0"
+              }
+            },
+            "strip-json-comments": {
+              "version": "2.0.1",
+              "bundled": true,
+              "optional": true
+            },
+            "tar": {
+              "version": "4.4.13",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "chownr": "^1.1.1",
+                "fs-minipass": "^1.2.5",
+                "minipass": "^2.8.6",
+                "minizlib": "^1.2.1",
+                "mkdirp": "^0.5.0",
+                "safe-buffer": "^5.1.2",
+                "yallist": "^3.0.3"
+              }
+            },
+            "util-deprecate": {
+              "version": "1.0.2",
+              "bundled": true,
+              "optional": true
+            },
+            "wide-align": {
+              "version": "1.1.3",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "string-width": "^1.0.2 || 2"
+              }
+            },
+            "wrappy": {
+              "version": "1.0.2",
+              "bundled": true,
+              "optional": true
+            },
+            "yallist": {
+              "version": "3.1.1",
+              "bundled": true,
+              "optional": true
+            }
+          }
+        },
+        "glob-parent": {
+          "version": "3.1.0",
+          "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-3.1.0.tgz",
+          "integrity": "sha1-nmr2KZ2NO9K9QEMIMr0RPfkGxa4=",
+          "requires": {
+            "is-glob": "^3.1.0",
+            "path-dirname": "^1.0.0"
+          },
+          "dependencies": {
+            "is-glob": {
+              "version": "3.1.0",
+              "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-3.1.0.tgz",
+              "integrity": "sha1-e6WuJCF4BKxwcHuWkiVnSGzD6Eo=",
+              "requires": {
+                "is-extglob": "^2.1.0"
+              }
+            }
+          }
+        },
+        "is-binary-path": {
+          "version": "1.0.1",
+          "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-1.0.1.tgz",
+          "integrity": "sha1-dfFmQrSA8YenEcgUFh/TpKdlWJg=",
+          "requires": {
+            "binary-extensions": "^1.0.0"
+          }
+        },
+        "normalize-path": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",
+          "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA=="
+        },
+        "readable-stream": {
+          "version": "2.3.7",
+          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
+          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
+          "requires": {
+            "core-util-is": "~1.0.0",
+            "inherits": "~2.0.3",
+            "isarray": "~1.0.0",
+            "process-nextick-args": "~2.0.0",
+            "safe-buffer": "~5.1.1",
+            "string_decoder": "~1.1.1",
+            "util-deprecate": "~1.0.1"
+          }
+        },
+        "readdirp": {
+          "version": "2.2.1",
+          "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-2.2.1.tgz",
+          "integrity": "sha512-1JU/8q+VgFZyxwrJ+SVIOsh+KywWGpds3NTqikiKpDMZWScmAYyKIgqkO+ARvNWJfXeXR1zxz7aHF4u4CyH6vQ==",
+          "requires": {
+            "graceful-fs": "^4.1.11",
+            "micromatch": "^3.1.10",
+            "readable-stream": "^2.0.2"
+          }
+        },
+        "string_decoder": {
+          "version": "1.1.1",
+          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
+          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
+          "requires": {
+            "safe-buffer": "~5.1.0"
+          }
+        }
+      }
+    },
+    "wbuf": {
+      "version": "1.7.3",
+      "resolved": "https://registry.npmjs.org/wbuf/-/wbuf-1.7.3.tgz",
+      "integrity": "sha512-O84QOnr0icsbFGLS0O3bI5FswxzRr8/gHwWkDlQFskhSPryQXvrTMxjxGP4+iWYoauLoBvfDpkrOauZ+0iZpDA==",
+      "requires": {
+        "minimalistic-assert": "^1.0.0"
+      }
+    },
+    "wcwidth": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/wcwidth/-/wcwidth-1.0.1.tgz",
+      "integrity": "sha1-8LDc+RW8X/FSivrbLA4XtTLaL+g=",
+      "requires": {
+        "defaults": "^1.0.3"
+      }
+    },
+    "webidl-conversions": {
+      "version": "4.0.2",
+      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-4.0.2.tgz",
+      "integrity": "sha512-YQ+BmxuTgd6UXZW3+ICGfyqRyHXVlD5GtQr5+qjiNW7bF0cqrzX500HVXPBOvgXb5YnzDd+h0zqyv61KUD7+Sg=="
+    },
+    "webpack": {
+      "version": "4.42.0",
+      "resolved": "https://registry.npmjs.org/webpack/-/webpack-4.42.0.tgz",
+      "integrity": "sha512-EzJRHvwQyBiYrYqhyjW9AqM90dE4+s1/XtCfn7uWg6cS72zH+2VPFAlsnW0+W0cDi0XRjNKUMoJtpSi50+Ph6w==",
+      "requires": {
+        "@webassemblyjs/ast": "1.8.5",
+        "@webassemblyjs/helper-module-context": "1.8.5",
+        "@webassemblyjs/wasm-edit": "1.8.5",
+        "@webassemblyjs/wasm-parser": "1.8.5",
+        "acorn": "^6.2.1",
+        "ajv": "^6.10.2",
+        "ajv-keywords": "^3.4.1",
+        "chrome-trace-event": "^1.0.2",
+        "enhanced-resolve": "^4.1.0",
+        "eslint-scope": "^4.0.3",
+        "json-parse-better-errors": "^1.0.2",
+        "loader-runner": "^2.4.0",
+        "loader-utils": "^1.2.3",
+        "memory-fs": "^0.4.1",
+        "micromatch": "^3.1.10",
+        "mkdirp": "^0.5.1",
+        "neo-async": "^2.6.1",
+        "node-libs-browser": "^2.2.1",
+        "schema-utils": "^1.0.0",
+        "tapable": "^1.1.3",
+        "terser-webpack-plugin": "^1.4.3",
+        "watchpack": "^1.6.0",
+        "webpack-sources": "^1.4.1"
+      },
+      "dependencies": {
+        "acorn": {
+          "version": "6.4.1",
+          "resolved": "https://registry.npmjs.org/acorn/-/acorn-6.4.1.tgz",
+          "integrity": "sha512-ZVA9k326Nwrj3Cj9jlh3wGFutC2ZornPNARZwsNYqQYgN0EsV2d53w5RN/co65Ohn4sUAUtb1rSUAOD6XN9idA=="
+        },
+        "cacache": {
+          "version": "12.0.4",
+          "resolved": "https://registry.npmjs.org/cacache/-/cacache-12.0.4.tgz",
+          "integrity": "sha512-a0tMB40oefvuInr4Cwb3GerbL9xTj1D5yg0T5xrjGCGyfvbxseIXX7BAO/u/hIXdafzOI5JC3wDwHyf24buOAQ==",
+          "requires": {
+            "bluebird": "^3.5.5",
+            "chownr": "^1.1.1",
+            "figgy-pudding": "^3.5.1",
+            "glob": "^7.1.4",
+            "graceful-fs": "^4.1.15",
+            "infer-owner": "^1.0.3",
+            "lru-cache": "^5.1.1",
+            "mississippi": "^3.0.0",
+            "mkdirp": "^0.5.1",
+            "move-concurrently": "^1.0.1",
+            "promise-inflight": "^1.0.1",
+            "rimraf": "^2.6.3",
+            "ssri": "^6.0.1",
+            "unique-filename": "^1.1.1",
+            "y18n": "^4.0.0"
+          }
+        },
+        "eslint-scope": {
+          "version": "4.0.3",
+          "resolved": "https://registry.npmjs.org/eslint-scope/-/eslint-scope-4.0.3.tgz",
+          "integrity": "sha512-p7VutNr1O/QrxysMo3E45FjYDTeXBy0iTltPFNSqKAIfjDSXC+4dj+qfyuD8bfAXrW/y6lW3O76VaYNPKfpKrg==",
+          "requires": {
+            "esrecurse": "^4.1.0",
+            "estraverse": "^4.1.1"
+          }
+        },
+        "schema-utils": {
+          "version": "1.0.0",
+          "resolved": "https://registry.npmjs.org/schema-utils/-/schema-utils-1.0.0.tgz",
+          "integrity": "sha512-i27Mic4KovM/lnGsy8whRCHhc7VicJajAjTrYg11K9zfZXnYIt4k5F+kZkwjnrhKzLic/HLU4j11mjsz2G/75g==",
+          "requires": {
+            "ajv": "^6.1.0",
+            "ajv-errors": "^1.0.0",
+            "ajv-keywords": "^3.1.0"
+          }
+        },
+        "source-map": {
+          "version": "0.6.1",
+          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
+          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="
+        },
+        "ssri": {
+          "version": "6.0.1",
+          "resolved": "https://registry.npmjs.org/ssri/-/ssri-6.0.1.tgz",
+          "integrity": "sha512-3Wge10hNcT1Kur4PDFwEieXSCMCJs/7WvSACcrMYrNp+b8kDL1/0wJch5Ni2WrtwEa2IO8OsVfeKIciKCDx/QA==",
+          "requires": {
+            "figgy-pudding": "^3.5.1"
+          }
+        },
+        "terser-webpack-plugin": {
+          "version": "1.4.3",
+          "resolved": "https://registry.npmjs.org/terser-webpack-plugin/-/terser-webpack-plugin-1.4.3.tgz",
+          "integrity": "sha512-QMxecFz/gHQwteWwSo5nTc6UaICqN1bMedC5sMtUc7y3Ha3Q8y6ZO0iCR8pq4RJC8Hjf0FEPEHZqcMB/+DFCrA==",
+          "requires": {
+            "cacache": "^12.0.2",
+            "find-cache-dir": "^2.1.0",
+            "is-wsl": "^1.1.0",
+            "schema-utils": "^1.0.0",
+            "serialize-javascript": "^2.1.2",
+            "source-map": "^0.6.1",
+            "terser": "^4.1.2",
+            "webpack-sources": "^1.4.0",
+            "worker-farm": "^1.7.0"
+          }
+        }
+      }
+    },
+    "webpack-dev-middleware": {
+      "version": "3.7.2",
+      "resolved": "https://registry.npmjs.org/webpack-dev-middleware/-/webpack-dev-middleware-3.7.2.tgz",
+      "integrity": "sha512-1xC42LxbYoqLNAhV6YzTYacicgMZQTqRd27Sim9wn5hJrX3I5nxYy1SxSd4+gjUFsz1dQFj+yEe6zEVmSkeJjw==",
+      "requires": {
+        "memory-fs": "^0.4.1",
+        "mime": "^2.4.4",
+        "mkdirp": "^0.5.1",
+        "range-parser": "^1.2.1",
+        "webpack-log": "^2.0.0"
+      }
+    },
+    "webpack-dev-server": {
+      "version": "3.10.3",
+      "resolved": "https://registry.npmjs.org/webpack-dev-server/-/webpack-dev-server-3.10.3.tgz",
+      "integrity": "sha512-e4nWev8YzEVNdOMcNzNeCN947sWJNd43E5XvsJzbAL08kGc2frm1tQ32hTJslRS+H65LCb/AaUCYU7fjHCpDeQ==",
+      "requires": {
+        "ansi-html": "0.0.7",
+        "bonjour": "^3.5.0",
+        "chokidar": "^2.1.8",
+        "compression": "^1.7.4",
+        "connect-history-api-fallback": "^1.6.0",
+        "debug": "^4.1.1",
+        "del": "^4.1.1",
+        "express": "^4.17.1",
+        "html-entities": "^1.2.1",
+        "http-proxy-middleware": "0.19.1",
+        "import-local": "^2.0.0",
+        "internal-ip": "^4.3.0",
+        "ip": "^1.1.5",
+        "is-absolute-url": "^3.0.3",
+        "killable": "^1.0.1",
+        "loglevel": "^1.6.6",
+        "opn": "^5.5.0",
+        "p-retry": "^3.0.1",
+        "portfinder": "^1.0.25",
+        "schema-utils": "^1.0.0",
+        "selfsigned": "^1.10.7",
+        "semver": "^6.3.0",
+        "serve-index": "^1.9.1",
+        "sockjs": "0.3.19",
+        "sockjs-client": "1.4.0",
+        "spdy": "^4.0.1",
+        "strip-ansi": "^3.0.1",
+        "supports-color": "^6.1.0",
+        "url": "^0.11.0",
+        "webpack-dev-middleware": "^3.7.2",
+        "webpack-log": "^2.0.0",
+        "ws": "^6.2.1",
+        "yargs": "12.0.5"
+      },
+      "dependencies": {
+        "ansi-regex": {
+          "version": "2.1.1",
+          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",
+          "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8="
+        },
+        "binary-extensions": {
+          "version": "1.13.1",
+          "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-1.13.1.tgz",
+          "integrity": "sha512-Un7MIEDdUC5gNpcGDV97op1Ywk748MpHcFTHoYs6qnj1Z3j7I53VG3nwZhKzoBZmbdRNnb6WRdFlwl7tSDuZGw=="
+        },
+        "chokidar": {
+          "version": "2.1.8",
+          "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-2.1.8.tgz",
+          "integrity": "sha512-ZmZUazfOzf0Nve7duiCKD23PFSCs4JPoYyccjUFF3aQkQadqBhfzhjkwBH2mNOG9cTBwhamM37EIsIkZw3nRgg==",
+          "requires": {
+            "anymatch": "^2.0.0",
+            "async-each": "^1.0.1",
+            "braces": "^2.3.2",
+            "fsevents": "^1.2.7",
+            "glob-parent": "^3.1.0",
+            "inherits": "^2.0.3",
+            "is-binary-path": "^1.0.0",
+            "is-glob": "^4.0.0",
+            "normalize-path": "^3.0.0",
+            "path-is-absolute": "^1.0.0",
+            "readdirp": "^2.2.1",
+            "upath": "^1.1.1"
+          }
+        },
+        "cliui": {
+          "version": "4.1.0",
+          "resolved": "https://registry.npmjs.org/cliui/-/cliui-4.1.0.tgz",
+          "integrity": "sha512-4FG+RSG9DL7uEwRUZXZn3SS34DiDPfzP0VOiEwtUWlE+AR2EIg+hSyvrIgUUfhdgR/UkAeW2QHgeP+hWrXs7jQ==",
+          "requires": {
+            "string-width": "^2.1.1",
+            "strip-ansi": "^4.0.0",
+            "wrap-ansi": "^2.0.0"
+          },
+          "dependencies": {
+            "ansi-regex": {
+              "version": "3.0.0",
+              "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz",
+              "integrity": "sha1-7QMXwyIGT3lGbAKWa922Bas32Zg="
+            },
+            "strip-ansi": {
+              "version": "4.0.0",
+              "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",
+              "integrity": "sha1-qEeQIusaw2iocTibY1JixQXuNo8=",
+              "requires": {
+                "ansi-regex": "^3.0.0"
+              }
+            }
+          }
+        },
+        "find-up": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/find-up/-/find-up-3.0.0.tgz",
+          "integrity": "sha512-1yD6RmLI1XBfxugvORwlck6f75tYL+iR0jqwsOrOxMZyGYqUuDhJ0l4AXdO1iX/FTs9cBAMEk1gWSEx1kSbylg==",
+          "requires": {
+            "locate-path": "^3.0.0"
+          }
+        },
+        "fsevents": {
+          "version": "1.2.12",
+          "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-1.2.12.tgz",
+          "integrity": "sha512-Ggd/Ktt7E7I8pxZRbGIs7vwqAPscSESMrCSkx2FtWeqmheJgCo2R74fTsZFCifr0VTPwqRpPv17+6b8Zp7th0Q==",
+          "optional": true,
+          "requires": {
+            "bindings": "^1.5.0",
+            "nan": "^2.12.1",
+            "node-pre-gyp": "*"
+          },
+          "dependencies": {
+            "abbrev": {
+              "version": "1.1.1",
+              "bundled": true,
+              "optional": true
+            },
+            "ansi-regex": {
+              "version": "2.1.1",
+              "bundled": true,
+              "optional": true
+            },
+            "aproba": {
+              "version": "1.2.0",
+              "bundled": true,
+              "optional": true
+            },
+            "are-we-there-yet": {
+              "version": "1.1.5",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "delegates": "^1.0.0",
+                "readable-stream": "^2.0.6"
+              }
+            },
+            "balanced-match": {
+              "version": "1.0.0",
+              "bundled": true,
+              "optional": true
+            },
+            "brace-expansion": {
+              "version": "1.1.11",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "balanced-match": "^1.0.0",
+                "concat-map": "0.0.1"
+              }
+            },
+            "chownr": {
+              "version": "1.1.4",
+              "bundled": true,
+              "optional": true
+            },
+            "code-point-at": {
+              "version": "1.1.0",
+              "bundled": true,
+              "optional": true
+            },
+            "concat-map": {
+              "version": "0.0.1",
+              "bundled": true,
+              "optional": true
+            },
+            "console-control-strings": {
+              "version": "1.1.0",
+              "bundled": true,
+              "optional": true
+            },
+            "core-util-is": {
+              "version": "1.0.2",
+              "bundled": true,
+              "optional": true
+            },
+            "debug": {
+              "version": "3.2.6",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "ms": "^2.1.1"
+              }
+            },
+            "deep-extend": {
+              "version": "0.6.0",
+              "bundled": true,
+              "optional": true
+            },
+            "delegates": {
+              "version": "1.0.0",
+              "bundled": true,
+              "optional": true
+            },
+            "detect-libc": {
+              "version": "1.0.3",
+              "bundled": true,
+              "optional": true
+            },
+            "fs-minipass": {
+              "version": "1.2.7",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "minipass": "^2.6.0"
+              }
+            },
+            "fs.realpath": {
+              "version": "1.0.0",
+              "bundled": true,
+              "optional": true
+            },
+            "gauge": {
+              "version": "2.7.4",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "aproba": "^1.0.3",
+                "console-control-strings": "^1.0.0",
+                "has-unicode": "^2.0.0",
+                "object-assign": "^4.1.0",
+                "signal-exit": "^3.0.0",
+                "string-width": "^1.0.1",
+                "strip-ansi": "^3.0.1",
+                "wide-align": "^1.1.0"
+              }
+            },
+            "glob": {
+              "version": "7.1.6",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "fs.realpath": "^1.0.0",
+                "inflight": "^1.0.4",
+                "inherits": "2",
+                "minimatch": "^3.0.4",
+                "once": "^1.3.0",
+                "path-is-absolute": "^1.0.0"
+              }
+            },
+            "has-unicode": {
+              "version": "2.0.1",
+              "bundled": true,
+              "optional": true
+            },
+            "iconv-lite": {
+              "version": "0.4.24",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "safer-buffer": ">= 2.1.2 < 3"
+              }
+            },
+            "ignore-walk": {
+              "version": "3.0.3",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "minimatch": "^3.0.4"
+              }
+            },
+            "inflight": {
+              "version": "1.0.6",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "once": "^1.3.0",
+                "wrappy": "1"
+              }
+            },
+            "inherits": {
+              "version": "2.0.4",
+              "bundled": true,
+              "optional": true
+            },
+            "ini": {
+              "version": "1.3.5",
+              "bundled": true,
+              "optional": true
+            },
+            "is-fullwidth-code-point": {
+              "version": "1.0.0",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "number-is-nan": "^1.0.0"
+              }
+            },
+            "isarray": {
+              "version": "1.0.0",
+              "bundled": true,
+              "optional": true
+            },
+            "minimatch": {
+              "version": "3.0.4",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "brace-expansion": "^1.1.7"
+              }
+            },
+            "minimist": {
+              "version": "1.2.5",
+              "bundled": true,
+              "optional": true
+            },
+            "minipass": {
+              "version": "2.9.0",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "safe-buffer": "^5.1.2",
+                "yallist": "^3.0.0"
+              }
+            },
+            "minizlib": {
+              "version": "1.3.3",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "minipass": "^2.9.0"
+              }
+            },
+            "mkdirp": {
+              "version": "0.5.3",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "minimist": "^1.2.5"
+              }
+            },
+            "ms": {
+              "version": "2.1.2",
+              "bundled": true,
+              "optional": true
+            },
+            "needle": {
+              "version": "2.3.3",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "debug": "^3.2.6",
+                "iconv-lite": "^0.4.4",
+                "sax": "^1.2.4"
+              }
+            },
+            "node-pre-gyp": {
+              "version": "0.14.0",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "detect-libc": "^1.0.2",
+                "mkdirp": "^0.5.1",
+                "needle": "^2.2.1",
+                "nopt": "^4.0.1",
+                "npm-packlist": "^1.1.6",
+                "npmlog": "^4.0.2",
+                "rc": "^1.2.7",
+                "rimraf": "^2.6.1",
+                "semver": "^5.3.0",
+                "tar": "^4.4.2"
+              }
+            },
+            "nopt": {
+              "version": "4.0.3",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "abbrev": "1",
+                "osenv": "^0.1.4"
+              }
+            },
+            "npm-bundled": {
+              "version": "1.1.1",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "npm-normalize-package-bin": "^1.0.1"
+              }
+            },
+            "npm-normalize-package-bin": {
+              "version": "1.0.1",
+              "bundled": true,
+              "optional": true
+            },
+            "npm-packlist": {
+              "version": "1.4.8",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "ignore-walk": "^3.0.1",
+                "npm-bundled": "^1.0.1",
+                "npm-normalize-package-bin": "^1.0.1"
+              }
+            },
+            "npmlog": {
+              "version": "4.1.2",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "are-we-there-yet": "~1.1.2",
+                "console-control-strings": "~1.1.0",
+                "gauge": "~2.7.3",
+                "set-blocking": "~2.0.0"
+              }
+            },
+            "number-is-nan": {
+              "version": "1.0.1",
+              "bundled": true,
+              "optional": true
+            },
+            "object-assign": {
+              "version": "4.1.1",
+              "bundled": true,
+              "optional": true
+            },
+            "once": {
+              "version": "1.4.0",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "wrappy": "1"
+              }
+            },
+            "os-homedir": {
+              "version": "1.0.2",
+              "bundled": true,
+              "optional": true
+            },
+            "os-tmpdir": {
+              "version": "1.0.2",
+              "bundled": true,
+              "optional": true
+            },
+            "osenv": {
+              "version": "0.1.5",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "os-homedir": "^1.0.0",
+                "os-tmpdir": "^1.0.0"
+              }
+            },
+            "path-is-absolute": {
+              "version": "1.0.1",
+              "bundled": true,
+              "optional": true
+            },
+            "process-nextick-args": {
+              "version": "2.0.1",
+              "bundled": true,
+              "optional": true
+            },
+            "rc": {
+              "version": "1.2.8",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "deep-extend": "^0.6.0",
+                "ini": "~1.3.0",
+                "minimist": "^1.2.0",
+                "strip-json-comments": "~2.0.1"
+              }
+            },
+            "readable-stream": {
+              "version": "2.3.7",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "core-util-is": "~1.0.0",
+                "inherits": "~2.0.3",
+                "isarray": "~1.0.0",
+                "process-nextick-args": "~2.0.0",
+                "safe-buffer": "~5.1.1",
+                "string_decoder": "~1.1.1",
+                "util-deprecate": "~1.0.1"
+              }
+            },
+            "rimraf": {
+              "version": "2.7.1",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "glob": "^7.1.3"
+              }
+            },
+            "safe-buffer": {
+              "version": "5.1.2",
+              "bundled": true,
+              "optional": true
+            },
+            "safer-buffer": {
+              "version": "2.1.2",
+              "bundled": true,
+              "optional": true
+            },
+            "sax": {
+              "version": "1.2.4",
+              "bundled": true,
+              "optional": true
+            },
+            "semver": {
+              "version": "5.7.1",
+              "bundled": true,
+              "optional": true
+            },
+            "set-blocking": {
+              "version": "2.0.0",
+              "bundled": true,
+              "optional": true
+            },
+            "signal-exit": {
+              "version": "3.0.2",
+              "bundled": true,
+              "optional": true
+            },
+            "string-width": {
+              "version": "1.0.2",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "code-point-at": "^1.0.0",
+                "is-fullwidth-code-point": "^1.0.0",
+                "strip-ansi": "^3.0.0"
+              }
+            },
+            "string_decoder": {
+              "version": "1.1.1",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "safe-buffer": "~5.1.0"
+              }
+            },
+            "strip-ansi": {
+              "version": "3.0.1",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "ansi-regex": "^2.0.0"
+              }
+            },
+            "strip-json-comments": {
+              "version": "2.0.1",
+              "bundled": true,
+              "optional": true
+            },
+            "tar": {
+              "version": "4.4.13",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "chownr": "^1.1.1",
+                "fs-minipass": "^1.2.5",
+                "minipass": "^2.8.6",
+                "minizlib": "^1.2.1",
+                "mkdirp": "^0.5.0",
+                "safe-buffer": "^5.1.2",
+                "yallist": "^3.0.3"
+              }
+            },
+            "util-deprecate": {
+              "version": "1.0.2",
+              "bundled": true,
+              "optional": true
+            },
+            "wide-align": {
+              "version": "1.1.3",
+              "bundled": true,
+              "optional": true,
+              "requires": {
+                "string-width": "^1.0.2 || 2"
+              }
+            },
+            "wrappy": {
+              "version": "1.0.2",
+              "bundled": true,
+              "optional": true
+            },
+            "yallist": {
+              "version": "3.1.1",
+              "bundled": true,
+              "optional": true
+            }
+          }
+        },
+        "get-caller-file": {
+          "version": "1.0.3",
+          "resolved": "https://registry.npmjs.org/get-caller-file/-/get-caller-file-1.0.3.tgz",
+          "integrity": "sha512-3t6rVToeoZfYSGd8YoLFR2DJkiQrIiUrGcjvFX2mDw3bn6k2OtwHN0TNCLbBO+w8qTvimhDkv+LSscbJY1vE6w=="
+        },
+        "glob-parent": {
+          "version": "3.1.0",
+          "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-3.1.0.tgz",
+          "integrity": "sha1-nmr2KZ2NO9K9QEMIMr0RPfkGxa4=",
+          "requires": {
+            "is-glob": "^3.1.0",
+            "path-dirname": "^1.0.0"
+          },
+          "dependencies": {
+            "is-glob": {
+              "version": "3.1.0",
+              "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-3.1.0.tgz",
+              "integrity": "sha1-e6WuJCF4BKxwcHuWkiVnSGzD6Eo=",
+              "requires": {
+                "is-extglob": "^2.1.0"
+              }
+            }
+          }
+        },
+        "is-absolute-url": {
+          "version": "3.0.3",
+          "resolved": "https://registry.npmjs.org/is-absolute-url/-/is-absolute-url-3.0.3.tgz",
+          "integrity": "sha512-opmNIX7uFnS96NtPmhWQgQx6/NYFgsUXYMllcfzwWKUMwfo8kku1TvE6hkNcH+Q1ts5cMVrsY7j0bxXQDciu9Q=="
+        },
+        "is-binary-path": {
+          "version": "1.0.1",
+          "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-1.0.1.tgz",
+          "integrity": "sha1-dfFmQrSA8YenEcgUFh/TpKdlWJg=",
+          "requires": {
+            "binary-extensions": "^1.0.0"
+          }
+        },
+        "is-fullwidth-code-point": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
+          "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8="
+        },
+        "locate-path": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-3.0.0.tgz",
+          "integrity": "sha512-7AO748wWnIhNqAuaty2ZWHkQHRSNfPVIsPIfwEOWO22AmaoVrWavlOcMR5nzTLNYvp36X220/maaRsrec1G65A==",
+          "requires": {
+            "p-locate": "^3.0.0",
+            "path-exists": "^3.0.0"
+          }
+        },
+        "normalize-path": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",
+          "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA=="
+        },
+        "p-limit": {
+          "version": "2.3.0",
+          "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz",
+          "integrity": "sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==",
+          "requires": {
+            "p-try": "^2.0.0"
+          }
+        },
+        "p-locate": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-3.0.0.tgz",
+          "integrity": "sha512-x+12w/To+4GFfgJhBEpiDcLozRJGegY+Ei7/z0tSLkMmxGZNybVMSfWj9aJn8Z5Fc7dBUNJOOVgPv2H7IwulSQ==",
+          "requires": {
+            "p-limit": "^2.0.0"
+          }
+        },
+        "p-try": {
+          "version": "2.2.0",
+          "resolved": "https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz",
+          "integrity": "sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ=="
+        },
+        "readable-stream": {
+          "version": "2.3.7",
+          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
+          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
+          "requires": {
+            "core-util-is": "~1.0.0",
+            "inherits": "~2.0.3",
+            "isarray": "~1.0.0",
+            "process-nextick-args": "~2.0.0",
+            "safe-buffer": "~5.1.1",
+            "string_decoder": "~1.1.1",
+            "util-deprecate": "~1.0.1"
+          }
+        },
+        "readdirp": {
+          "version": "2.2.1",
+          "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-2.2.1.tgz",
+          "integrity": "sha512-1JU/8q+VgFZyxwrJ+SVIOsh+KywWGpds3NTqikiKpDMZWScmAYyKIgqkO+ARvNWJfXeXR1zxz7aHF4u4CyH6vQ==",
+          "requires": {
+            "graceful-fs": "^4.1.11",
+            "micromatch": "^3.1.10",
+            "readable-stream": "^2.0.2"
+          }
+        },
+        "require-main-filename": {
+          "version": "1.0.1",
+          "resolved": "https://registry.npmjs.org/require-main-filename/-/require-main-filename-1.0.1.tgz",
+          "integrity": "sha1-l/cXtp1IeE9fUmpsWqj/3aBVpNE="
+        },
+        "schema-utils": {
+          "version": "1.0.0",
+          "resolved": "https://registry.npmjs.org/schema-utils/-/schema-utils-1.0.0.tgz",
+          "integrity": "sha512-i27Mic4KovM/lnGsy8whRCHhc7VicJajAjTrYg11K9zfZXnYIt4k5F+kZkwjnrhKzLic/HLU4j11mjsz2G/75g==",
+          "requires": {
+            "ajv": "^6.1.0",
+            "ajv-errors": "^1.0.0",
+            "ajv-keywords": "^3.1.0"
+          }
+        },
+        "string-width": {
+          "version": "2.1.1",
+          "resolved": "https://registry.npmjs.org/string-width/-/string-width-2.1.1.tgz",
+          "integrity": "sha512-nOqH59deCq9SRHlxq1Aw85Jnt4w6KvLKqWVik6oA9ZklXLNIOlqg4F2yrT1MVaTjAqvVwdfeZ7w7aCvJD7ugkw==",
+          "requires": {
+            "is-fullwidth-code-point": "^2.0.0",
+            "strip-ansi": "^4.0.0"
+          },
+          "dependencies": {
+            "ansi-regex": {
+              "version": "3.0.0",
+              "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz",
+              "integrity": "sha1-7QMXwyIGT3lGbAKWa922Bas32Zg="
+            },
+            "strip-ansi": {
+              "version": "4.0.0",
+              "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",
+              "integrity": "sha1-qEeQIusaw2iocTibY1JixQXuNo8=",
+              "requires": {
+                "ansi-regex": "^3.0.0"
+              }
+            }
+          }
+        },
+        "string_decoder": {
+          "version": "1.1.1",
+          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
+          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
+          "requires": {
+            "safe-buffer": "~5.1.0"
+          }
+        },
+        "strip-ansi": {
+          "version": "3.0.1",
+          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",
+          "integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",
+          "requires": {
+            "ansi-regex": "^2.0.0"
+          }
+        },
+        "supports-color": {
+          "version": "6.1.0",
+          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-6.1.0.tgz",
+          "integrity": "sha512-qe1jfm1Mg7Nq/NSh6XE24gPXROEVsWHxC1LIx//XNlD9iw7YZQGjZNjYN7xGaEG6iKdA8EtNFW6R0gjnVXp+wQ==",
+          "requires": {
+            "has-flag": "^3.0.0"
+          }
+        },
+        "wrap-ansi": {
+          "version": "2.1.0",
+          "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-2.1.0.tgz",
+          "integrity": "sha1-2Pw9KE3QV5T+hJc8rs3Rz4JP3YU=",
+          "requires": {
+            "string-width": "^1.0.1",
+            "strip-ansi": "^3.0.1"
+          },
+          "dependencies": {
+            "is-fullwidth-code-point": {
+              "version": "1.0.0",
+              "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-1.0.0.tgz",
+              "integrity": "sha1-754xOG8DGn8NZDr4L95QxFfvAMs=",
+              "requires": {
+                "number-is-nan": "^1.0.0"
+              }
+            },
+            "string-width": {
+              "version": "1.0.2",
+              "resolved": "https://registry.npmjs.org/string-width/-/string-width-1.0.2.tgz",
+              "integrity": "sha1-EYvfW4zcUaKn5w0hHgfisLmxB9M=",
+              "requires": {
+                "code-point-at": "^1.0.0",
+                "is-fullwidth-code-point": "^1.0.0",
+                "strip-ansi": "^3.0.0"
+              }
+            }
+          }
+        },
+        "ws": {
+          "version": "6.2.1",
+          "resolved": "https://registry.npmjs.org/ws/-/ws-6.2.1.tgz",
+          "integrity": "sha512-GIyAXC2cB7LjvpgMt9EKS2ldqr0MTrORaleiOno6TweZ6r3TKtoFQWay/2PceJ3RuBasOHzXNn5Lrw1X0bEjqA==",
+          "requires": {
+            "async-limiter": "~1.0.0"
+          }
+        },
+        "yargs": {
+          "version": "12.0.5",
+          "resolved": "https://registry.npmjs.org/yargs/-/yargs-12.0.5.tgz",
+          "integrity": "sha512-Lhz8TLaYnxq/2ObqHDql8dX8CJi97oHxrjUcYtzKbbykPtVW9WB+poxI+NM2UIzsMgNCZTIf0AQwsjK5yMAqZw==",
+          "requires": {
+            "cliui": "^4.0.0",
+            "decamelize": "^1.2.0",
+            "find-up": "^3.0.0",
+            "get-caller-file": "^1.0.1",
+            "os-locale": "^3.0.0",
+            "require-directory": "^2.1.1",
+            "require-main-filename": "^1.0.1",
+            "set-blocking": "^2.0.0",
+            "string-width": "^2.0.0",
+            "which-module": "^2.0.0",
+            "y18n": "^3.2.1 || ^4.0.0",
+            "yargs-parser": "^11.1.1"
+          }
+        },
+        "yargs-parser": {
+          "version": "11.1.1",
+          "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-11.1.1.tgz",
+          "integrity": "sha512-C6kB/WJDiaxONLJQnF8ccx9SEeoTTLek8RVbaOIsrAUS8VrBEXfmeSnCZxygc+XC2sNMBIwOOnfcxiynjHsVSQ==",
+          "requires": {
+            "camelcase": "^5.0.0",
+            "decamelize": "^1.2.0"
+          }
+        }
+      }
+    },
+    "webpack-log": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/webpack-log/-/webpack-log-2.0.0.tgz",
+      "integrity": "sha512-cX8G2vR/85UYG59FgkoMamwHUIkSSlV3bBMRsbxVXVUk2j6NleCKjQ/WE9eYg9WY4w25O9w8wKP4rzNZFmUcUg==",
+      "requires": {
+        "ansi-colors": "^3.0.0",
+        "uuid": "^3.3.2"
+      }
+    },
+    "webpack-manifest-plugin": {
+      "version": "2.2.0",
+      "resolved": "https://registry.npmjs.org/webpack-manifest-plugin/-/webpack-manifest-plugin-2.2.0.tgz",
+      "integrity": "sha512-9S6YyKKKh/Oz/eryM1RyLVDVmy3NSPV0JXMRhZ18fJsq+AwGxUY34X54VNwkzYcEmEkDwNxuEOboCZEebJXBAQ==",
+      "requires": {
+        "fs-extra": "^7.0.0",
+        "lodash": ">=3.5 <5",
+        "object.entries": "^1.1.0",
+        "tapable": "^1.0.0"
+      },
+      "dependencies": {
+        "fs-extra": {
+          "version": "7.0.1",
+          "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-7.0.1.tgz",
+          "integrity": "sha512-YJDaCJZEnBmcbw13fvdAM9AwNOJwOzrE4pqMqBq5nFiEqXUqHwlK4B+3pUw6JNvfSPtX05xFHtYy/1ni01eGCw==",
+          "requires": {
+            "graceful-fs": "^4.1.2",
+            "jsonfile": "^4.0.0",
+            "universalify": "^0.1.0"
+          }
+        }
+      }
+    },
+    "webpack-sources": {
+      "version": "1.4.3",
+      "resolved": "https://registry.npmjs.org/webpack-sources/-/webpack-sources-1.4.3.tgz",
+      "integrity": "sha512-lgTS3Xhv1lCOKo7SA5TjKXMjpSM4sBjNV5+q2bqesbSPs5FjGmU6jjtBSkX9b4qW87vDIsCIlUPOEhbZrMdjeQ==",
+      "requires": {
+        "source-list-map": "^2.0.0",
+        "source-map": "~0.6.1"
+      },
+      "dependencies": {
+        "source-map": {
+          "version": "0.6.1",
+          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
+          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="
+        }
+      }
+    },
+    "websocket-driver": {
+      "version": "0.7.3",
+      "resolved": "https://registry.npmjs.org/websocket-driver/-/websocket-driver-0.7.3.tgz",
+      "integrity": "sha512-bpxWlvbbB459Mlipc5GBzzZwhoZgGEZLuqPaR0INBGnPAY1vdBX6hPnoFXiw+3yWxDuHyQjO2oXTMyS8A5haFg==",
+      "requires": {
+        "http-parser-js": ">=0.4.0 <0.4.11",
+        "safe-buffer": ">=5.1.0",
+        "websocket-extensions": ">=0.1.1"
+      }
+    },
+    "websocket-extensions": {
+      "version": "0.1.3",
+      "resolved": "https://registry.npmjs.org/websocket-extensions/-/websocket-extensions-0.1.3.tgz",
+      "integrity": "sha512-nqHUnMXmBzT0w570r2JpJxfiSD1IzoI+HGVdd3aZ0yNi3ngvQ4jv1dtHt5VGxfI2yj5yqImPhOK4vmIh2xMbGg=="
+    },
+    "whatwg-encoding": {
+      "version": "1.0.5",
+      "resolved": "https://registry.npmjs.org/whatwg-encoding/-/whatwg-encoding-1.0.5.tgz",
+      "integrity": "sha512-b5lim54JOPN9HtzvK9HFXvBma/rnfFeqsic0hSpjtDbVxR3dJKLc+KB4V6GgiGOvl7CY/KNh8rxSo9DKQrnUEw==",
+      "requires": {
+        "iconv-lite": "0.4.24"
+      }
+    },
+    "whatwg-fetch": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/whatwg-fetch/-/whatwg-fetch-3.0.0.tgz",
+      "integrity": "sha512-9GSJUgz1D4MfyKU7KRqwOjXCXTqWdFNvEr7eUBYchQiVc744mqK/MzXPNR2WsPkmkOa4ywfg8C2n8h+13Bey1Q=="
+    },
+    "whatwg-mimetype": {
+      "version": "2.3.0",
+      "resolved": "https://registry.npmjs.org/whatwg-mimetype/-/whatwg-mimetype-2.3.0.tgz",
+      "integrity": "sha512-M4yMwr6mAnQz76TbJm914+gPpB/nCwvZbJU28cUD6dR004SAxDLOOSUaB1JDRqLtaOV/vi0IC5lEAGFgrjGv/g=="
+    },
+    "whatwg-url": {
+      "version": "6.5.0",
+      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-6.5.0.tgz",
+      "integrity": "sha512-rhRZRqx/TLJQWUpQ6bmrt2UV4f0HCQ463yQuONJqC6fO2VoEb1pTYddbe59SkYq87aoM5A3bdhMZiUiVws+fzQ==",
+      "requires": {
+        "lodash.sortby": "^4.7.0",
+        "tr46": "^1.0.1",
+        "webidl-conversions": "^4.0.2"
+      }
+    },
+    "which": {
+      "version": "1.3.1",
+      "resolved": "https://registry.npmjs.org/which/-/which-1.3.1.tgz",
+      "integrity": "sha512-HxJdYWq1MTIQbJ3nw0cqssHoTNU267KlrDuGZ1WYlxDStUtKUhOaJmh112/TZmHxxUfuJqPXSOm7tDyas0OSIQ==",
+      "requires": {
+        "isexe": "^2.0.0"
+      }
+    },
+    "which-module": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/which-module/-/which-module-2.0.0.tgz",
+      "integrity": "sha1-2e8H3Od7mQK4o6j6SzHD4/fm6Ho="
+    },
+    "wide-align": {
+      "version": "1.1.3",
+      "resolved": "https://registry.npmjs.org/wide-align/-/wide-align-1.1.3.tgz",
+      "integrity": "sha512-QGkOQc8XL6Bt5PwnsExKBPuMKBxnGxWWW3fU55Xt4feHozMUhdUMaBCk290qpm/wG5u/RSKzwdAC4i51YigihA==",
+      "dev": true,
+      "requires": {
+        "string-width": "^1.0.2 || 2"
+      },
+      "dependencies": {
+        "ansi-regex": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz",
+          "integrity": "sha1-7QMXwyIGT3lGbAKWa922Bas32Zg=",
+          "dev": true
+        },
+        "is-fullwidth-code-point": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
+          "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8=",
+          "dev": true
+        },
+        "string-width": {
+          "version": "2.1.1",
+          "resolved": "https://registry.npmjs.org/string-width/-/string-width-2.1.1.tgz",
+          "integrity": "sha512-nOqH59deCq9SRHlxq1Aw85Jnt4w6KvLKqWVik6oA9ZklXLNIOlqg4F2yrT1MVaTjAqvVwdfeZ7w7aCvJD7ugkw==",
+          "dev": true,
+          "requires": {
+            "is-fullwidth-code-point": "^2.0.0",
+            "strip-ansi": "^4.0.0"
+          }
+        },
+        "strip-ansi": {
+          "version": "4.0.0",
+          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",
+          "integrity": "sha1-qEeQIusaw2iocTibY1JixQXuNo8=",
+          "dev": true,
+          "requires": {
+            "ansi-regex": "^3.0.0"
+          }
+        }
+      }
+    },
+    "word-wrap": {
+      "version": "1.2.3",
+      "resolved": "https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.3.tgz",
+      "integrity": "sha512-Hz/mrNwitNRh/HUAtM/VT/5VH+ygD6DV7mYKZAtHOrbs8U7lvPS6xf7EJKMF0uW1KJCl0H701g3ZGus+muE5vQ=="
+    },
+    "wordwrap": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/wordwrap/-/wordwrap-1.0.0.tgz",
+      "integrity": "sha1-J1hIEIkUVqQXHI0CJkQa3pDLyus="
+    },
+    "workbox-background-sync": {
+      "version": "4.3.1",
+      "resolved": "https://registry.npmjs.org/workbox-background-sync/-/workbox-background-sync-4.3.1.tgz",
+      "integrity": "sha512-1uFkvU8JXi7L7fCHVBEEnc3asPpiAL33kO495UMcD5+arew9IbKW2rV5lpzhoWcm/qhGB89YfO4PmB/0hQwPRg==",
+      "requires": {
+        "workbox-core": "^4.3.1"
+      }
+    },
+    "workbox-broadcast-update": {
+      "version": "4.3.1",
+      "resolved": "https://registry.npmjs.org/workbox-broadcast-update/-/workbox-broadcast-update-4.3.1.tgz",
+      "integrity": "sha512-MTSfgzIljpKLTBPROo4IpKjESD86pPFlZwlvVG32Kb70hW+aob4Jxpblud8EhNb1/L5m43DUM4q7C+W6eQMMbA==",
+      "requires": {
+        "workbox-core": "^4.3.1"
+      }
+    },
+    "workbox-build": {
+      "version": "4.3.1",
+      "resolved": "https://registry.npmjs.org/workbox-build/-/workbox-build-4.3.1.tgz",
+      "integrity": "sha512-UHdwrN3FrDvicM3AqJS/J07X0KXj67R8Cg0waq1MKEOqzo89ap6zh6LmaLnRAjpB+bDIz+7OlPye9iii9KBnxw==",
+      "requires": {
+        "@babel/runtime": "^7.3.4",
+        "@hapi/joi": "^15.0.0",
+        "common-tags": "^1.8.0",
+        "fs-extra": "^4.0.2",
+        "glob": "^7.1.3",
+        "lodash.template": "^4.4.0",
+        "pretty-bytes": "^5.1.0",
+        "stringify-object": "^3.3.0",
+        "strip-comments": "^1.0.2",
+        "workbox-background-sync": "^4.3.1",
+        "workbox-broadcast-update": "^4.3.1",
+        "workbox-cacheable-response": "^4.3.1",
+        "workbox-core": "^4.3.1",
+        "workbox-expiration": "^4.3.1",
+        "workbox-google-analytics": "^4.3.1",
+        "workbox-navigation-preload": "^4.3.1",
+        "workbox-precaching": "^4.3.1",
+        "workbox-range-requests": "^4.3.1",
+        "workbox-routing": "^4.3.1",
+        "workbox-strategies": "^4.3.1",
+        "workbox-streams": "^4.3.1",
+        "workbox-sw": "^4.3.1",
+        "workbox-window": "^4.3.1"
+      },
+      "dependencies": {
+        "fs-extra": {
+          "version": "4.0.3",
+          "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-4.0.3.tgz",
+          "integrity": "sha512-q6rbdDd1o2mAnQreO7YADIxf/Whx4AHBiRf6d+/cVT8h44ss+lHgxf1FemcqDnQt9X3ct4McHr+JMGlYSsK7Cg==",
+          "requires": {
+            "graceful-fs": "^4.1.2",
+            "jsonfile": "^4.0.0",
+            "universalify": "^0.1.0"
+          }
+        }
+      }
+    },
+    "workbox-cacheable-response": {
+      "version": "4.3.1",
+      "resolved": "https://registry.npmjs.org/workbox-cacheable-response/-/workbox-cacheable-response-4.3.1.tgz",
+      "integrity": "sha512-Rp5qlzm6z8IOvnQNkCdO9qrDgDpoPNguovs0H8C+wswLuPgSzSp9p2afb5maUt9R1uTIwOXrVQMmPfPypv+npw==",
+      "requires": {
+        "workbox-core": "^4.3.1"
+      }
+    },
+    "workbox-core": {
+      "version": "4.3.1",
+      "resolved": "https://registry.npmjs.org/workbox-core/-/workbox-core-4.3.1.tgz",
+      "integrity": "sha512-I3C9jlLmMKPxAC1t0ExCq+QoAMd0vAAHULEgRZ7kieCdUd919n53WC0AfvokHNwqRhGn+tIIj7vcb5duCjs2Kg=="
+    },
+    "workbox-expiration": {
+      "version": "4.3.1",
+      "resolved": "https://registry.npmjs.org/workbox-expiration/-/workbox-expiration-4.3.1.tgz",
+      "integrity": "sha512-vsJLhgQsQouv9m0rpbXubT5jw0jMQdjpkum0uT+d9tTwhXcEZks7qLfQ9dGSaufTD2eimxbUOJfWLbNQpIDMPw==",
+      "requires": {
+        "workbox-core": "^4.3.1"
+      }
+    },
+    "workbox-google-analytics": {
+      "version": "4.3.1",
+      "resolved": "https://registry.npmjs.org/workbox-google-analytics/-/workbox-google-analytics-4.3.1.tgz",
+      "integrity": "sha512-xzCjAoKuOb55CBSwQrbyWBKqp35yg1vw9ohIlU2wTy06ZrYfJ8rKochb1MSGlnoBfXGWss3UPzxR5QL5guIFdg==",
+      "requires": {
+        "workbox-background-sync": "^4.3.1",
+        "workbox-core": "^4.3.1",
+        "workbox-routing": "^4.3.1",
+        "workbox-strategies": "^4.3.1"
+      }
+    },
+    "workbox-navigation-preload": {
+      "version": "4.3.1",
+      "resolved": "https://registry.npmjs.org/workbox-navigation-preload/-/workbox-navigation-preload-4.3.1.tgz",
+      "integrity": "sha512-K076n3oFHYp16/C+F8CwrRqD25GitA6Rkd6+qAmLmMv1QHPI2jfDwYqrytOfKfYq42bYtW8Pr21ejZX7GvALOw==",
+      "requires": {
+        "workbox-core": "^4.3.1"
+      }
+    },
+    "workbox-precaching": {
+      "version": "4.3.1",
+      "resolved": "https://registry.npmjs.org/workbox-precaching/-/workbox-precaching-4.3.1.tgz",
+      "integrity": "sha512-piSg/2csPoIi/vPpp48t1q5JLYjMkmg5gsXBQkh/QYapCdVwwmKlU9mHdmy52KsDGIjVaqEUMFvEzn2LRaigqQ==",
+      "requires": {
+        "workbox-core": "^4.3.1"
+      }
+    },
+    "workbox-range-requests": {
+      "version": "4.3.1",
+      "resolved": "https://registry.npmjs.org/workbox-range-requests/-/workbox-range-requests-4.3.1.tgz",
+      "integrity": "sha512-S+HhL9+iTFypJZ/yQSl/x2Bf5pWnbXdd3j57xnb0V60FW1LVn9LRZkPtneODklzYuFZv7qK6riZ5BNyc0R0jZA==",
+      "requires": {
+        "workbox-core": "^4.3.1"
+      }
+    },
+    "workbox-routing": {
+      "version": "4.3.1",
+      "resolved": "https://registry.npmjs.org/workbox-routing/-/workbox-routing-4.3.1.tgz",
+      "integrity": "sha512-FkbtrODA4Imsi0p7TW9u9MXuQ5P4pVs1sWHK4dJMMChVROsbEltuE79fBoIk/BCztvOJ7yUpErMKa4z3uQLX+g==",
+      "requires": {
+        "workbox-core": "^4.3.1"
+      }
+    },
+    "workbox-strategies": {
+      "version": "4.3.1",
+      "resolved": "https://registry.npmjs.org/workbox-strategies/-/workbox-strategies-4.3.1.tgz",
+      "integrity": "sha512-F/+E57BmVG8dX6dCCopBlkDvvhg/zj6VDs0PigYwSN23L8hseSRwljrceU2WzTvk/+BSYICsWmRq5qHS2UYzhw==",
+      "requires": {
+        "workbox-core": "^4.3.1"
+      }
+    },
+    "workbox-streams": {
+      "version": "4.3.1",
+      "resolved": "https://registry.npmjs.org/workbox-streams/-/workbox-streams-4.3.1.tgz",
+      "integrity": "sha512-4Kisis1f/y0ihf4l3u/+ndMkJkIT4/6UOacU3A4BwZSAC9pQ9vSvJpIi/WFGQRH/uPXvuVjF5c2RfIPQFSS2uA==",
+      "requires": {
+        "workbox-core": "^4.3.1"
+      }
+    },
+    "workbox-sw": {
+      "version": "4.3.1",
+      "resolved": "https://registry.npmjs.org/workbox-sw/-/workbox-sw-4.3.1.tgz",
+      "integrity": "sha512-0jXdusCL2uC5gM3yYFT6QMBzKfBr2XTk0g5TPAV4y8IZDyVNDyj1a8uSXy3/XrvkVTmQvLN4O5k3JawGReXr9w=="
+    },
+    "workbox-webpack-plugin": {
+      "version": "4.3.1",
+      "resolved": "https://registry.npmjs.org/workbox-webpack-plugin/-/workbox-webpack-plugin-4.3.1.tgz",
+      "integrity": "sha512-gJ9jd8Mb8wHLbRz9ZvGN57IAmknOipD3W4XNE/Lk/4lqs5Htw4WOQgakQy/o/4CoXQlMCYldaqUg+EJ35l9MEQ==",
+      "requires": {
+        "@babel/runtime": "^7.0.0",
+        "json-stable-stringify": "^1.0.1",
+        "workbox-build": "^4.3.1"
+      }
+    },
+    "workbox-window": {
+      "version": "4.3.1",
+      "resolved": "https://registry.npmjs.org/workbox-window/-/workbox-window-4.3.1.tgz",
+      "integrity": "sha512-C5gWKh6I58w3GeSc0wp2Ne+rqVw8qwcmZnQGpjiek8A2wpbxSJb1FdCoQVO+jDJs35bFgo/WETgl1fqgsxN0Hg==",
+      "requires": {
+        "workbox-core": "^4.3.1"
+      }
+    },
+    "worker-farm": {
+      "version": "1.7.0",
+      "resolved": "https://registry.npmjs.org/worker-farm/-/worker-farm-1.7.0.tgz",
+      "integrity": "sha512-rvw3QTZc8lAxyVrqcSGVm5yP/IJ2UcB3U0graE3LCFoZ0Yn2x4EoVSqJKdB/T5M+FLcRPjz4TDacRf3OCfNUzw==",
+      "requires": {
+        "errno": "~0.1.7"
+      }
+    },
+    "worker-rpc": {
+      "version": "0.1.1",
+      "resolved": "https://registry.npmjs.org/worker-rpc/-/worker-rpc-0.1.1.tgz",
+      "integrity": "sha512-P1WjMrUB3qgJNI9jfmpZ/htmBEjFh//6l/5y8SD9hg1Ef5zTTVVoRjTrTEzPrNBQvmhMxkoTsjOXN10GWU7aCg==",
+      "requires": {
+        "microevent.ts": "~0.1.1"
+      }
+    },
+    "wrap-ansi": {
+      "version": "5.1.0",
+      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-5.1.0.tgz",
+      "integrity": "sha512-QC1/iN/2/RPVJ5jYK8BGttj5z83LmSKmvbvrXPNCLZSEb32KKVDJDl/MOt2N01qU2H/FkzEa9PKto1BqDjtd7Q==",
+      "requires": {
+        "ansi-styles": "^3.2.0",
+        "string-width": "^3.0.0",
+        "strip-ansi": "^5.0.0"
+      },
+      "dependencies": {
+        "emoji-regex": {
+          "version": "7.0.3",
+          "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-7.0.3.tgz",
+          "integrity": "sha512-CwBLREIQ7LvYFB0WyRvwhq5N5qPhc6PMjD6bYggFlI5YyDgl+0vxq5VHbMOFqLg7hfWzmu8T5Z1QofhmTIhItA=="
+        },
+        "is-fullwidth-code-point": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
+          "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8="
+        },
+        "string-width": {
+          "version": "3.1.0",
+          "resolved": "https://registry.npmjs.org/string-width/-/string-width-3.1.0.tgz",
+          "integrity": "sha512-vafcv6KjVZKSgz06oM/H6GDBrAtz8vdhQakGjFIvNrHA6y3HCF1CInLy+QLq8dTJPQ1b+KDUqDFctkdRW44e1w==",
+          "requires": {
+            "emoji-regex": "^7.0.1",
+            "is-fullwidth-code-point": "^2.0.0",
+            "strip-ansi": "^5.1.0"
+          }
+        }
+      }
+    },
+    "wrappy": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
+      "integrity": "sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8="
+    },
+    "write": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/write/-/write-1.0.3.tgz",
+      "integrity": "sha512-/lg70HAjtkUgWPVZhZcm+T4hkL8Zbtp1nFNOn3lRrxnlv50SRBv7cR7RqR+GMsd3hUXy9hWBo4CHTbFTcOYwig==",
+      "requires": {
+        "mkdirp": "^0.5.1"
+      }
+    },
+    "write-file-atomic": {
+      "version": "2.4.1",
+      "resolved": "https://registry.npmjs.org/write-file-atomic/-/write-file-atomic-2.4.1.tgz",
+      "integrity": "sha512-TGHFeZEZMnv+gBFRfjAcxL5bPHrsGKtnb4qsFAws7/vlh+QfwAaySIw4AXP9ZskTTh5GWu3FLuJhsWVdiJPGvg==",
+      "requires": {
+        "graceful-fs": "^4.1.11",
+        "imurmurhash": "^0.1.4",
+        "signal-exit": "^3.0.2"
+      }
+    },
+    "ws": {
+      "version": "7.2.5",
+      "resolved": "https://registry.npmjs.org/ws/-/ws-7.2.5.tgz",
+      "integrity": "sha512-C34cIU4+DB2vMyAbmEKossWq2ZQDr6QEyuuCzWrM9zfw1sGc0mYiJ0UnG9zzNykt49C2Fi34hvr2vssFQRS6EA=="
+    },
+    "xml-name-validator": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/xml-name-validator/-/xml-name-validator-3.0.0.tgz",
+      "integrity": "sha512-A5CUptxDsvxKJEU3yO6DuWBSJz/qizqzJKOMIfUJHETbBw/sFaDxgd6fxm1ewUaM0jZ444Fc5vC5ROYurg/4Pw=="
+    },
+    "xmlchars": {
+      "version": "2.2.0",
+      "resolved": "https://registry.npmjs.org/xmlchars/-/xmlchars-2.2.0.tgz",
+      "integrity": "sha512-JZnDKK8B0RCDw84FNdDAIpZK+JuJw+s7Lz8nksI7SIuU3UXJJslUthsi+uWBUYOwPFwW7W7PRLRfUKpxjtjFCw=="
+    },
+    "xpipe": {
+      "version": "1.0.5",
+      "resolved": "https://registry.npmjs.org/xpipe/-/xpipe-1.0.5.tgz",
+      "integrity": "sha1-jdi/Rfw/f1Xw4FS4ePQ6YmFNr98="
+    },
+    "xregexp": {
+      "version": "4.3.0",
+      "resolved": "https://registry.npmjs.org/xregexp/-/xregexp-4.3.0.tgz",
+      "integrity": "sha512-7jXDIFXh5yJ/orPn4SXjuVrWWoi4Cr8jfV1eHv9CixKSbU+jY4mxfrBwAuDvupPNKpMUY+FeIqsVw/JLT9+B8g==",
+      "requires": {
+        "@babel/runtime-corejs3": "^7.8.3"
+      }
+    },
+    "xtend": {
+      "version": "4.0.2",
+      "resolved": "https://registry.npmjs.org/xtend/-/xtend-4.0.2.tgz",
+      "integrity": "sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ=="
+    },
+    "y18n": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/y18n/-/y18n-4.0.0.tgz",
+      "integrity": "sha512-r9S/ZyXu/Xu9q1tYlpsLIsa3EeLXXk0VwlxqTcFRfg9EhMW+17kbt9G0NrgCmhGb5vT2hyhJZLfDGx+7+5Uj/w=="
+    },
+    "yallist": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz",
+      "integrity": "sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A=="
+    },
+    "yaml": {
+      "version": "1.9.2",
+      "resolved": "https://registry.npmjs.org/yaml/-/yaml-1.9.2.tgz",
+      "integrity": "sha512-HPT7cGGI0DuRcsO51qC1j9O16Dh1mZ2bnXwsi0jrSpsLz0WxOLSLXfkABVl6bZO629py3CU+OMJtpNHDLB97kg==",
+      "requires": {
+        "@babel/runtime": "^7.9.2"
+      }
+    },
+    "yargs": {
+      "version": "13.3.2",
+      "resolved": "https://registry.npmjs.org/yargs/-/yargs-13.3.2.tgz",
+      "integrity": "sha512-AX3Zw5iPruN5ie6xGRIDgqkT+ZhnRlZMLMHAs8tg7nRruy2Nb+i5o9bwghAogtM08q1dpr2LVoS8KSTMYpWXUw==",
+      "requires": {
+        "cliui": "^5.0.0",
+        "find-up": "^3.0.0",
+        "get-caller-file": "^2.0.1",
+        "require-directory": "^2.1.1",
+        "require-main-filename": "^2.0.0",
+        "set-blocking": "^2.0.0",
+        "string-width": "^3.0.0",
+        "which-module": "^2.0.0",
+        "y18n": "^4.0.0",
+        "yargs-parser": "^13.1.2"
+      },
+      "dependencies": {
+        "emoji-regex": {
+          "version": "7.0.3",
+          "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-7.0.3.tgz",
+          "integrity": "sha512-CwBLREIQ7LvYFB0WyRvwhq5N5qPhc6PMjD6bYggFlI5YyDgl+0vxq5VHbMOFqLg7hfWzmu8T5Z1QofhmTIhItA=="
+        },
+        "find-up": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/find-up/-/find-up-3.0.0.tgz",
+          "integrity": "sha512-1yD6RmLI1XBfxugvORwlck6f75tYL+iR0jqwsOrOxMZyGYqUuDhJ0l4AXdO1iX/FTs9cBAMEk1gWSEx1kSbylg==",
+          "requires": {
+            "locate-path": "^3.0.0"
+          }
+        },
+        "is-fullwidth-code-point": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
+          "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8="
+        },
+        "locate-path": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-3.0.0.tgz",
+          "integrity": "sha512-7AO748wWnIhNqAuaty2ZWHkQHRSNfPVIsPIfwEOWO22AmaoVrWavlOcMR5nzTLNYvp36X220/maaRsrec1G65A==",
+          "requires": {
+            "p-locate": "^3.0.0",
+            "path-exists": "^3.0.0"
+          }
+        },
+        "p-limit": {
+          "version": "2.3.0",
+          "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz",
+          "integrity": "sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==",
+          "requires": {
+            "p-try": "^2.0.0"
+          }
+        },
+        "p-locate": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-3.0.0.tgz",
+          "integrity": "sha512-x+12w/To+4GFfgJhBEpiDcLozRJGegY+Ei7/z0tSLkMmxGZNybVMSfWj9aJn8Z5Fc7dBUNJOOVgPv2H7IwulSQ==",
+          "requires": {
+            "p-limit": "^2.0.0"
+          }
+        },
+        "p-try": {
+          "version": "2.2.0",
+          "resolved": "https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz",
+          "integrity": "sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ=="
+        },
+        "string-width": {
+          "version": "3.1.0",
+          "resolved": "https://registry.npmjs.org/string-width/-/string-width-3.1.0.tgz",
+          "integrity": "sha512-vafcv6KjVZKSgz06oM/H6GDBrAtz8vdhQakGjFIvNrHA6y3HCF1CInLy+QLq8dTJPQ1b+KDUqDFctkdRW44e1w==",
+          "requires": {
+            "emoji-regex": "^7.0.1",
+            "is-fullwidth-code-point": "^2.0.0",
+            "strip-ansi": "^5.1.0"
+          }
+        }
+      }
+    },
+    "yargs-parser": {
+      "version": "13.1.2",
+      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-13.1.2.tgz",
+      "integrity": "sha512-3lbsNRf/j+A4QuSZfDRA7HRSfWrzO0YjqTJd5kjAq37Zep1CEgaYmrH9Q3GwPiB9cHyd1Y1UwggGhJGoxipbzg==",
+      "requires": {
+        "camelcase": "^5.0.0",
+        "decamelize": "^1.2.0"
+      }
+    }
+  }
+}
Index: src/extornal/payment/Isracard.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package extornal.payment;\r\n\r\nimport Domain.Logs.EventLogger;\r\n\r\npublic class Isracard implements PaymentMethed {\r\n\r\n\tpublic static final String name = \"Isracard\";\r\n\tprivate final String logmsg = \"A transaction,of size {0} has been made to {1}\";\r\n\r\n\t@Override\r\n\tpublic boolean pay(bankAccount card_num, double amount) {\r\n\t\tcard_num.getMoney(amount);\r\n\t\tEventLogger.GetInstance().Add_Log(logmsg + Double.toString(amount) + \",\" + card_num.name);\r\n\t\treturn true;\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/extornal/payment/Isracard.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/extornal/payment/Isracard.java	(date 1592314856744)
@@ -2,15 +2,25 @@
 
 import Domain.Logs.EventLogger;
 
+import java.util.LinkedList;
+import java.util.List;
+
 public class Isracard implements PaymentMethed {
 
 	public static final String name = "Isracard";
 	private final String logmsg = "A transaction,of size {0} has been made to {1}";
 
+	private List<CreditCard> validCards;
+
+	public Isracard(){
+		validCards = new LinkedList<>();
+		validCards.add(new CreditCard("1234-4321-1234-4321", "06/23", "123", "yosi pil"));
+	}
+
 	@Override
-	public boolean pay(bankAccount card_num, double amount) {
-		card_num.getMoney(amount);
-		EventLogger.GetInstance().Add_Log(logmsg + Double.toString(amount) + "," + card_num.name);
-		return true;
+	public boolean pay(CreditCard card_num, double amount) {
+
+		EventLogger.GetInstance().Add_Log(logmsg + amount + "," + card_num.getCardOwner());
+		return validCards.contains(card_num);
 	}
-}
+}
\ No newline at end of file
Index: client/src/App.test.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- client/src/App.test.js	(date 1592314856696)
+++ client/src/App.test.js	(date 1592314856696)
@@ -0,0 +1,9 @@
+import React from 'react';
+import { render } from '@testing-library/react';
+import App from './App';
+
+test('renders learn react link', () => {
+  const { getByText } = render(<App />);
+  const linkElement = getByText(/learn react/i);
+  expect(linkElement).toBeInTheDocument();
+});
Index: client/src/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- client/src/index.js	(date 1592314856696)
+++ client/src/index.js	(date 1592314856696)
@@ -0,0 +1,17 @@
+import React from 'react';
+import ReactDOM from 'react-dom';
+import './index.css';
+import App from './App';
+import * as serviceWorker from './serviceWorker';
+
+ReactDOM.render(
+  <React.StrictMode>
+    <App />
+  </React.StrictMode>,
+  document.getElementById('root')
+);
+
+// If you want your app to work offline and load faster, you can change
+// unregister() to register() below. Note this comes with some pitfalls.
+// Learn more about service workers: https://bit.ly/CRA-PWA
+serviceWorker.unregister();
Index: client/src/index.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- client/src/index.css	(date 1592314856696)
+++ client/src/index.css	(date 1592314856696)
@@ -0,0 +1,13 @@
+body {
+  margin: 0;
+  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
+    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
+    sans-serif;
+  -webkit-font-smoothing: antialiased;
+  -moz-osx-font-smoothing: grayscale;
+}
+
+code {
+  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
+    monospace;
+}
Index: client/src/serviceWorker.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- client/src/serviceWorker.js	(date 1592314856696)
+++ client/src/serviceWorker.js	(date 1592314856696)
@@ -0,0 +1,141 @@
+// This optional code is used to register a service worker.
+// register() is not called by default.
+
+// This lets the app load faster on subsequent visits in production, and gives
+// it offline capabilities. However, it also means that developers (and users)
+// will only see deployed updates on subsequent visits to a page, after all the
+// existing tabs open on the page have been closed, since previously cached
+// resources are updated in the background.
+
+// To learn more about the benefits of this model and instructions on how to
+// opt-in, read https://bit.ly/CRA-PWA
+
+const isLocalhost = Boolean(
+  window.location.hostname === 'localhost' ||
+    // [::1] is the IPv6 localhost address.
+    window.location.hostname === '[::1]' ||
+    // 127.0.0.0/8 are considered localhost for IPv4.
+    window.location.hostname.match(
+      /^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/
+    )
+);
+
+export function register(config) {
+  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {
+    // The URL constructor is available in all browsers that support SW.
+    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);
+    if (publicUrl.origin !== window.location.origin) {
+      // Our service worker won't work if PUBLIC_URL is on a different origin
+      // from what our page is served on. This might happen if a CDN is used to
+      // serve assets; see https://github.com/facebook/create-react-app/issues/2374
+      return;
+    }
+
+    window.addEventListener('load', () => {
+      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;
+
+      if (isLocalhost) {
+        // This is running on localhost. Let's check if a service worker still exists or not.
+        checkValidServiceWorker(swUrl, config);
+
+        // Add some additional logging to localhost, pointing developers to the
+        // service worker/PWA documentation.
+        navigator.serviceWorker.ready.then(() => {
+          console.log(
+            'This web app is being served cache-first by a service ' +
+              'worker. To learn more, visit https://bit.ly/CRA-PWA'
+          );
+        });
+      } else {
+        // Is not localhost. Just register service worker
+        registerValidSW(swUrl, config);
+      }
+    });
+  }
+}
+
+function registerValidSW(swUrl, config) {
+  navigator.serviceWorker
+    .register(swUrl)
+    .then(registration => {
+      registration.onupdatefound = () => {
+        const installingWorker = registration.installing;
+        if (installingWorker == null) {
+          return;
+        }
+        installingWorker.onstatechange = () => {
+          if (installingWorker.state === 'installed') {
+            if (navigator.serviceWorker.controller) {
+              // At this point, the updated precached content has been fetched,
+              // but the previous service worker will still serve the older
+              // content until all client tabs are closed.
+              console.log(
+                'New content is available and will be used when all ' +
+                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'
+              );
+
+              // Execute callback
+              if (config && config.onUpdate) {
+                config.onUpdate(registration);
+              }
+            } else {
+              // At this point, everything has been precached.
+              // It's the perfect time to display a
+              // "Content is cached for offline use." message.
+              console.log('Content is cached for offline use.');
+
+              // Execute callback
+              if (config && config.onSuccess) {
+                config.onSuccess(registration);
+              }
+            }
+          }
+        };
+      };
+    })
+    .catch(error => {
+      console.error('Error during service worker registration:', error);
+    });
+}
+
+function checkValidServiceWorker(swUrl, config) {
+  // Check if the service worker can be found. If it can't reload the page.
+  fetch(swUrl, {
+    headers: { 'Service-Worker': 'script' },
+  })
+    .then(response => {
+      // Ensure service worker exists, and that we really are getting a JS file.
+      const contentType = response.headers.get('content-type');
+      if (
+        response.status === 404 ||
+        (contentType != null && contentType.indexOf('javascript') === -1)
+      ) {
+        // No service worker found. Probably a different app. Reload the page.
+        navigator.serviceWorker.ready.then(registration => {
+          registration.unregister().then(() => {
+            window.location.reload();
+          });
+        });
+      } else {
+        // Service worker found. Proceed as normal.
+        registerValidSW(swUrl, config);
+      }
+    })
+    .catch(() => {
+      console.log(
+        'No internet connection found. App is running in offline mode.'
+      );
+    });
+}
+
+export function unregister() {
+  if ('serviceWorker' in navigator) {
+    navigator.serviceWorker.ready
+      .then(registration => {
+        registration.unregister();
+      })
+      .catch(error => {
+        console.error(error.message);
+      });
+  }
+}
Index: client/src/App.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- client/src/App.js	(date 1592314856696)
+++ client/src/App.js	(date 1592314856696)
@@ -0,0 +1,28 @@
+import React from "react";
+import { BrowserRouter, Route, Switch } from 'react-router-dom';
+import {HomePageGuest} from './components/homeGuest';
+import {HomePageMember} from './components/homeMember';
+import {Log_in} from './components/login/Index';
+import {Register} from './components/register/Index';
+import {storeSearch} from './components/searchStore/Index';
+import {addStore} from './components/addStore/Index';
+
+export default class App extends React.Component{
+
+  render(){
+    return (
+      <BrowserRouter>
+      <div>
+        <Switch>
+          <Route path="/" component={HomePageGuest} exact/>
+          <Route path="/register" component={Register}/>
+          <Route path="/login" component={Log_in}/>
+          <Route path="/member" component={HomePageMember}/>
+          <Route path="/store" component={storeSearch}/>
+          <Route path="/create" component={addStore}/>
+        </Switch>
+      </div> 
+    </BrowserRouter>
+    );
+  }
+}
Index: client/src/App.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- client/src/App.css	(date 1592314856696)
+++ client/src/App.css	(date 1592314856696)
@@ -0,0 +1,38 @@
+.App {
+  text-align: center;
+}
+
+.App-logo {
+  height: 40vmin;
+  pointer-events: none;
+}
+
+@media (prefers-reduced-motion: no-preference) {
+  .App-logo {
+    animation: App-logo-spin infinite 20s linear;
+  }
+}
+
+.App-header {
+  background-color: #282c34;
+  min-height: 100vh;
+  display: flex;
+  flex-direction: column;
+  align-items: center;
+  justify-content: center;
+  font-size: calc(10px + 2vmin);
+  color: white;
+}
+
+.App-link {
+  color: #61dafb;
+}
+
+@keyframes App-logo-spin {
+  from {
+    transform: rotate(0deg);
+  }
+  to {
+    transform: rotate(360deg);
+  }
+}
Index: client/src/connection.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- client/src/connection.js	(date 1592314856696)
+++ client/src/connection.js	(date 1592314856696)
@@ -0,0 +1,108 @@
+const url = 'wss://workshopv2.ddnsking.com/mall'
+const socket = new WebSocket(url)
+
+
+var socketQueueId = 0;
+var socketQueue = {};
+
+function sendData(data,onReturn){
+    socketQueueId++;
+    socketQueue['i_'+socketQueueId] = onReturn;
+    jsonData = JSON.stringify({'cmd_id':socketQueueId, 'json_data':data});
+    try{
+        socket.send(jsonData);
+    }catch(e){
+        console.log(e);
+    }
+    return socketQueueId;
+}
+
+socket.onmessage = function(e) {
+
+    try{
+        data = JSON.parse(e.data);
+    }catch(er){
+        console.log('socket parse error: '+e.data);
+    }
+
+    if (typeof(data['cmd_id']) != 'undefined'){
+        execFunc = socketQueue['i_'+data['cmd_id']];
+        execFunc(data['result']);
+        delete socketQueue['i_'+data['cmd_id']];
+    }
+}
+
+function RL(opCode,username,pass,onReturn){
+    var enc = new TextEncoder();
+    const un = enc.encode(username)
+    const p = enc.encode(pass)
+    var bufView = new Uint8Array(un.length+p.length+2);
+    i=1;
+    bufView[0]=opCode;
+    for(j=0;j<un.length;j++){
+        bufView[i]=un[j];
+        i++;
+    }
+    bufView[i]=0x00;
+    i++;
+    for(j=0;j<p.length;j++){
+        bufView[i]=p[j];
+        i++;
+    }
+    return sendData(bufView,onReturn)
+}
+
+function reg(username,pass,onReturn){
+    return  RL(0x22,username,pass,onReturn)
+}
+
+function log(username,pass,onReturn){
+    return  RL(0x23,username,pass,onReturn)
+}
+
+function logout(onReturn){
+    var bufView = new Uint8Array(1);
+    bufView[0]=0x31;
+    return sendData(bufView,onReturn)
+}
+
+function store(name,onReturn){
+    var enc = new TextEncoder();
+    const sn = enc.encode(name)
+    var bufView = new Uint8Array(sn.length+1);
+    i=1;
+    bufView[0]=0x14;
+    for(j=0;j<sn.length;j++){
+        bufView[i]=sn[j];
+        i++;
+    }
+    return sendData(bufView,onReturn)
+}
+
+function createStore(name,address,onReturn){
+    var enc = new TextEncoder();
+    const un = enc.encode(name)
+    const add = enc.encode(address)
+    var bufView = new Uint8Array(un.length+add.length+2);
+    i=1;
+    bufView[0]=0x32;
+    for(j=0;j<un.length;j++){
+        bufView[i]=un[j];
+        i++;
+    }
+    bufView[i]=0x00;
+    i++;
+    for(j=0;j<add.length;j++){
+        bufView[i]=add[j];
+        i++;
+    }
+    return sendData(bufView,onReturn)
+}
+
+module.exports = {
+    logout:logout,
+    reg: reg,
+    log:log,
+    store:store,
+    createStore:createStore
+}
\ No newline at end of file
Index: client/src/logo.svg
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- client/src/logo.svg	(date 1592314856696)
+++ client/src/logo.svg	(date 1592314856696)
@@ -0,0 +1,7 @@
+<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 841.9 595.3">
+    <g fill="#61DAFB">
+        <path d="M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z"/>
+        <circle cx="420.9" cy="296.5" r="45.7"/>
+        <path d="M520.5 78.1z"/>
+    </g>
+</svg>
Index: client/src/setupTests.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- client/src/setupTests.js	(date 1592314856696)
+++ client/src/setupTests.js	(date 1592314856696)
@@ -0,0 +1,5 @@
+// jest-dom adds custom jest matchers for asserting on DOM nodes.
+// allows you to do things like:
+// expect(element).toHaveTextContent(/react/i)
+// learn more: https://github.com/testing-library/jest-dom
+import '@testing-library/jest-dom/extend-expect';
Index: client/.expo/settings.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- client/.expo/settings.json	(date 1592314856660)
+++ client/.expo/settings.json	(date 1592314856660)
@@ -0,0 +1,8 @@
+{
+  "hostType": "lan",
+  "lanType": "ip",
+  "dev": true,
+  "minify": false,
+  "urlRandomness": null,
+  "https": true
+}
Index: client/public/manifest.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- client/public/manifest.json	(date 1592314856672)
+++ client/public/manifest.json	(date 1592314856672)
@@ -0,0 +1,25 @@
+{
+  "short_name": "React App",
+  "name": "Create React App Sample",
+  "icons": [
+    {
+      "src": "favicon.ico",
+      "sizes": "64x64 32x32 24x24 16x16",
+      "type": "image/x-icon"
+    },
+    {
+      "src": "logo192.png",
+      "type": "image/png",
+      "sizes": "192x192"
+    },
+    {
+      "src": "logo512.png",
+      "type": "image/png",
+      "sizes": "512x512"
+    }
+  ],
+  "start_url": ".",
+  "display": "standalone",
+  "theme_color": "#000000",
+  "background_color": "#ffffff"
+}
Index: client/public/robots.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- client/public/robots.txt	(date 1592314856672)
+++ client/public/robots.txt	(date 1592314856672)
@@ -0,0 +1,3 @@
+# https://www.robotstxt.org/robotstxt.html
+User-agent: *
+Disallow:
Index: client/public/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- client/public/index.html	(date 1592314856672)
+++ client/public/index.html	(date 1592314856672)
@@ -0,0 +1,43 @@
+<!DOCTYPE html>
+<html lang="en">
+  <head>
+    <meta charset="utf-8" />
+    <link rel="icon" href="%PUBLIC_URL%/favicon.ico" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <meta name="theme-color" content="#000000" />
+    <meta
+      name="description"
+      content="Web site created using create-react-app"
+    />
+    <link rel="apple-touch-icon" href="%PUBLIC_URL%/logo192.png" />
+    <!--
+      manifest.json provides metadata used when your web app is installed on a
+      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/
+    -->
+    <link rel="manifest" href="%PUBLIC_URL%/manifest.json" />
+    <!--
+      Notice the use of %PUBLIC_URL% in the tags above.
+      It will be replaced with the URL of the `public` folder during the build.
+      Only files inside the `public` folder can be referenced from the HTML.
+
+      Unlike "/favicon.ico" or "favicon.ico", "%PUBLIC_URL%/favicon.ico" will
+      work correctly both with client-side routing and a non-root public URL.
+      Learn how to configure a non-root public URL by running `npm run build`.
+    -->
+    <title>React App</title>
+  </head>
+  <body>
+    <noscript>You need to enable JavaScript to run this app.</noscript>
+    <div id="root"></div>
+    <!--
+      This HTML file is a template.
+      If you open it directly in the browser, you will see an empty page.
+
+      You can add webfonts, meta tags, or analytics to this file.
+      The build step will place the bundled scripts into the <body> tag.
+
+      To begin the development, run `npm start` or `yarn start`.
+      To create a production bundle, use `npm run build` or `yarn build`.
+    -->
+  </body>
+</html>
Index: client/src/components/homeMember.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- client/src/components/homeMember.jsx	(date 1592314856696)
+++ client/src/components/homeMember.jsx	(date 1592314856696)
@@ -0,0 +1,23 @@
+import React from "react";
+import {Nav} from './navMember/Index';
+import {GuestFun} from './Guest/Index';
+import {MemberFun} from './Member/Index';
+
+
+export class HomePageMember extends React.Component {
+  constructor(props) {
+    super(props);
+  }
+
+  render() {
+    return (
+      <div className="base-container">
+        <Nav/>
+        <main style={{marginTop: '70px'}}>
+          <GuestFun/>
+          <MemberFun/>
+        </main>
+      </div>
+    );
+  }
+}
\ No newline at end of file
Index: client/src/components/homeGuest.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- client/src/components/homeGuest.jsx	(date 1592314856696)
+++ client/src/components/homeGuest.jsx	(date 1592314856696)
@@ -0,0 +1,21 @@
+import React from "react";
+import {Nav} from './navGuest/Index';
+import {GuestFun} from './Guest/Index';
+
+
+export class HomePageGuest extends React.Component {
+  constructor(props) {
+    super(props);
+  }
+
+  render() {
+    return (
+      <div className="base-container">
+        <Nav/>
+        <main style={{marginTop: '70px'}}>
+          <GuestFun/>
+        </main>
+      </div>
+    );
+  }
+}
\ No newline at end of file
Index: client/src/components/Guest/style.scss
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- client/src/components/Guest/style.scss	(date 1592314856696)
+++ client/src/components/Guest/style.scss	(date 1592314856696)
@@ -0,0 +1,27 @@
+.footer {
+    display: flex;
+    flex-direction: row;
+    align-items: center;
+    margin-top: 3em;
+    width: 250px;
+    
+    .s{
+      padding: 10px 24px;
+      .store{
+        border-radius: 12px;
+        font-size: 20px;
+        background-color: #87CEFA;
+        border: 2px solid #000000;
+      }
+    }
+    
+    .p{
+      padding: 10px 24px;
+      .product{
+        border-radius: 12px;
+        font-size: 20px;
+        background-color: #87CEFA;
+        border: 2px solid #000000;
+      }
+    }
+}
\ No newline at end of file
Index: client/src/components/Guest/guestFun.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- client/src/components/Guest/guestFun.jsx	(date 1592314856696)
+++ client/src/components/Guest/guestFun.jsx	(date 1592314856696)
@@ -0,0 +1,23 @@
+import React from "react";
+import {Link} from 'react-router-dom';
+
+export class GuestFun extends React.Component {
+    constructor(props) {
+      super(props);
+    }
+  
+    render() {
+      return (
+        <div className="footer">
+            <div className="s">
+              <Link to="/store">
+                <button className="store">Search Stores</button>
+              </Link>
+            </div>
+            <div className="p">
+                <button className="product">Search products</button>
+            </div>
+        </div>
+      );
+    }
+  }
\ No newline at end of file
Index: src/Communication/websocket/App/api_impl/MallProtocol.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Communication.websocket.App.api_impl;\n\nimport Communication.websocket.App.messages.Objects.client2server.*;\nimport Communication.websocket.App.messages.Objects.server2client.*;\nimport Communication.websocket.App.messages.api.Client2ServerMessage;\nimport Communication.websocket.api.MessagingProtocol;\nimport Communication.websocket.App.messages.api.Message;\nimport Domain.RedClasses.UserPurchase;\nimport Domain.Store.Purchase;\nimport Domain.Store.StorePurchase;\nimport Domain.info.ProductDetails;\nimport Domain.info.StoreInfo;\nimport Service_Layer.guest_accese.guest_accese;\nimport Service_Layer.member_accese.member_accese;\nimport Service_Layer.sys_manager_accese.sys_mangaer_accese;\nimport tests.AcceptanceTests.auxiliary.StoreDetails;\n\nimport java.util.List;\n\npublic class MallProtocol implements MessagingProtocol<Message> {\n\n    private int gustID;\n\n    private String username;\n    private String paasword;\n\n    private guest_accese guest;\n    private member_accese memeber;\n    private sys_mangaer_accese manager;\n\n    public int getGustID() {\n        return gustID;\n    }\n\n    public MallProtocol(int gustID) {\n        this.gustID = gustID;\n        username = \"\";\n        paasword = \"\";\n        guest = new guest_accese();\n        memeber = new member_accese();\n        manager = new sys_mangaer_accese();\n    }\n\n\n\n    @Override\n    public Message process(Message msg) {\n        System.out.println(\"handling :\" + msg.toString());\n        return ((Client2ServerMessage)msg).visit(this);\n    }\n\n\n\n\n\n\n\n    public Message accept(DemoMessage msg){\n        return new NackMessage(msg.getId());\n    }\n\n    public Message accept(RegisterMessage msg){\n\n        if(guest.usecase2_2_guest_register(msg.getUsername(), msg.getPassword())){\n            return new AckMessage(msg.getId());\n        }\n\n        return new NackMessage(msg.getId());\n    }\n\n    public Message accept(LoginMessage msg){\n        if(guest.usecase2_3_login(gustID, msg.getUsername(), msg.getPassword())){\n            username = msg.getUsername();\n            paasword = msg.getPassword();\n\n            return new AckMessage(msg.getId());\n        }\n        else {\n            return new NackMessage(msg.getId());\n        }\n    }\n\n    public Message accept(LogoutMessage msg) {\n        memeber.usecase3_1_Logout(username, paasword);\n        username = \"\";\n        paasword = \"\";\n\n        return new AckMessage(msg.getId());\n    }\n\n    public Message accept(StorDetailsMessage msg) {\n        StoreDetails detils = guest.usecase2_4A_getStoreDetails(msg.getName());\n\n        if(detils != null) {\n            return new StorDetailsResponseMessage(msg.getId(), detils.getName(), detils.getAdress(), (byte) detils.getRating()); // TODO\n        }\n\n        return new NackMessage(msg.getId());\n    }\n\n    public Message accept(StoreProductsMessage msg) {\n        StoreInfo detils = guest.usecase2_4B_getStoreProdacts(msg.getName());\n\n        if(detils != null) {\n            return new StoreProductsResponseMessage(msg.getId(), detils.products);\n        }\n\n        return new NackMessage(msg.getId());\n    }\n\n    public Message accept(ProductsByNameMessage msg) {\n        List<ProductDetails> products = guest.usecase2_5A_searchProductByName(msg.getName());\n\n        if(products != null) {\n            return new ProductDetailsListResponse(msg.getId(), products);\n        }\n\n        return new NackMessage(msg.getId());\n    }\n\n    public Message accept(ProductsByCategoryMessage msg) {\n        List<ProductDetails> products = guest.usecase2_5B_searchProductByCategory(msg.getCategory());\n\n        if(products != null) {\n            return new ProductDetailsListResponse(msg.getId(), products);\n        }\n\n        return new NackMessage(msg.getId());\n    }\n\n    public Message accept(ProductsByKeywordMessage msg) {\n        List<ProductDetails> products = guest.usecase2_5C_searchProductByKeyword(msg.getKeyword());\n\n        if(products != null) {\n            return new ProductDetailsListResponse(msg.getId(), products);\n        }\n\n        return new NackMessage(msg.getId());\n    }\n\n    public Message accept(AddProduct2BasketMessage msg) {\n        if(guest.usecase2_6_saveProductToBasket(gustID, msg.getStore(), msg.getProduct(), msg.getAmount())){\n            return new AckMessage(msg.getId());\n        }\n\n        return new NackMessage(msg.getId());\n    }\n\n    public Message accept(ViewCartMessage msg) {\n        List<ProductDetails> products = guest.usecase2_7A_WatchProdactsInCart(gustID);\n\n        if(products != null) {\n            return new ProductDetailsListResponse(msg.getId(), products);\n        }\n\n        return new NackMessage(msg.getId());\n    }\n\n    public Message accept(RemoveProductFromCartMessage msg) {\n        if(guest.usecase2_7b_RemoveProdactsInCart(gustID, msg.getStore(), msg.getProduct(), msg.getAmount()) > 0){\n            return new AckMessage(msg.getId());\n        }\n\n        return new NackMessage(msg.getId());\n    }\n\n    public Message accept(OpenStoreMessage msg) {\n        if(memeber.usecase3_2_OpenStore(username, paasword, new StoreDetails(msg.getName(), msg.getAddres(), 0))){\n            return new AckMessage(msg.getId());\n        }\n\n        return new NackMessage(msg.getId());\n    }\n\n    public Message accept(ViewPerchesHistory msg) {\n        List<UserPurchase> history = memeber.usecase3_7_ReviewPurchasesHistory(username, paasword);\n\n        if(history != null){\n            return new PerchesListResponse((byte)-1,msg.getId(), history);\n        }\n\n        return new NackMessage(msg.getId());\n    }\n\n    public Message accept(HistoryOfUserMessage msg) {\n        List<UserPurchase> history = manager.usecase6_4A_WatchPurchesHistoryofUser(username, paasword, msg.getName());\n\n        if(history != null){\n            return new PerchesListResponse((byte)-1,msg.getId(), history);\n        }\n\n        return new NackMessage(msg.getId());\n    }\n\n    public Message accept(HistoryOfStoreMessage msg) {\n        List<StorePurchase> history = manager.usecase6_4B_WatchPurchesHistoryofStore(username, paasword, msg.getName());\n\n        if(history != null){\n       //     return new PerchesListResponse((byte)-1,msg.getId(), history);\n        }\n\n        return new NackMessage(msg.getId());\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Communication/websocket/App/api_impl/MallProtocol.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Communication/websocket/App/api_impl/MallProtocol.java	(date 1592314856740)
@@ -1,44 +1,52 @@
 package Communication.websocket.App.api_impl;
 
+import Communication.websocket.App.RunServer.MallServer;
 import Communication.websocket.App.messages.Objects.client2server.*;
 import Communication.websocket.App.messages.Objects.server2client.*;
 import Communication.websocket.App.messages.api.Client2ServerMessage;
 import Communication.websocket.api.MessagingProtocol;
 import Communication.websocket.App.messages.api.Message;
-import Domain.RedClasses.UserPurchase;
-import Domain.Store.Purchase;
+import Domain.Notifier.Notifier;
+import Domain.UserClasses.UserPurchase;
+import Domain.Store.Product;
 import Domain.Store.StorePurchase;
 import Domain.info.ProductDetails;
+import Domain.info.Question;
 import Domain.info.StoreInfo;
 import Service_Layer.guest_accese.guest_accese;
+import Service_Layer.manager_accese.manager_accese;
 import Service_Layer.member_accese.member_accese;
+import Service_Layer.owner_accese.owner_accese;
 import Service_Layer.sys_manager_accese.sys_mangaer_accese;
+import extornal.payment.CreditCard;
 import tests.AcceptanceTests.auxiliary.StoreDetails;
 
 import java.util.List;
+import java.util.Observable;
+import java.util.Observer;
+
+class SubInstructions {
+
+     static final int usecase4_5_appointManager_code = 0x10;
+     static final int usecase4_3_appointOwner_code = 0x11;
+}
+
 
-public class MallProtocol implements MessagingProtocol<Message> {
+
+public class MallProtocol implements MessagingProtocol<Message>, Observer {
 
     private int gustID;
 
     private String username;
     private String paasword;
-
-    private guest_accese guest;
-    private member_accese memeber;
-    private sys_mangaer_accese manager;
+    private MallServer server;
 
-    public int getGustID() {
-        return gustID;
-    }
-
-    public MallProtocol(int gustID) {
-        this.gustID = gustID;
+    public MallProtocol(MallServer server) {
+        this.server = server;
+        this.gustID = guest_accese.ImNew();
         username = "";
         paasword = "";
-        guest = new guest_accese();
-        memeber = new member_accese();
-        manager = new sys_mangaer_accese();
+        Notifier.getInstance().addObserver(this); // register to the notifier
     }
 
 
@@ -49,6 +57,18 @@
         return ((Client2ServerMessage)msg).visit(this);
     }
 
+    @Override
+    public void update(Observable o, Object arg) {
+        //Notifier notifier = (Notifier) o;
+        String[] ar = ((String)arg).split("!@!");
+        String user = ar[0];
+        String msg = ar[1];
+
+        if(user.equals(username)){
+            server.send(this, msg);
+        }
+    }
+
 
 
 
@@ -59,9 +79,12 @@
         return new NackMessage(msg.getId());
     }
 
+
+
+
     public Message accept(RegisterMessage msg){
 
-        if(guest.usecase2_2_guest_register(msg.getUsername(), msg.getPassword())){
+        if(guest_accese.usecase2_2_guest_register(msg.getUsername(), msg.getPassword())){
             return new AckMessage(msg.getId());
         }
 
@@ -69,7 +92,7 @@
     }
 
     public Message accept(LoginMessage msg){
-        if(guest.usecase2_3_login(gustID, msg.getUsername(), msg.getPassword())){
+        if(guest_accese.usecase2_3_login(gustID, msg.getUsername(), msg.getPassword())){
             username = msg.getUsername();
             paasword = msg.getPassword();
 
@@ -81,7 +104,7 @@
     }
 
     public Message accept(LogoutMessage msg) {
-        memeber.usecase3_1_Logout(username, paasword);
+        member_accese.usecase3_1_Logout(gustID);
         username = "";
         paasword = "";
 
@@ -89,27 +112,30 @@
     }
 
     public Message accept(StorDetailsMessage msg) {
-        StoreDetails detils = guest.usecase2_4A_getStoreDetails(msg.getName());
+        StoreDetails detils = guest_accese.usecase2_4A_getStoreDetails(msg.getName());
 
         if(detils != null) {
-            return new StorDetailsResponseMessage(msg.getId(), detils.getName(), detils.getAdress(), (byte) detils.getRating()); // TODO
+            return new StorDetailsResponseMessage(msg.getId(), detils.getName(), detils.getAdress(), (byte) detils.getRating());
         }
 
         return new NackMessage(msg.getId());
     }
 
+
+
+
     public Message accept(StoreProductsMessage msg) {
-        StoreInfo detils = guest.usecase2_4B_getStoreProdacts(msg.getName());
+        StoreInfo detils = guest_accese.usecase2_4B_getStoreProdacts(msg.getName());
 
         if(detils != null) {
-            return new StoreProductsResponseMessage(msg.getId(), detils.products);
+            return new ProductDetailsListResponse(msg.getId(), detils.products);
         }
 
         return new NackMessage(msg.getId());
     }
 
     public Message accept(ProductsByNameMessage msg) {
-        List<ProductDetails> products = guest.usecase2_5A_searchProductByName(msg.getName());
+        List<ProductDetails> products = guest_accese.usecase2_5A_searchProductByName(msg.getName());
 
         if(products != null) {
             return new ProductDetailsListResponse(msg.getId(), products);
@@ -119,7 +145,7 @@
     }
 
     public Message accept(ProductsByCategoryMessage msg) {
-        List<ProductDetails> products = guest.usecase2_5B_searchProductByCategory(msg.getCategory());
+        List<ProductDetails> products = guest_accese.usecase2_5B_searchProductByCategory(msg.getCategory());
 
         if(products != null) {
             return new ProductDetailsListResponse(msg.getId(), products);
@@ -129,7 +155,7 @@
     }
 
     public Message accept(ProductsByKeywordMessage msg) {
-        List<ProductDetails> products = guest.usecase2_5C_searchProductByKeyword(msg.getKeyword());
+        List<ProductDetails> products = guest_accese.usecase2_5C_searchProductByKeyword(msg.getKeyword());
 
         if(products != null) {
             return new ProductDetailsListResponse(msg.getId(), products);
@@ -138,8 +164,10 @@
         return new NackMessage(msg.getId());
     }
 
+
+
     public Message accept(AddProduct2BasketMessage msg) {
-        if(guest.usecase2_6_saveProductToBasket(gustID, msg.getStore(), msg.getProduct(), msg.getAmount())){
+        if(guest_accese.usecase2_6_saveProductToBasket(gustID, msg.getStore(), msg.getProduct(), msg.getAmount())){
             return new AckMessage(msg.getId());
         }
 
@@ -147,17 +175,17 @@
     }
 
     public Message accept(ViewCartMessage msg) {
-        List<ProductDetails> products = guest.usecase2_7A_WatchProdactsInCart(gustID);
+        List<ProductDetails> products = guest_accese.usecase2_7A_WatchProdactsInCart(gustID);
 
         if(products != null) {
-            return new ProductDetailsListResponse(msg.getId(), products);
+            return new PrductsInCartResponse(msg.getId(), products);
         }
 
         return new NackMessage(msg.getId());
     }
 
     public Message accept(RemoveProductFromCartMessage msg) {
-        if(guest.usecase2_7b_RemoveProdactsInCart(gustID, msg.getStore(), msg.getProduct(), msg.getAmount()) > 0){
+        if(guest_accese.usecase2_7b_RemoveProdactsInCart(gustID, msg.getStore(), msg.getProduct(), msg.getAmount()) > 0){
             return new AckMessage(msg.getId());
         }
 
@@ -165,7 +193,7 @@
     }
 
     public Message accept(OpenStoreMessage msg) {
-        if(memeber.usecase3_2_OpenStore(username, paasword, new StoreDetails(msg.getName(), msg.getAddres(), 0))){
+        if(member_accese.usecase3_2_OpenStore(gustID, new StoreDetails(msg.getName(), msg.getAddres(), 0))){
             return new AckMessage(msg.getId());
         }
 
@@ -173,30 +201,143 @@
     }
 
     public Message accept(ViewPerchesHistory msg) {
-        List<UserPurchase> history = memeber.usecase3_7_ReviewPurchasesHistory(username, paasword);
+        List<UserPurchase> history = member_accese.usecase3_7_ReviewPurchasesHistory(gustID);
 
         if(history != null){
-            return new PerchesListResponse((byte)-1,msg.getId(), history);
+            return new UserPurchaseListResponse((byte)-1,msg.getId(), history);
         }
 
         return new NackMessage(msg.getId());
     }
 
     public Message accept(HistoryOfUserMessage msg) {
-        List<UserPurchase> history = manager.usecase6_4A_WatchPurchesHistoryofUser(username, paasword, msg.getName());
+        List<UserPurchase> history = sys_mangaer_accese.usecase6_4A_WatchPurchesHistoryofUser(username, paasword, msg.getName());
 
         if(history != null){
-            return new PerchesListResponse((byte)-1,msg.getId(), history);
+            return new UserPurchaseListResponse((byte)-1,msg.getId(), history);
         }
 
         return new NackMessage(msg.getId());
     }
 
     public Message accept(HistoryOfStoreMessage msg) {
-        List<StorePurchase> history = manager.usecase6_4B_WatchPurchesHistoryofStore(username, paasword, msg.getName());
+        List<StorePurchase> history = sys_mangaer_accese.usecase6_4B_WatchPurchesHistoryofStore(username, paasword, msg.getName());
 
         if(history != null){
-       //     return new PerchesListResponse((byte)-1,msg.getId(), history);
+             return new StorePurchaseListResponse((byte)-1,msg.getId(), history);
+        }
+
+        return new NackMessage(msg.getId());
+    }
+
+    public Message accept(ViewMemberQustionsMessage msg) {
+        List<Question> lst =  manager_accese.usecase4_9_ViewMembersQuestions(username, paasword, msg.getStorename());
+
+        if(lst == null)
+            return new NackMessage(msg.getId());
+
+        return new QustionListResponse((byte)-1, msg.getId(), lst);
+    }
+
+    public Message accept(Response2QuestionMessage msg) {
+
+        if(manager_accese.usecase4_9_RespondToQuestion(username, paasword, msg.getAnswer(), msg.getQustionID())){
+            return new AckMessage(msg.getId());
+        }
+
+        return new NackMessage(msg.getId());
+    }
+
+    public Message accept(ViewAquisitionMessage msg) {
+        List<StorePurchase> lst = manager_accese.usecase4_10_ViewAcquisitionHistory(username, paasword, msg.getStorename());
+
+        if(lst == null){
+            return new NackMessage(msg.getId());
+        }
+
+        return new StorePurchaseListResponse((byte)-1, msg.getId(), lst);
+    }
+
+    public Message accept(PurchaseMessage msg) {
+        CreditCard card = new CreditCard(msg.getCreditcardNumber(), msg.geteDate(), msg.getCss(), msg.getOwner());
+
+        if(guest_accese.usecase2_8_Purchase_products(gustID, card, msg.getShipAdress())){
+            return new AckMessage(msg.getId());
+        }
+
+        return new NackMessage(msg.getId());
+    }
+
+    public Message accept(CreateProductMessage msg) {
+
+        ProductDetails details = new ProductDetails(msg.getName(), msg.getCategoories(), msg.getKeywords(), msg.getStoreName(), msg.getAmmount(),msg.getPrice());
+        Product prod = new Product(details);
+
+        if(owner_accese.usecase4_1_1_AddingProdacsToStore(username, paasword, msg.getStoreName(), prod)){
+            return new AckMessage(msg.getId());
+        }
+
+        return new NackMessage(msg.getId());
+    }
+
+    public Message accept(AppointMessage msg) {
+
+        if(msg.getRole() == SubInstructions.usecase4_5_appointManager_code){
+            if(owner_accese.usecase4_5_appointManager(gustID,msg.getStorename(),msg.getUsername())){
+                return new AckMessage(msg.getId());
+            }
+        }
+
+        if(msg.getRole() == SubInstructions.usecase4_3_appointOwner_code){
+            if(owner_accese.usecase4_3_appointOwner(gustID,msg.getStorename(),msg.getUsername())){
+                return new AckMessage(msg.getId());
+            }
+        }
+
+        return new NackMessage(msg.getId());
+    }
+
+    public Message accept(FireMessage msg) {
+        if(owner_accese.usecase4_7_FireManager(username, paasword, msg.getStoreName(), msg.getUsername())){
+            return new AckMessage(msg.getId());
+        }
+
+        return new NackMessage(msg.getId());
+    }
+
+    public Message accept(RemoveProductMessage msg) {
+        if(owner_accese.usecase4_1_2_RemoveItem(username, paasword, msg.getStoreName(), msg.getProductName())){
+            return new AckMessage(msg.getId());
+        }
+
+        return new NackMessage(msg.getId());
+    }
+
+    public Message accept(Add2ProductMessage msg) {
+        ProductDetails details = guest_accese.searchProductByName(msg.getProduct(), msg.getStore());
+        details.setAmount(details.getAmount() + msg.getAmmount());
+        Product product = new Product(details);
+
+        if(owner_accese.usecase4_1_3_EditProduct(username, paasword, msg.getStore(), msg.getProduct(), product)){
+            return new AckMessage(msg.getId());
+        }
+
+        return new NackMessage(msg.getId());
+    }
+
+    public Message accept(ViewOwnedStoresMessage msg) {
+        List<String> stores = owner_accese.ownStores(gustID);
+
+        if(stores != null)
+            return new StoreListResponse((byte)-1, msg.getId(), stores);
+
+        return  new NackMessage(msg.getId());
+    }
+
+    public Message accept(EditPermitionsMessage msg) {
+
+        if(owner_accese.usecase4_6_editMangagerPermesions(username, paasword, msg.getStoreName(), msg.getManagerName(), msg.getPermitions())){
+            return new AckMessage(msg.getId());
         }
 
         return new NackMessage(msg.getId());
Index: client/src/components/Guest/Index.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- client/src/components/Guest/Index.jsx	(date 1592314856696)
+++ client/src/components/Guest/Index.jsx	(date 1592314856696)
@@ -0,0 +1,4 @@
+/* index.tsx */
+import "./style.scss";
+//Import and Re-export Login
+export {GuestFun}  from "./guestFun";
\ No newline at end of file
Index: client/src/components/login/style.scss
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- client/src/components/login/style.scss	(date 1592314856696)
+++ client/src/components/login/style.scss	(date 1592314856696)
@@ -0,0 +1,80 @@
+.base-container {
+  width: 100%;
+  display: flex;
+  flex-direction: column;
+  align-items: center;
+
+  .header {
+    font-size: 24px;
+    font-family: "Open Sans", sans-serif;
+  }
+
+  .content {
+    display: flex;
+    flex-direction: column;
+
+    .form {
+      margin-top: 2em;
+      display: flex;
+      flex-direction: column;
+      align-items: center;
+
+      .form-group {
+        display: flex;
+        flex-direction: column;
+        align-items: flex-start;
+        width: fit-content;
+        label {
+          font-size: 20px;
+        }
+        input {
+          margin-top: 6px;
+          min-width: 18em;
+          height: 37px;
+          padding: 0px 10px;
+          font-size: 16px;
+          font-family: "Open Sans", sans-serif;
+          background-color: #f3f3f3;
+          border: 0;
+          border-radius: 4px;
+          margin-bottom: 31px;
+          transition: all 250ms ease-in-out;
+          &:hover {
+            //background-color: #ffffff;
+            //box-shadow: 0px 0px 14px 0.3px #0e81ce96;
+          }
+
+          &:focus {
+            outline: none;
+            box-shadow: 0px 0px 12px 0.8px #3474dbb2;
+          }
+        }
+      }
+    }
+  }
+  .footer {
+    display: flex;
+    flex-direction: row;
+    align-items: center;
+    margin-top: 3em;
+    width: 250px;
+    .B{
+      padding: 10px 24px;
+      .back{
+        border-radius: 12px;
+        font-size: 20px;
+        background-color: #87CEFA;
+        border: 2px solid #000000;
+      }
+    }
+    .L{
+      padding: 10px 24px;
+      .btn{
+        border-radius: 12px;
+        font-size: 20px;
+        background-color: #87CEFA;
+        border: 2px solid #000000;
+      }
+    }
+  }
+}
\ No newline at end of file
Index: client/src/components/login/Login.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- client/src/components/login/Login.jsx	(date 1592314856696)
+++ client/src/components/login/Login.jsx	(date 1592314856696)
@@ -0,0 +1,77 @@
+import React from "react";
+import {log} from '/Users/Daniel/p-l/src/connection'
+
+export class Log_in extends React.Component {
+  constructor(props) {
+    super(props);
+    this.state = {
+      username: '',
+      password: '',
+    };
+    this.goLog = this.goLog.bind(this)
+  }
+
+  
+  handleChange = (e) => {
+    this.setState({
+        [e.target.name]: e.target.value
+    })
+  }
+
+  goBack = () => {
+    this.props.history.goBack();
+  }
+
+  goLog = (username,password) => {
+    if(username!=''&&password!=''){
+      const callback = (data) =>{
+        let logedin = false;
+        if(data !=undefined && data == 0x02){
+          logedin=true
+        }
+        if(logedin == false){
+          alert('did not loged')
+        }else{
+          this.props.history.push('/member');
+        }
+      }
+      log(username,password,callback)
+    }else{
+      alert('must enter fields first');
+    }
+  }
+
+  render() {
+    return (
+      <div className="base-container" ref={this.props.containerRef}>
+        <div className="header">Login</div>
+        <div className="content">
+          <div className="form">
+            <div className="form-group">
+              <label htmlFor="username">Username</label>
+              <input type="text" name="username" value={this.state.username} onChange={e => this.handleChange(e)} />
+            </div>
+            <div className="form-group">
+              <label htmlFor="password">Password</label>
+              <input type="password" name="password" value={this.state.password} onChange={e => this.handleChange(e)} />
+            </div>
+          </div>
+        </div>
+        <div className="footer">
+          <div className="B">
+            <button type="button" className="back" onClick={this.goBack}>
+              back
+            </button>
+          </div>
+          <div className="L">
+              <button type="button" className="btn" onClick={()=>this.goLog(this.state.username,this.state.password)}>
+                Login
+              </button>
+          </div>
+        </div>
+      </div>
+    );
+  }
+}
+
+
Index: client/src/components/login/Index.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- client/src/components/login/Index.jsx	(date 1592314856696)
+++ client/src/components/login/Index.jsx	(date 1592314856696)
@@ -0,0 +1,4 @@
+/* index.tsx */
+import "./style.scss";
+//Import and Re-export Login
+export {Log_in}  from "./Login";
\ No newline at end of file
Index: client/src/components/Member/memberFun.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- client/src/components/Member/memberFun.jsx	(date 1592314856696)
+++ client/src/components/Member/memberFun.jsx	(date 1592314856696)
@@ -0,0 +1,20 @@
+import React from "react";
+import {Link} from 'react-router-dom';
+
+export class MemberFun extends React.Component {
+    constructor(props) {
+      super(props);
+    }
+  
+    render() {
+      return (
+        <div className="footer">
+            <div className="s">
+                <Link to="/create">
+                    <button className="store">add store</button>
+                </Link>
+            </div>
+        </div>
+      );
+    }
+  }
\ No newline at end of file
Index: client/src/components/Member/style.scss
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- client/src/components/Member/style.scss	(date 1592314856696)
+++ client/src/components/Member/style.scss	(date 1592314856696)
@@ -0,0 +1,17 @@
+.footer {
+    display: flex;
+    flex-direction: row;
+    align-items: center;
+    margin-top: 3em;
+    width: 250px;
+    
+    .s{
+      padding: 10px 24px;
+      .store{
+        border-radius: 12px;
+        font-size: 20px;
+        background-color: #87CEFA;
+        border: 2px solid #000000;
+      }
+    }
+}
\ No newline at end of file
Index: client/src/components/Member/Index.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- client/src/components/Member/Index.jsx	(date 1592314856696)
+++ client/src/components/Member/Index.jsx	(date 1592314856696)
@@ -0,0 +1,4 @@
+/* index.tsx */
+import "./style.scss";
+//Import and Re-export Login
+export {MemberFun}  from "./memberFun";
\ No newline at end of file
Index: client/src/components/addStore/style.scss
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- client/src/components/addStore/style.scss	(date 1592314856696)
+++ client/src/components/addStore/style.scss	(date 1592314856696)
@@ -0,0 +1,50 @@
+.base-container {
+    width: 100%;
+    display: flex;
+    flex-direction: column;
+    align-items: center;
+
+    .input1{
+        padding: 0 1rem;
+        .name-input{
+            border-radius: 25px;
+            width: 300px;
+            height: 50px;
+        }
+    }
+    .input2{
+        padding: 0 1rem;
+        .address-input{
+            border-radius: 25px;
+            width: 300px;
+            height: 50px;
+        }
+    }
+
+
+    .buttoms {
+        display: flex;
+        flex-direction: row;
+        align-items: center;
+        margin-top: 3em;
+        width: 250px;
+        .back{
+          padding: 10px 24px;
+          .b{
+            border-radius: 12px;
+            font-size: 20px;
+            background-color: #87CEFA;
+            border: 2px solid #000000;
+          }
+        }
+        .create{
+          padding: 10px 24px;
+          .c{
+            border-radius: 12px;
+            font-size: 20px;
+            background-color: #87CEFA;
+            border: 2px solid #000000;
+          }
+        }
+      }
+}
\ No newline at end of file
Index: client/src/components/addStore/store.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- client/src/components/addStore/store.jsx	(date 1592314856696)
+++ client/src/components/addStore/store.jsx	(date 1592314856696)
@@ -0,0 +1,66 @@
+import React from 'react';
+import {createStore} from '/Users/Daniel/p-l/src/connection';
+
+export class addStore extends React.Component{
+    constructor(props) {
+        super(props);
+        this.state = {
+            store:'',
+            address:'',
+        };
+    }
+
+    handleChange = (e) => {
+        this.setState({
+            [e.target.name]: e.target.value
+        })
+    }
+
+    goSubmit(name,address){
+        if(name!=''&&address!=''){
+            const callback = (data) =>{
+              let created = false;
+              if(data !=undefined && data == 0x02){
+                created=true
+              }
+              if(created == false){
+                alert('did not created')
+              }else{
+                this.props.history.goBack();
+                alert('store was opened successfully')
+              }
+            }
+            createStore(name,address,callback)
+        }else{
+            alert('must enter fields first');
+        }
+    }
+
+    goBack = () => {
+        this.props.history.goBack();
+      }
+    
+
+    render() {
+        return (
+            <div className="base-container">
+                <h1 className="enter-name">enter store name: </h1>
+                <div className="input1">
+                    <input className="name-input" name="store" type="text" onChange={this.handleChange.bind(this)}/>
+                </div>
+                <h1 className="enter-address">enter store address: </h1>
+                <div className="input2">
+                    <input className="address-input" name="address" type="text" onChange={this.handleChange.bind(this)}/>
+                </div>
+                <div className="buttoms">
+                    <div className="back">
+                        <button className="b" onClick={this.goBack}>back</button>
+                    </div>
+                    <div className="create">
+                        <button className="c" onClick={()=>this.goSubmit(this.state.store,this.state.address)}>submit</button>
+                    </div>
+                </div>
+            </div>
+        );
+    }
+}
\ No newline at end of file
Index: src/Communication/websocket/App/messages/Macros/Opcodes.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Communication.websocket.App.messages.Macros;\n\npublic class Opcodes {\n\n    //For testing\n    public static final byte Demo = 1;\n\n    // ack nack\n    public static final byte Ack = 0x2;\n    public static final byte Nack = 0x3;\n\n\n    //Gusts\n    public static final byte Register = 0x22;\n    public static final byte Login = 0x23;\n    public static final byte StoreDetails = 0x14;\n    public static final byte StoreProducts = 0x15;\n    public static final byte SearchProductByName = 0x16;\n    public static final byte SearchProductBycategory = 0x17;\n    public static final byte SearchProductByKeyword = 0x18;\n    public static final byte FilterByPrice = 10;\n    public static final byte FilterByRating = 11;\n    public static final byte FilterByCategory = 12;\n    public static final byte FilterByStoreRating = 13;\n    public static final byte Save2Basket = 0x26;\n    public static final byte ProductsInCarts = 0x27;\n    public static final byte RemoveFromCart = 0x2a;\n    public static final byte ShopingCart = 17;\n    public static final byte IsInBasket = 18;\n    public static final byte EmptyCart = 19;\n    public static final byte DoesStoreHaveItem = 20;\n\n\n    //member\n    public static final byte Logout = 0x31;\n    public static final byte OpenStore = 0x32;\n    public static final byte PurchasesHistory = 0x37;\n\n    //owner\n    public static final byte AddProduct2Store = 24;\n    public static final byte RemoveItem = 25;\n    public static final byte EditProduct = 26;\n    public static final byte Appoint = 27;\n\n    //System manager\n    public static final byte HistoryOfUser = 0x64;\n    public static final byte HistoryOfStore =  0x6b;\n\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Communication/websocket/App/messages/Macros/Opcodes.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Communication/websocket/App/messages/Macros/Opcodes.java	(date 1592314856740)
@@ -5,6 +5,9 @@
     //For testing
     public static final byte Demo = 1;
 
+    //Not in te usecases, but needed for implementation
+    public static final byte viewOwnedStores = 0x7;
+
     // ack nack
     public static final byte Ack = 0x2;
     public static final byte Nack = 0x3;
@@ -18,17 +21,14 @@
     public static final byte SearchProductByName = 0x16;
     public static final byte SearchProductBycategory = 0x17;
     public static final byte SearchProductByKeyword = 0x18;
-    public static final byte FilterByPrice = 10;
-    public static final byte FilterByRating = 11;
-    public static final byte FilterByCategory = 12;
-    public static final byte FilterByStoreRating = 13;
+    public static final byte FilterByPrice = 0;
+    public static final byte FilterByRating = 0;
+    public static final byte FilterByCategory = 0;
+    public static final byte FilterByStoreRating = 0;
     public static final byte Save2Basket = 0x26;
     public static final byte ProductsInCarts = 0x27;
     public static final byte RemoveFromCart = 0x2a;
-    public static final byte ShopingCart = 17;
-    public static final byte IsInBasket = 18;
-    public static final byte EmptyCart = 19;
-    public static final byte DoesStoreHaveItem = 20;
+    public static final byte Purches = 0x28;
 
 
     //member
@@ -36,11 +36,19 @@
     public static final byte OpenStore = 0x32;
     public static final byte PurchasesHistory = 0x37;
 
+    //manager
+    public static final byte ViewMemberQustions = 0x49;
+    public static final byte Response2Qustion = 0x4f;
+    public static final byte viewAquisitionHistory = 0x4a;
+
     //owner
-    public static final byte AddProduct2Store = 24;
-    public static final byte RemoveItem = 25;
-    public static final byte EditProduct = 26;
-    public static final byte Appoint = 27;
+    public static final byte AddProduct2Store = 0x41;
+    public static final byte RemoveItem = 0x42;
+    public static final byte EditProduct = 0;
+    public static final byte Add2Product = 0x44;
+    public static final byte Appoint = 0x43;
+    public static final byte editMangagerPermesions = 0x46;
+    public static final byte FireManager = 0x47;
 
     //System manager
     public static final byte HistoryOfUser = 0x64;
Index: client/src/components/addStore/Index.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- client/src/components/addStore/Index.jsx	(date 1592314856696)
+++ client/src/components/addStore/Index.jsx	(date 1592314856696)
@@ -0,0 +1,3 @@
+/* index.tsx */
+import "./style.scss";
+export {addStore}  from "./store";
\ No newline at end of file
Index: client/src/components/navGuest/style.scss
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- client/src/components/navGuest/style.scss	(date 1592314856696)
+++ client/src/components/navGuest/style.scss	(date 1592314856696)
@@ -0,0 +1,39 @@
+.base{
+    position: fixed;
+    width: 100%;
+    background: #fd9f9f;
+    height: 60px;
+    top: 0;
+    left: 0;
+
+    .navigator{
+        display: flex;
+        align-items: center;
+        padding: 0 1rem;
+
+        .header{
+            font-size: 1.5rem;
+        }
+
+        .space{
+            flex: 1;
+        }
+        
+        .buttoms{
+            list-style: none;
+            margin: 0;
+            padding: 0 ;
+            display: flex;
+            
+            .cart{
+                padding: 0 0.5rem;
+            }
+            .reg{
+                padding: 0 0.5rem;
+            }
+            .log{
+                padding: 0 0.5rem;
+            }
+        }
+    }
+}
\ No newline at end of file
Index: client/src/components/navGuest/navBar.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- client/src/components/navGuest/navBar.jsx	(date 1592314856696)
+++ client/src/components/navGuest/navBar.jsx	(date 1592314856696)
@@ -0,0 +1,38 @@
+import React from 'react';
+import {Link} from 'react-router-dom';
+
+export class Nav extends React.Component {
+    constructor(props) {
+        super(props);
+      }
+    
+    
+    render(){
+        return(
+            <div className="base">
+                <nav className="navigator">
+                    <div className="logo">
+                        <h1>Ecorp</h1>
+                    </div>
+                    <div className="space"></div>
+                    <div className="buttoms">
+                        <div className="cart">
+                            <button>cart</button>
+                        </div>
+                        <div className="reg">
+                            <Link to="/register">
+                                <button>register</button>
+                            </Link>
+                        </div>
+                        <div className="log">
+                            <Link to="/login">
+                                <button>login</button>
+                            </Link>
+                        </div>
+                    </div>
+                </nav>
+            </div>
+        )
+    }
+}
+
Index: src/Communication/websocket/App/messages/Macros/Delimiters.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Communication.websocket.App.messages.Macros;\n\npublic class Delimiters {\n\n    public static final byte PARAMETER_DELIMITER = 0x0;\n    public static final byte LIST_DELIMITER = 0x1;\n\n    public static final byte LIST_DELIMITER_L2 = 0x2;\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Communication/websocket/App/messages/Macros/Delimiters.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Communication/websocket/App/messages/Macros/Delimiters.java	(date 1592314856740)
@@ -3,7 +3,8 @@
 public class Delimiters {
 
     public static final byte PARAMETER_DELIMITER = 0x0;
+
     public static final byte LIST_DELIMITER = 0x1;
-
     public static final byte LIST_DELIMITER_L2 = 0x2;
+    public static final byte LIST_DELIMITER_L3 = 0x3;
 }
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"MavenProjectsManager\">\n    <option name=\"originalFiles\">\n      <list>\n        <option value=\"$PROJECT_DIR$/pom.xml\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"11.0.2\" project-jdk-type=\"JavaSDK\">\n    <output url=\"file://$PROJECT_DIR$/out\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision 765f74774114b306c203219db8477a56813b661e)
+++ .idea/misc.xml	(date 1592314856740)
@@ -7,7 +7,7 @@
       </list>
     </option>
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="11.0.2" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
Index: client/src/components/navGuest/Index.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- client/src/components/navGuest/Index.jsx	(date 1592314856696)
+++ client/src/components/navGuest/Index.jsx	(date 1592314856696)
@@ -0,0 +1,4 @@
+/* index.tsx */
+import "./style.scss";
+//Import and Re-export Login
+export {Nav}  from "./navBar";
\ No newline at end of file
Index: client/src/components/register/style.scss
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- client/src/components/register/style.scss	(date 1592314856696)
+++ client/src/components/register/style.scss	(date 1592314856696)
@@ -0,0 +1,80 @@
+.base-container {
+    width: 100%;
+    display: flex;
+    flex-direction: column;
+    align-items: center;
+  
+    .header {
+      font-size: 24px;
+      font-family: "Open Sans", sans-serif;
+    }
+  
+    .content {
+      display: flex;
+      flex-direction: column;
+  
+      .form {
+        margin-top: 2em;
+        display: flex;
+        flex-direction: column;
+        align-items: center;
+  
+        .form-group {
+          display: flex;
+          flex-direction: column;
+          align-items: flex-start;
+          width: fit-content;
+          label {
+            font-size: 20px;
+          }
+          input {
+            margin-top: 6px;
+            min-width: 18em;
+            height: 37px;
+            padding: 0px 10px;
+            font-size: 16px;
+            font-family: "Open Sans", sans-serif;
+            background-color: #f3f3f3;
+            border: 0;
+            border-radius: 4px;
+            margin-bottom: 31px;
+            transition: all 250ms ease-in-out;
+            &:hover {
+              //background-color: #ffffff;
+              //box-shadow: 0px 0px 14px 0.3px #0e81ce96;
+            }
+  
+            &:focus {
+              outline: none;
+              box-shadow: 0px 0px 12px 0.8px #3474dbb2;
+            }
+          }
+        }
+      }
+    }
+    .footer {
+      display: flex;
+      flex-direction: row;
+      align-items: center;
+      margin-top: 3em;
+      width: 250px;
+      .B{
+        padding: 10px 24px;
+        .back{
+          border-radius: 12px;
+          font-size: 20px;
+          background-color: #87CEFA;
+          border: 2px solid #000000;
+        }
+      }
+      .R{
+        padding: 10px 24px;
+        .btn{
+          border-radius: 12px;
+          font-size: 20px;
+          background-color: #87CEFA;
+          border: 2px solid #000000;
+        }
+      }
+    }
+  }
\ No newline at end of file
Index: client/src/components/register/Register.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- client/src/components/register/Register.jsx	(date 1592314856696)
+++ client/src/components/register/Register.jsx	(date 1592314856696)
@@ -0,0 +1,81 @@
+/* Register.jsx */
+import React from "react";
+import {reg} from '/Users/Daniel/p-l/src/connection';
+
+export class Register extends React.Component {
+  constructor(props) {
+    super(props);
+    this.state = {
+      username: '',
+      password: '',
+    };
+  }
+
+  handleName = (e) => {
+    this.setState({
+        username: e.target.value
+    })
+  }
+  handlePass = (e) => {
+    this.setState({
+      password: e.target.value
+    })
+  }
+
+  goBack = () => {
+    this.props.history.goBack();
+  }
+
+
+  goReg (username,password) {
+    if(username!= '' && password !=''){
+      const callback = (data) =>{
+        let registered = false;
+        if(data !=undefined && data == 0x02){
+          registered=true
+        }
+        if(registered == false){
+          alert('did not register')
+        }else{
+          this.props.history.goBack();
+          alert('login in order to enter as a member')
+        }
+      }
+      reg(username,password,callback)
+    }else{
+      alert('must enter fields first');
+    }
+  }
+
+  render() {
+    return (
+      <div className="base-container" ref={this.props.containerRef}>
+        <div className="header">Register</div>
+        <div className="content">
+          <div className="form">
+            <div className="form-group">
+              <label htmlFor="username">Username</label>
+              <input type="text" name="username" username={this.state.username} onChange={this.handleName.bind(this)} />
+            </div>
+            <div className="form-group">
+              <label htmlFor="password">Password</label>
+              <input type="password" name="password" password={this.state.password} onChange={this.handlePass.bind(this)} />
+            </div>
+          </div>
+        </div>
+        <div className="footer">
+          <div className="B">
+            <button type="button" className="back" onClick={this.goBack}>
+              back
+            </button>
+          </div>
+          <div className="R">
+              <button type="button" className="btn" onClick={()=>this.goReg(this.state.username,this.state.password)}>
+                Register
+              </button>
+          </div>
+        </div>
+      </div>
+    );
+  }
+}
\ No newline at end of file
Index: client/src/components/register/Index.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- client/src/components/register/Index.jsx	(date 1592314856696)
+++ client/src/components/register/Index.jsx	(date 1592314856696)
@@ -0,0 +1,4 @@
+/* index.tsx */
+import "./style.scss";
+//Import and Re-export Login
+export {Register}  from "./Register";
\ No newline at end of file
Index: client/src/components/navMember/style.scss
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- client/src/components/navMember/style.scss	(date 1592314856696)
+++ client/src/components/navMember/style.scss	(date 1592314856696)
@@ -0,0 +1,37 @@
+.base{
+    position: fixed;
+    width: 100%;
+    background: #fd9f9f;
+    height: 60px;
+    top: 0;
+    left: 0;
+
+    .navigator{
+        display: flex;
+        align-items: center;
+        padding: 0 1rem;
+
+        .header{
+            font-size: 1.5rem;
+        }
+
+        .space{
+            flex: 1;
+        }
+        
+        .buttoms{
+            list-style: none;
+            margin: 0;
+            padding: 0 ;
+            display: flex;
+            
+            .cart{
+                padding: 0 0.5rem;
+            }
+
+            .log{
+                padding: 0 0.5rem;
+            }
+        }
+    }
+}
\ No newline at end of file
Index: client/src/components/navMember/navBar.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- client/src/components/navMember/navBar.jsx	(date 1592314856696)
+++ client/src/components/navMember/navBar.jsx	(date 1592314856696)
@@ -0,0 +1,44 @@
+import React from 'react';
+import {logout} from '/Users/Daniel/p-l/src/connection';
+import {Link} from 'react-router-dom';
+
+export class Nav extends React.Component {
+    constructor(props) {
+        super(props);
+        this.goBack = this.goBack.bind(this);
+      }
+    
+    goBack = () => {
+        const callback = (data) =>{
+            let logedout = false;
+            if(data !=undefined && data == 0x02){
+                logedout=true
+            }
+          }
+        logout(callback)
+    }
+
+    render(){
+        return(
+            <div className="base">
+                <nav className="navigator">
+                    <div className="logo">
+                        <h1>Ecorp</h1>
+                    </div>
+                    <div className="space"></div>
+                    <div className="buttoms">
+                        <div className="cart">
+                            <button>cart</button>
+                        </div>
+                        <div className="log">
+                            <Link to="/">
+                                <button onClick={this.goBack}>logout</button>
+                            </Link>
+                        </div>
+                    </div>
+                </nav>
+            </div>
+        )
+    }
+}
+
Index: client/src/components/navMember/Index.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- client/src/components/navMember/Index.jsx	(date 1592314856696)
+++ client/src/components/navMember/Index.jsx	(date 1592314856696)
@@ -0,0 +1,4 @@
+/* index.tsx */
+import "./style.scss";
+//Import and Re-export Login
+export {Nav}  from "./navBar";
\ No newline at end of file
Index: client/src/components/searchStore/style.scss
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- client/src/components/searchStore/style.scss	(date 1592314856696)
+++ client/src/components/searchStore/style.scss	(date 1592314856696)
@@ -0,0 +1,42 @@
+.base-container{
+    position: fixed;
+    width: 100%;
+    height: 60px;
+    top: 0;
+    left: 0;
+
+    .search-bar{
+        display: flex;
+        align-items: center;
+        padding: 0 1rem;
+        
+        .enter-search{
+            font-size: 1.5rem;
+            padding: 0 1rem;
+        }
+        .space{
+            flex: 1;
+        }
+        
+        .input{
+            padding: 0 1rem;
+            .search-input{
+                border-radius: 25px;
+                width: 300px;
+                height: 50px;
+            }
+        }
+
+        
+    }
+
+    .B{
+        padding: 10px 24px;
+        .back{
+          border-radius: 12px;
+          font-size: 20px;
+          background-color: #87CEFA;
+          border: 2px solid #000000;
+        }
+      }
+}
\ No newline at end of file
Index: client/src/components/searchStore/search.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- client/src/components/searchStore/search.jsx	(date 1592314856696)
+++ client/src/components/searchStore/search.jsx	(date 1592314856696)
@@ -0,0 +1,106 @@
+import React from "react";
+import {store} from '/Users/Daniel/p-l/src/connection';
+
+export class storeSearch extends React.Component{
+    constructor(props) {
+        super(props);
+        this.state = {
+            store:'',
+            list:[]
+        };
+    }
+
+    handleName = (e) => {
+        this.setState({
+            store: e.target.value
+        })
+      }
+
+    goBack = () => {
+        this.props.history.goBack();
+    }
+
+    getStore(name){
+        if(name!='' && name!=undefined){
+            const callback = (data)=>{
+                console.log(data)
+                if(data !=undefined && data == 0x03){
+                    alert('no such store')
+                    this.setState({
+                        list: []
+                    })
+                }else{
+                    let count =0;
+                    for(var i in data)
+                        count++;
+                    var result = new Uint8Array(count);
+                    for(var i in data)
+                        result[i]=data[''+i];
+                    console.log(result);
+                    var dec = new TextDecoder();
+                    let sep1 = 0;
+                    for(let i=0;i<result.length;i++){
+                        if(result[i]==0x00){
+                            sep1 = i;
+                            break;
+                        }
+                    }
+                    const byteName = result.slice(0,sep1)
+                    const name = dec.decode(byteName)
+                    console.log(name);
+                    let sep2 = 0
+                    for(let i=sep1+1;i<result.length;i++){
+                        if(result[i]==0x00){
+                            sep2 = i;
+                            break;
+                        }
+                    }
+                    const byteAddress = result.slice(sep1+1,sep2)
+                    const address = dec.decode(byteAddress)
+                    const rating = result[sep2+1]
+                    let list = [{name:name, address:address , rating:rating}];
+                    this.setState({
+                        list: list
+                    })
+                }
+            }
+            store(name,callback);
+        }else{
+            alert('must eneter field first');
+        }
+    }
+
+    render() {
+        return (
+            <div className="base-container">
+                <div className="search-bar">
+                    <h1 className="enter-search">enter store name: </h1>
+                    <div className="space"></div>
+                    <div className="input">
+                        <input className="search-input" name="store" type="text" onChange={this.handleName.bind(this)}/>
+                    </div>
+                    <button className="enter" onClick={()=>this.getStore(this.state.store)}>enter</button>
+                </div>
+                <section className="section" style={{marginTop: '70px'}}>
+                    {this.state.list.map(item => (
+                        <div key="1">store name : {item.name}</div>
+                    ))}
+                    {this.state.list.map(item => (
+                        <div key="2">address : {item.address}</div>
+                    ))}
+                    {this.state.list.map(item => (
+                        <div key="3">rating : {item.rating}</div>
+                    ))}
+                    {this.state.list.map(item => (
+                        <button key="4">watch products</button>
+                    ))}
+                 </section>
+                 <div className="B" style={{marginTop: '20px'}}>
+                    <button type="button" className="back" onClick={this.goBack}>
+                    back
+                    </button>
+                </div>
+            </div>
+        );
+    }
+}
\ No newline at end of file
Index: client/src/components/searchStore/Index.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- client/src/components/searchStore/Index.jsx	(date 1592314856696)
+++ client/src/components/searchStore/Index.jsx	(date 1592314856696)
@@ -0,0 +1,3 @@
+
+import "./style.scss";
+export {storeSearch}  from "./search";
\ No newline at end of file
Index: OnlineStoreSystem.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule=\"true\" type=\"JAVA_MODULE\" version=\"4\">\n  <component name=\"NewModuleRootManager\" LANGUAGE_LEVEL=\"JDK_1_8\">\n    <output url=\"file://$MODULE_DIR$/target/classes\" />\n    <output-test url=\"file://$MODULE_DIR$/target/test-classes\" />\n    <content url=\"file://$MODULE_DIR$\">\n      <sourceFolder url=\"file://$MODULE_DIR$/Tests\" isTestSource=\"true\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/src/main/java\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/src/main/resources\" type=\"java-resource\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/src/test/java\" isTestSource=\"true\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/target\" />\n    </content>\n    <orderEntry type=\"inheritedJdk\" />\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n    <orderEntry type=\"library\" name=\"KotlinJavaRuntime\" level=\"project\" />\n    <orderEntry type=\"module-library\">\n      <library name=\"JUnit4\">\n        <CLASSES>\n          <root url=\"jar://$MAVEN_REPOSITORY$/junit/junit/4.12/junit-4.12.jar!/\" />\n          <root url=\"jar://$MAVEN_REPOSITORY$/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar!/\" />\n        </CLASSES>\n        <JAVADOC />\n        <SOURCES />\n      </library>\n    </orderEntry>\n    <orderEntry type=\"library\" name=\"Maven: junit:junit:4.13\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.hamcrest:hamcrest-core:1.3\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.glassfish.tyrus:tyrus-server:1.1\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: javax.websocket:javax.websocket-api:1.0\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.glassfish.tyrus:tyrus-core:1.1\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.glassfish.tyrus:tyrus-spi:1.1\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.glassfish.tyrus:tyrus-websocket-core:1.1\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.glassfish.tyrus:tyrus-container-grizzly:1.1\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.glassfish.grizzly:grizzly-framework:2.3.3\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.glassfish.grizzly:grizzly-http-server:2.3.3\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.glassfish.grizzly:grizzly-http:2.3.3\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.glassfish.grizzly:grizzly-rcm:2.3.3\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: com.googlecode.json-simple:json-simple:1.1.1\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.hibernate:hibernate-core:5.4.17.Final\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.jboss.logging:jboss-logging:3.3.2.Final\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: javax.persistence:javax.persistence-api:2.2\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.javassist:javassist:3.24.0-GA\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: net.bytebuddy:byte-buddy:1.10.10\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: antlr:antlr:2.7.7\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.jboss.spec.javax.transaction:jboss-transaction-api_1.2_spec:1.1.1.Final\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.jboss:jandex:2.1.3.Final\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: com.fasterxml:classmate:1.5.1\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: javax.activation:javax.activation-api:1.2.0\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.dom4j:dom4j:2.1.3\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.hibernate.common:hibernate-commons-annotations:5.1.0.Final\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: javax.xml.bind:jaxb-api:2.3.1\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.glassfish.jaxb:jaxb-runtime:2.3.1\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.glassfish.jaxb:txw2:2.3.1\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: com.sun.istack:istack-commons-runtime:3.0.7\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.jvnet.staxex:stax-ex:1.8\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: com.sun.xml.fastinfoset:FastInfoset:1.2.15\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.hibernate:hibernate-entitymanager:5.4.17.Final\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: mysql:mysql-connector-java:8.0.20\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: com.google.protobuf:protobuf-java:3.6.1\" level=\"project\" />\n  </component>\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- OnlineStoreSystem.iml	(revision 765f74774114b306c203219db8477a56813b661e)
+++ OnlineStoreSystem.iml	(date 1592314856824)
@@ -25,6 +25,9 @@
     </orderEntry>
     <orderEntry type="library" name="Maven: junit:junit:4.13" level="project" />
     <orderEntry type="library" name="Maven: org.hamcrest:hamcrest-core:1.3" level="project" />
+    <orderEntry type="library" name="Maven: javax:javaee-api:8.0" level="project" />
+    <orderEntry type="library" name="Maven: com.sun.mail:javax.mail:1.6.0" level="project" />
+    <orderEntry type="library" name="Maven: javax.activation:activation:1.1" level="project" />
     <orderEntry type="library" name="Maven: org.glassfish.tyrus:tyrus-server:1.1" level="project" />
     <orderEntry type="library" name="Maven: javax.websocket:javax.websocket-api:1.0" level="project" />
     <orderEntry type="library" name="Maven: org.glassfish.tyrus:tyrus-core:1.1" level="project" />
@@ -36,26 +39,5 @@
     <orderEntry type="library" name="Maven: org.glassfish.grizzly:grizzly-http:2.3.3" level="project" />
     <orderEntry type="library" name="Maven: org.glassfish.grizzly:grizzly-rcm:2.3.3" level="project" />
     <orderEntry type="library" name="Maven: com.googlecode.json-simple:json-simple:1.1.1" level="project" />
-    <orderEntry type="library" name="Maven: org.hibernate:hibernate-core:5.4.17.Final" level="project" />
-    <orderEntry type="library" name="Maven: org.jboss.logging:jboss-logging:3.3.2.Final" level="project" />
-    <orderEntry type="library" name="Maven: javax.persistence:javax.persistence-api:2.2" level="project" />
-    <orderEntry type="library" name="Maven: org.javassist:javassist:3.24.0-GA" level="project" />
-    <orderEntry type="library" name="Maven: net.bytebuddy:byte-buddy:1.10.10" level="project" />
-    <orderEntry type="library" name="Maven: antlr:antlr:2.7.7" level="project" />
-    <orderEntry type="library" name="Maven: org.jboss.spec.javax.transaction:jboss-transaction-api_1.2_spec:1.1.1.Final" level="project" />
-    <orderEntry type="library" name="Maven: org.jboss:jandex:2.1.3.Final" level="project" />
-    <orderEntry type="library" name="Maven: com.fasterxml:classmate:1.5.1" level="project" />
-    <orderEntry type="library" name="Maven: javax.activation:javax.activation-api:1.2.0" level="project" />
-    <orderEntry type="library" name="Maven: org.dom4j:dom4j:2.1.3" level="project" />
-    <orderEntry type="library" name="Maven: org.hibernate.common:hibernate-commons-annotations:5.1.0.Final" level="project" />
-    <orderEntry type="library" name="Maven: javax.xml.bind:jaxb-api:2.3.1" level="project" />
-    <orderEntry type="library" name="Maven: org.glassfish.jaxb:jaxb-runtime:2.3.1" level="project" />
-    <orderEntry type="library" name="Maven: org.glassfish.jaxb:txw2:2.3.1" level="project" />
-    <orderEntry type="library" name="Maven: com.sun.istack:istack-commons-runtime:3.0.7" level="project" />
-    <orderEntry type="library" name="Maven: org.jvnet.staxex:stax-ex:1.8" level="project" />
-    <orderEntry type="library" name="Maven: com.sun.xml.fastinfoset:FastInfoset:1.2.15" level="project" />
-    <orderEntry type="library" name="Maven: org.hibernate:hibernate-entitymanager:5.4.17.Final" level="project" />
-    <orderEntry type="library" name="Maven: mysql:mysql-connector-java:8.0.20" level="project" />
-    <orderEntry type="library" name="Maven: com.google.protobuf:protobuf-java:3.6.1" level="project" />
   </component>
 </module>
\ No newline at end of file
Index: src/Communication/websocket/App/messages/Objects/client2server/Response2QuestionMessage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Communication/websocket/App/messages/Objects/client2server/Response2QuestionMessage.java	(date 1592314856740)
+++ src/Communication/websocket/App/messages/Objects/client2server/Response2QuestionMessage.java	(date 1592314856740)
@@ -0,0 +1,55 @@
+package Communication.websocket.App.messages.Objects.client2server;
+
+import Communication.websocket.App.api_impl.MallProtocol;
+import Communication.websocket.App.messages.Macros.Opcodes;
+import Communication.websocket.App.messages.api.Client2ServerMessage;
+import Communication.websocket.App.messages.api.Message;
+
+import java.util.Objects;
+
+public class Response2QuestionMessage extends Client2ServerMessage {
+
+    private final String answer;
+    private final int qustionID;
+
+    public Response2QuestionMessage(long id, String answer, int qustionID) {
+        super(Opcodes.Response2Qustion, id);
+        this.answer = answer;
+        this.qustionID = qustionID;
+    }
+
+    @Override
+    public Message visit(MallProtocol protocol) {
+        return protocol.accept(this);
+    }
+
+    public String getAnswer() {
+        return answer;
+    }
+
+    public int getQustionID() {
+        return qustionID;
+    }
+
+    @Override
+    public boolean equals(Object o) {
+        if (this == o) return true;
+        if (o == null || getClass() != o.getClass()) return false;
+        Response2QuestionMessage that = (Response2QuestionMessage) o;
+        return getQustionID() == that.getQustionID() &&
+                getAnswer().equals(that.getAnswer());
+    }
+
+    @Override
+    public int hashCode() {
+        return Objects.hash(getAnswer(), getQustionID());
+    }
+
+    @Override
+    public String toString() {
+        return "Response2QuestionMessage{" +
+                "answer='" + answer + '\'' +
+                ", qustionID=" + qustionID +
+                '}';
+    }
+}
Index: src/Communication/websocket/App/messages/Objects/client2server/ViewMemberQustionsMessage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Communication/websocket/App/messages/Objects/client2server/ViewMemberQustionsMessage.java	(date 1592314856740)
+++ src/Communication/websocket/App/messages/Objects/client2server/ViewMemberQustionsMessage.java	(date 1592314856740)
@@ -0,0 +1,48 @@
+package Communication.websocket.App.messages.Objects.client2server;
+
+import Communication.websocket.App.api_impl.MallProtocol;
+import Communication.websocket.App.messages.Macros.Opcodes;
+import Communication.websocket.App.messages.api.Client2ServerMessage;
+import Communication.websocket.App.messages.api.Message;
+
+import java.util.Objects;
+
+public class ViewMemberQustionsMessage extends Client2ServerMessage {
+
+    private String storename;
+
+    public ViewMemberQustionsMessage(long id, String storename) {
+        super(Opcodes.ViewMemberQustions, id);
+
+        this.storename = storename;
+    }
+
+    @Override
+    public Message visit(MallProtocol protocol) {
+        return protocol.accept(this);
+    }
+
+    public String getStorename() {
+        return storename;
+    }
+
+    @Override
+    public boolean equals(Object o) {
+        if (this == o) return true;
+        if (o == null || getClass() != o.getClass()) return false;
+        ViewMemberQustionsMessage that = (ViewMemberQustionsMessage) o;
+        return getStorename().equals(that.getStorename());
+    }
+
+    @Override
+    public int hashCode() {
+        return Objects.hash(getStorename());
+    }
+
+    @Override
+    public String toString() {
+        return "ViewMemberQustionsMessage{" +
+                "storename='" + storename + '\'' +
+                '}';
+    }
+}
Index: src/Communication/websocket/App/messages/Objects/client2server/ViewOwnedStoresMessage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Communication/websocket/App/messages/Objects/client2server/ViewOwnedStoresMessage.java	(date 1592314856740)
+++ src/Communication/websocket/App/messages/Objects/client2server/ViewOwnedStoresMessage.java	(date 1592314856740)
@@ -0,0 +1,38 @@
+package Communication.websocket.App.messages.Objects.client2server;
+
+import Communication.websocket.App.api_impl.MallProtocol;
+import Communication.websocket.App.messages.Macros.Opcodes;
+import Communication.websocket.App.messages.api.Client2ServerMessage;
+import Communication.websocket.App.messages.api.Message;
+
+import java.util.List;
+import java.util.Objects;
+
+public class ViewOwnedStoresMessage extends Client2ServerMessage {
+
+    public ViewOwnedStoresMessage(long id) {
+        super(Opcodes.viewOwnedStores, id);
+    }
+
+    @Override
+    public boolean equals(Object o) {
+        if (this == o) return true;
+        return o != null && getClass() == o.getClass();
+    }
+
+    @Override
+    public int hashCode() {
+        return Objects.hash();
+    }
+
+    @Override
+    public String toString() {
+        return "ViewOwnedStoresMessage{" +
+                '}';
+    }
+
+    @Override
+    public Message visit(MallProtocol protocol) {
+        return protocol.accept(this);
+    }
+}
Index: src/Communication/websocket/App/messages/Objects/client2server/Add2ProductMessage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Communication/websocket/App/messages/Objects/client2server/Add2ProductMessage.java	(date 1592314856740)
+++ src/Communication/websocket/App/messages/Objects/client2server/Add2ProductMessage.java	(date 1592314856740)
@@ -0,0 +1,64 @@
+package Communication.websocket.App.messages.Objects.client2server;
+
+import Communication.websocket.App.api_impl.MallProtocol;
+import Communication.websocket.App.messages.Macros.Opcodes;
+import Communication.websocket.App.messages.api.Client2ServerMessage;
+import Communication.websocket.App.messages.api.Message;
+
+import java.util.Objects;
+
+public class Add2ProductMessage extends Client2ServerMessage {
+
+
+    private final String product;
+    private final String store;
+    private final int ammount;
+
+    public Add2ProductMessage(long id, String Product, String store, int ammount) {
+        super(Opcodes.Add2Product, id);
+        product = Product;
+        this.store = store;
+        this.ammount = ammount;
+    }
+
+    public String getProduct() {
+        return product;
+    }
+
+    public String getStore() {
+        return store;
+    }
+
+    public int getAmmount() {
+        return ammount;
+    }
+
+    @Override
+    public boolean equals(Object o) {
+        if (this == o) return true;
+        if (o == null || getClass() != o.getClass()) return false;
+        Add2ProductMessage that = (Add2ProductMessage) o;
+        return getAmmount() == that.getAmmount() &&
+                getProduct().equals(that.getProduct()) &&
+                getStore().equals(that.getStore());
+    }
+
+    @Override
+    public int hashCode() {
+        return Objects.hash(getProduct(), getStore(), getAmmount());
+    }
+
+    @Override
+    public String toString() {
+        return "Add2ProductMessage{" +
+                "product='" + product + '\'' +
+                ", store='" + store + '\'' +
+                ", ammount=" + ammount +
+                '}';
+    }
+
+    @Override
+    public Message visit(MallProtocol protocol) {
+        return protocol.accept(this);
+    }
+}
Index: src/Communication/websocket/App/messages/Objects/client2server/ViewAquisitionMessage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Communication/websocket/App/messages/Objects/client2server/ViewAquisitionMessage.java	(date 1592314856740)
+++ src/Communication/websocket/App/messages/Objects/client2server/ViewAquisitionMessage.java	(date 1592314856740)
@@ -0,0 +1,47 @@
+package Communication.websocket.App.messages.Objects.client2server;
+
+import Communication.websocket.App.api_impl.MallProtocol;
+import Communication.websocket.App.messages.Macros.Opcodes;
+import Communication.websocket.App.messages.api.Client2ServerMessage;
+import Communication.websocket.App.messages.api.Message;
+
+import java.util.Objects;
+
+public class ViewAquisitionMessage extends Client2ServerMessage {
+
+    private final String storename;
+
+    public ViewAquisitionMessage(long id, String storename) {
+        super(Opcodes.viewAquisitionHistory, id);
+        this.storename = storename;
+    }
+
+    @Override
+    public Message visit(MallProtocol protocol) {
+        return protocol.accept(this);
+    }
+
+    public String getStorename() {
+        return storename;
+    }
+
+    @Override
+    public boolean equals(Object o) {
+        if (this == o) return true;
+        if (o == null || getClass() != o.getClass()) return false;
+        ViewAquisitionMessage that = (ViewAquisitionMessage) o;
+        return getStorename().equals(that.getStorename());
+    }
+
+    @Override
+    public int hashCode() {
+        return Objects.hash(getStorename());
+    }
+
+    @Override
+    public String toString() {
+        return "ViewAquisitionMessage{" +
+                "storename='" + storename + '\'' +
+                '}';
+    }
+}
Index: src/Communication/websocket/App/messages/Objects/client2server/PurchaseMessage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Communication/websocket/App/messages/Objects/client2server/PurchaseMessage.java	(date 1592314856740)
+++ src/Communication/websocket/App/messages/Objects/client2server/PurchaseMessage.java	(date 1592314856740)
@@ -0,0 +1,79 @@
+package Communication.websocket.App.messages.Objects.client2server;
+
+import Communication.websocket.App.api_impl.MallProtocol;
+import Communication.websocket.App.messages.Macros.Opcodes;
+import Communication.websocket.App.messages.api.Client2ServerMessage;
+import Communication.websocket.App.messages.api.Message;
+
+import java.util.Objects;
+
+public class PurchaseMessage extends Client2ServerMessage {
+
+    private final String creditcardNumber;
+    private final String eDate;
+    private final String css;
+    private final String owner;
+    private final String shipAdress;
+
+    public PurchaseMessage(long id, String creditcardNumber, String EDate, String CSS, String Owner, String ShipAdress) {
+        super(Opcodes.Purches, id);
+        this.creditcardNumber = creditcardNumber;
+        eDate = EDate;
+        css = CSS;
+        owner = Owner;
+        shipAdress = ShipAdress;
+    }
+
+    public String getCreditcardNumber() {
+        return creditcardNumber;
+    }
+
+    public String geteDate() {
+        return eDate;
+    }
+
+    public String getCss() {
+        return css;
+    }
+
+    public String getOwner() {
+        return owner;
+    }
+
+    public String getShipAdress() {
+        return shipAdress;
+    }
+
+    @Override
+    public boolean equals(Object o) {
+        if (this == o) return true;
+        if (o == null || getClass() != o.getClass()) return false;
+        PurchaseMessage that = (PurchaseMessage) o;
+        return getCreditcardNumber().equals(that.getCreditcardNumber()) &&
+                geteDate().equals(that.geteDate()) &&
+                getCss().equals(that.getCss()) &&
+                getOwner().equals(that.getOwner()) &&
+                getShipAdress().equals(that.getShipAdress());
+    }
+
+    @Override
+    public String toString() {
+        return "PurchaseMessage{" +
+                "creditcardNumber='" + creditcardNumber + '\'' +
+                ", eDate='" + eDate + '\'' +
+                ", css='" + css + '\'' +
+                ", owner='" + owner + '\'' +
+                ", shipAdress='" + shipAdress + '\'' +
+                '}';
+    }
+
+    @Override
+    public int hashCode() {
+        return Objects.hash(getCreditcardNumber(), geteDate(), getCss(), getOwner(), getShipAdress());
+    }
+
+    @Override
+    public Message visit(MallProtocol protocol) {
+        return protocol.accept(this);
+    }
+}
Index: src/Communication/websocket/App/messages/Objects/client2server/EditPermitionsMessage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Communication/websocket/App/messages/Objects/client2server/EditPermitionsMessage.java	(date 1592314856740)
+++ src/Communication/websocket/App/messages/Objects/client2server/EditPermitionsMessage.java	(date 1592314856740)
@@ -0,0 +1,63 @@
+package Communication.websocket.App.messages.Objects.client2server;
+
+import Communication.websocket.App.api_impl.MallProtocol;
+import Communication.websocket.App.messages.Macros.Opcodes;
+import Communication.websocket.App.messages.api.Client2ServerMessage;
+import Communication.websocket.App.messages.api.Message;
+
+import java.util.List;
+import java.util.Objects;
+
+public class EditPermitionsMessage extends Client2ServerMessage {
+    private final String storeName;
+    private final String managerName;
+    private final List<String> permitions;
+
+    public EditPermitionsMessage(long id, String storeName, String managerName, List<String> permitions) {
+        super(Opcodes.editMangagerPermesions, id);
+        this.storeName = storeName;
+        this.managerName = managerName;
+        this.permitions = permitions;
+    }
+
+    @Override
+    public Message visit(MallProtocol protocol) {
+        return protocol.accept(this);
+    }
+
+    public String getStoreName() {
+        return storeName;
+    }
+
+    public String getManagerName() {
+        return managerName;
+    }
+
+    public List<String> getPermitions() {
+        return permitions;
+    }
+
+    @Override
+    public boolean equals(Object o) {
+        if (this == o) return true;
+        if (o == null || getClass() != o.getClass()) return false;
+        EditPermitionsMessage that = (EditPermitionsMessage) o;
+        return getStoreName().equals(that.getStoreName()) &&
+                getManagerName().equals(that.getManagerName()) &&
+                getPermitions().equals(that.getPermitions());
+    }
+
+    @Override
+    public int hashCode() {
+        return Objects.hash(getStoreName(), getManagerName(), getPermitions());
+    }
+
+    @Override
+    public String toString() {
+        return "EditPermitionsMessage{" +
+                "storeName='" + storeName + '\'' +
+                ", manaferNane='" + managerName + '\'' +
+                ", permotions=" + permitions +
+                '}';
+    }
+}
Index: src/Communication/websocket/App/messages/Objects/client2server/FireMessage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Communication/websocket/App/messages/Objects/client2server/FireMessage.java	(date 1592314856740)
+++ src/Communication/websocket/App/messages/Objects/client2server/FireMessage.java	(date 1592314856740)
@@ -0,0 +1,55 @@
+package Communication.websocket.App.messages.Objects.client2server;
+
+import Communication.websocket.App.api_impl.MallProtocol;
+import Communication.websocket.App.messages.Macros.Opcodes;
+import Communication.websocket.App.messages.api.Client2ServerMessage;
+import Communication.websocket.App.messages.api.Message;
+
+import java.util.Objects;
+
+public class FireMessage extends Client2ServerMessage {
+    private final String username;
+    private final String storeName;
+
+    public FireMessage(long id, String username, String storeName) {
+        super(Opcodes.FireManager, id);
+        this.username = username;
+        this.storeName = storeName;
+    }
+
+    public String getUsername() {
+        return username;
+    }
+
+    public String getStoreName() {
+        return storeName;
+    }
+
+    @Override
+    public boolean equals(Object o) {
+        if (this == o) return true;
+        if (o == null || getClass() != o.getClass()) return false;
+        FireMessage that = (FireMessage) o;
+        return getUsername().equals(that.getUsername()) &&
+                getStoreName().equals(that.getStoreName());
+    }
+
+    @Override
+    public int hashCode() {
+        return Objects.hash(getUsername(), getStoreName());
+    }
+
+
+    @Override
+    public String toString() {
+        return "FireMessage{" +
+                "username='" + username + '\'' +
+                ", storeName='" + storeName + '\'' +
+                '}';
+    }
+
+    @Override
+    public Message visit(MallProtocol protocol) {
+        return protocol.accept(this);
+    }
+}
Index: src/Communication/websocket/App/messages/Objects/client2server/RemoveProductMessage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Communication/websocket/App/messages/Objects/client2server/RemoveProductMessage.java	(date 1592314856740)
+++ src/Communication/websocket/App/messages/Objects/client2server/RemoveProductMessage.java	(date 1592314856740)
@@ -0,0 +1,55 @@
+package Communication.websocket.App.messages.Objects.client2server;
+
+import Communication.websocket.App.api_impl.MallProtocol;
+import Communication.websocket.App.messages.Macros.Opcodes;
+import Communication.websocket.App.messages.api.Client2ServerMessage;
+import Communication.websocket.App.messages.api.Message;
+
+import java.util.Objects;
+
+public class RemoveProductMessage extends Client2ServerMessage {
+
+    private final String storeName;
+    private final String productName;
+
+    public RemoveProductMessage(long id, String storeName, String productName) {
+        super(Opcodes.RemoveItem, id);
+        this.storeName = storeName;
+        this.productName = productName;
+    }
+
+    public String getStoreName() {
+        return storeName;
+    }
+
+    public String getProductName() {
+        return productName;
+    }
+
+    @Override
+    public boolean equals(Object o) {
+        if (this == o) return true;
+        if (o == null || getClass() != o.getClass()) return false;
+        RemoveProductMessage that = (RemoveProductMessage) o;
+        return getStoreName().equals(that.getStoreName()) &&
+                getProductName().equals(that.getProductName());
+    }
+
+    @Override
+    public String toString() {
+        return "RemoveProductMessage{" +
+                "storeName='" + storeName + '\'' +
+                ", productName='" + productName + '\'' +
+                '}';
+    }
+
+    @Override
+    public int hashCode() {
+        return Objects.hash(getStoreName(), getProductName());
+    }
+
+    @Override
+    public Message visit(MallProtocol protocol) {
+        return protocol.accept(this);
+    }
+}
Index: src/Communication/websocket/App/messages/Objects/client2server/CreateProductMessage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Communication/websocket/App/messages/Objects/client2server/CreateProductMessage.java	(date 1592314856740)
+++ src/Communication/websocket/App/messages/Objects/client2server/CreateProductMessage.java	(date 1592314856740)
@@ -0,0 +1,87 @@
+package Communication.websocket.App.messages.Objects.client2server;
+
+import Communication.websocket.App.api_impl.MallProtocol;
+import Communication.websocket.App.messages.Macros.Opcodes;
+import Communication.websocket.App.messages.api.Client2ServerMessage;
+import Communication.websocket.App.messages.api.Message;
+
+import java.util.List;
+import java.util.Objects;
+
+public class CreateProductMessage extends Client2ServerMessage {
+    private final String name;
+    private final double price;
+    private final List<String> categoories;
+    private final List<String> keywords;
+    private final String storeName;
+    private final int ammount;
+
+    public CreateProductMessage(long id, String name, double price, List<String> categoories, List<String> keywords, String storeName, int ammount) {
+        super(Opcodes.AddProduct2Store, id);
+        this.name = name;
+        this.price = price;
+        this.categoories = categoories;
+        this.keywords = keywords;
+        this.storeName = storeName;
+        this.ammount = ammount;
+    }
+
+    public String getName() {
+        return name;
+    }
+
+    public double getPrice() {
+        return price;
+    }
+
+    public List<String> getCategoories() {
+        return categoories;
+    }
+
+    public List<String> getKeywords() {
+        return keywords;
+    }
+
+    public String getStoreName() {
+        return storeName;
+    }
+
+    public int getAmmount() {
+        return ammount;
+    }
+
+    @Override
+    public boolean equals(Object o) {
+        if (this == o) return true;
+        if (o == null || getClass() != o.getClass()) return false;
+        CreateProductMessage that = (CreateProductMessage) o;
+        return Double.compare(that.getPrice(), getPrice()) == 0 &&
+                getAmmount() == that.getAmmount() &&
+                getName().equals(that.getName()) &&
+                getCategoories().equals(that.getCategoories()) &&
+                getKeywords().equals(that.getKeywords()) &&
+                getStoreName().equals(that.getStoreName());
+    }
+
+    @Override
+    public int hashCode() {
+        return Objects.hash(getName(), getPrice(), getCategoories(), getKeywords(), getStoreName(), getAmmount());
+    }
+
+    @Override
+    public String toString() {
+        return "CreateProductMessage{" +
+                "name='" + name + '\'' +
+                ", price=" + price +
+                ", categoories=" + categoories +
+                ", keywords=" + keywords +
+                ", storeName='" + storeName + '\'' +
+                ", ammount=" + ammount +
+                '}';
+    }
+
+    @Override
+    public Message visit(MallProtocol protocol) {
+        return protocol.accept(this);
+    }
+}
Index: src/Communication/websocket/App/messages/Objects/client2server/AppointMessage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Communication/websocket/App/messages/Objects/client2server/AppointMessage.java	(date 1592314856740)
+++ src/Communication/websocket/App/messages/Objects/client2server/AppointMessage.java	(date 1592314856740)
@@ -0,0 +1,62 @@
+package Communication.websocket.App.messages.Objects.client2server;
+
+import Communication.websocket.App.api_impl.MallProtocol;
+import Communication.websocket.App.messages.Macros.Opcodes;
+import Communication.websocket.App.messages.api.Client2ServerMessage;
+import Communication.websocket.App.messages.api.Message;
+
+import java.util.Objects;
+
+public class AppointMessage extends Client2ServerMessage {
+    private final String username;
+    private final String storename;
+    private final byte role;
+
+    public AppointMessage(long id, String username, String storename, byte role) {
+        super(Opcodes.Appoint, id);
+        this.username = username;
+        this.storename = storename;
+        this.role = role;
+    }
+
+    public String getUsername() {
+        return username;
+    }
+
+    public String getStorename() {
+        return storename;
+    }
+
+    public byte getRole() {
+        return role;
+    }
+
+    @Override
+    public boolean equals(Object o) {
+        if (this == o) return true;
+        if (o == null || getClass() != o.getClass()) return false;
+        AppointMessage that = (AppointMessage) o;
+        return getRole() == that.getRole() &&
+                getUsername().equals(that.getUsername()) &&
+                getStorename().equals(that.getStorename());
+    }
+
+    @Override
+    public int hashCode() {
+        return Objects.hash(getUsername(), getStorename(), getRole());
+    }
+
+    @Override
+    public String toString() {
+        return "AppointMessage{" +
+                "username='" + username + '\'' +
+                ", storename='" + storename + '\'' +
+                ", role=" + role +
+                '}';
+    }
+
+    @Override
+    public Message visit(MallProtocol protocol) {
+        return protocol.accept(this);
+    }
+}
Index: src/Communication/websocket/App/messages/Objects/server2client/StoreListResponse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Communication/websocket/App/messages/Objects/server2client/StoreListResponse.java	(date 1592314856740)
+++ src/Communication/websocket/App/messages/Objects/server2client/StoreListResponse.java	(date 1592314856740)
@@ -0,0 +1,46 @@
+package Communication.websocket.App.messages.Objects.server2client;
+
+import Communication.websocket.App.EncoderDecoder.MessageEncoder;
+import Communication.websocket.App.messages.api.Server2ClientMessage;
+
+import java.util.List;
+import java.util.Objects;
+
+public class StoreListResponse extends Server2ClientMessage {
+
+    private final List<String> stores;
+
+    public StoreListResponse(byte opcode, long replayForID, List<String> stores) {
+        super(opcode, replayForID);
+        this.stores = stores;
+    }
+
+    public List<String> getStores() {
+        return stores;
+    }
+
+    @Override
+    public boolean equals(Object o) {
+        if (this == o) return true;
+        if (o == null || getClass() != o.getClass()) return false;
+        StoreListResponse that = (StoreListResponse) o;
+        return getStores().equals(that.getStores());
+    }
+
+    @Override
+    public int hashCode() {
+        return Objects.hash(getStores());
+    }
+
+    @Override
+    public String toString() {
+        return "StoreListResponse{" +
+                "stores=" + stores +
+                '}';
+    }
+
+    @Override
+    public String visit(MessageEncoder encoder) {
+        return encoder.accept(this);
+    }
+}
Index: src/Communication/websocket/App/messages/Objects/server2client/ProductDetailsListResponse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Communication.websocket.App.messages.Objects.server2client;\n\nimport Communication.websocket.App.EncoderDecoder.MessageEncoder;\nimport Communication.websocket.App.messages.api.Server2ClientMessage;\nimport Domain.info.ProductDetails;\n\nimport java.util.List;\nimport java.util.Objects;\n\npublic class ProductDetailsListResponse extends Server2ClientMessage {\n\n    private List<ProductDetails> products;\n\n\n\n    public ProductDetailsListResponse(long replayForID,List<ProductDetails> products) {\n        super((byte)-1, replayForID);\n\n        this.products = products;\n    }\n\n    @Override\n    public String visit(MessageEncoder encoder) {\n        return encoder.accept(this);\n    }\n\n\n    public List<ProductDetails> getProducts() {\n        return products;\n    }\n\n    @Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        ProductDetailsListResponse that = (ProductDetailsListResponse) o;\n        return getProducts().equals(that.getProducts());\n    }\n\n    @Override\n    public int hashCode() {\n        return Objects.hash(getProducts());\n    }\n\n    @Override\n    public String toString() {\n        return \"ProductDetailsListResponse{\" +\n                \"products=\" + products +\n                '}';\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Communication/websocket/App/messages/Objects/server2client/ProductDetailsListResponse.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Communication/websocket/App/messages/Objects/server2client/ProductDetailsListResponse.java	(date 1592314856740)
@@ -45,7 +45,7 @@
     @Override
     public String toString() {
         return "ProductDetailsListResponse{" +
-                "products=" + products +
+                "products=" + products.toString() +
                 '}';
     }
 }
Index: src/Communication/websocket/App/messages/Objects/server2client/StoreProductsResponseMessage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Communication.websocket.App.messages.Objects.server2client;\n\nimport Communication.websocket.App.EncoderDecoder.MessageEncoder;\nimport Communication.websocket.App.messages.Macros.Opcodes;\nimport Communication.websocket.App.messages.api.Server2ClientMessage;\nimport Domain.info.ProductDetails;\n\nimport java.util.List;\nimport java.util.Objects;\n\npublic class StoreProductsResponseMessage extends Server2ClientMessage {\n\n    private List<ProductDetails> products;\n\n    public StoreProductsResponseMessage(long replayForID, List<ProductDetails> products) {\n        super(Opcodes.StoreProducts, replayForID);\n        this.products = products;\n    }\n\n\n    @Override\n    public String visit(MessageEncoder encoder) {\n        return encoder.accept(this);\n    }\n\n    public List<ProductDetails> getProducts() {\n        return products;\n    }\n\n    @Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        StoreProductsResponseMessage that = (StoreProductsResponseMessage) o;\n        return getProducts().equals(that.getProducts());\n    }\n\n    @Override\n    public int hashCode() {\n        return Objects.hash(getProducts());\n    }\n\n    @Override\n    public String toString() {\n        return \"StoreProductsResponseMessage{\" +\n                \"products=\" + products +\n                '}';\n    }\n}\n
===================================================================
--- src/Communication/websocket/App/messages/Objects/server2client/StoreProductsResponseMessage.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Communication/websocket/App/messages/Objects/server2client/PrductsInCartResponse.java	(date 1592314856740)
@@ -1,28 +1,30 @@
 package Communication.websocket.App.messages.Objects.server2client;
 
 import Communication.websocket.App.EncoderDecoder.MessageEncoder;
-import Communication.websocket.App.messages.Macros.Opcodes;
 import Communication.websocket.App.messages.api.Server2ClientMessage;
 import Domain.info.ProductDetails;
 
 import java.util.List;
 import java.util.Objects;
 
-public class StoreProductsResponseMessage extends Server2ClientMessage {
+public class PrductsInCartResponse extends Server2ClientMessage {
 
     private List<ProductDetails> products;
 
-    public StoreProductsResponseMessage(long replayForID, List<ProductDetails> products) {
-        super(Opcodes.StoreProducts, replayForID);
+
+
+    public PrductsInCartResponse(long replayForID,List<ProductDetails> products) {
+        super((byte)-1, replayForID);
+
         this.products = products;
     }
 
-
     @Override
     public String visit(MessageEncoder encoder) {
         return encoder.accept(this);
     }
 
+
     public List<ProductDetails> getProducts() {
         return products;
     }
@@ -31,7 +33,7 @@
     public boolean equals(Object o) {
         if (this == o) return true;
         if (o == null || getClass() != o.getClass()) return false;
-        StoreProductsResponseMessage that = (StoreProductsResponseMessage) o;
+        PrductsInCartResponse that = (PrductsInCartResponse) o;
         return getProducts().equals(that.getProducts());
     }
 
@@ -42,8 +44,8 @@
 
     @Override
     public String toString() {
-        return "StoreProductsResponseMessage{" +
-                "products=" + products +
+        return "PrductsInCartResponse{" +
+                "products=" + products.toString() +
                 '}';
     }
 }
Index: src/Communication/websocket/App/messages/Objects/server2client/PerchesListResponse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Communication.websocket.App.messages.Objects.server2client;\n\nimport Communication.websocket.App.EncoderDecoder.MessageEncoder;\nimport Communication.websocket.App.messages.api.Server2ClientMessage;\nimport Domain.RedClasses.UserPurchase;\nimport Domain.Store.Purchase;\n\nimport java.util.List;\nimport java.util.Objects;\n\npublic class PerchesListResponse extends Server2ClientMessage {\n\n    private List<UserPurchase> purchase;\n\n    public PerchesListResponse(byte opcode, long replayForID, List<UserPurchase> purchase) {\n        super(opcode, replayForID);\n        this.purchase = purchase;\n    }\n\n    @Override\n    public String visit(MessageEncoder encoder) {\n        return encoder.accept(this);\n    }\n\n    public List<UserPurchase> getPurchase() {\n        return purchase;\n    }\n\n    @Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        PerchesListResponse that = (PerchesListResponse) o;\n        return getPurchase().equals(that.getPurchase());\n    }\n\n    @Override\n    public int hashCode() {\n        return Objects.hash(getPurchase());\n    }\n\n    @Override\n    public String toString() {\n        return \"PerchesListResponse{\" +\n                \"purchase=\" + purchase +\n                '}';\n    }\n}\n
===================================================================
--- src/Communication/websocket/App/messages/Objects/server2client/PerchesListResponse.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Communication/websocket/App/messages/Objects/server2client/UserPurchaseListResponse.java	(date 1592314856740)
@@ -2,17 +2,16 @@
 
 import Communication.websocket.App.EncoderDecoder.MessageEncoder;
 import Communication.websocket.App.messages.api.Server2ClientMessage;
-import Domain.RedClasses.UserPurchase;
-import Domain.Store.Purchase;
+import Domain.UserClasses.UserPurchase;
 
 import java.util.List;
 import java.util.Objects;
 
-public class PerchesListResponse extends Server2ClientMessage {
+public class UserPurchaseListResponse extends Server2ClientMessage {
 
     private List<UserPurchase> purchase;
 
-    public PerchesListResponse(byte opcode, long replayForID, List<UserPurchase> purchase) {
+    public UserPurchaseListResponse(byte opcode, long replayForID, List<UserPurchase> purchase) {
         super(opcode, replayForID);
         this.purchase = purchase;
     }
@@ -30,7 +29,7 @@
     public boolean equals(Object o) {
         if (this == o) return true;
         if (o == null || getClass() != o.getClass()) return false;
-        PerchesListResponse that = (PerchesListResponse) o;
+        UserPurchaseListResponse that = (UserPurchaseListResponse) o;
         return getPurchase().equals(that.getPurchase());
     }
 
Index: src/Communication/websocket/App/messages/Objects/server2client/StorePurchaseListResponse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Communication/websocket/App/messages/Objects/server2client/StorePurchaseListResponse.java	(date 1592314856740)
+++ src/Communication/websocket/App/messages/Objects/server2client/StorePurchaseListResponse.java	(date 1592314856740)
@@ -0,0 +1,47 @@
+package Communication.websocket.App.messages.Objects.server2client;
+
+import Communication.websocket.App.EncoderDecoder.MessageEncoder;
+import Communication.websocket.App.messages.api.Server2ClientMessage;
+import Domain.Store.StorePurchase;
+
+import java.util.List;
+import java.util.Objects;
+
+public class StorePurchaseListResponse extends Server2ClientMessage {
+
+    private final List<StorePurchase> purchases;
+
+    public StorePurchaseListResponse(byte opcode, long replayForID, List<StorePurchase> purchases) {
+        super(opcode, replayForID);
+        this.purchases = purchases;
+    }
+
+    @Override
+    public String visit(MessageEncoder encoder) {
+        return encoder.accept(this);
+    }
+
+    public List<StorePurchase> getPurchases() {
+        return purchases;
+    }
+
+    @Override
+    public boolean equals(Object o) {
+        if (this == o) return true;
+        if (o == null || getClass() != o.getClass()) return false;
+        StorePurchaseListResponse that = (StorePurchaseListResponse) o;
+        return getPurchases().equals(that.getPurchases());
+    }
+
+    @Override
+    public int hashCode() {
+        return Objects.hash(getPurchases());
+    }
+
+    @Override
+    public String toString() {
+        return "StorePurchaseListResponse{" +
+                "purchases=" + purchases +
+                '}';
+    }
+}
Index: src/Communication/websocket/App/RunServer/MallServer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Communication.websocket.App.RunServer;\n\nimport Communication.websocket.App.EncoderDecoder.MessageDecoder;\nimport Communication.websocket.App.EncoderDecoder.MessageEncoder;\nimport Communication.websocket.App.api_impl.MallProtocol;\nimport Communication.websocket.App.messages.api.Message;\nimport Service_Layer.guest_accese.guest_accese;\nimport org.glassfish.tyrus.server.Server;\n\nimport javax.websocket.*;\nimport javax.websocket.server.ServerEndpoint;\nimport java.io.IOException;\nimport java.time.LocalDateTime;\nimport java.util.*;\nimport java.util.concurrent.ConcurrentHashMap;\n\n@ServerEndpoint(\n        value = \"/mall\",\n        encoders = { MessageEncoder.class },\n        decoders = { MessageDecoder.class }\n)\npublic class MallServer {\n\n\n    // IMPORTANT !!!!\n    // In order to allow row wss, on need to run the following command in the terminal (from the RunServer folder)\n    // sudo haproxy -f ws.cfg\n\n    // Domain :\n    // wss://workshopv2.ddnsking.com/mall\n\n\n    public static void main(String[] args) throws DeploymentException {\n        run();\n    }\n\n    public static void run() throws DeploymentException {\n        protocols = new ConcurrentHashMap<>();\n\n        Server server = new Server(\"localhost\", 8080, \"\", MallServer.class);\n\n        server.start();\n        new Scanner(System.in).nextLine();\n        server.stop();\n    }\n\n\n\n    /** a map of message protocols by the session */\n    private static Map<Session, MallProtocol> protocols;\n\n\n\n    public MallServer() { }\n\n    @OnOpen\n    public void onOpen(Session session){\n        System.out.printf(\"[\" + LocalDateTime.now() + \"]: \" + \"Opened session. id: %s\\n\", session.getId());\n\n        protocols.put(session, new MallProtocol(guest_accese.ImNew()));\n    }\n\n\n    @OnMessage\n    public void onMessage(Session session, Message msg){\n        System.out.printf(\"[\" + LocalDateTime.now() + \"]: \" + \"message received. session id: %s.  Message : %s\\n\", session.getId(), msg.toString());\n\n        MallProtocol protocol = Objects.requireNonNull(protocols.get(session));\n        Message response = protocol.process(msg);\n\n        // sand back if there is a response\n        if(response != null){\n            try {\n                session.getBasicRemote().sendObject(response);\n                System.out.printf(\"[\" + LocalDateTime.now() + \"]: \" + \"sending message. session id: %s.  Message : %s\\n\", session.getId(), response.toString());\n            } catch (IOException | EncodeException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n\n    @OnError\n    public void onError(Throwable e){\n        e.printStackTrace();\n    }\n\n    @OnClose\n    public void onClose(Session session){\n        System.out.println(String.format(\"closeted session. id: %s\", session.getId()));\n        protocols.remove(session);\n    }\n\n\n\n    /**\n     * convert a klist to array\n     * @return the list to convert\n     */\n    private byte[] list2array(Deque<Byte> lst){\n\n        int size = lst.size();\n        int i = 0;\n\n        byte[] arr = new byte[size];\n\n        for (Byte b: lst){\n            arr[i] = b;\n            i++;\n        }\n\n        return  arr;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Communication/websocket/App/RunServer/MallServer.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Communication/websocket/App/RunServer/MallServer.java	(date 1592314856740)
@@ -4,8 +4,14 @@
 import Communication.websocket.App.EncoderDecoder.MessageEncoder;
 import Communication.websocket.App.api_impl.MallProtocol;
 import Communication.websocket.App.messages.api.Message;
+import Communication.websocket.api.MessagingProtocol;
+import Domain.Store.Product;
+import Domain.info.ProductDetails;
 import Service_Layer.guest_accese.guest_accese;
+import Service_Layer.member_accese.member_accese;
+import Service_Layer.owner_accese.owner_accese;
 import org.glassfish.tyrus.server.Server;
+import tests.AcceptanceTests.auxiliary.StoreDetails;
 
 import javax.websocket.*;
 import javax.websocket.server.ServerEndpoint;
@@ -35,8 +41,9 @@
     }
 
     public static void run() throws DeploymentException {
+        initSysyem();
+
         protocols = new ConcurrentHashMap<>();
-
         Server server = new Server("localhost", 8080, "", MallServer.class);
 
         server.start();
@@ -44,10 +51,27 @@
         server.stop();
     }
 
+    private static void initSysyem(){
+
+    }
+
 
 
     /** a map of message protocols by the session */
-    private static Map<Session, MallProtocol> protocols;
+    private static Map<Session, MessagingProtocol<Message>> protocols;
+
+    public void send(MessagingProtocol<Message> protocol, String msg){
+        protocols.forEach(((session, messageMessagingProtocol) -> {
+            if(messageMessagingProtocol == protocol){
+                try {
+                    System.out.println("sending special message : " + msg);
+                    session.getBasicRemote().sendText(MessageEncoder.string2jason(msg));
+                } catch (IOException e) {
+                    e.printStackTrace();
+                }
+            }
+        }));
+    }
 
 
 
@@ -57,7 +81,7 @@
     public void onOpen(Session session){
         System.out.printf("[" + LocalDateTime.now() + "]: " + "Opened session. id: %s\n", session.getId());
 
-        protocols.put(session, new MallProtocol(guest_accese.ImNew()));
+        protocols.put(session, new MallProtocol(this));
     }
 
 
@@ -65,7 +89,7 @@
     public void onMessage(Session session, Message msg){
         System.out.printf("[" + LocalDateTime.now() + "]: " + "message received. session id: %s.  Message : %s\n", session.getId(), msg.toString());
 
-        MallProtocol protocol = Objects.requireNonNull(protocols.get(session));
+        MessagingProtocol<Message> protocol = Objects.requireNonNull(protocols.get(session));
         Message response = protocol.process(msg);
 
         // sand back if there is a response
Index: src/Communication/websocket/App/messages/Objects/server2client/QustionListResponse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Communication/websocket/App/messages/Objects/server2client/QustionListResponse.java	(date 1592314856740)
+++ src/Communication/websocket/App/messages/Objects/server2client/QustionListResponse.java	(date 1592314856740)
@@ -0,0 +1,48 @@
+package Communication.websocket.App.messages.Objects.server2client;
+
+import Communication.websocket.App.EncoderDecoder.MessageEncoder;
+import Communication.websocket.App.messages.api.Server2ClientMessage;
+import Domain.info.Question;
+
+import java.util.List;
+import java.util.Objects;
+
+public class QustionListResponse extends Server2ClientMessage {
+
+    private List<Question> questions;
+
+    public QustionListResponse(byte opcode, long replayForID, List<Question> questions) {
+        super(opcode, replayForID);
+
+        this.questions = questions;
+    }
+
+    @Override
+    public String visit(MessageEncoder encoder) {
+        return encoder.accept(this);
+    }
+
+    public List<Question> getQuestions() {
+        return questions;
+    }
+
+    @Override
+    public boolean equals(Object o) {
+        if (this == o) return true;
+        if (o == null || getClass() != o.getClass()) return false;
+        QustionListResponse that = (QustionListResponse) o;
+        return getQuestions().equals(that.getQuestions());
+    }
+
+    @Override
+    public int hashCode() {
+        return Objects.hash(getQuestions());
+    }
+
+    @Override
+    public String toString() {
+        return "QustionListResponse{" +
+                "questions=" + questions +
+                '}';
+    }
+}
Index: src/extornal/payment/CreditCard.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/extornal/payment/CreditCard.java	(date 1592314856744)
+++ src/extornal/payment/CreditCard.java	(date 1592314856744)
@@ -0,0 +1,67 @@
+package extornal.payment;
+
+import java.util.Objects;
+
+public class CreditCard {
+
+    private String cardNumber;
+    private String expirationDate;
+    private String CSS;
+    private String cardOwner;
+
+    public CreditCard(String cardNumber) {
+        this.cardNumber = cardNumber;
+        expirationDate = "null";
+        CSS = "null";
+        cardOwner = "null";
+    }
+
+    public CreditCard(String cardNumber, String expirationDate, String css, String cardOwner) {
+        this.cardNumber = cardNumber;
+        this.expirationDate = expirationDate;
+        this.CSS = css;
+        this.cardOwner = cardOwner;
+    }
+
+    public String getCardNumber() {
+        return cardNumber;
+    }
+
+    public String getExpirationDate() {
+        return expirationDate;
+    }
+
+    public String getCSS() {
+        return CSS;
+    }
+
+    public String getCardOwner() {
+        return cardOwner;
+    }
+
+    @Override
+    public boolean equals(Object o) {
+        if (this == o) return true;
+        if (o == null || getClass() != o.getClass()) return false;
+        CreditCard that = (CreditCard) o;
+        return getCardNumber().equals(that.getCardNumber()) &&
+                getExpirationDate().equals(that.getExpirationDate()) &&
+                getCSS().equals(that.getCSS()) &&
+                getCardOwner().equals(that.getCardOwner());
+    }
+
+    @Override
+    public int hashCode() {
+        return Objects.hash(getCardNumber(), getExpirationDate(), getCSS(), getCardOwner());
+    }
+
+    @Override
+    public String toString() {
+        return "CredotCard{" +
+                "cardNumber='" + cardNumber + '\'' +
+                ", expirationDate='" + expirationDate + '\'' +
+                ", CSS='" + CSS + '\'' +
+                ", cardOwner='" + cardOwner + '\'' +
+                '}';
+    }
+}
Index: src/Communication/websocket/App/EncoderDecoder/MessageEncoder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Communication.websocket.App.EncoderDecoder;\n\n\nimport Communication.websocket.App.messages.Macros.Delimiters;\nimport Communication.websocket.App.messages.Objects.server2client.*;\nimport Communication.websocket.App.messages.api.Message;\nimport Communication.websocket.App.messages.api.Server2ClientMessage;\nimport Domain.info.ProductDetails;\nimport org.json.simple.JSONObject;\n\nimport javax.websocket.EncodeException;\nimport javax.websocket.Encoder;\nimport javax.websocket.EndpointConfig;\nimport java.util.LinkedList;\nimport java.util.List;\nimport java.util.Objects;\n\npublic class MessageEncoder implements  Encoder.Text<Message> {\n\n    private JSONObject json;\n\n\n    @Override\n    public String encode(Message msg) throws EncodeException {\n\n        String response = ((Server2ClientMessage)msg).visit(this);\n        System.out.println(response);\n\n        return  response;\n    }\n\n\n    @Override\n    public void init(EndpointConfig endpointConfig) {\n\n    }\n\n    @Override\n    public void destroy() {\n\n    }\n\n\n\n    /**\n     * convert a klist to array\n     * @return the list to convert\n     */\n    private byte[] list2array(List<Byte> lst){\n\n        int size = lst.size();\n        int i = 0;\n\n        byte[] arr = new byte[size];\n\n       for (Byte b: lst){\n           arr[i] = b;\n           i++;\n       }\n\n        return  arr;\n    }\n\n    /**\n     * convert a list to jason array\n     * @return the list to convert\n     */\n    private JSONObject list2jason(List<Byte> lst){\n\n        JSONObject jsn = new JSONObject();\n\n        int i = 0;\n\n        for (Byte b: lst){\n            jsn.put(String.valueOf(i), b);\n            i++;\n        }\n\n        return  jsn;\n    }\n\n    /**\n     * offer the delimiter to a list of bytes\n     * @param lst the list\n     */\n    private void offerDelimiter(LinkedList<Byte> lst){\n        lst.offer(Delimiters.PARAMETER_DELIMITER);\n    }\n\n    /**\n     * offer the list delimiter to a list of bytes\n     * @param lst the list\n     */\n    private void offerListDelimiter(LinkedList<Byte> lst){\n        lst.offer(Delimiters.LIST_DELIMITER);\n    }\n\n\n    /**\n     * offer a string to a list of bytes\n     * @param lst the list\n     * @param s the string to offer\n     */\n    private void offerString( LinkedList<Byte> lst, String s){\n        byte[] bytes = s.getBytes();\n\n        for (byte aByte : bytes) {\n            lst.offer(aByte);\n        }\n    }\n\n    /**\n     * offer a byte to a list of bytes\n     * @param lst the list\n     * @param b the byte to offer\n     */\n    private void offerByte( LinkedList<Byte> lst, byte b){\n        lst.offer(b);\n    }\n\n    /**\n     * offer a list to a list of bytes\n     * @param lst the list\n     * @param toOffer the list to offer\n     */\n    private void offerList( LinkedList<Byte> lst, List<String> toOffer){\n\n        boolean first = true;\n\n        for (String cur: toOffer) {\n\n            if(!first)\n                offerListDelimiter(lst);\n\n            offerString(lst, cur);\n            first = false;\n        }\n    }\n\n    /**\n     * offer a list to a list of bytes\n     * @param lst the list\n     * @param toOffer the list to offer\n     */\n    private void offerProductList( LinkedList<Byte> lst, List<ProductDetails> toOffer){\n\n        boolean first = true;\n\n        for (ProductDetails cur: toOffer) {\n\n            if(!first)\n                offerListDelimiter(lst);\n\n            offerString(lst, cur.getStoreName());\n            offerByte(lst, Delimiters.LIST_DELIMITER_L2);\n            offerByte(lst, (byte)cur.getAmount());\n\n            first = false;\n        }\n    }\n\n    private void offerProductsNames( LinkedList<Byte> lst, List<ProductDetails> toOffer){\n\n        boolean first = true;\n\n        for (ProductDetails cur: toOffer) {\n\n            if(!first)\n                offerListDelimiter(lst);\n\n            offerString(lst, cur.getName());\n\n            first = false;\n        }\n    }\n\n\n\n\n    private String createJsonString(long replayForID, List<Byte> lst)\n    {\n        json = new JSONObject();\n        json.put(\"cmd_id\", replayForID);\n        json.put(\"result\", list2jason(lst));\n\n        return  json.toString();\n    }\n\n\n\n\n\n\n\n\n    public String accept(AckMessage msg){\n        json = new JSONObject();\n        json.put(\"cmd_id\", msg.getReplayForID());\n        json.put(\"result\", msg.getOpcode());\n\n        return  json.toString();\n    }\n\n    public String accept(NackMessage msg){\n        json = new JSONObject();\n        json.put(\"cmd_id\", msg.getReplayForID());\n        json.put(\"result\", msg.getOpcode());\n\n        return  json.toString();\n\n    }\n\n\n    public String accept(StorDetailsResponseMessage msg) {\n        LinkedList<Byte> lst = new LinkedList<>();\n\n        offerString(lst, msg.getName());\n        offerDelimiter(lst);\n\n        offerString(lst, msg.getAdress());\n        offerDelimiter(lst);\n\n        offerByte(lst, msg.getRating());\n\n        return createJsonString(msg.getReplayForID(), lst);\n    }\n\n    public String accept(StoreProductsResponseMessage msg) {\n        LinkedList<Byte> lst = new LinkedList<>();\n\n        offerProductsNames(lst, msg.getProducts());\n\n        return createJsonString(msg.getReplayForID(), lst);\n    }\n\n    public String accept(ProductDetailsListResponse msg) {\n        LinkedList<Byte> lst = new LinkedList<>();\n\n        offerProductList(lst, msg.getProducts());\n\n        return createJsonString(msg.getReplayForID(), lst);\n    }\n\n    public String accept(PerchesListResponse msg) {\n        LinkedList<Byte> lst = new LinkedList<>();\n\n        //offerProductList(lst, msg.getPurchase().);\n        // todo : impliment\n\n        return createJsonString(msg.getReplayForID(), lst);\n    }\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Communication/websocket/App/EncoderDecoder/MessageEncoder.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Communication/websocket/App/EncoderDecoder/MessageEncoder.java	(date 1592314856740)
@@ -5,7 +5,10 @@
 import Communication.websocket.App.messages.Objects.server2client.*;
 import Communication.websocket.App.messages.api.Message;
 import Communication.websocket.App.messages.api.Server2ClientMessage;
+import Domain.UserClasses.UserPurchase;
+import Domain.Store.StorePurchase;
 import Domain.info.ProductDetails;
+import Domain.info.Question;
 import org.json.simple.JSONObject;
 
 import javax.websocket.EncodeException;
@@ -13,7 +16,6 @@
 import javax.websocket.EndpointConfig;
 import java.util.LinkedList;
 import java.util.List;
-import java.util.Objects;
 
 public class MessageEncoder implements  Encoder.Text<Message> {
 
@@ -24,7 +26,7 @@
     public String encode(Message msg) throws EncodeException {
 
         String response = ((Server2ClientMessage)msg).visit(this);
-        System.out.println(response);
+        System.out.println("row response :" + response);
 
         return  response;
     }
@@ -65,7 +67,7 @@
      * convert a list to jason array
      * @return the list to convert
      */
-    private JSONObject list2jason(List<Byte> lst){
+    public JSONObject list2jason(List<Byte> lst){
 
         JSONObject jsn = new JSONObject();
 
@@ -79,6 +81,20 @@
         return  jsn;
     }
 
+    public static String string2jason(String msg){
+
+        JSONObject jsn = new JSONObject();
+
+        int i = 0;
+
+        for (Byte b: msg.getBytes()){
+            jsn.put(String.valueOf(i), b);
+            i++;
+        }
+
+        return  jsn.toString();
+    }
+
     /**
      * offer the delimiter to a list of bytes
      * @param lst the list
@@ -124,13 +140,17 @@
      * @param toOffer the list to offer
      */
     private void offerList( LinkedList<Byte> lst, List<String> toOffer){
+        offerList(lst,toOffer, Delimiters.LIST_DELIMITER);
+    }
+
+    private void offerList( LinkedList<Byte> lst, List<String> toOffer, byte delemiter){
 
         boolean first = true;
 
         for (String cur: toOffer) {
 
             if(!first)
-                offerListDelimiter(lst);
+                offerByte(lst, delemiter);
 
             offerString(lst, cur);
             first = false;
@@ -151,14 +171,80 @@
             if(!first)
                 offerListDelimiter(lst);
 
+            offerString(lst, cur.getName());
+            offerByte(lst, Delimiters.LIST_DELIMITER_L2);
+            offerString(lst, String.valueOf(cur.getPrice()));
+            offerByte(lst, Delimiters.LIST_DELIMITER_L2);
             offerString(lst, cur.getStoreName());
+
+            first = false;
+        }
+    }
+
+    private void offerCartList( LinkedList<Byte> lst, List<ProductDetails> toOffer){
+
+        boolean first = true;
+
+        for (ProductDetails cur: toOffer) {
+
+            if(!first)
+                offerListDelimiter(lst);
+
+            offerString(lst, cur.getName());
+            offerByte(lst, Delimiters.LIST_DELIMITER_L2);
+            offerString(lst, String.valueOf(cur.getAmount()));
             offerByte(lst, Delimiters.LIST_DELIMITER_L2);
-            offerByte(lst, (byte)cur.getAmount());
+            offerString(lst, cur.getStoreName());
+
+            first = false;
+        }
+    }
+
+    /**
+     * offer a list to a list of bytes
+     * @param lst the list
+     * @param toOffer the list to offer
+     */
+    private void offerUserPurchesList( LinkedList<Byte> lst, List<UserPurchase> toOffer){
+        boolean first = true;
+
+        for (UserPurchase cur: toOffer) {
+
+            if(!first)
+                offerDelimiter(lst);
 
+            offerStorePurchesList(lst, cur.eachPurchase, Delimiters.LIST_DELIMITER, Delimiters.LIST_DELIMITER_L2, Delimiters.LIST_DELIMITER_L3);
+            first = false;
+        }
+
+    }
+
+    private void offerStorePurchesList( LinkedList<Byte> lst, List<StorePurchase> purches){
+        offerStorePurchesList(lst, purches, Delimiters.LIST_DELIMITER, Delimiters.LIST_DELIMITER_L2, Delimiters.LIST_DELIMITER_L3);
+    }
+
+    private void offerStorePurchesList( LinkedList<Byte> lst, List<StorePurchase> toOffer, byte deleliter1, byte deleliter2, byte deleliter3){
+
+        boolean first = true;
+
+        for (StorePurchase cur: toOffer) {
+
+            if(!first)
+                offerByte(lst, deleliter1);
+
+            OfferStorePurchase(lst, cur, deleliter2, deleliter3);
             first = false;
         }
     }
 
+    private void OfferStorePurchase(LinkedList<Byte> lst, StorePurchase toOffer, byte deleliter2, byte deleliter3){
+        offerString(lst, toOffer.get_Store_Name());
+        offerByte(lst, deleliter2);
+        offerProducts(lst, toOffer.getItems(), deleliter3);
+        offerByte(lst, deleliter2);
+        offerString(lst, String.valueOf(toOffer.getPrice()));
+    }
+
     private void offerProductsNames( LinkedList<Byte> lst, List<ProductDetails> toOffer){
 
         boolean first = true;
@@ -174,6 +260,40 @@
         }
     }
 
+    private void offerProducts( LinkedList<Byte> lst, List<ProductDetails> toOffer, byte deleliter){
+
+        boolean first = true;
+
+        for (ProductDetails cur: toOffer) {
+
+            if(!first)
+                offerListDelimiter(lst);
+
+            offerString(lst, cur.getName());
+            offerByte(lst, deleliter);
+            offerByte(lst, (byte) cur.getAmount()); // TODO
+            offerByte(lst, deleliter);
+            offerString(lst, String.valueOf(cur.getPrice()));
+
+            first = false;
+        }
+    }
+
+    private void offerQustionList( LinkedList<Byte> lst, List<Question> toOffer){
+
+        boolean first = true;
+
+        for (Question cur: toOffer) {
+
+            if(!first)
+                offerListDelimiter(lst);
+
+            offerList(lst, cur.getAnsewers(), Delimiters.LIST_DELIMITER_L2);
+
+            first = false;
+        }
+    }
+
 
 
 
@@ -225,27 +345,51 @@
         return createJsonString(msg.getReplayForID(), lst);
     }
 
-    public String accept(StoreProductsResponseMessage msg) {
+    public String accept(ProductDetailsListResponse msg) {
+        LinkedList<Byte> lst = new LinkedList<>();
+
+        offerProductList(lst, msg.getProducts());
+
+        return createJsonString(msg.getReplayForID(), lst);
+    }
+
+
+    public String accept(UserPurchaseListResponse msg) {
         LinkedList<Byte> lst = new LinkedList<>();
 
-        offerProductsNames(lst, msg.getProducts());
+        offerUserPurchesList(lst, msg.getPurchase());
 
         return createJsonString(msg.getReplayForID(), lst);
     }
 
-    public String accept(ProductDetailsListResponse msg) {
+    public String accept(QustionListResponse msg) {
+        LinkedList<Byte> lst = new LinkedList<>();
+
+        offerQustionList(lst, msg.getQuestions());
+
+        return createJsonString(msg.getReplayForID(), lst);
+    }
+
+    public String accept(StorePurchaseListResponse msg) {
+        LinkedList<Byte> lst = new LinkedList<>();
+
+        offerStorePurchesList(lst, msg.getPurchases());
+
+        return createJsonString(msg.getReplayForID(), lst);
+    }
+
+    public String accept(StoreListResponse msg) {
         LinkedList<Byte> lst = new LinkedList<>();
 
-        offerProductList(lst, msg.getProducts());
+        offerList(lst, msg.getStores());
 
         return createJsonString(msg.getReplayForID(), lst);
     }
 
-    public String accept(PerchesListResponse msg) {
+    public String accept(PrductsInCartResponse msg) {
         LinkedList<Byte> lst = new LinkedList<>();
 
-        //offerProductList(lst, msg.getPurchase().);
-        // todo : impliment
+        offerCartList(lst, msg.getProducts());
 
         return createJsonString(msg.getReplayForID(), lst);
     }
Index: src/Communication/websocket/App/EncoderDecoder/MessageDecoder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Communication.websocket.App.EncoderDecoder;\n\nimport Communication.websocket.App.messages.Macros.Delimiters;\nimport Communication.websocket.App.messages.Objects.client2server.*;\nimport Communication.websocket.App.messages.api.Client2ServerMessage;\nimport Communication.websocket.App.messages.api.Message;\nimport Communication.websocket.App.messages.Macros.Opcodes;\nimport org.json.simple.JSONObject;\nimport org.json.simple.parser.JSONParser;\n\nimport javax.websocket.DecodeException;\nimport javax.websocket.Decoder;\nimport javax.websocket.EndpointConfig;\nimport java.util.Deque;\nimport java.util.LinkedList;\n\npublic class MessageDecoder implements Decoder.Text<Message>  {\n\n\n    @Override\n    public Message decode(String msg) throws DecodeException {\n\n        try{\n            JSONParser parser = new JSONParser();\n            JSONObject received = (JSONObject)parser.parse(msg);\n            JSONObject message = (JSONObject)(received.get(\"json_data\"));\n            Deque<Byte> bytes = new LinkedList<>();\n\n            long id = (long)received.get(\"cmd_id\");\n\n            for (int i = 0; true ; i++) {\n                Object obj = message.get(String.valueOf(i));\n\n                if(obj == null)\n                    break;\n\n                long cur = (long)obj;\n                byte b = (byte)cur;\n                bytes.offer(b);\n            }\n\n            Client2ServerMessage m = (Client2ServerMessage) decode(list2array(bytes));\n            m.setId(id);\n\n            return m;\n\n        }\n        catch(Exception pe) {\n            System.out.println(\"[!!! IMPORTANT !!!] Received unknown message: : \" + msg);\n        }\n\n        return null;\n    }\n\n    @Override\n    public boolean willDecode(String byteBuffer) {\n        return true;\n    }\n\n\n\n    @Override\n    public void init(EndpointConfig endpointConfig) {\n    }\n\n    @Override\n    public void destroy() {\n\n    }\n\n\n    // ------------------------------------------------------------- general decode -------------------------------------------------------------\n\n\n    private Message decode(byte[] message) {\n\n        Deque<Deque<Byte>> parameters = parameterize(message);\n\n        byte op = opcode(parameters);\n        switch (op){\n            case Opcodes.Demo : return Demo(parameters);\n\n            case Opcodes.Register : return Register(parameters);\n            case Opcodes.Login : return Login(parameters);\n            case Opcodes.StoreDetails : return StoreDetails(parameters);\n            case Opcodes.StoreProducts : return StoreProducts(parameters);\n            case Opcodes.SearchProductByName : return productByName(parameters);\n            case Opcodes.SearchProductBycategory : return productByCategory(parameters);\n            case Opcodes.SearchProductByKeyword : return productByKeyword(parameters);\n            case Opcodes.Save2Basket : return save2Basket(parameters);\n            case Opcodes.ProductsInCarts : return ProductsInCarts(parameters);\n            case Opcodes.RemoveFromCart : return RemoveFromCart(parameters);\n\n\n            case Opcodes.Logout : return Logout(parameters);\n            case Opcodes.OpenStore : return OpenStore(parameters);\n            case Opcodes.PurchasesHistory : return PurchasesHistory(parameters);\n\n\n            case Opcodes.HistoryOfUser : return HistoryOfUser(parameters);\n            case Opcodes.HistoryOfStore : return HistoryOfStore(parameters);\n\n\n            default:  throw new IllegalArgumentException(\"unknown opcode : \" + op );\n        }\n    }\n\n    /**\n     * recive a message ad split it into the parameters, and convert to lists\n     * @param message the mesaage\n     * @return a list of the parameters by order\n     */\n    private Deque<Deque<Byte>> parameterize(byte[] message){\n\n        Deque<Byte> curParamList;\n        Deque<Deque<Byte>> parametes = new LinkedList<>();\n        int curIndex = 0;\n\n        //opcode\n        curParamList = new LinkedList<>();\n        curParamList.offer(message[curIndex]);\n        parametes.offer(curParamList);\n        curIndex++;\n\n        // rest\n        for (; curIndex <  message.length; curIndex++) {\n            curParamList = new LinkedList<>();\n\n            for (; curIndex <  message.length && message[curIndex] != Delimiters.PARAMETER_DELIMITER; curIndex++) {\n                curParamList.offer(message[curIndex]);\n            }\n\n            parametes.offer(curParamList);\n        }\n\n        return  parametes;\n    }\n\n\n    /**\n     * retruve the opcode\n     * @param parameters the parameters\n     * @return the opcode\n     */\n    private Byte opcode(Deque<Deque<Byte>> parameters) {\n        return parameters.getFirst().getFirst();\n    }\n\n\n    /**\n     * convert a klist to array\n     * @return the list to convert\n     */\n    private byte[] list2array(Deque<Byte> lst){\n\n        int size = lst.size();\n        int i = 0;\n\n        byte[] arr = new byte[size];\n\n        for (Byte b: lst){\n            arr[i] = b;\n            i++;\n        }\n\n        return  arr;\n    }\n\n\n\n\n    // ------------------------------------------------------------- poppers -------------------------------------------------------------\n\n\n    /**\n     * pop an opcode from the parameters. removes the parameter from the list.\n     * @param parameters the parameters\n     * @return the first parameter as byte\n     */\n    private Byte popOpcode(Deque<Deque<Byte>> parameters){\n        return popByte(parameters);\n    }\n\n    /**\n     * pop an opcode from the parameters. removes the parameter from the list.\n     * @param parameters the parameters\n     * @return the first parameter as byte\n     */\n    private Byte popByte(Deque<Deque<Byte>> parameters){\n        Deque<Byte> param = parameters.poll();\n\n        if(param == null || param.size() != 1) {\n            throw new IllegalArgumentException(\"could not pop the byte!\");\n        }\n\n        return param.getFirst();\n    }\n\n    /**\n     * pop a string from the parameters. removes the parameter from the list.\n     * @param parameters the parameters\n     * @return the first parameter as string\n     */\n    private String popString(Deque<Deque<Byte>> parameters){\n        Deque<Byte> param = parameters.poll();\n\n        if(param == null)\n            throw new IllegalArgumentException(\"could not decode message.\");\n\n        return new String(list2array(param));\n    }\n\n\n\n    // ------------------------------------------------------------- messages builders -------------------------------------------------------------\n\n    private Message Demo( Deque<Deque<Byte>> parameters){\n        Byte    op   = popOpcode(parameters);\n        String  content = popString(parameters);\n\n        if(parameters.size() > 0){\n            throw new IllegalArgumentException(\"to much parameter fo a demo object!\");\n        }\n\n        return new DemoMessage(op, content);\n    }\n\n    private Message Register( Deque<Deque<Byte>> parameters){\n        Byte    op   = popOpcode(parameters);\n        String  name = popString(parameters);\n        String  pass = popString(parameters);\n\n        if(parameters.size() > 0){\n            throw new IllegalArgumentException(\"to much parameter fo a register object!\");\n        }\n\n        if(op != Opcodes.Register){\n            throw new IllegalArgumentException(\"to much parameter fo a register object!\");\n        }\n\n        return new RegisterMessage(-1, name, pass);\n    }\n\n    private Message Login( Deque<Deque<Byte>> parameters){\n        Byte    op   = popOpcode(parameters);\n        String  name = popString(parameters);\n        String  pass = popString(parameters);\n\n        if(parameters.size() > 0){\n            throw new IllegalArgumentException(\"to much parameter fo a register object!\");\n        }\n\n        if(op != Opcodes.Login){\n            throw new IllegalArgumentException(\"to much parameter fo a register object!\");\n        }\n\n        return new LoginMessage(-1, name, pass);\n    }\n\n\n\n    private Message Logout(Deque<Deque<Byte>> parameters) {\n        Byte    op   = popOpcode(parameters);\n\n        if(parameters.size() > 0){\n            throw new IllegalArgumentException(\"to much parameter fo a register object!\");\n        }\n\n        if(op != Opcodes.Logout){\n            throw new IllegalArgumentException(\"to much parameter fo a register object!\");\n        }\n\n        return new LogoutMessage(-1);\n    }\n\n\n    private Message StoreDetails(Deque<Deque<Byte>> parameters) {\n\n        Byte    op   = popOpcode(parameters);\n        String  name = popString(parameters);\n\n        if(parameters.size() > 0){\n            throw new IllegalArgumentException(\"to much parameter fo a store details object!\");\n        }\n\n        if(op != Opcodes.StoreDetails){\n            throw new IllegalArgumentException(\"to much parameter fo a store details object!\");\n        }\n\n        return new StorDetailsMessage(-1, name);\n    }\n\n    private Message StoreProducts(Deque<Deque<Byte>> parameters) {\n\n        Byte    op   = popOpcode(parameters);\n        String  name = popString(parameters);\n\n        if(parameters.size() > 0){\n            throw new IllegalArgumentException(\"to much parameter fo a store products object!\");\n        }\n\n        if(op != Opcodes.StoreProducts){\n            throw new IllegalArgumentException(\"to much parameter fo a store products object!\");\n        }\n\n        return new StorDetailsMessage(-1, name);\n    }\n\n    private Message OpenStore(Deque<Deque<Byte>> parameters) {\n        Byte    op   = popOpcode(parameters);\n        String  name = popString(parameters);\n        String  adress = popString(parameters);\n\n        if(parameters.size() > 0){\n            throw new IllegalArgumentException(\"to much parameter!\");\n        }\n\n        if(op != Opcodes.OpenStore){\n            throw new IllegalArgumentException(\"wrong opcode (SERVER ERROR)!\");\n        }\n\n        return new OpenStoreMessage(-1, name, adress);\n    }\n\n    private Message RemoveFromCart(Deque<Deque<Byte>> parameters) {\n        Byte    op   = popOpcode(parameters);\n        String  store = popString(parameters);\n        String  product = popString(parameters);\n        Byte    amount = popByte(parameters);\n\n        if(parameters.size() > 0){\n            throw new IllegalArgumentException(\"to much parameter!\");\n        }\n\n        if(op != Opcodes.RemoveFromCart){\n            throw new IllegalArgumentException(\"wrong opcode (SERVER ERROR)!\");\n        }\n\n        return new RemoveProductFromCartMessage(-1,store, product, amount);\n    }\n\n    private Message ProductsInCarts(Deque<Deque<Byte>> parameters) {\n        Byte    op   = popOpcode(parameters);\n\n        if(parameters.size() > 0){\n            throw new IllegalArgumentException(\"to much parameter!\");\n        }\n\n        if(op != Opcodes.ProductsInCarts){\n            throw new IllegalArgumentException(\"wrong opcode (SERVER ERROR)!\");\n        }\n        return new ViewCartMessage(-1);\n    }\n\n    private Message save2Basket(Deque<Deque<Byte>> parameters) {\n        Byte    op   = popOpcode(parameters);\n        String  store = popString(parameters);\n        String  product = popString(parameters);\n        Byte    amount = popByte(parameters);\n\n        if(parameters.size() > 0){\n            throw new IllegalArgumentException(\"to much parameter!\");\n        }\n\n        if(op != Opcodes.Save2Basket){\n            throw new IllegalArgumentException(\"wrong opcode (SERVER ERROR)!\");\n        }\n        return new AddProduct2BasketMessage(-1, store, product, amount);\n    }\n\n    private Message productByKeyword(Deque<Deque<Byte>> parameters) {\n        Byte    op   = popOpcode(parameters);\n        String  keyword = popString(parameters);\n\n        if(parameters.size() > 0){\n            throw new IllegalArgumentException(\"to much parameter!\");\n        }\n\n        if(op != Opcodes.SearchProductByKeyword){\n            throw new IllegalArgumentException(\"wrong opcode (SERVER ERROR)!\");\n        }\n        return new ProductsByKeywordMessage(-1,keyword);\n    }\n\n    private Message productByCategory(Deque<Deque<Byte>> parameters) {\n        Byte    op   = popOpcode(parameters);\n        String  cat = popString(parameters);\n\n        if(parameters.size() > 0){\n            throw new IllegalArgumentException(\"to much parameter!\");\n        }\n\n        if(op != Opcodes.SearchProductBycategory){\n            throw new IllegalArgumentException(\"wrong opcode (SERVER ERROR)!\");\n        }\n        return new ProductsByCategoryMessage(-1,cat);\n    }\n\n    private Message productByName(Deque<Deque<Byte>> parameters) {\n        Byte    op   = popOpcode(parameters);\n        String  name = popString(parameters);\n\n        if(parameters.size() > 0){\n            throw new IllegalArgumentException(\"to much parameter!\");\n        }\n\n        if(op != Opcodes.SearchProductByName){\n            throw new IllegalArgumentException(\"wrong opcode (SERVER ERROR)!\");\n        }\n        return new ProductsByNameMessage(-1,name);\n    }\n\n    private Message PurchasesHistory(Deque<Deque<Byte>> parameters) {\n        Byte    op   = popOpcode(parameters);\n\n        if(parameters.size() > 0){\n            throw new IllegalArgumentException(\"to much parameter!\");\n        }\n\n        if(op != Opcodes.PurchasesHistory){\n            throw new IllegalArgumentException(\"wrong opcode (SERVER ERROR)!\");\n        }\n        return new ViewPerchesHistory(-1);\n    }\n\n\n    private Message HistoryOfStore(Deque<Deque<Byte>> parameters) {\n        Byte    op   = popOpcode(parameters);\n        String  name = popString(parameters);\n\n        if(parameters.size() > 0){\n            throw new IllegalArgumentException(\"to much parameter!\");\n        }\n\n        if(op != Opcodes.HistoryOfStore){\n            throw new IllegalArgumentException(\"wrong opcode (SERVER ERROR)!\");\n        }\n        return new HistoryOfStoreMessage(-1,name);\n    }\n\n    private Message HistoryOfUser(Deque<Deque<Byte>> parameters) {\n        Byte    op   = popOpcode(parameters);\n        String  name = popString(parameters);\n\n        if(parameters.size() > 0){\n            throw new IllegalArgumentException(\"to much parameter!\");\n        }\n\n        if(op != Opcodes.HistoryOfUser){\n            throw new IllegalArgumentException(\"wrong opcode (SERVER ERROR)!\");\n        }\n        return new HistoryOfUserMessage(-1,name);\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Communication/websocket/App/EncoderDecoder/MessageDecoder.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Communication/websocket/App/EncoderDecoder/MessageDecoder.java	(date 1592314856740)
@@ -8,17 +8,16 @@
 import org.json.simple.JSONObject;
 import org.json.simple.parser.JSONParser;
 
-import javax.websocket.DecodeException;
 import javax.websocket.Decoder;
 import javax.websocket.EndpointConfig;
-import java.util.Deque;
-import java.util.LinkedList;
+import java.util.*;
 
 public class MessageDecoder implements Decoder.Text<Message>  {
 
-
     @Override
-    public Message decode(String msg) throws DecodeException {
+    public Message decode(String msg) {
+
+        System.out.println("row message: " + msg);
 
         try{
             JSONParser parser = new JSONParser();
@@ -39,7 +38,7 @@
                 bytes.offer(b);
             }
 
-            Client2ServerMessage m = (Client2ServerMessage) decode(list2array(bytes));
+            Client2ServerMessage m = (Client2ServerMessage) decode(bytes);
             m.setId(id);
 
             return m;
@@ -72,7 +71,7 @@
     // ------------------------------------------------------------- general decode -------------------------------------------------------------
 
 
-    private Message decode(byte[] message) {
+    private Message decode(Deque<Byte> message) {
 
         Deque<Deque<Byte>> parameters = parameterize(message);
 
@@ -80,6 +79,10 @@
         switch (op){
             case Opcodes.Demo : return Demo(parameters);
 
+            //extras
+            case Opcodes.viewOwnedStores : return viewOwnedStores(parameters);
+
+            //Gust
             case Opcodes.Register : return Register(parameters);
             case Opcodes.Login : return Login(parameters);
             case Opcodes.StoreDetails : return StoreDetails(parameters);
@@ -90,13 +93,28 @@
             case Opcodes.Save2Basket : return save2Basket(parameters);
             case Opcodes.ProductsInCarts : return ProductsInCarts(parameters);
             case Opcodes.RemoveFromCart : return RemoveFromCart(parameters);
+            case Opcodes.Purches : return Purches(parameters);
 
-
+            //member
             case Opcodes.Logout : return Logout(parameters);
             case Opcodes.OpenStore : return OpenStore(parameters);
             case Opcodes.PurchasesHistory : return PurchasesHistory(parameters);
 
+            // manager
+            case  Opcodes.ViewMemberQustions : return ViewMemberQustions(parameters);
+            case  Opcodes.Response2Qustion : return Response2Qustion(parameters);
+            case  Opcodes.viewAquisitionHistory : return viewAquisitionHistory(parameters);
+
+            // owner
+            case Opcodes.AddProduct2Store :  return AddProduct2Store(parameters);
+            case Opcodes.RemoveItem : return RemoveItem(parameters);
+            case Opcodes.Add2Product : return Add2Product(parameters);
+            case Opcodes.Appoint : return Appoint(parameters);
+            case Opcodes.FireManager : return FireManager(parameters);
+            case  Opcodes.editMangagerPermesions : return editMangagerPermesions(parameters);
 
+
+            // system manager
             case Opcodes.HistoryOfUser : return HistoryOfUser(parameters);
             case Opcodes.HistoryOfStore : return HistoryOfStore(parameters);
 
@@ -105,29 +123,40 @@
         }
     }
 
+
     /**
      * recive a message ad split it into the parameters, and convert to lists
      * @param message the mesaage
      * @return a list of the parameters by order
      */
-    private Deque<Deque<Byte>> parameterize(byte[] message){
+    private Deque<Deque<Byte>> parameterize(Deque<Byte> message){
+        return parameterize(message, Delimiters.PARAMETER_DELIMITER);
+    }
+
+    private Deque<Deque<Byte>> parameterize(Deque<Byte> message, byte delimiter){
 
         Deque<Byte> curParamList;
         Deque<Deque<Byte>> parametes = new LinkedList<>();
-        int curIndex = 0;
+        Iterator<Byte> iter = message.iterator();
+        byte cur;
 
         //opcode
         curParamList = new LinkedList<>();
-        curParamList.offer(message[curIndex]);
+        curParamList.offer(iter.next());
         parametes.offer(curParamList);
-        curIndex++;
 
         // rest
-        for (; curIndex <  message.length; curIndex++) {
+        while (iter.hasNext()) {
             curParamList = new LinkedList<>();
 
-            for (; curIndex <  message.length && message[curIndex] != Delimiters.PARAMETER_DELIMITER; curIndex++) {
-                curParamList.offer(message[curIndex]);
+            cur = iter.next();
+            while (iter.hasNext() && cur != delimiter){
+                curParamList.offer(cur);
+                cur = iter.next();
+            }
+
+            if(!iter.hasNext()){
+                curParamList.offer(cur);
             }
 
             parametes.offer(curParamList);
@@ -136,6 +165,34 @@
         return  parametes;
     }
 
+    private Deque<Deque<Byte>> parameterizeNoOp(Deque<Byte> message, byte delimiter){
+
+        Deque<Byte> curParamList;
+        Deque<Deque<Byte>> parametes = new LinkedList<>();
+        Iterator<Byte> iter = message.iterator();
+        byte cur;
+
+        // rest
+        while (iter.hasNext()) {
+            curParamList = new LinkedList<>();
+
+            cur = iter.next();
+            while (iter.hasNext() && cur != delimiter){
+                curParamList.offer(cur);
+                cur = iter.next();
+            }
+
+            if(!iter.hasNext()){
+                curParamList.offer(cur);
+            }
+
+            parametes.offer(curParamList);
+        }
+
+        return  parametes;
+    }
+
+
 
     /**
      * retruve the opcode
@@ -147,24 +204,18 @@
     }
 
 
-    /**
-     * convert a klist to array
-     * @return the list to convert
-     */
-    private byte[] list2array(Deque<Byte> lst){
-
-        int size = lst.size();
-        int i = 0;
+    private byte[] list2array(Deque<Byte> param) {
+        byte[] ret = new byte[param.size()];
 
-        byte[] arr = new byte[size];
+        int pos = 0;
 
-        for (Byte b: lst){
-            arr[i] = b;
-            i++;
+        for (byte b :param) {
+            ret[pos] = b;
+            pos++;
         }
+        return ret;
+    }
 
-        return  arr;
-    }
 
 
 
@@ -196,6 +247,19 @@
         return param.getFirst();
     }
 
+
+
+
+    private int popInt(Deque<Deque<Byte>> parameters){
+        return Integer.parseInt(popString(parameters));
+    }
+
+    private double popDouble(Deque<Deque<Byte>> parameters){
+        return Double.parseDouble(popString(parameters));
+    }
+
+
+
     /**
      * pop a string from the parameters. removes the parameter from the list.
      * @param parameters the parameters
@@ -210,6 +274,23 @@
         return new String(list2array(param));
     }
 
+    private List<String> popStringListL1(Deque<Deque<Byte>> parameters) {
+        Deque<Byte> param = parameters.poll();
+        LinkedList<String> ret = new LinkedList<>();
+
+        if (param == null)
+            throw new IllegalArgumentException("could not decode message.");
+
+        Deque<Deque<Byte>> lst = parameterizeNoOp(param, Delimiters.LIST_DELIMITER);
+
+        while (lst.size() > 0) {
+            String curr = popString(lst);
+            ret.offer(curr);
+        }
+
+        return ret;
+    }
+
 
 
     // ------------------------------------------------------------- messages builders -------------------------------------------------------------
@@ -356,7 +437,7 @@
         Byte    op   = popOpcode(parameters);
         String  store = popString(parameters);
         String  product = popString(parameters);
-        Byte    amount = popByte(parameters);
+        int  amount = popInt(parameters);
 
         if(parameters.size() > 0){
             throw new IllegalArgumentException("to much parameter!");
@@ -365,7 +446,7 @@
         if(op != Opcodes.Save2Basket){
             throw new IllegalArgumentException("wrong opcode (SERVER ERROR)!");
         }
-        return new AddProduct2BasketMessage(-1, store, product, amount);
+        return new AddProduct2BasketMessage(-1, store, product,amount);
     }
 
     private Message productByKeyword(Deque<Deque<Byte>> parameters) {
@@ -452,4 +533,193 @@
         return new HistoryOfUserMessage(-1,name);
     }
 
+    private Message ViewMemberQustions(Deque<Deque<Byte>> parameters) {
+        Byte    op   = popOpcode(parameters);
+        String  name = popString(parameters);
+
+        if(parameters.size() > 0){
+            throw new IllegalArgumentException("to much parameter!");
+        }
+
+        if(op != Opcodes.ViewMemberQustions){
+            throw new IllegalArgumentException("wrong opcode (SERVER ERROR)!");
+        }
+        return new ViewMemberQustionsMessage(-1,name);
+    }
+
+
+    private Message Response2Qustion(Deque<Deque<Byte>> parameters) {
+        Byte    op   = popOpcode(parameters);
+        String  name = popString(parameters);
+        byte    qid = popByte(parameters);
+
+
+        if(parameters.size() > 0){
+            throw new IllegalArgumentException("to much parameter!");
+        }
+
+        if(op != Opcodes.Response2Qustion){
+            throw new IllegalArgumentException("wrong opcode (SERVER ERROR)!");
+        }
+
+        return new Response2QuestionMessage(-1,name, qid);
+    }
+
+    private Message Purches(Deque<Deque<Byte>> parameters) {
+        Byte    op      = popOpcode(parameters);
+        String  card    = popString(parameters);
+        String  edate   = popString(parameters);
+        String  css     = popString(parameters);
+        String  owner   = popString(parameters);
+        String  adress  = popString(parameters);
+
+
+        if(parameters.size() > 0){
+            throw new IllegalArgumentException("to much parameter!");
+        }
+
+        if(op != Opcodes.PurchasesHistory){
+            throw new IllegalArgumentException("wrong opcode (SERVER ERROR)!");
+        }
+
+        return new PurchaseMessage(-1,card, edate, css, owner, adress);
+    }
+
+    private Message AddProduct2Store(Deque<Deque<Byte>> parameters) {
+        Byte    op          = popOpcode(parameters);
+        String  name        = popString(parameters);
+        double  price       = popDouble(parameters);
+        List<String>  cats  = popStringListL1(parameters);
+        List<String>  keyws = popStringListL1(parameters);
+        String  storename   = popString(parameters);
+        int ammount         = popInt(parameters);
+
+
+        if(parameters.size() > 0){
+            throw new IllegalArgumentException("to much parameter!");
+        }
+
+        if(op != Opcodes.AddProduct2Store){
+            throw new IllegalArgumentException("wrong opcode (SERVER ERROR)!");
+        }
+
+        return new CreateProductMessage(-1,name,price, cats, keyws, storename, ammount);
+    }
+
+    private Message Appoint(Deque<Deque<Byte>> parameters) {
+        Byte    op          = popOpcode(parameters);
+        String  username    = popString(parameters);
+        String  storename   = popString(parameters);
+        byte    role        = popByte(parameters);
+
+
+        if(parameters.size() > 0){
+            throw new IllegalArgumentException("to much parameter!");
+        }
+
+        if(op != Opcodes.Appoint){
+            throw new IllegalArgumentException("wrong opcode (SERVER ERROR)!");
+        }
+
+        return new AppointMessage(-1,username, storename,role);
+    }
+
+    private Message FireManager(Deque<Deque<Byte>> parameters) {
+        Byte    op          = popOpcode(parameters);
+        String  username    = popString(parameters);
+        String  store       = popString(parameters);
+
+
+        if(parameters.size() > 0){
+            throw new IllegalArgumentException("to much parameter!");
+        }
+
+        if(op != Opcodes.FireManager){
+            throw new IllegalArgumentException("wrong opcode (SERVER ERROR)!");
+        }
+
+        return new FireMessage(-1,username, store);
+    }
+
+    private Message RemoveItem(Deque<Deque<Byte>> parameters) {
+        Byte    op      = popOpcode(parameters);
+        String  store   = popString(parameters);
+        String  product = popString(parameters);
+
+
+        if(parameters.size() > 0){
+            throw new IllegalArgumentException("to much parameter!");
+        }
+
+        if(op != Opcodes.RemoveItem){
+            throw new IllegalArgumentException("wrong opcode (SERVER ERROR)!");
+        }
+
+        return new RemoveProductMessage(-1,store, product);
+    }
+
+    private Message Add2Product(Deque<Deque<Byte>> parameters) {
+        Byte    op      = popOpcode(parameters);
+        String  product = popString(parameters);
+        String  store   = popString(parameters);
+        byte    ammount = popByte(parameters); // TODO
+
+
+        if(parameters.size() > 0){
+            throw new IllegalArgumentException("to much parameter!");
+        }
+
+        if(op != Opcodes.Add2Product){
+            throw new IllegalArgumentException("wrong opcode (SERVER ERROR)!");
+        }
+
+        return new Add2ProductMessage(-1,product, store, ammount);
+    }
+
+    private Message viewOwnedStores(Deque<Deque<Byte>> parameters) {
+        Byte op = popOpcode(parameters);
+
+
+        if(parameters.size() > 0){
+            throw new IllegalArgumentException("to much parameter!");
+        }
+
+        if(op != Opcodes.viewOwnedStores){
+            throw new IllegalArgumentException("wrong opcode (SERVER ERROR)!");
+        }
+
+        return new ViewOwnedStoresMessage((byte)-1);
+    }
+
+    private Message viewAquisitionHistory(Deque<Deque<Byte>> parameters) {
+        Byte    op      = popOpcode(parameters);
+        String  store   = popString(parameters);
+
+        if(parameters.size() > 0){
+            throw new IllegalArgumentException("to much parameter!");
+        }
+
+        if(op != Opcodes.viewAquisitionHistory){
+            throw new IllegalArgumentException("wrong opcode (SERVER ERROR)!");
+        }
+
+        return new ViewAquisitionMessage((byte)-1, store);
+    }
+
+    private Message editMangagerPermesions(Deque<Deque<Byte>> parameters) {
+        Byte            op          = popOpcode(parameters);
+        String          store       = popString(parameters);
+        String          manager     = popString(parameters);
+        List<String>    permotions  = popStringListL1(parameters);
+
+        if(parameters.size() > 0){
+            throw new IllegalArgumentException("to much parameter!");
+        }
+
+        if(op != Opcodes.editMangagerPermesions){
+            throw new IllegalArgumentException("wrong opcode (SERVER ERROR)!");
+        }
+
+        return new EditPermitionsMessage((byte)-1, store,manager, permotions);
+    }
 }
Index: src/Service_Layer/guest_accese/guest_accese.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Service_Layer.guest_accese;\n\nimport Domain.RedClasses.User;\nimport Domain.Store.Product;\nimport Domain.info.ProductDetails;\nimport Domain.info.StoreInfo;\nimport Domain.store_System.System;\nimport extornal.payment.bankAccount;\nimport extornal.supply.Packet_Of_Prodacts;\nimport extornal.supply.inventory;\nimport tests.AcceptanceTests.auxiliary.StoreDetails;\n\nimport java.util.List;\n\npublic class guest_accese {\n\n\t// when a guesset is online for the first time he needs to call this function to\n\t// get his guest token\n\tpublic static int ImNew() {\n\t\treturn System.getInstance().ImNew();\n\t}\n\n//\t//TODO old need to delete\n//\tpublic boolean usecase2_3_login(String username, String password) {\n//\t\t//TODO old need to delete\n//\t\treturn System.getInstance().login(username, password) != null;\n//\t}\n\t\n\tpublic static boolean usecase2_3_login(int guestId, String username, String password) {\n\t\treturn System.getInstance().getGuest(guestId).login(username, password);\n\t}\n\n\tpublic static boolean usecase2_2_guest_register(String username, String password) {\n\t\treturn User.register(username, password);\n\t\t// return System.getInstance().register(username, password);\n\t}\n\n\tpublic static StoreDetails usecase2_4A_getStoreDetails(String storeName) {\n\t\treturn User.watchStoreDetails(storeName);\n\n\t}\n\n\tpublic static StoreInfo usecase2_4B_getStoreProdacts(String storeName) {\n\t\treturn User.watchStoreInfo(storeName);\n\t}\n\n\tpublic static List<ProductDetails> usecase2_5A_searchProductByName(String name) {\n\t\treturn User.searchProductsByName(name);\n\t}\n\n\tpublic static List<ProductDetails> usecase2_5B_searchProductByCategory(String category) {\n\t\treturn User.searchProductsByCategory(category);\n\t}\n\n\tpublic static List<ProductDetails> usecase2_5C_searchProductByKeyword(String keyword) {\n\t\treturn User.searchProductsByKeyword(keyword);\n\t}\n\n\tpublic static List<ProductDetails> usecase2_5D_1_FilterbyPrice(double minPrice, double maxPrice) {\n\t\treturn User.filterByPrice(minPrice, maxPrice);\n\t}\n\n\tpublic static List<ProductDetails> usecase2_5D_2_FilterbyRating(int minRating, int maxRating) {\n\t\treturn User.filterByRating(minRating, maxRating);\n\t}\n\n\tpublic static List<ProductDetails> usecase2_5D_3_FilterbyCategory(String category) {\n\t\treturn User.filterByCategory(category);\n\n\t}\n\n\tpublic static List<ProductDetails> usecase2_5D_4_FilterbyStoreRating(int minRating, int maxRating) {\n\t\treturn User.filterByStoreRating(minRating, maxRating);\n\t}\n\n\t// need guest ID\n\tpublic static boolean usecase2_6_saveProductToBasket(int guestID, String storename, String prodactname, int amount) {\n\n\t\treturn System.getInstance().getGuest(guestID).saveProductInBasket(prodactname, storename,amount);\n\t}\n\n\t\n\tpublic static List<ProductDetails> usecase2_7A_WatchProdactsInCart(int guestID) {\n\t\treturn System.getInstance().getGuest(guestID).getProductsInCart();\n\t}\n\n\tpublic static int usecase2_7b_RemoveProdactsInCart(int guestID, String storename, String prodactname, int amount) {\n\t\treturn System.getInstance().getGuest(guestID).deleteProductInBasket(prodactname, storename, amount);\n\t}\n\n\t//2.8\n\tpublic boolean usecase2_8_Purchase_products(int guestID, bankAccount bank, inventory whereToSend) {\n\t\tif (!usecase2_8_1_Check_available_products(guestID))\n\t\t\treturn false;\n\t\tList<Product> items = usecase2_8_5_Update_inventory(guestID);\n\t\tdouble price = usecase2_8_2_Calculate_price(guestID);\n\t\tboolean didPay = System.getInstance().navigatePayment().pay(bank, -price);\n\t\tif (!didPay) {\n\t\t\tusecase2_8_3_ReturnProdoctsToStore(items);\n\t\t\treturn false;\n\t\t}\n\t\tPacket_Of_Prodacts pack = new Packet_Of_Prodacts();\n\t\tpack.items.addAll(items);\n\t\tboolean didSupplay = System.getInstance().navigateSupply().order(pack, whereToSend);\n\t\tif (!didSupplay) {\n\t\t\tusecase2_8_3_ReturnProdoctsToStore(items);\n\t\t\tusecase2_8_4_Guest_Refund(bank, price);\n\t\t\treturn false;\n\t\t}\n\t\tSystem.getInstance().getGuest(guestID).Complet_Purchase(price);\n\t\treturn true;\n\t}\n\n\tpublic static boolean usecase2_8_1_Check_available_products(int guestID) {\n\t\treturn System.getInstance().CheckItemAvailableA(System.getInstance().getGuest(guestID).getProductsInCart());\n\t}\n\n\tpublic static double usecase2_8_2_Calculate_price(int guestID) {\n\t\treturn System.getInstance().getGuest(guestID).getCart().CalcPrice();\n\t}\n\n\tpublic static boolean usecase2_8_3_ReturnProdoctsToStore(List<Product> products) {\n\t\treturn System.getInstance().fillStore(products);\n\t}\n\n\tpublic static boolean usecase2_8_4_Guest_Refund(bankAccount cardnumber, double amount) {\n\t\tSystem.getInstance().navigatePayment().pay(cardnumber, amount);\n\t\treturn false;\n\t}\n\n\tpublic List<Product> usecase2_8_5_Update_inventory(int guestID) {\n\t\treturn System.getInstance().getGuest(guestID).getCart().getItems();\n\t}\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Service_Layer/guest_accese/guest_accese.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Service_Layer/guest_accese/guest_accese.java	(date 1592314856744)
@@ -1,11 +1,12 @@
 package Service_Layer.guest_accese;
 
-import Domain.RedClasses.User;
+import Domain.UserClasses.User;
 import Domain.Store.Product;
 import Domain.info.ProductDetails;
 import Domain.info.StoreInfo;
 import Domain.store_System.System;
-import extornal.payment.bankAccount;
+import Service_Layer.userAddress;
+import extornal.payment.CreditCard;
 import extornal.supply.Packet_Of_Prodacts;
 import extornal.supply.inventory;
 import tests.AcceptanceTests.auxiliary.StoreDetails;
@@ -20,14 +21,15 @@
 		return System.getInstance().ImNew();
 	}
 
-//	//TODO old need to delete
-//	public boolean usecase2_3_login(String username, String password) {
-//		//TODO old need to delete
-//		return System.getInstance().login(username, password) != null;
-//	}
-	
+	static public ProductDetails searchProductByName(String name, String store) {
+		return User.searchProductByName(name, store);
+	}
+
 	public static boolean usecase2_3_login(int guestId, String username, String password) {
-		return System.getInstance().getGuest(guestId).login(username, password);
+		User user = System.getInstance().getGuest(guestId);
+		if(user == null)
+			return false;
+		return user.login(username, password);
 	}
 
 	public static boolean usecase2_2_guest_register(String username, String password) {
@@ -76,22 +78,45 @@
 	// need guest ID
 	public static boolean usecase2_6_saveProductToBasket(int guestID, String storename, String prodactname, int amount) {
 
-		return System.getInstance().getGuest(guestID).saveProductInBasket(prodactname, storename,amount);
+		User user = System.getInstance().getGuest(guestID);
+		if(user == null)
+			return false;
+
+		StoreDetails store = guest_accese.usecase2_4A_getStoreDetails(storename);
+		ProductDetails product = guest_accese.searchProductByName(prodactname, storename);
+
+		if(store == null)
+			return false;
+
+		if(product == null)
+			return false;
+
+		if(product.getAmount() < amount)
+			return false;
+
+		return user.saveProductInBasket(prodactname, storename,amount);
 	}
 
 	
 	public static List<ProductDetails> usecase2_7A_WatchProdactsInCart(int guestID) {
-		return System.getInstance().getGuest(guestID).getProductsInCart();
+		User user = System.getInstance().getGuest(guestID);
+		if(user == null)
+			return null;
+		return user.getProductsInCart();
 	}
 
 	public static int usecase2_7b_RemoveProdactsInCart(int guestID, String storename, String prodactname, int amount) {
-		return System.getInstance().getGuest(guestID).deleteProductInBasket(prodactname, storename, amount);
+		User user = System.getInstance().getGuest(guestID);
+		if(user == null)
+			return -1;
+		return user.deleteProductInBasket(prodactname, storename, amount);
 	}
 
 	//2.8
-	public boolean usecase2_8_Purchase_products(int guestID, bankAccount bank, inventory whereToSend) {
+	public static boolean usecase2_8_Purchase_products(int guestID, CreditCard bank, inventory whereToSend) {
 		if (!usecase2_8_1_Check_available_products(guestID))
 			return false;
+
 		List<Product> items = usecase2_8_5_Update_inventory(guestID);
 		double price = usecase2_8_2_Calculate_price(guestID);
 		boolean didPay = System.getInstance().navigatePayment().pay(bank, -price);
@@ -111,25 +136,39 @@
 		return true;
 	}
 
+	public static boolean usecase2_8_Purchase_products(int guestID, CreditCard bank, String clientAdress) {
+		return usecase2_8_Purchase_products(guestID, bank,new userAddress(clientAdress));
+	}
+
 	public static boolean usecase2_8_1_Check_available_products(int guestID) {
-		return System.getInstance().CheckItemAvailableA(System.getInstance().getGuest(guestID).getProductsInCart());
+		User user = System.getInstance().getGuest(guestID);
+		if(user == null)
+			return false;
+		//TODO this is wrong
+		return user.CheckItemAvailableA()&& user.CheckAcquisitions();
+		//User.CheckAvilibleItems();
+		//return System.getInstance().CheckItemAvailableA(System.getInstance().getGuest(guestID).getProductsInCart());
 	}
 
 	public static double usecase2_8_2_Calculate_price(int guestID) {
-		return System.getInstance().getGuest(guestID).getCart().CalcPrice();
+		User user = System.getInstance().getGuest(guestID);
+		return user.getCart().CalcPrice();
 	}
 
 	public static boolean usecase2_8_3_ReturnProdoctsToStore(List<Product> products) {
 		return System.getInstance().fillStore(products);
 	}
 
-	public static boolean usecase2_8_4_Guest_Refund(bankAccount cardnumber, double amount) {
-		System.getInstance().navigatePayment().pay(cardnumber, amount);
-		return false;
+	public static boolean usecase2_8_4_Guest_Refund(CreditCard cardnumber, double amount) {
+		return System.getInstance().navigatePayment().pay(cardnumber, amount);
+		//return false;
 	}
 
-	public List<Product> usecase2_8_5_Update_inventory(int guestID) {
-		return System.getInstance().getGuest(guestID).getCart().getItems();
+	public static List<Product> usecase2_8_5_Update_inventory(int guestID) {
+		User user = System.getInstance().getGuest(guestID);
+		if(user == null)
+			return null;
+		return user.getCart().getItems();
 	}
 
 }
Index: src/Service_Layer/owner_accese/owner_accese.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Service_Layer.owner_accese;\r\n\r\nimport Domain.RedClasses.User;\r\nimport Domain.Store.Product;\r\nimport Domain.Store.StorePurchase;\r\nimport Domain.info.Question;\r\nimport Domain.store_System.System;\r\n\r\nimport java.util.LinkedList;\r\nimport java.util.List;\r\n\r\npublic class owner_accese {\r\n\r\n\tpublic static boolean usecase4_1_1_AddingProdacsToStore(String myusername, String myPassword, String storeName,\r\n\t\t\tProduct p) {\r\n\t\tUser me = System.getInstance().getMember(myusername, myPassword);\r\n\t\treturn me.addProduct(storeName, p);\r\n\t}\r\n\r\n\tpublic static boolean usecase4_1_2_RemoveItem(String myusername, String myPassword, String storeName, String prodactname) {\r\n\t\tUser me = System.getInstance().getMember(myusername, myPassword);\r\n\t\treturn me.removeProduct(storeName, prodactname);\r\n\t}\r\n\r\n\tpublic static boolean usecase4_1_3_EditProduct(String myusername, String myPassword, String storeName, String prodactname,\r\n\t\t\tProduct newdetail) {\r\n\t\tUser me = System.getInstance().getMember(myusername, myPassword);\r\n\t\treturn me.editProduct(storeName, prodactname, newdetail);\r\n\t}\r\n\r\n\tpublic static boolean usecase4_3_appointOwner(String myusername, String myPassword, String storeName, String hisusername,\r\n\t\t\tString hisPassword) {\r\n\t\tUser me = System.getInstance().getMember(myusername, myPassword);\r\n\t\treturn me.appointOwner(storeName, hisusername, hisPassword);\r\n\t}\r\n\r\n\tpublic static boolean usecase4_5_appointManager(String myusername, String myPassword, String storeName, String username,\r\n\t\t\tString hisPassword) {\r\n\t\tUser me = System.getInstance().getMember(myusername, myPassword);\r\n\t\treturn me.appointManager(storeName, username, hisPassword);\r\n\t}\r\n\r\n\tpublic static boolean usecase4_6_editMangagerPermesions(String myusername, String myPassword, String storename,\r\n\t\t\tString managername, List<String> permesions) {\r\n\t\tUser me = System.getInstance().getMember(myusername, myPassword);\r\n\t\treturn me.editManagerPermesions(storename, managername, permesions);\r\n\r\n\t}\r\n\r\n\tpublic static boolean usecase4_7_FireManager(String myusername, String myPassword, String storeName, String username) {\r\n\t\tUser me = System.getInstance().getMember(myusername, myPassword);\r\n\t\treturn me.fireManager(storeName, username);\r\n\t}\r\n\r\n\tpublic static List<Question> usecase4_9_ViewMembersQuestions(String myusername, String myPassword, String storeName) {\r\n\t\tUser me = System.getInstance().getMember(myusername, myPassword);\r\n\t\tList<Question> questions = new LinkedList<Question>();\r\n\t\tquestions.addAll(me.viewQuestions(storeName));\r\n\t\treturn questions;\r\n\t}\r\n\r\n\tpublic static boolean usecase4_9_RespondToQuestion(String myusername, String myPassword, String ansewr, int QustionID) {\r\n\t\tUser me = System.getInstance().getMember(myusername, myPassword);\r\n\t\treturn me.giveRespond(ansewr, QustionID);\r\n\t}\r\n\r\n\tpublic static List<StorePurchase> usecase4_10_ViewAcquisitionHistory(String myusername, String myPassword, String storename) {\r\n\t\tUser me = System.getInstance().getMember(myusername, myPassword);\r\n\t\treturn me.ViewAquistionHistory(storename);\r\n\t}\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Service_Layer/owner_accese/owner_accese.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Service_Layer/owner_accese/owner_accese.java	(date 1592314856744)
@@ -1,6 +1,6 @@
 package Service_Layer.owner_accese;
 
-import Domain.RedClasses.User;
+import Domain.UserClasses.User;
 import Domain.Store.Product;
 import Domain.Store.StorePurchase;
 import Domain.info.Question;
@@ -11,62 +11,147 @@
 
 public class owner_accese {
 
-	public static boolean usecase4_1_1_AddingProdacsToStore(String myusername, String myPassword, String storeName,
-			Product p) {
-		User me = System.getInstance().getMember(myusername, myPassword);
-		return me.addProduct(storeName, p);
-	}
+    public static List<String> ownStores(int guestID) {
+        User me = System.getInstance().getMember(guestID);
+        if (me == null)
+            return null;
+        return me.storeOwned();
+    }
+
+
+    public static boolean usecase4_1_1_AddingProdacsToStore(String myusername, String myPassword, String storeName,
+                                                            Product p) {
+        User me = System.getInstance().getMember(myusername, myPassword);
+        if (me == null)
+            return false;
+        return me.addProduct(storeName, p);
+    }
 
-	public static boolean usecase4_1_2_RemoveItem(String myusername, String myPassword, String storeName, String prodactname) {
-		User me = System.getInstance().getMember(myusername, myPassword);
-		return me.removeProduct(storeName, prodactname);
-	}
+    public static boolean usecase4_1_2_RemoveItem(String myusername, String myPassword, String storeName, String prodactname) {
+        User me = System.getInstance().getMember(myusername, myPassword);
+        if (me == null)
+            return false;
+        return me.removeProduct(storeName, prodactname);
+    }
 
-	public static boolean usecase4_1_3_EditProduct(String myusername, String myPassword, String storeName, String prodactname,
-			Product newdetail) {
-		User me = System.getInstance().getMember(myusername, myPassword);
-		return me.editProduct(storeName, prodactname, newdetail);
-	}
+    public static boolean usecase4_1_3_EditProduct(String myusername, String myPassword, String storeName, String prodactname,
+                                                   Product newdetail) {
+        User me = System.getInstance().getMember(myusername, myPassword);
+        if (me == null)
+            return false;
+        return me.editProduct(storeName, prodactname, newdetail);
+    }
 
-	public static boolean usecase4_3_appointOwner(String myusername, String myPassword, String storeName, String hisusername,
-			String hisPassword) {
-		User me = System.getInstance().getMember(myusername, myPassword);
-		return me.appointOwner(storeName, hisusername, hisPassword);
-	}
+    public static boolean usecase4_2_AddDiscount(String myusername, String myPassword, String storeName, String discount) {
+        User me = System.getInstance().getMember(myusername, myPassword);
+        if (me == null)
+            return false;
+        return me.addDiscount(discount, storeName);
+    }
+
+    public static boolean usecase4_2_RemoveDiscount(String myusername, String myPassword, String storeName, int discountID) {
+        User me = System.getInstance().getMember(myusername, myPassword);
+        if (me == null)
+            return false;
+        return me.removeDiscount(discountID, storeName);
+    }
+
+    public static boolean usecase4_2_AddAcquisition(String myusername, String myPassword, String storeName, String acquisition) {
+        User me = System.getInstance().getMember(myusername, myPassword);
+        if (me == null)
+            return false;
+        return me.addacquisition(acquisition, storeName);
+    }
+
+    public static boolean usecase4_2_RemoveAcquisition(String myusername, String myPassword, String storeName, int acquisitionID) {
+        User me = System.getInstance().getMember(myusername, myPassword);
+        if (me == null)
+            return false;
+        return me.removeacquisition(acquisitionID, storeName);
+    }
+
+
+    public static boolean usecase4_3_appointOwner(String myusername, String myPassword, String storeName, String hisusername,
+                                                  String hisPassword) {
+        return usecase4_3_appointOwner(myusername, myPassword, storeName, hisusername);
+//		User me = System.getInstance().getMember(myusername, myPassword);
+//		return me.appointOwner(storeName, hisusername, hisPassword);
+    }
+
+    public static boolean usecase4_3_appointOwner(String myusername, String myPassword, String storeName, String hisusername) {
+        User me = System.getInstance().getMember(myusername, myPassword);
+        if (me == null)
+            return false;
+        return me.appointOwner(storeName, hisusername);
+    }
+
+    public static boolean usecase4_3_appointOwner(int gustID, String storeName, String hisusername) {
+        User me = System.getInstance().getMember(gustID);
+        if (me == null)
+            return false;
+        return me.appointOwner(storeName, hisusername);
+    }
+
 
-	public static boolean usecase4_5_appointManager(String myusername, String myPassword, String storeName, String username,
-			String hisPassword) {
-		User me = System.getInstance().getMember(myusername, myPassword);
-		return me.appointManager(storeName, username, hisPassword);
-	}
+    public static boolean usecase4_5_appointManager(String myusername, String myPassword, String storeName, String username,
+                                                    String hisPassword) {
+        return usecase4_5_appointManager(myusername, myPassword, storeName, username);
+        //return  usecase4_5_appointManager( myusername,  myPassword,  storeName);
+//		User me = System.getInstance().getMember(myusername, myPassword);
+//		return me.appointManager(storeName, username, hisPassword);
+    }
+
+    public static boolean usecase4_5_appointManager(String myusername, String myPassword, String storeName, String username) {
+        User me = System.getInstance().getMember(myusername, myPassword);
+        if (me == null)
+            return false;
+        return me.appointManager(storeName, username);
+    }
+
+    public static boolean usecase4_5_appointManager(int gustID, String storeName, String username) {
+        User me = System.getInstance().getMember(gustID);
+        if (me == null)
+            return false;
+        return me.appointManager(storeName, username);
+    }
 
-	public static boolean usecase4_6_editMangagerPermesions(String myusername, String myPassword, String storename,
-			String managername, List<String> permesions) {
-		User me = System.getInstance().getMember(myusername, myPassword);
-		return me.editManagerPermesions(storename, managername, permesions);
+    public static boolean usecase4_6_editMangagerPermesions(String myusername, String myPassword, String storename,
+                                                            String managername, List<String> permesions) {
+        User me = System.getInstance().getMember(myusername, myPassword);
+        if (me == null)
+            return false;
+        return me.editManagerPermesions(storename, managername, permesions);
 
-	}
+    }
 
-	public static boolean usecase4_7_FireManager(String myusername, String myPassword, String storeName, String username) {
-		User me = System.getInstance().getMember(myusername, myPassword);
-		return me.fireManager(storeName, username);
-	}
+    public static boolean usecase4_7_FireManager(String myusername, String myPassword, String storeName, String username) {
+        User me = System.getInstance().getMember(myusername, myPassword);
+        if (me == null)
+            return false;
+        return me.fireManager(storeName, username);
+    }
 
-	public static List<Question> usecase4_9_ViewMembersQuestions(String myusername, String myPassword, String storeName) {
-		User me = System.getInstance().getMember(myusername, myPassword);
-		List<Question> questions = new LinkedList<Question>();
-		questions.addAll(me.viewQuestions(storeName));
-		return questions;
-	}
+    public static List<Question> usecase4_9_ViewMembersQuestions(String myusername, String myPassword, String storeName) {
+        User me = System.getInstance().getMember(myusername, myPassword);
+        if (me == null)
+            return null;
+        List<Question> questions = new LinkedList<Question>();
+        questions.addAll(me.viewQuestions(storeName));
+        return questions;
+    }
 
-	public static boolean usecase4_9_RespondToQuestion(String myusername, String myPassword, String ansewr, int QustionID) {
-		User me = System.getInstance().getMember(myusername, myPassword);
-		return me.giveRespond(ansewr, QustionID);
-	}
+    public static boolean usecase4_9_RespondToQuestion(String myusername, String myPassword, String ansewr, int QustionID) {
+        User me = System.getInstance().getMember(myusername, myPassword);
+        if (me == null)
+            return false;
+        return me.giveRespond(ansewr, QustionID);
+    }
 
-	public static List<StorePurchase> usecase4_10_ViewAcquisitionHistory(String myusername, String myPassword, String storename) {
-		User me = System.getInstance().getMember(myusername, myPassword);
-		return me.ViewAquistionHistory(storename);
-	}
+    public static List<StorePurchase> usecase4_10_ViewAcquisitionHistory(String myusername, String myPassword, String storename) {
+        User me = System.getInstance().getMember(myusername, myPassword);
+        if (me == null)
+            return null;
+        return me.ViewAquistionHistory(storename);
+    }
 
 }
Index: src/Service_Layer/member_accese/member_accese.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Service_Layer.member_accese;\r\n\r\nimport Domain.RedClasses.User;\r\nimport Domain.RedClasses.UserPurchase;\r\nimport Domain.info.StoreInfo;\r\nimport Domain.store_System.System;\r\nimport tests.AcceptanceTests.auxiliary.StoreDetails;\r\n\r\nimport java.util.List;\r\n\r\npublic class member_accese {\r\n\r\n//with password\r\n\tpublic static boolean usecase3_1_Logout(String myusername, String myPassword) {\r\n\t\tUser me = System.getInstance().getMember(myusername, myPassword);\r\n\t\tif(me == null)\r\n\t\t\treturn false;\r\n\t\treturn me.logout();\r\n\t}\r\n\r\n\tpublic static boolean usecase3_2_OpenStore(String myusername, String myPassword, StoreDetails store) {\r\n\t\tUser me = System.getInstance().getMember(myusername, myPassword);\r\n\t\tif(me == null)\r\n\t\t\treturn false;\r\n\t\treturn me.openStore(new StoreInfo(store));\r\n\t}\r\n\r\n\tpublic static List<UserPurchase> usecase3_7_ReviewPurchasesHistory(String myusername, String myPassword) {\r\n\t\tUser me = System.getInstance().getMember(myusername, myPassword);\r\n\t\tif(me == null)\r\n\t\t\treturn null;\r\n\t\treturn me.getPurchaseHistory();\r\n\t}\r\n\t\r\n\t//with login ID\r\n\t\r\n\tpublic static boolean usecase3_1_Logout(int guestId) {\r\n\t\tUser me = System.getInstance().getMember(guestId);\r\n\t\treturn me.logout();\r\n\t}\r\n\r\n\tpublic static boolean usecase3_2_OpenStore(int guestId, StoreDetails store) {\r\n\t\tUser me = System.getInstance().getMember(guestId);\r\n\t\treturn me.openStore(new StoreInfo(store));\r\n\t}\r\n\r\n\tpublic static List<UserPurchase> usecase3_7_ReviewPurchasesHistory(int guestId) {\r\n\t\tUser me = System.getInstance().getMember(guestId);\r\n\t\treturn me.getPurchaseHistory();\r\n\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Service_Layer/member_accese/member_accese.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Service_Layer/member_accese/member_accese.java	(date 1592314856744)
@@ -1,7 +1,7 @@
 package Service_Layer.member_accese;
 
-import Domain.RedClasses.User;
-import Domain.RedClasses.UserPurchase;
+import Domain.UserClasses.User;
+import Domain.UserClasses.UserPurchase;
 import Domain.info.StoreInfo;
 import Domain.store_System.System;
 import tests.AcceptanceTests.auxiliary.StoreDetails;
@@ -36,16 +36,22 @@
 	
 	public static boolean usecase3_1_Logout(int guestId) {
 		User me = System.getInstance().getMember(guestId);
+		if(me==null)
+			return false;
 		return me.logout();
 	}
 
 	public static boolean usecase3_2_OpenStore(int guestId, StoreDetails store) {
 		User me = System.getInstance().getMember(guestId);
+		if(me==null)
+			return false;
 		return me.openStore(new StoreInfo(store));
 	}
 
 	public static List<UserPurchase> usecase3_7_ReviewPurchasesHistory(int guestId) {
 		User me = System.getInstance().getMember(guestId);
+		if(me==null)
+			return null;
 		return me.getPurchaseHistory();
 
 	}
Index: src/Service_Layer/manager_accese/manager_accese.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Service_Layer.manager_accese;\r\n\r\nimport Domain.RedClasses.User;\r\nimport Domain.Store.StorePurchase;\r\nimport Domain.info.Question;\r\nimport Domain.store_System.System;\r\n\r\nimport java.util.LinkedList;\r\nimport java.util.List;\r\n\r\npublic class manager_accese {\r\n\r\n\tpublic static List<Question> usecase4_9_ViewMembersQuestions(String myusername, String myPassword, String storeName) {\r\n\t\tUser me = System.getInstance().getMember(myusername, myPassword);\r\n\t\tList<Question> questions = new LinkedList<Question>();\r\n\t\tquestions.addAll(me.viewQuestions(storeName));\r\n\t\treturn questions;\r\n\t}\r\n\r\n\tpublic static boolean usecase4_9_RespondToQuestion(String myusername, String myPassword, String ansewr, int QustionID) {\r\n\t\tUser me = System.getInstance().getMember(myusername, myPassword);\r\n\t\treturn me.giveRespond(ansewr, QustionID);\r\n\t}\r\n\r\n\tpublic static List<StorePurchase> usecase4_10_ViewAcquisitionHistory(String myusername, String myPassword, String storename) {\r\n\t\tUser me = System.getInstance().getMember(myusername, myPassword);\r\n\t\treturn me.ViewAquistionHistory(storename);\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Service_Layer/manager_accese/manager_accese.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Service_Layer/manager_accese/manager_accese.java	(date 1592314856744)
@@ -1,6 +1,6 @@
 package Service_Layer.manager_accese;
 
-import Domain.RedClasses.User;
+import Domain.UserClasses.User;
 import Domain.Store.StorePurchase;
 import Domain.info.Question;
 import Domain.store_System.System;
@@ -12,6 +12,8 @@
 
 	public static List<Question> usecase4_9_ViewMembersQuestions(String myusername, String myPassword, String storeName) {
 		User me = System.getInstance().getMember(myusername, myPassword);
+		if(me==null)
+			return null;
 		List<Question> questions = new LinkedList<Question>();
 		questions.addAll(me.viewQuestions(storeName));
 		return questions;
@@ -19,11 +21,15 @@
 
 	public static boolean usecase4_9_RespondToQuestion(String myusername, String myPassword, String ansewr, int QustionID) {
 		User me = System.getInstance().getMember(myusername, myPassword);
+		if(me==null)
+			return false;
 		return me.giveRespond(ansewr, QustionID);
 	}
 
 	public static List<StorePurchase> usecase4_10_ViewAcquisitionHistory(String myusername, String myPassword, String storename) {
 		User me = System.getInstance().getMember(myusername, myPassword);
+		if(me==null)
+			return null;
 		return me.ViewAquistionHistory(storename);
 	}
 }
Index: src/Service_Layer/sys_manager_accese/sys_mangaer_accese.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Service_Layer.sys_manager_accese;\r\n\r\nimport Domain.RedClasses.User;\r\nimport Domain.RedClasses.UserPurchase;\r\nimport Domain.Store.StorePurchase;\r\nimport Domain.store_System.System;\r\n\r\nimport java.util.List;\r\n\r\npublic class sys_mangaer_accese {\r\n\r\n\tpublic static boolean InitSystem(String myusername, String MyPassword) {\r\n\t\tSystem.getInstance().init(myusername,MyPassword);\r\n\t\treturn false;\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic static List<UserPurchase> usecase6_4A_WatchPurchesHistoryofUser(String myusername,String myPassword,String username)\r\n\t{\r\n\t\tUser me = System.getInstance().getMember(myusername, myPassword);\r\n\t\treturn me.ViewAquistionHistoryOfUser(username);\r\n\t}\r\n\t\r\n\tpublic static List<StorePurchase> usecase6_4B_WatchPurchesHistoryofStore(String myusername, String myPassword, String storename)\r\n\t{\r\n\t\tUser me = System.getInstance().getMember(myusername, myPassword);\r\n\t\treturn me.ViewAquistionHistory(storename);\r\n\r\n\t\t\r\n\t}\r\n\t\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Service_Layer/sys_manager_accese/sys_mangaer_accese.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Service_Layer/sys_manager_accese/sys_mangaer_accese.java	(date 1592314856744)
@@ -1,7 +1,7 @@
 package Service_Layer.sys_manager_accese;
 
-import Domain.RedClasses.User;
-import Domain.RedClasses.UserPurchase;
+import Domain.UserClasses.User;
+import Domain.UserClasses.UserPurchase;
 import Domain.Store.StorePurchase;
 import Domain.store_System.System;
 
@@ -11,19 +11,23 @@
 
 	public static boolean InitSystem(String myusername, String MyPassword) {
 		System.getInstance().init(myusername,MyPassword);
-		return false;
+		return true;
 		
 	}
 	
 	public static List<UserPurchase> usecase6_4A_WatchPurchesHistoryofUser(String myusername,String myPassword,String username)
 	{
 		User me = System.getInstance().getMember(myusername, myPassword);
+		if(me==null)
+			return null;
 		return me.ViewAquistionHistoryOfUser(username);
 	}
 	
 	public static List<StorePurchase> usecase6_4B_WatchPurchesHistoryofStore(String myusername, String myPassword, String storename)
 	{
 		User me = System.getInstance().getMember(myusername, myPassword);
+		if(me==null)
+			return null;
 		return me.ViewAquistionHistory(storename);
 
 		
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Project exclude paths\n/out/\n/bin/\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .gitignore	(revision 765f74774114b306c203219db8477a56813b661e)
+++ .gitignore	(date 1592314856740)
@@ -1,3 +1,4 @@
 # Project exclude paths
 /out/
 /bin/
+/.idea/
Index: Event_Log.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>Domain.store_System.System@51b279c9- new register\nDomain.store_System.System@51b279c9- new register\nDomain.store_System.System@51b279c9- new register\nDomain.store_System.System@51b279c9- new register\nDomain.store_System.System@51b279c9- new register\nDomain.store_System.System@51b279c9- new register\nDomain.store_System.System@51b279c9- new register\nDomain.store_System.System@51b279c9- new register\nDomain.store_System.System@51b279c9- new register\nDomain.store_System.System@51b279c9- new register\nDomain.store_System.System@51b279c9- new register\nDomain.store_System.System@51b279c9- new register\nDomain.store_System.System@51b279c9- new register\nDomain.store_System.System@51b279c9- new register\nDomain.store_System.System@51b279c9- new register\nDomain.store_System.System@2d127a61- new register\nDomain.store_System.System@2d127a61- new guest\nDomain.store_System.System@2d127a61- new guest\nDomain.store_System.System@2d127a61- user login\nDomain.store_System.System@2d127a61-manager login\nDomain.store_System.System@2d127a61- new guest\nDomain.store_System.System@2d127a61- new guest\nDomain.store_System.System@2d127a61- new guest\nDomain.store_System.System@2d127a61- user login\nDomain.store_System.System@2d127a61-manager login\nDomain.store_System.System@2d127a61- new guest\nDomain.store_System.System@2d127a61- new guest\nDomain.store_System.System@2d127a61-manager login\nDomain.store_System.System@2d127a61- new guest\nDomain.store_System.System@2d127a61- new guest\nDomain.store_System.System@2d127a61-manager login\nDomain.store_System.System@2d127a61- new guest\nDomain.store_System.System@2d127a61- new guest\nDomain.store_System.System@2d127a61-manager login\nDomain.store_System.System@71a794e5- new register\nDomain.store_System.System@71a794e5- new guest\nDomain.store_System.System@71a794e5- new guest\nDomain.store_System.System@71a794e5- user login\nDomain.store_System.System@71a794e5-manager login\nDomain.Store.StoreImp@1dd02175- new Store is created without itmes\nDomain.Store.workers.Creator@1176dcec- Created StoreOwner\nDomain.Store.workers.Creator@1176dcecOwner add item\nDomain.Store.StoreImp@1dd02175-add product\nDomain.Store.workers.Creator@1176dcecOwner add item\nDomain.Store.StoreImp@1dd02175-add product\nDomain.Store.workers.Creator@1176dcecOwner add item\nDomain.Store.StoreImp@1dd02175-add product\nDomain.store_System.System@6a396c1e- new register\nDomain.store_System.System@6a396c1e- new guest\nDomain.store_System.System@6a396c1e- new guest\nDomain.store_System.System@6a396c1e- user login\nDomain.store_System.System@6a396c1e-manager login\nDomain.Store.StoreImp@6c3f5566- new Store is created without itmes\nDomain.Store.workers.Creator@12405818- Created StoreOwner\nDomain.Store.workers.Creator@12405818Owner add item\nDomain.Store.StoreImp@6c3f5566-add product\nDomain.Store.workers.Creator@12405818Owner add item\nDomain.Store.StoreImp@6c3f5566-add product\nDomain.Store.workers.Creator@12405818Owner add item\nDomain.Store.StoreImp@6c3f5566-add product\nDomain.store_System.System@10b48321- new register\nDomain.store_System.System@10b48321- new guest\nDomain.store_System.System@10b48321- new guest\nDomain.store_System.System@10b48321- user login\nDomain.store_System.System@10b48321-manager login\nDomain.Store.StoreImp@6b67034- new Store is created without itmes\nDomain.Store.workers.Creator@16267862- Created StoreOwner\nDomain.Store.workers.Creator@16267862Owner add item\nDomain.Store.StoreImp@6b67034-add product\nDomain.Store.workers.Creator@16267862Owner add item\nDomain.Store.StoreImp@6b67034-add product\nDomain.Store.workers.Creator@16267862Owner add item\nDomain.Store.StoreImp@6b67034-add product\nDomain.store_System.System@10b48321- new guest\nDomain.store_System.System@10b48321- new guest\nDomain.store_System.System@10b48321- new guest\nDomain.store_System.System@10b48321- new guest\nDomain.store_System.System@10b48321- new guest\nDomain.store_System.System@62bd765- new register\nDomain.store_System.System@62bd765- new guest\nDomain.store_System.System@62bd765- new guest\nDomain.store_System.System@62bd765- user login\nDomain.store_System.System@62bd765-manager login\nDomain.Store.StoreImp@23a5fd2- new Store is created without itmes\nDomain.Store.workers.Creator@78a2da20- Created StoreOwner\nDomain.Store.workers.Creator@78a2da20Owner add item\nDomain.Store.StoreImp@23a5fd2-add product\nDomain.Store.workers.Creator@78a2da20Owner add item\nDomain.Store.StoreImp@23a5fd2-add product\nDomain.Store.workers.Creator@78a2da20Owner add item\nDomain.Store.StoreImp@23a5fd2-add product\nDomain.store_System.System@62bd765- new guest\nDomain.store_System.System@62bd765- new guest\nDomain.store_System.System@62bd765- new guest\nDomain.store_System.System@62bd765- new guest\nDomain.store_System.System@62bd765- new guest\nDomain.store_System.System@62bd765- new guest\nDomain.store_System.System@62bd765- new guest\nDomain.store_System.System@62bd765- new guest\nDomain.store_System.System@62bd765- new guest\nDomain.store_System.System@62bd765- new guest\nDomain.store_System.System@62bd765- new guest\nDomain.store_System.System@62bd765- new guest\nDomain.store_System.System@551bdc27- new register\nDomain.store_System.System@551bdc27- new guest\nDomain.store_System.System@551bdc27- new guest\nDomain.store_System.System@551bdc27- user login\nDomain.store_System.System@551bdc27-manager login\nDomain.Store.StoreImp@58fdd99- new Store is created without itmes\nDomain.Store.workers.Creator@6b1274d2- Created StoreOwner\nDomain.Store.workers.Creator@6b1274d2Owner add item\nDomain.Store.StoreImp@58fdd99-add product\nDomain.Store.workers.Creator@6b1274d2Owner add item\nDomain.Store.StoreImp@58fdd99-add product\nDomain.Store.workers.Creator@6b1274d2Owner add item\nDomain.Store.StoreImp@58fdd99-add product\nDomain.store_System.System@551bdc27- new guest\nDomain.store_System.System@551bdc27- new guest\nDomain.store_System.System@551bdc27- new guest\nDomain.store_System.System@70b0b186- new register\nDomain.store_System.System@70b0b186- new guest\nDomain.store_System.System@70b0b186- new guest\nDomain.store_System.System@70b0b186- user login\nDomain.store_System.System@70b0b186-manager login\nDomain.store_System.System@70b0b186- new guest\nDomain.store_System.System@70b0b186- new guest\nDomain.store_System.System@70b0b186- user login\nDomain.store_System.System@70b0b186-manager login\nDomain.store_System.System@70b0b186- new guest\nDomain.store_System.System@70b0b186- new guest\nDomain.store_System.System@70b0b186- user login\nDomain.store_System.System@70b0b186-manager login\nDomain.store_System.System@70b0b186- new guest\nDomain.store_System.System@70b0b186- new guest\nDomain.store_System.System@70b0b186- user login\nDomain.store_System.System@70b0b186-manager login\nDomain.store_System.System@70b0b186- new guest\nDomain.store_System.System@70b0b186- new guest\nDomain.store_System.System@70b0b186- user login\nDomain.store_System.System@70b0b186-manager login\nDomain.store_System.System@70b0b186- new guest\nDomain.store_System.System@70b0b186- new guest\nDomain.store_System.System@70b0b186- user login\nDomain.store_System.System@70b0b186-manager login\nDomain.store_System.System@6a472554- new register\nDomain.store_System.System@6a472554- new guest\nDomain.store_System.System@6a472554- new guest\nDomain.store_System.System@6a472554- user login\nDomain.store_System.System@6a472554-manager login\nDomain.Store.StoreImp@525b461a- new Store is created without itmes\nDomain.Store.workers.Creator@58c1c010- Created StoreOwner\nDomain.store_System.System@b7f23d9- new register\nDomain.store_System.System@b7f23d9- new guest\nDomain.store_System.System@b7f23d9- new guest\nDomain.store_System.System@b7f23d9- user login\nDomain.store_System.System@b7f23d9-manager login\nDomain.Store.StoreImp@61d47554- new Store is created without itmes\nDomain.Store.workers.Creator@69b794e2- Created StoreOwner\nDomain.Store.workers.Creator@69b794e2Owner add item\nDomain.Store.StoreImp@61d47554-add product\nDomain.Store.workers.Creator@69b794e2Owner add item\nDomain.Store.StoreImp@61d47554-add product\nDomain.Store.workers.Creator@69b794e2Owner add item\nDomain.Store.StoreImp@61d47554-add product\nDomain.store_System.System@b7f23d9- new guest\nDomain.store_System.System@b7f23d9- new guest\nDomain.store_System.System@b7f23d9- new guest\nDoma
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Event_Log.txt	(revision 765f74774114b306c203219db8477a56813b661e)
+++ Event_Log.txt	(date 1592314856740)
@@ -1,168 +1,325 @@
-Domain.store_System.System@51b279c9- new register
-Domain.store_System.System@51b279c9- new register
-Domain.store_System.System@51b279c9- new register
-Domain.store_System.System@51b279c9- new register
-Domain.store_System.System@51b279c9- new register
-Domain.store_System.System@51b279c9- new register
-Domain.store_System.System@51b279c9- new register
-Domain.store_System.System@51b279c9- new register
-Domain.store_System.System@51b279c9- new register
-Domain.store_System.System@51b279c9- new register
-Domain.store_System.System@51b279c9- new register
-Domain.store_System.System@51b279c9- new register
-Domain.store_System.System@51b279c9- new register
-Domain.store_System.System@51b279c9- new register
-Domain.store_System.System@51b279c9- new register
-Domain.store_System.System@2d127a61- new register
-Domain.store_System.System@2d127a61- new guest
-Domain.store_System.System@2d127a61- new guest
-Domain.store_System.System@2d127a61- user login
-Domain.store_System.System@2d127a61-manager login
-Domain.store_System.System@2d127a61- new guest
-Domain.store_System.System@2d127a61- new guest
-Domain.store_System.System@2d127a61- new guest
-Domain.store_System.System@2d127a61- user login
-Domain.store_System.System@2d127a61-manager login
-Domain.store_System.System@2d127a61- new guest
-Domain.store_System.System@2d127a61- new guest
-Domain.store_System.System@2d127a61-manager login
-Domain.store_System.System@2d127a61- new guest
-Domain.store_System.System@2d127a61- new guest
-Domain.store_System.System@2d127a61-manager login
-Domain.store_System.System@2d127a61- new guest
-Domain.store_System.System@2d127a61- new guest
-Domain.store_System.System@2d127a61-manager login
-Domain.store_System.System@71a794e5- new register
-Domain.store_System.System@71a794e5- new guest
-Domain.store_System.System@71a794e5- new guest
-Domain.store_System.System@71a794e5- user login
-Domain.store_System.System@71a794e5-manager login
-Domain.Store.StoreImp@1dd02175- new Store is created without itmes
-Domain.Store.workers.Creator@1176dcec- Created StoreOwner
-Domain.Store.workers.Creator@1176dcecOwner add item
-Domain.Store.StoreImp@1dd02175-add product
-Domain.Store.workers.Creator@1176dcecOwner add item
-Domain.Store.StoreImp@1dd02175-add product
-Domain.Store.workers.Creator@1176dcecOwner add item
-Domain.Store.StoreImp@1dd02175-add product
-Domain.store_System.System@6a396c1e- new register
-Domain.store_System.System@6a396c1e- new guest
-Domain.store_System.System@6a396c1e- new guest
-Domain.store_System.System@6a396c1e- user login
-Domain.store_System.System@6a396c1e-manager login
-Domain.Store.StoreImp@6c3f5566- new Store is created without itmes
-Domain.Store.workers.Creator@12405818- Created StoreOwner
-Domain.Store.workers.Creator@12405818Owner add item
-Domain.Store.StoreImp@6c3f5566-add product
-Domain.Store.workers.Creator@12405818Owner add item
-Domain.Store.StoreImp@6c3f5566-add product
-Domain.Store.workers.Creator@12405818Owner add item
-Domain.Store.StoreImp@6c3f5566-add product
-Domain.store_System.System@10b48321- new register
-Domain.store_System.System@10b48321- new guest
-Domain.store_System.System@10b48321- new guest
-Domain.store_System.System@10b48321- user login
-Domain.store_System.System@10b48321-manager login
-Domain.Store.StoreImp@6b67034- new Store is created without itmes
-Domain.Store.workers.Creator@16267862- Created StoreOwner
-Domain.Store.workers.Creator@16267862Owner add item
-Domain.Store.StoreImp@6b67034-add product
-Domain.Store.workers.Creator@16267862Owner add item
-Domain.Store.StoreImp@6b67034-add product
-Domain.Store.workers.Creator@16267862Owner add item
-Domain.Store.StoreImp@6b67034-add product
-Domain.store_System.System@10b48321- new guest
-Domain.store_System.System@10b48321- new guest
-Domain.store_System.System@10b48321- new guest
-Domain.store_System.System@10b48321- new guest
-Domain.store_System.System@10b48321- new guest
-Domain.store_System.System@62bd765- new register
-Domain.store_System.System@62bd765- new guest
-Domain.store_System.System@62bd765- new guest
-Domain.store_System.System@62bd765- user login
-Domain.store_System.System@62bd765-manager login
-Domain.Store.StoreImp@23a5fd2- new Store is created without itmes
-Domain.Store.workers.Creator@78a2da20- Created StoreOwner
-Domain.Store.workers.Creator@78a2da20Owner add item
-Domain.Store.StoreImp@23a5fd2-add product
-Domain.Store.workers.Creator@78a2da20Owner add item
-Domain.Store.StoreImp@23a5fd2-add product
-Domain.Store.workers.Creator@78a2da20Owner add item
-Domain.Store.StoreImp@23a5fd2-add product
-Domain.store_System.System@62bd765- new guest
-Domain.store_System.System@62bd765- new guest
-Domain.store_System.System@62bd765- new guest
-Domain.store_System.System@62bd765- new guest
-Domain.store_System.System@62bd765- new guest
-Domain.store_System.System@62bd765- new guest
-Domain.store_System.System@62bd765- new guest
-Domain.store_System.System@62bd765- new guest
-Domain.store_System.System@62bd765- new guest
-Domain.store_System.System@62bd765- new guest
-Domain.store_System.System@62bd765- new guest
-Domain.store_System.System@62bd765- new guest
-Domain.store_System.System@551bdc27- new register
-Domain.store_System.System@551bdc27- new guest
-Domain.store_System.System@551bdc27- new guest
-Domain.store_System.System@551bdc27- user login
-Domain.store_System.System@551bdc27-manager login
-Domain.Store.StoreImp@58fdd99- new Store is created without itmes
-Domain.Store.workers.Creator@6b1274d2- Created StoreOwner
-Domain.Store.workers.Creator@6b1274d2Owner add item
-Domain.Store.StoreImp@58fdd99-add product
-Domain.Store.workers.Creator@6b1274d2Owner add item
-Domain.Store.StoreImp@58fdd99-add product
-Domain.Store.workers.Creator@6b1274d2Owner add item
-Domain.Store.StoreImp@58fdd99-add product
-Domain.store_System.System@551bdc27- new guest
-Domain.store_System.System@551bdc27- new guest
-Domain.store_System.System@551bdc27- new guest
-Domain.store_System.System@70b0b186- new register
-Domain.store_System.System@70b0b186- new guest
-Domain.store_System.System@70b0b186- new guest
-Domain.store_System.System@70b0b186- user login
-Domain.store_System.System@70b0b186-manager login
-Domain.store_System.System@70b0b186- new guest
-Domain.store_System.System@70b0b186- new guest
-Domain.store_System.System@70b0b186- user login
-Domain.store_System.System@70b0b186-manager login
-Domain.store_System.System@70b0b186- new guest
-Domain.store_System.System@70b0b186- new guest
-Domain.store_System.System@70b0b186- user login
-Domain.store_System.System@70b0b186-manager login
-Domain.store_System.System@70b0b186- new guest
-Domain.store_System.System@70b0b186- new guest
-Domain.store_System.System@70b0b186- user login
-Domain.store_System.System@70b0b186-manager login
-Domain.store_System.System@70b0b186- new guest
-Domain.store_System.System@70b0b186- new guest
-Domain.store_System.System@70b0b186- user login
-Domain.store_System.System@70b0b186-manager login
-Domain.store_System.System@70b0b186- new guest
-Domain.store_System.System@70b0b186- new guest
-Domain.store_System.System@70b0b186- user login
-Domain.store_System.System@70b0b186-manager login
-Domain.store_System.System@6a472554- new register
-Domain.store_System.System@6a472554- new guest
-Domain.store_System.System@6a472554- new guest
-Domain.store_System.System@6a472554- user login
-Domain.store_System.System@6a472554-manager login
-Domain.Store.StoreImp@525b461a- new Store is created without itmes
-Domain.Store.workers.Creator@58c1c010- Created StoreOwner
-Domain.store_System.System@b7f23d9- new register
-Domain.store_System.System@b7f23d9- new guest
-Domain.store_System.System@b7f23d9- new guest
-Domain.store_System.System@b7f23d9- user login
-Domain.store_System.System@b7f23d9-manager login
-Domain.Store.StoreImp@61d47554- new Store is created without itmes
-Domain.Store.workers.Creator@69b794e2- Created StoreOwner
-Domain.Store.workers.Creator@69b794e2Owner add item
-Domain.Store.StoreImp@61d47554-add product
-Domain.Store.workers.Creator@69b794e2Owner add item
-Domain.Store.StoreImp@61d47554-add product
-Domain.Store.workers.Creator@69b794e2Owner add item
-Domain.Store.StoreImp@61d47554-add product
-Domain.store_System.System@b7f23d9- new guest
-Domain.store_System.System@b7f23d9- new guest
-Domain.store_System.System@b7f23d9- new guest
-Doma
\ No newline at end of file
+Domain.store_System.System@e2d56bf- new register
+Domain.store_System.System@e2d56bf- new register
+Domain.store_System.System@e2d56bf- new register
+Domain.store_System.System@e2d56bf- new register
+Domain.store_System.System@e2d56bf- new register
+Domain.store_System.System@e2d56bf- new register
+Domain.store_System.System@e2d56bf- new register
+Domain.store_System.System@e2d56bf- new register
+Domain.store_System.System@e2d56bf- new register
+Domain.store_System.System@e2d56bf- new register
+Domain.store_System.System@e2d56bf- new register
+Domain.store_System.System@e2d56bf- new register
+Domain.store_System.System@e2d56bf- new register
+Domain.store_System.System@e2d56bf- new register
+Domain.store_System.System@e2d56bf- new register
+Domain.store_System.System@65ae6ba4- new register
+Domain.store_System.System@65ae6ba4- new guest
+Domain.store_System.System@65ae6ba4- new guest
+Domain.store_System.System@65ae6ba4- user login
+Domain.store_System.System@65ae6ba4-manager login
+Domain.store_System.System@65ae6ba4- new guest
+Domain.store_System.System@65ae6ba4user went offline
+Domain.store_System.System@65ae6ba4- new guest
+Domain.store_System.System@65ae6ba4- new guest
+Domain.store_System.System@65ae6ba4- user login
+Domain.store_System.System@65ae6ba4-manager login
+Domain.store_System.System@65ae6ba4user went offline
+Domain.store_System.System@65ae6ba4- new guest
+Domain.store_System.System@65ae6ba4- new guest
+Domain.store_System.System@65ae6ba4-manager login
+Domain.store_System.System@65ae6ba4- new guest
+Domain.store_System.System@65ae6ba4- new guest
+Domain.store_System.System@65ae6ba4-manager login
+Domain.store_System.System@65ae6ba4- new guest
+Domain.store_System.System@65ae6ba4- new guest
+Domain.store_System.System@65ae6ba4-manager login
+Domain.store_System.System@6a6824be- new register
+Domain.store_System.System@6a6824be- new guest
+Domain.store_System.System@6a6824be- new guest
+Domain.store_System.System@6a6824be- user login
+Domain.store_System.System@6a6824be-manager login
+Domain.Store.StoreImp@c2721512- new Store is created without itmes
+Domain.UserClasses.User@18ef96- opening store
+Domain.Store.workers.Creator@6956de9- Created StoreOwner
+Domain.Store.workers.Creator@6956de9Owner add item
+Domain.Store.StoreImp@c2721512-add product
+Domain.Store.workers.Creator@6956de9Owner add item
+Domain.Store.StoreImp@c2721512-add product
+Domain.Store.workers.Creator@6956de9Owner add item
+Domain.Store.StoreImp@c2721512-add product
+Domain.store_System.System@6a6824beuser went offline
+Domain.store_System.System@6aceb1a5- new register
+Domain.store_System.System@6aceb1a5- new guest
+Domain.store_System.System@6aceb1a5- new guest
+Domain.store_System.System@6aceb1a5- user login
+Domain.store_System.System@6aceb1a5-manager login
+Domain.Store.StoreImp@a447110d- new Store is created without itmes
+Domain.UserClasses.User@67117f44- opening store
+Domain.Store.workers.Creator@5d3411d- Created StoreOwner
+Domain.Store.workers.Creator@5d3411dOwner add item
+Domain.Store.StoreImp@a447110d-add product
+Domain.Store.workers.Creator@5d3411dOwner add item
+Domain.Store.StoreImp@a447110d-add product
+Domain.Store.workers.Creator@5d3411dOwner add item
+Domain.Store.StoreImp@a447110d-add product
+Domain.store_System.System@6aceb1a5user went offline
+Domain.store_System.System@5fe5c6f- new register
+Domain.store_System.System@5fe5c6f- new guest
+Domain.store_System.System@5fe5c6f- new guest
+Domain.store_System.System@5fe5c6f- user login
+Domain.store_System.System@5fe5c6f-manager login
+Domain.Store.StoreImp@28a46969- new Store is created without itmes
+Domain.UserClasses.User@31b7dea0- opening store
+Domain.Store.workers.Creator@3ac42916- Created StoreOwner
+Domain.Store.workers.Creator@3ac42916Owner add item
+Domain.Store.StoreImp@28a46969-add product
+Domain.Store.workers.Creator@3ac42916Owner add item
+Domain.Store.StoreImp@28a46969-add product
+Domain.Store.workers.Creator@3ac42916Owner add item
+Domain.Store.StoreImp@28a46969-add product
+Domain.store_System.System@5fe5c6fuser went offline
+Domain.store_System.System@5fe5c6f- new guest
+Domain.store_System.System@5fe5c6f- new guest
+Domain.store_System.System@5fe5c6f- new guest
+Domain.store_System.System@5fe5c6f- new guest
+Domain.store_System.System@5fe5c6f- new guest
+Domain.store_System.System@2d6a9952- new register
+Domain.store_System.System@2d6a9952- new guest
+Domain.store_System.System@2d6a9952- new guest
+Domain.store_System.System@2d6a9952- user login
+Domain.store_System.System@2d6a9952-manager login
+Domain.Store.StoreImp@39271817- new Store is created without itmes
+Domain.UserClasses.User@c39f790- opening store
+Domain.Store.workers.Creator@71e7a66b- Created StoreOwner
+Domain.Store.workers.Creator@71e7a66bOwner add item
+Domain.Store.StoreImp@39271817-add product
+Domain.Store.workers.Creator@71e7a66bOwner add item
+Domain.Store.StoreImp@39271817-add product
+Domain.Store.workers.Creator@71e7a66bOwner add item
+Domain.Store.StoreImp@39271817-add product
+Domain.store_System.System@2d6a9952user went offline
+Domain.store_System.System@2d6a9952- new guest
+Domain.store_System.System@2d6a9952- new guest
+Domain.store_System.System@2d6a9952- new guest
+Domain.store_System.System@2d6a9952- new guest
+Domain.store_System.System@2d6a9952- new guest
+Domain.UserClasses.User@5f150435- remove item from cart
+Domain.store_System.System@2d6a9952- new guest
+Domain.store_System.System@2d6a9952- new guest
+Domain.UserClasses.User@5f150435- remove item from cart
+Domain.store_System.System@2d6a9952- new guest
+Domain.store_System.System@2d6a9952- new guest
+Domain.UserClasses.User@5f150435- remove item from cart
+Domain.store_System.System@2d6a9952- new guest
+Domain.store_System.System@2d6a9952- new guest
+Domain.UserClasses.User@5f150435- remove item from cart
+Domain.store_System.System@2d6a9952- new guest
+Domain.UserClasses.User@5f150435- remove item from cart
+Domain.store_System.System@1c53fd30- new register
+Domain.store_System.System@1c53fd30- new guest
+Domain.store_System.System@1c53fd30- new guest
+Domain.store_System.System@1c53fd30- user login
+Domain.store_System.System@1c53fd30-manager login
+Domain.Store.StoreImp@caf6e5be- new Store is created without itmes
+Domain.UserClasses.User@3ecf72fd- opening store
+Domain.Store.workers.Creator@483bf400- Created StoreOwner
+Domain.Store.workers.Creator@483bf400Owner add item
+Domain.Store.StoreImp@caf6e5be-add product
+Domain.Store.workers.Creator@483bf400Owner add item
+Domain.Store.StoreImp@caf6e5be-add product
+Domain.Store.workers.Creator@483bf400Owner add item
+Domain.Store.StoreImp@caf6e5be-add product
+Domain.store_System.System@1c53fd30user went offline
+Domain.store_System.System@1c53fd30- new guest
+Domain.store_System.System@1c53fd30- new guest
+Domain.store_System.System@1c53fd30- new guest
+Domain.store_System.System@1c53fd30- new guest
+Domain.store_System.System@1c53fd30- new guest
+Domain.Store.StoreImp@caf6e5be- taking out products full amount
+Domain.Store.StoreImp@caf6e5be- taking out products full amount
+Domain.store_System.System@1c53fd30- new guest
+Domain.store_System.System@1c53fd30- returning product to store
+Domain.Store.StoreImp@caf6e5be-add product
+Domain.Store.StoreImp@caf6e5be-add product
+Domain.store_System.System@1c53fd30- new guest
+Domain.store_System.System@1c53fd30- new guest
+Domain.Store.StoreImp@caf6e5be- taking out products full amount
+Domain.Store.StoreImp@caf6e5be- taking out products full amount
+Domain.store_System.System@1c53fd30- new guest
+Domain.store_System.System@1c53fd30- new guest
+Domain.store_System.System@7cdbc5d3- new register
+Domain.store_System.System@7cdbc5d3- new guest
+Domain.store_System.System@7cdbc5d3- new guest
+Domain.store_System.System@7cdbc5d3- user login
+Domain.store_System.System@7cdbc5d3-manager login
+Domain.store_System.System@7cdbc5d3user went offline
+Domain.store_System.System@7cdbc5d3- new guest
+Domain.store_System.System@7cdbc5d3- new guest
+Domain.store_System.System@7cdbc5d3- user login
+Domain.store_System.System@7cdbc5d3-manager login
+Domain.store_System.System@7cdbc5d3user went offline
+Domain.store_System.System@7cdbc5d3- new guest
+Domain.store_System.System@7cdbc5d3- new guest
+Domain.store_System.System@7cdbc5d3- user login
+Domain.store_System.System@7cdbc5d3-manager login
+Domain.store_System.System@7cdbc5d3user went offline
+Domain.store_System.System@7cdbc5d3- new guest
+Domain.store_System.System@7cdbc5d3- new guest
+Domain.store_System.System@7cdbc5d3- user login
+Domain.store_System.System@7cdbc5d3-manager login
+Domain.store_System.System@7cdbc5d3user went offline
+Domain.store_System.System@7cdbc5d3- new guest
+Domain.store_System.System@7cdbc5d3- new guest
+Domain.store_System.System@7cdbc5d3- user login
+Domain.store_System.System@7cdbc5d3-manager login
+Domain.store_System.System@7cdbc5d3user went offline
+Domain.store_System.System@7cdbc5d3- new guest
+Domain.store_System.System@7cdbc5d3- new guest
+Domain.store_System.System@7cdbc5d3- user login
+Domain.store_System.System@7cdbc5d3-manager login
+Domain.store_System.System@7cdbc5d3user went offline
+Domain.store_System.System@34340fab- new register
+Domain.store_System.System@34340fab- new guest
+Domain.store_System.System@34340fab- new guest
+Domain.store_System.System@34340fab- user login
+Domain.store_System.System@34340fab-manager login
+Domain.Store.StoreImp@1fc69e1b- new Store is created without itmes
+Domain.UserClasses.User@6ea6d14e- opening store
+Domain.Store.workers.Creator@6ad5c04e- Created StoreOwner
+Domain.UserClasses.User@6ea6d14e- trying to open store while not login
+Domain.store_System.System@6833ce2c- new register
+Domain.store_System.System@6833ce2c- new guest
+Domain.store_System.System@6833ce2c- new guest
+Domain.store_System.System@6833ce2c- user login
+Domain.store_System.System@6833ce2c-manager login
+Domain.Store.StoreImp@609a00e1- new Store is created without itmes
+Domain.UserClasses.User@357246de- opening store
+Domain.Store.workers.Creator@28f67ac7- Created StoreOwner
+Domain.Store.workers.Creator@28f67ac7Owner add item
+Domain.Store.StoreImp@609a00e1-add product
+Domain.Store.workers.Creator@28f67ac7Owner add item
+Domain.Store.StoreImp@609a00e1-add product
+Domain.Store.workers.Creator@28f67ac7Owner add item
+Domain.Store.StoreImp@609a00e1-add product
+Domain.store_System.System@6833ce2cuser went offline
+Domain.store_System.System@6833ce2c- new guest
+Domain.store_System.System@6833ce2c- new guest
+Domain.store_System.System@6833ce2c- new guest
+Domain.store_System.System@6833ce2c- user login
+Domain.store_System.System@6833ce2c-manager login
+Domain.UserClasses.User@256216b3- trying to open store while not login
+Domain.Store.workers.Creator@28f67ac7Owner add item
+Domain.Store.StoreImp@609a00e1-add product
+Domain.Store.workers.Creator@28f67ac7Owner add item
+Domain.Store.StoreImp@609a00e1-add product
+Domain.Store.workers.Creator@28f67ac7Owner add item
+Domain.Store.StoreImp@609a00e1-add product
+Domain.store_System.System@6833ce2cuser went offline
+Domain.store_System.System@6833ce2c- new guest
+Domain.store_System.System@6833ce2c- new guest
+Domain.store_System.System@6833ce2c- new guest
+Domain.store_System.System@6833ce2c- new guest
+Domain.store_System.System@6833ce2c- user login
+Domain.store_System.System@6833ce2c-manager login
+Domain.store_System.System@6833ce2c- new guest
+Domain.store_System.System@6833ce2c- new guest
+Domain.Store.StoreImp@609a00e1- taking out products full amount
+Domain.Store.StoreImp@609a00e1- taking out products full amount
+Domain.store_System.System@6833ce2c- new guest
+Domain.store_System.System@6833ce2c- new guest
+Domain.store_System.System@19bb089b- new register
+Domain.store_System.System@19bb089b- new guest
+Domain.store_System.System@19bb089b- new guest
+Domain.store_System.System@19bb089b- user login
+Domain.store_System.System@19bb089b-manager login
+Domain.Store.StoreImp@7dc549b0- new Store is created without itmes
+Domain.UserClasses.User@7cf10a6f- opening store
+Domain.Store.workers.Creator@7e0babb1- Created StoreOwner
+Domain.Store.workers.Creator@7e0babb1Owner add item
+Domain.Store.StoreImp@7dc549b0-add product
+Domain.Store.workers.Creator@7e0babb1Owner add item
+Domain.Store.StoreImp@7dc549b0-add product
+Domain.Store.workers.Creator@7e0babb1Owner add item
+Domain.Store.StoreImp@7dc549b0-add product
+Domain.Store.workers.Creator@7e0babb1-Owner edit item
+Domain.Store.StoreImp@7dc549b0- edit item
+Domain.Store.workers.Creator@7e0babb1-Owner edit item
+Domain.Store.StoreImp@7dc549b0- edit item
+Domain.Store.workers.Creator@7e0babb1-Owner edit item
+Domain.Store.StoreImp@7dc549b0- edit item
+Domain.Store.workers.Creator@7e0babb1-Owner remove item
+Domain.Store.StoreImp@7dc549b0-remove product
+Domain.Store.workers.Creator@7e0babb1-Owner remove item
+Domain.Store.StoreImp@7dc549b0-remove product
+Domain.Store.workers.Creator@7e0babb1-Owner remove item
+Domain.Store.StoreImp@7dc549b0-remove product
+Domain.Store.workers.Creator@7e0babb1-Owner edit item
+Domain.Store.StoreImp@7dc549b0- edit item
+Domain.Store.workers.Creator@7e0babb1-Owner edit item
+Domain.Store.StoreImp@7dc549b0- edit item
+Domain.Store.workers.Creator@7e0babb1-Owner edit item
+Domain.Store.StoreImp@7dc549b0- edit item
+Domain.Store.workers.Creator@7e0babb1-Owner remove item
+Domain.Store.StoreImp@7dc549b0-remove product
+Domain.Store.workers.Creator@7e0babb1-Owner remove item
+Domain.Store.StoreImp@7dc549b0-remove product
+Domain.Store.workers.Creator@7e0babb1-Owner remove item
+Domain.Store.StoreImp@7dc549b0-remove product
+Domain.store_System.System@2ff4f00f- new register
+Domain.store_System.System@2ff4f00f- new guest
+Domain.store_System.System@2ff4f00f- new guest
+Domain.store_System.System@2ff4f00f- user login
+Domain.store_System.System@2ff4f00f-manager login
+Domain.Store.StoreImp@c67b976- new Store is created without itmes
+Domain.UserClasses.User@5a39699c- opening store
+Domain.Store.workers.Creator@3cb5cdba- Created StoreOwner
+Domain.store_System.System@2ff4f00f- new register
+Domain.store_System.System@2ff4f00f- new guest
+Domain.store_System.System@2ff4f00f- new guest
+Domain.store_System.System@2ff4f00f- user login
+Domain.store_System.System@2ff4f00f-manager login
+Domain.Store.workers.StoreOwner_Imp@1134affc- Created Owner
+Domain.Store.StoreImp@c67b976- appoint new manager in store
+Domain.Store.workers.Creator@3cb5cdbaOwner appoint new Owner
+Domain.Store.workers.StoreOwner_Imp@d041cf- Created Owner
+Domain.store_System.System@129a8472- new register
+Domain.store_System.System@129a8472- new guest
+Domain.store_System.System@129a8472- new guest
+Domain.store_System.System@129a8472- user login
+Domain.store_System.System@129a8472-manager login
+Domain.Store.StoreImp@2be94036- new Store is created without itmes
+Domain.UserClasses.User@1cd072a9- opening store
+Domain.Store.workers.Creator@7c75222b- Created StoreOwner
+Domain.store_System.System@129a8472- new register
+Domain.store_System.System@129a8472- new guest
+Domain.store_System.System@129a8472- new guest
+Domain.store_System.System@129a8472- user login
+Domain.store_System.System@129a8472-manager login
+Domain.Store.workers.StoreManager_Imp@27f674d- Created Manager
+Domain.Store.StoreImp@2be94036- appoint new manager in store
+Domain.Store.workers.Creator@7c75222bOwner appoint new Manager
+Domain.Store.workers.StoreManager_Imp@1d251891- Created Manager
+Domain.Store.workers.Creator@7c75222bOwner fire worker
+Domain.Store.StoreImp@2be94036- fire manager from store
+Domain.Store.workers.Creator@7c75222bOwner fire worker
+Domain.Store.StoreImp@2be94036- fire manager from store
+Domain.store_System.System@7c30a502- new register
+Domain.store_System.System@7c30a502- new guest
+Domain.store_System.System@7c30a502- new guest
+Domain.store_System.System@7c30a502- user login
+Domain.store_System.System@7c30a502-manager login
+Domain.Store.StoreImp@78f398d4- new Store is created without itmes
+Domain.UserClasses.User@1e643faf- opening store
+Domain.Store.workers.Creator@6e8dacdf- Created StoreOwner
+Domain.store_System.System@7c30a502- new register
+Domain.store_System.System@7c30a502- new guest
+Domain.store_System.System@7c30a502- new guest
+Domain.store_System.System@7c30a502- user login
+Domain.store_System.System@7c30a502-manager login
+Domain.Store.workers.StoreManager_Imp@7a79be86- Created Manager
+Domain.Store.StoreImp@78f398d4- appoint new manager in store
+Domain.Store.workers.Creator@6e8dacdfOwner appoint new Manager
+Domain.UserClasses.User@1e643faf- editing managerPermesions
+Domain.Store.workers.Creator@6e8dacdf-Owner changed other manager permesions
+Domain.Store.StoreImp@78f398
\ No newline at end of file
Index: src/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>public class Main {\n\t\n\t\n\t\n    public static void main(String[] args){\n        System.out.println(\"Hello World!!\");\n    }\n    //ok for me\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Main.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Main.java	(date 1592314856744)
@@ -1,9 +1,32 @@
+import Domain.Store.Product;
+import Domain.info.ProductDetails;
+import Service_Layer.guest_accese.guest_accese;
+import Service_Layer.owner_accese.owner_accese;
+
+import java.util.LinkedList;
+import java.util.List;
+
 public class Main {
 	
 	
 	
     public static void main(String[] args){
-        System.out.println("Hello World!!");
+        List<String> lst = new LinkedList<>();
+        lst.add("fruits");
+
+        if(guest_accese.usecase2_2_guest_register("k", "")){
+            System.out.println("good");
+        }
+        else {
+            System.out.println("bad");
+        }
+
+
+        if(owner_accese.usecase4_1_1_AddingProdacsToStore("k", "", "ebay", new Product(new ProductDetails("banana", lst, "ebay", 300, 20.15)))){
+            System.out.println("good");
+        }
+        else {
+            System.out.println("bad");
+        }
     }
-    //ok for me
 }
Index: src/tests/UnitTests/StoreTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tests.UnitTests;\n\nimport org.junit.Test;\n\nimport Domain.Store.*;\n\nimport java.util.LinkedList;\nimport java.util.List;\n\nimport static org.junit.Assert.*;\n\npublic class StoreTest {\n\n    @Test\n    public void addProduct() {\n        StoreImp s = new StoreImp(\"myStore\",\"berlin\",4);\n//        assertTrue(s.addProduct(new Product(\"ball\",\"play\",new LinkedList<>(),5,5,s)));\n//        assertFalse(s.addProduct(new Product(\"ball\",\"play\",new LinkedList<>(),5,5,s)));\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/tests/UnitTests/StoreTest.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/tests/UnitTests/StoreTest.java	(date 1592314856756)
@@ -1,20 +1,48 @@
 package tests.UnitTests;
 
+import Domain.info.ProductDetails;
+import org.junit.Before;
 import org.junit.Test;
 
 import Domain.Store.*;
 
 import java.util.LinkedList;
-import java.util.List;
 
 import static org.junit.Assert.*;
 
 public class StoreTest {
 
+    ProductDetails PD1;
+    ProductDetails PD2;
+    String storename = "Mystore";
+
+
+    @Before
+    public void setup() {
+        PD1 = new ProductDetails("item 1", new LinkedList<>(), storename, 5, 23);
+        PD2 = new ProductDetails("item 2", new LinkedList<>(), storename, 2, 65);
+        //Product p = new Product( "item 1", new LinkedList<>(), new LinkedList<>(),  12,  5,  store);
+
+    }
+
     @Test
-    public void addProduct() {
-        StoreImp s = new StoreImp("myStore","berlin",4);
-//        assertTrue(s.addProduct(new Product("ball","play",new LinkedList<>(),5,5,s)));
-//        assertFalse(s.addProduct(new Product("ball","play",new LinkedList<>(),5,5,s)));
+    public void CreateStore() {
+        StoreImp s = new StoreImp(storename,"berlin",4);
+        assertEquals("myStore",s.getName());
+        assertEquals("berlin",s.getAddress());
+        assertEquals(4,s.getRating());
     }
+
+    @Test
+    public void addProducts() {
+        StoreImp store = new StoreImp(storename,"berlin",4);
+        store.addProduct(PD1);
+        store.addProduct(PD2);
+
+        assertEquals(2,store.getProductsDetails().size());
+        assertEquals(PD1,store.findProductDetailsByName(PD1.getName()));
+        assertEquals(PD2,store.findProductDetailsByName(PD2.getName()));
+
+    }
+
 }
Index: src/tests/UnitTests/ErrorLoggerTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tests.UnitTests;\n\nimport org.junit.Test;\n\nimport Domain.Logs.ErrorLogger;\nimport Domain.Logs.Log;\n\nimport java.io.File;\nimport java.io.FileNotFoundException;\nimport java.util.Scanner;\n\nimport static org.junit.Assert.*;\n\npublic class ErrorLoggerTest {\n\n    Log ErrorLogger1=ErrorLogger.GetInstance();\n    Log ErrorLogger2=ErrorLogger.GetInstance();\n\n    @org.junit.Test\n    public void log() {\n        ErrorLogger1.Add_Log(\"Test Test\");\n        ErrorLogger1.CloseLogger();\n        ErrorLogger2.CloseLogger();\n        File file=new File(\"Error_log.txt\");\n        try {\n            Scanner scanner=new Scanner(file);\n            assertEquals(\"Test Test\",scanner.nextLine());\n        } catch (FileNotFoundException e) {\n            e.printStackTrace();\n        }\n\n    }\n\n    @org.junit.Test\n    public void getInstance() {\n        ErrorLogger1.Add_Log(\"Test Test\");\n        ErrorLogger1.CloseLogger();\n        ErrorLogger2.Add_Log(\"Test Test\");\n        ErrorLogger2.CloseLogger();\n        File file=new File(\"Error_log.txt\");\n        try {\n            Scanner scanner=new Scanner(file);\n            assertEquals(\"Test Test\",scanner.nextLine());\n            assertEquals(\"Test Test\",scanner.nextLine());\n\n        } catch (FileNotFoundException e) {\n            e.printStackTrace();\n        }\n    }\n\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/tests/UnitTests/ErrorLoggerTest.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/tests/UnitTests/ErrorLoggerTest.java	(date 1592314856756)
@@ -1,15 +1,13 @@
 package tests.UnitTests;
 
-import org.junit.Test;
-
-import Domain.Logs.ErrorLogger;
-import Domain.Logs.Log;
+import static org.junit.Assert.assertEquals;
 
 import java.io.File;
 import java.io.FileNotFoundException;
 import java.util.Scanner;
 
-import static org.junit.Assert.*;
+import Domain.Logs.ErrorLogger;
+import Domain.Logs.Log;
 
 public class ErrorLoggerTest {
 
Index: src/tests/UnitTests/SystemTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tests.UnitTests;\n\n\nimport static org.junit.Assert.assertFalse;\nimport static org.junit.Assert.assertTrue;\n\nimport java.util.List;\n\nimport org.junit.Test;\n\nimport Domain.Store.StoreImp;\nimport Domain.store_System.System;\n\npublic class SystemTest {\n    private System s = System.getInstance();\n\n    @Test\n    //register with new id and a password\n    public void registerNewMember() {\n        String newId = \"1111\";\n        String pass = \"working\";\n        assertTrue(s.register(newId, pass));\n    }\n\n    @Test\n    //register with old id\n    public void registerOldMember() {\n        String Id = \"2222\";\n        String pass = \"notWorking\";\n        assertTrue(s.register(Id, pass));\n        assertFalse(s.register(Id, pass));\n    }\n\n    @Test\n    //login with existing id and pass\n    public void loginOldMember() {\n        String Id = \"1\";\n        String pass = \"1\";\n        assertTrue(s.register(Id, pass));\n//        assertTrue(s.login(Id, pass)!=null);\n    }\n\n\n    @Test\n    //login with wrong password\n    public void loginPass() {\n        String Id = \"3\";\n        String pass = \"3\";\n        assertTrue(s.register(Id, pass));\n        String wrongPass = \"1\";\n//        assertTrue(s.login(Id, wrongPass)==null);\n    }\n\n    @Test\n    //open new store\n    public void openStore() {\n        assertTrue(s.openStore(\"ebay\", \"london\", 5) != null);\n        assertTrue(s.openStore(\"ebay\", \"london\", 5) == null);\n    }\n\n    @Test\n    public void getStoreDetails() {\n        StoreImp goo = s.openStore(\"goo\", \"london\", 5);\n        assertTrue(goo != null);\n        assertTrue(s.getStoreDetails(\"goo\") == goo);\n        assertTrue(s.getStoreDetails(\"amazon\") == null);\n    }\n\n    @Test\n    public void getAllStore() {\n        StoreImp a = s.openStore(\"a\", \"london\", 5);\n        StoreImp b = s.openStore(\"b\", \"london\", 5);\n        StoreImp c = s.openStore(\"b\", \"london\", 5);\n        assertTrue(a != null);\n        assertTrue(b != null);\n        assertTrue(c == null);\n//        List<StoreImp> allStores = s.getAllStores();\n//        assertTrue(allStores.contains(a));\n//        assertTrue(allStores.contains(b));\n//        assertTrue(!allStores.contains(c));\n    }\n//\n//    @Test\n//    public void getProductsFromStore() {\n//        StoreImp a = s.openStore(\"d\", \"london\", 5);\n//        Product first = new Product(\"sword\", \"play\", new LinkedList<>(), 5, 5, a);\n//        assertTrue(a != null);\n//        a.addProduct(first);\n//        assertTrue(s.getProductsFromStore(\"d\").contains(first));\n//    }\n//\n//    @Test\n//    public void searchProductByName() {\n//        StoreImp a = s.openStore(\"e\", \"london\", 5);\n//        Product first = new Product(\"armor\", \"play\", new LinkedList<>(), 5, 5, a);\n//        StoreImp b = s.openStore(\"f\", \"london\", 5);\n//        Product second = new Product(\"armor\", \"play\", new LinkedList<>(), 5, 5, b);\n//        Product third = new Product(\"gun\", \"play\", new LinkedList<>(), 5, 5, b);\n//        assertTrue(a != null);\n//        assertTrue(b != null);\n//        a.addProduct(first);\n//        b.addProduct(second);\n//        b.addProduct(third);\n//        assertTrue(s.searchProductsByName(\"armor\").contains(first));\n//        assertTrue(s.searchProductsByName(\"armor\").contains(second));\n//        assertTrue(!s.searchProductsByName(\"armor\").contains(third));\n//    }\n//\n//    @Test\n//    public void searchProductByCategory() {\n//        StoreImp a = s.openStore(\"h\", \"london\", 5);\n//        Product first = new Product(\"armor\", \"play\", new LinkedList<>(), 5, 5, a);\n//        Product second = new Product(\"sword\", \"drama\", new LinkedList<>(), 5, 5, a);\n//        Product third = new Product(\"gun\", \"play\", new LinkedList<>(), 5, 5, a);\n//        assertTrue(a != null);\n//        a.addProduct(first);\n//        a.addProduct(second);\n//        a.addProduct(third);\n//        assertTrue(s.searchProductsByCategory(\"play\").contains(first));\n//        assertTrue(!s.searchProductsByCategory(\"play\").contains(second));\n//        assertTrue(s.searchProductsByCategory(\"play\").contains(third));\n//    }\n//\n//    @Test\n//    public void searchProductByKeywords() {\n//        StoreImp a = s.openStore(\"k\", \"london\", 5);\n//        List<String> keywords1 = new LinkedList<>();\n//        keywords1.add(\"cheap\");\n//        keywords1.add(\"solid\");\n//        List<String> keywords2 = new LinkedList<>();\n//        keywords2.add(\"solid\");\n//        Product first = new Product(\"armor\", \"play\", keywords1, 5, 5, a);\n//        Product second = new Product(\"sword\", \"drama\", keywords2, 5, 5, a);\n//        Product third = new Product(\"gun\", \"play\", keywords2, 5, 5, a);\n//        assertTrue(a != null);\n//        a.addProduct(first);\n//        a.addProduct(second);\n//        a.addProduct(third);\n//        assertTrue(s.searchProductsByKeyword(\"solid\").contains(first));\n//        assertTrue(s.searchProductsByKeyword(\"solid\").contains(second));\n//        assertTrue(s.searchProductsByKeyword(\"solid\").contains(third));\n//        assertTrue(s.searchProductsByKeyword(\"cheap\").contains(first));\n//        assertTrue(!s.searchProductsByKeyword(\"cheap\").contains(second));\n//        assertTrue(!s.searchProductsByKeyword(\"cheap\").contains(third));\n//    }\n//\n//    @Test\n//    public void filterByPrice() {\n//        StoreImp a = s.openStore(\"j\", \"london\", 5);\n//        Product first = new Product(\"armor\", \"play\", new LinkedList<>(), 7, 5, a);\n//        Product second = new Product(\"sword\", \"drama\", new LinkedList<>(), 5, 5, a);\n//        Product third = new Product(\"gun\", \"play\", new LinkedList<>(), 1, 5, a);\n//        assertTrue(a != null);\n//        a.addProduct(first);\n//        a.addProduct(second);\n//        a.addProduct(third);\n//        assertTrue(s.filterByPrice(a.getProducts(), 4, 8).contains(first));\n//        assertTrue(s.filterByPrice(a.getProducts(), 4, 8).contains(second));\n//        assertTrue(!s.filterByPrice(a.getProducts(), 4, 8).contains(third));\n//    }\n//\n//    @Test\n//    public void filterByRating() {\n//        StoreImp a = s.openStore(\"z\", \"london\", 5);\n//        Product first = new Product(\"armor\", \"play\", new LinkedList<>(), 7, 9, a);\n//        Product second = new Product(\"sword\", \"drama\", new LinkedList<>(), 5, 5, a);\n//        Product third = new Product(\"gun\", \"play\", new LinkedList<>(), 1, 3, a);\n//        assertTrue(a != null);\n//        a.addProduct(first);\n//        a.addProduct(second);\n//        a.addProduct(third);\n//        assertTrue(!s.filterByRating(a.getProducts(), 4, 8).contains(first));\n//        assertTrue(s.filterByRating(a.getProducts(), 4, 8).contains(second));\n//        assertTrue(!s.filterByRating(a.getProducts(), 4, 8).contains(third));\n//    }\n//\n//    @Test\n//    public void filterByCategory() {\n//        StoreImp a = s.openStore(\"y\", \"london\", 5);\n//        Product first = new Product(\"armor\", \"play\", new LinkedList<>(), 7, 9, a);\n//        Product second = new Product(\"sword\", \"drama\", new LinkedList<>(), 5, 5, a);\n//        Product third = new Product(\"gun\", \"play\", new LinkedList<>(), 1, 3, a);\n//        assertTrue(a != null);\n//        a.addProduct(first);\n//        a.addProduct(second);\n//        a.addProduct(third);\n//        assertTrue(!s.filterByCategory(a.getProducts(), \"drama\").contains(first));\n//        assertTrue(s.filterByCategory(a.getProducts(), \"drama\").contains(second));\n//        assertTrue(!s.filterByCategory(a.getProducts(), \"drama\").contains(third));\n//    }\n//\n//    @Test\n//    public void filterByStoreRating() {\n//        StoreImp a = s.openStore(\"t\", \"london\", 5);\n//        Product first = new Product(\"armor\", \"play\", new LinkedList<>(), 7, 9, a);\n//        Product second = new Product(\"sword\", \"drama\", new LinkedList<>(), 5, 5, a);\n//        StoreImp b = s.openStore(\"u\", \"london\", 1);\n//        Product third = new Product(\"gun\", \"play\", new LinkedList<>(), 1, 3, b);\n//        assertTrue(a != null);\n//        a.addProduct(first);\n//        a.addProduct(second);\n//        b.addProduct(third);\n//        assertTrue(s.filterByStoreRating(a.getProducts(), 3, 7).contains(first));\n//        assertTrue(s.filterByStoreRating(a.getProducts(), 3, 7).contains(second));\n//        assertTrue(!s.filterByStoreRating(a.getProducts(), 3, 7).contains(third));\n//    }\n//\n///*\n//    @Test\n//    public void orderHistory() {\n//\n//\n//        shoppingCart sc = new shoppingCart();\n//        shoppingCart sc2 = new shoppingCart();\n//\n//        StoreImp store = s.openStore(\"test shop\", \"adress shop\", 4);\n//        Product p = new Product(\"ball\", \"play\", new LinkedList<>(), 5, 5, store);\n//        store.addProduct(p);\n//        shoppingBasket sb = new shoppingBasket(store);\n//        sb.addProduct(p);\n//\n//        StoreImp store2 = s.openStore(\"test shop2\", \"adress shop\", 3);\n//        Product p2 = new Product(\"better ball\", \"play\", new LinkedList<>(), 5, 5, store2);\n//        store2.addProduct(p2);\n//        shoppingBasket sb2 = new shoppingBasket(store2);\n//        sb2.addProduct(p2);\n//\n//\n//        sc.addBasket(sb);\n//        sc2.addBasket(sb2);\n//\n//\n//        s.memberPurchase(\"1\",sc, 123, \"adress\");\n//        s.memberPurchase(\"1\", sc2, 1232, \"adress2\");\n//\n//\n//        List<shoppingCart> recived = s.orderHistory(\"1\");\n//\n//        assertEquals(2, recived.size());\n//\n//        assertEquals(1, recived.get(0).getBaskets().size());\n//        assertEquals(1, recived.get(0).getBaskets().get(0).getProducts().size());\n//        assertEquals(\"ball\", recived.get(0).getBaskets().get(0).getProducts().get(0).getKey().getName());\n//\n//        assertEquals(1, recived.get(1).getBaskets().size());\n//        assertEquals(1, recived.get(1).getBaskets().get(0).getProducts().size());\n//        assertEquals(\"better ball\", recived.get(1).getBaskets().get(0).getProducts().get(0).getKey().getName());\n//\n//\n//\n//    }\n\n\n//    @Test\n//    public void orderHistory2() {\n//\n//\n//        shoppingCart sc = new shoppingCart();\n//        shoppingCart sc2 = new shoppingCart();\n//\n//        StoreImp store = s.openStore(\"test shop3\", \"adress shop\", 4);\n//        Product p = new Product(\"ball\", \"play\", new LinkedList<>(), 5, 5, store);\n//        store.addProduct(p);\n//        shoppingBasket sb = new shoppingBasket(store);\n//        sb.addProduct(p);\n//\n//        StoreImp store2 = s.openStore(\"test shop4\", \"adress shop\", 3);\n//        Product p2 = new Product(\"better ball\", \"play\", new LinkedList<>(), 5, 5, store2);\n//        store2.addProduct(p2);\n//        shoppingBasket sb2 = new shoppingBasket(store2);\n//        sb2.addProduct(p2);\n//\n//\n//        sc.addBasket(sb);\n//        sc2.addBasket(sb2);\n//\n//\n//        s.memberPurchase(\"2\",sc, 123, \"adress\");\n//        s.memberPurchase(\"2\", sc2, 1232, \"adress2\");\n//\n//\n//        List<IshoppingBasket> recived = s.orderHistory(store);\n//\n//        assertEquals(1, recived.size());\n//        assertEquals(1, recived.get(0).getProducts().size());\n//        assertEquals(\"ball\", recived.get(0).getProducts().get(0).getKey().getName());\n//\n//        recived = s.orderHistory(store2);\n//\n//        assertEquals(1, recived.size());\n//        assertEquals(1, recived.get(0).getProducts().size());\n//        assertEquals(\"better ball\", recived.get(0).getProducts().get(0).getKey().getName());\n//\n//\n//    }\n//*/\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/tests/UnitTests/SystemTest.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/tests/UnitTests/SystemTest.java	(date 1592314856756)
@@ -4,8 +4,6 @@
 import static org.junit.Assert.assertFalse;
 import static org.junit.Assert.assertTrue;
 
-import java.util.List;
-
 import org.junit.Test;
 
 import Domain.Store.StoreImp;
Index: src/tests/UnitTests/UserTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tests.UnitTests;\n\nimport org.junit.Test;\n\nimport Domain.RedClasses.User;\nimport Domain.Store.MyPair;\nimport Domain.Store.Product;\nimport Domain.Store.StoreImp;\nimport Domain.store_System.System;\n\nimport java.util.LinkedList;\n\nimport static org.junit.Assert.*;\n\npublic class UserTest {\n\n    @Test\n    //register with new id and a password\n    public void registerNewMember() {\n        User testUser1 = new User(\"new york\",123123);\n        String newId = \"4444\";\n        String pass = \"pass3\";\n        assertTrue(testUser1.register(newId,pass));\n    }\n\n    @Test\n    //register with new id and a password after other register\n    public void registerOldMember() {\n        User testUser2 = new User(\"new york\",123123);\n        String Id1 = \"2222\";\n        String pass1 = \"pass1\";\n        assertTrue(testUser2.register(Id1,pass1));\n        assertFalse(testUser2.register(Id1,pass1));\n    }\n\n    @Test\n    //login with correct id and a password\n    public void loginOldMember() {\n        User testUser2 = new User(\"new york\",123123);\n        String Id1 = \"11\";\n        String pass1 = \"11\";\n        assertTrue(testUser2.register(Id1,pass1));\n        assertTrue(testUser2.login(Id1,pass1));\n    }\n\n    @Test\n    //login 2 times\n    public void loginWrong() {\n        User testUser2 = new User(\"new york\",123123);\n        String Id1 = \"12\";\n        String pass1 = \"12\";\n        assertTrue(testUser2.register(Id1,pass1));\n        assertTrue(testUser2.login(Id1,pass1));\n        User testUser1 = new User(\"new york\",123123);\n        String Id2 = \"13\";\n        String pass2 = \"13\";\n        assertTrue(testUser1.register(Id2,pass2));\n        assertTrue(testUser1.login(Id2,pass2));\n        assertFalse(testUser1.login(Id1,pass1));\n    }\n/*\n    @Test\n    public void addProductToBasket(){\n        StoreImp s = System.getInstance().openStore(\"x\",\"tel aviv\",3);\n        Product p = new Product(\"qqq\",\"fun\",new LinkedList<>(),5.5,3,s);\n        s.addProduct(p);\n        User testUser = new User(\"new york\",123123);\n        assertTrue(testUser.saveProductInBasket(\"qqq\",\"x\"));\n        assertTrue(testUser.getProductsInCart().size()==1);\n        MyPair<Product,Integer> productInCart=null;\n        for(MyPair<Product,Integer> current :testUser.getProductsInCart()){\n            if(current.getKey()==p){\n                productInCart = current;\n            }\n        }\n        assertTrue(productInCart!=null);\n        assertTrue(productInCart.getKey().getName().equals(\"qqq\"));\n        assertTrue(productInCart.getValue()==1);\n    }\n\n    @Test\n    public void addWrongProduct(){\n        StoreImp s = System.getInstance().openStore(\"lll\",\"tel aviv\",3);\n        Product p = new Product(\"qqq\",\"fun\",new LinkedList<>(),5.5,3,s);\n        s.addProduct(p);\n        User testUser = new User(\"new york\",123123);\n        assertFalse(testUser.saveProductInBasket(\"qqq\",\"xx\"));\n        assertFalse(testUser.saveProductInBasket(\"wrong\",\"lll\"));\n    }\n\n    @Test\n    public void removeProductFromCart(){\n        StoreImp s = System.getInstance().openStore(\"mmm\",\"tel aviv\",3);\n        Product p = new Product(\"qqq\",\"fun\",new LinkedList<>(),5.5,3,s);\n        s.addProduct(p);\n        User testUser = new User(\"new york\",123123);\n        testUser.saveProductInBasket(\"qqq\",\"mmm\");\n        assertTrue(testUser.deleteProductInBasket(\"qqq\",\"mmm\",1));\n        MyPair<Product,Integer> productInCart=null;\n        for(MyPair<Product,Integer> current :testUser.getProductsInCart()){\n            if(current.getKey()==p){\n                productInCart = current;\n            }\n        }\n        assertTrue(productInCart==null);\n        assertTrue(testUser.getProductsInCart().size()==0);\n        testUser.saveProductInBasket(\"qqq\",\"mmm\");\n        assertTrue(testUser.deleteProductInBasket(\"qqq\",\"mmm\",2));\n    }\n*/\n    @Test\n    public void logout(){\n        User testUser = new User(\"new york\",123123);\n        testUser.register(\"1234\",\"1234\");\n        testUser.login(\"1234\",\"1234\");\n        assertTrue(testUser.logout());\n    }\n\n    @Test\n    public void logout2(){\n        User testUser = new User(\"new york\",123123);\n        assertFalse(testUser.logout());\n        testUser.register(\"4321\",\"1234\");\n        assertFalse(testUser.logout());\n    }\n\n    @Test\n    public void logout3(){\n        User testUser = new User(\"new york\",123123);\n        testUser.register(\"9999\",\"1234\");\n        testUser.login(\"9999\",\"1234\");\n        assertTrue(testUser.logout());\n        assertFalse(testUser.logout());\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/tests/UnitTests/UserTest.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/tests/UnitTests/UserTest.java	(date 1592314856756)
@@ -2,13 +2,7 @@
 
 import org.junit.Test;
 
-import Domain.RedClasses.User;
-import Domain.Store.MyPair;
-import Domain.Store.Product;
-import Domain.Store.StoreImp;
-import Domain.store_System.System;
-
-import java.util.LinkedList;
+import Domain.UserClasses.User;
 
 import static org.junit.Assert.*;
 
Index: src/tests/UnitTests/AllUnitTests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tests.UnitTests;\n\nimport org.junit.runner.RunWith;\nimport org.junit.runners.Suite;\nimport tests.UnitTests.CommunicationLayer.MessageDecoderTest;\nimport tests.UnitTests.CommunicationLayer.MessageEncoderTest;\n\n@RunWith(Suite.class)\n    @Suite.SuiteClasses({\n        test_supply.class,\n        Payment_Tests.class,\n        shoppingBasketTest.class,\n        StoreTest.class,\n        SystemTest.class,\n        UserTest.class,\n        StoreOwner_ImpTest.class,\n        PassProtocol_ImpTest.class,\n        EventLoggerTest.class,\n        ErrorLoggerTest.class,\n        MessageDecoderTest.class,\n        MessageEncoderTest.class\n})\n\npublic class AllUnitTests {\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/tests/UnitTests/AllUnitTests.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/tests/UnitTests/AllUnitTests.java	(date 1592314856756)
@@ -4,6 +4,8 @@
 import org.junit.runners.Suite;
 import tests.UnitTests.CommunicationLayer.MessageDecoderTest;
 import tests.UnitTests.CommunicationLayer.MessageEncoderTest;
+import tests.UnitTests.Policies.AcquisitionPolicyTest;
+import tests.UnitTests.Policies.DiscountPolicyTest;
 
 @RunWith(Suite.class)
     @Suite.SuiteClasses({
@@ -18,7 +20,9 @@
         EventLoggerTest.class,
         ErrorLoggerTest.class,
         MessageDecoderTest.class,
-        MessageEncoderTest.class
+            MessageEncoderTest.class,
+            DiscountPolicyTest.class,
+            AcquisitionPolicyTest.class,
 })
 
 public class AllUnitTests {
Index: src/tests/UnitTests/StoreOwner_ImpTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tests.UnitTests;\n\nimport static org.junit.Assert.assertFalse;\nimport static org.junit.Assert.assertTrue;\n\nimport Domain.Store.StoreImp;\nimport tests.UnitTests.stub.StoreStub;\nimport tests.UnitTests.stub.UserStub;\n\npublic class StoreOwner_ImpTest {\n\n\tStoreImp storeOwner = null;// new StoreOwner_Imp(new StoreStub());\n\n//\t@org.junit.Test\n//\tpublic void appointOwner() {\n//\t\tUserStub userStub = new UserStub();\n//\t\tassertTrue(storeOwner.appointOwner(userStub));\n//\t\tStoreStub aStore = new StoreStub();\n//\t\taStore.setOwner(userStub);\n//\t\tuserStub.setOwner(true);\n//\t\tassertFalse(storeOwner.appointOwner(userStub));\n//\t}\n//\n//\t@org.junit.Test\n//\tpublic void appointManager() {\n//\t\tUserStub userStub = new UserStub();\n//\t\tassertTrue(storeOwner.appointManager(userStub));\n//\t\tuserStub.setManager(true);\n//\t\tassertFalse(storeOwner.appointManager(userStub));\n//\t\tuserStub.setManager(false);\n//\t\tuserStub.setOwner(true);\n//\t\tassertFalse(storeOwner.appointManager(userStub));\n//\t}\n//\n//\t@org.junit.Test\n//\tpublic void fire() {\n//\t\tStoreStub A = new StoreStub();\n//\t\tStoreOwner owner = null;// new StoreOwner_Imp(A);\n//\t\tUserStub managerForA = new UserStub();\n//\t\towner.appointManager(managerForA);\n//\t\tmanagerForA.setManager(true);\n//\t\tassertFalse(storeOwner.fire(managerForA));\n//\t\tUserStub managerUnderOurStore = new UserStub();\n//\t\tstoreOwner.appointManager(managerUnderOurStore);\n//\t\tmanagerUnderOurStore.setManager(true);\n//\t\tassertTrue(storeOwner.fire(managerUnderOurStore));\n//\t}\n\n\t@org.junit.Test\n\tpublic void viewPurchaseHistory() {\n\t\t// assertEquals(\"AN ITEM\",storeOwner.viewPurchaseHistory().get(0));\n\t}\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/tests/UnitTests/StoreOwner_ImpTest.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/tests/UnitTests/StoreOwner_ImpTest.java	(date 1592314856756)
@@ -4,8 +4,6 @@
 import static org.junit.Assert.assertTrue;
 
 import Domain.Store.StoreImp;
-import tests.UnitTests.stub.StoreStub;
-import tests.UnitTests.stub.UserStub;
 
 public class StoreOwner_ImpTest {
 
Index: src/tests/UnitTests/Payment_Tests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tests.UnitTests;\r\n\r\nimport static org.junit.Assert.*;\r\n\r\nimport org.junit.Before;\r\nimport org.junit.Test;\r\n\r\nimport extornal.payment.Isracard;\r\nimport extornal.payment.MyPaymentSystem;\r\nimport extornal.payment.MyPaymentSystem_Driver;\r\nimport extornal.payment.Pay_pal;\r\nimport extornal.payment.bankAccount;\r\n\r\npublic class Payment_Tests {\r\n\r\n\tprivate bankAccount bank1 = new bankAccount(\"bank1\", 99933);\r\n\tprivate bankAccount bank2 = new bankAccount(\"bank2\", 5366);\r\n\tMyPaymentSystem mss = null;\r\n\t@Before\r\n\tpublic void setUp() throws Exception {\r\n\t\tmss = new MyPaymentSystem_Driver();\r\n\t}\r\n\r\n\t@Test\r\n\tpublic void testPay() {\r\n\t\ttry {\r\n\t\t\tsetUp();\r\n\t\t} catch (Exception e) {\r\n\t\t\tfail(\"init error\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tassertTrue(mss.pay(bank1, 5555));\r\n\r\n\t\tassertFalse(mss.pay(null, 5555));\r\n\r\n\t\tassertFalse(mss.pay(bank1, -1));\r\n\t\t\r\n\t}\r\n\t\r\n\t@Test\r\n\tpublic void testChangetype() {\r\n\t\ttry {\r\n\t\t\tsetUp();\r\n\t\t} catch (Exception e) {\r\n\t\t\tfail(\"init error\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tmss.changePaymentMethed(Isracard.name);\r\n\t\tassertTrue(mss.getPaymentMethed() instanceof Isracard);\r\n\t\tmss.changePaymentMethed(Pay_pal.name);\r\n\t\tassertTrue(mss.getPaymentMethed() instanceof Pay_pal);\r\n\t\tassertFalse(mss.getPaymentMethed() instanceof Isracard);\r\n\t\t\r\n\t}\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/tests/UnitTests/Payment_Tests.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/tests/UnitTests/Payment_Tests.java	(date 1592314856756)
@@ -9,12 +9,12 @@
 import extornal.payment.MyPaymentSystem;
 import extornal.payment.MyPaymentSystem_Driver;
 import extornal.payment.Pay_pal;
-import extornal.payment.bankAccount;
+import extornal.payment.CreditCard;
 
 public class Payment_Tests {
 
-	private bankAccount bank1 = new bankAccount("bank1", 99933);
-	private bankAccount bank2 = new bankAccount("bank2", 5366);
+	private CreditCard bank1 = new CreditCard("123", "02/23", "311", "yosi yosi");
+	private CreditCard bank2 =new CreditCard("321", "01/24", "476", "pil pilon");
 	MyPaymentSystem mss = null;
 	@Before
 	public void setUp() throws Exception {
Index: src/tests/UnitTests/shoppingBasketTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tests.UnitTests;\n\nimport org.junit.Test;\n\nimport Domain.RedClasses.shoppingBasket;\nimport Domain.Store.MyPair;\nimport Domain.Store.Product;\nimport Domain.Store.StoreImp;\nimport Domain.store_System.System;\n\nimport java.util.LinkedList;\n\nimport static org.junit.Assert.*;\n\npublic class shoppingBasketTest {\n/*\n    @Test\n    public void addProduct(){\n        StoreImp s = System.getInstance().openStore(\"r\",\"tel aviv\",3);\n        Product p = new Product(\"qqq\",\"fun\",new LinkedList<>(),5.5,3,s);\n        s.addProduct(p);\n        shoppingBasket basket = new shoppingBasket(s);\n        basket.addProduct(p);\n        MyPair<Product,Integer> productInBasket=null;\n        for(MyPair<Product,Integer> current :basket.getProducts()){\n            if(current.getKey()==p){\n                productInBasket = current;\n            }\n        }\n        assertTrue(productInBasket!= null);\n        assertTrue(productInBasket.getValue()==1);\n    }\n\n    @Test\n    public void addProductTwice(){\n        StoreImp s = System.getInstance().openStore(\"p\",\"tel aviv\",3);\n        Product p = new Product(\"qqq\",\"fun\",new LinkedList<>(),5.5,3,s);\n        s.addProduct(p);\n        shoppingBasket basket = new shoppingBasket(s);\n        basket.addProduct(p);\n        basket.addProduct(p);\n        MyPair<Product,Integer> productInBasket=null;\n        for(MyPair<Product,Integer> current :basket.getProducts()){\n            if(current.getKey()==p){\n                productInBasket = current;\n            }\n        }\n        assertTrue(productInBasket!= null);\n        assertTrue(productInBasket.getValue()==2);\n        assertTrue(basket.getProducts().size()==1);\n    }\n\n    @Test\n    public void removeProduct(){\n        StoreImp s = System.getInstance().openStore(\"jj\",\"tel aviv\",3);\n        Product p = new Product(\"qqq\",\"fun\",new LinkedList<>(),5.5,3,s);\n        s.addProduct(p);\n        shoppingBasket basket = new shoppingBasket(s);\n        basket.addProduct(p);\n        assertTrue(basket.removeProduct(p,1)==1);\n        MyPair<Product,Integer> productInBasket=null;\n        for(MyPair<Product,Integer> current :basket.getProducts()){\n            if(current.getKey()==p){\n                productInBasket = current;\n            }\n        }\n        assertTrue(productInBasket == null);\n        assertTrue(basket.getProducts().size()==0);\n    }\n*/\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/tests/UnitTests/shoppingBasketTest.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/tests/UnitTests/shoppingBasketTest.java	(date 1592314856756)
@@ -1,10 +1,10 @@
 package tests.UnitTests;
 
+import Domain.info.ProductDetails;
+import org.junit.Before;
 import org.junit.Test;
 
-import Domain.RedClasses.shoppingBasket;
-import Domain.Store.MyPair;
-import Domain.Store.Product;
+import Domain.UserClasses.shoppingBasket;
 import Domain.Store.StoreImp;
 import Domain.store_System.System;
 
@@ -13,59 +13,58 @@
 import static org.junit.Assert.*;
 
 public class shoppingBasketTest {
-/*
+
+
+    StoreImp store;
+    ProductDetails PD1;
+    ProductDetails PD2;
+
+    @Before
+    public void setup() {
+        store = System.getInstance().openStore("Mystore", "tel aviv", 3);
+        PD1 = new ProductDetails("item 1", new LinkedList<>(), "Mystore", 5, 23);
+        PD2 = new ProductDetails("item 2", new LinkedList<>(), "Mystore", 2, 65);
+        //Product p = new Product( "item 1", new LinkedList<>(), new LinkedList<>(),  12,  5,  store);
+        store.addProduct(PD1);
+        store.addProduct(PD2);
+
+    }
+
     @Test
-    public void addProduct(){
-        StoreImp s = System.getInstance().openStore("r","tel aviv",3);
-        Product p = new Product("qqq","fun",new LinkedList<>(),5.5,3,s);
-        s.addProduct(p);
-        shoppingBasket basket = new shoppingBasket(s);
-        basket.addProduct(p);
-        MyPair<Product,Integer> productInBasket=null;
-        for(MyPair<Product,Integer> current :basket.getProducts()){
-            if(current.getKey()==p){
-                productInBasket = current;
-            }
-        }
-        assertTrue(productInBasket!= null);
-        assertTrue(productInBasket.getValue()==1);
+    public void addProduct() {
+        // setup();
+        shoppingBasket basket = new shoppingBasket(store);
+        basket.addProduct(PD1.getName(), 1);
+        assertTrue(basket.getProducts() != null);
+        assertEquals(1, basket.getProducts().size());
+        assertTrue(basket.getProducts().contains(PD1));
+
     }
 
     @Test
-    public void addProductTwice(){
-        StoreImp s = System.getInstance().openStore("p","tel aviv",3);
-        Product p = new Product("qqq","fun",new LinkedList<>(),5.5,3,s);
-        s.addProduct(p);
-        shoppingBasket basket = new shoppingBasket(s);
-        basket.addProduct(p);
-        basket.addProduct(p);
-        MyPair<Product,Integer> productInBasket=null;
-        for(MyPair<Product,Integer> current :basket.getProducts()){
-            if(current.getKey()==p){
-                productInBasket = current;
-            }
-        }
-        assertTrue(productInBasket!= null);
-        assertTrue(productInBasket.getValue()==2);
-        assertTrue(basket.getProducts().size()==1);
+    public void addProductTwice() {
+        shoppingBasket basket = new shoppingBasket(store);
+        basket.addProduct(PD1.getName(), 1);
+        basket.addProduct(PD2.getName(), 4);
+        assertTrue(basket.getProducts() != null);
+        assertEquals(2, basket.getProducts().size());
+        assertTrue(basket.getProducts().contains(PD1));
+        assertTrue(basket.getProducts().contains(PD2));
+        assertEquals(5,basket.getProducts().get(0).getAmount()+basket.getProducts().get(1).getAmount());
     }
 
+    //
     @Test
-    public void removeProduct(){
-        StoreImp s = System.getInstance().openStore("jj","tel aviv",3);
-        Product p = new Product("qqq","fun",new LinkedList<>(),5.5,3,s);
-        s.addProduct(p);
-        shoppingBasket basket = new shoppingBasket(s);
-        basket.addProduct(p);
-        assertTrue(basket.removeProduct(p,1)==1);
-        MyPair<Product,Integer> productInBasket=null;
-        for(MyPair<Product,Integer> current :basket.getProducts()){
-            if(current.getKey()==p){
-                productInBasket = current;
-            }
-        }
-        assertTrue(productInBasket == null);
-        assertTrue(basket.getProducts().size()==0);
+    public void removeProduct() {
+        shoppingBasket basket = new shoppingBasket(store);
+        basket.addProduct(PD1.getName(), 1);
+        basket.addProduct(PD2.getName(), 5);
+        int removed = basket.removeProduct(PD1.getName(), 2);
+
+        assertTrue(basket.getProducts() != null);
+        assertEquals(1, basket.getProducts().size());
+        assertTrue(basket.getProducts().contains(PD2));
+        assertEquals(1,removed);
     }
-*/
+
 }
\ No newline at end of file
Index: src/tests/UnitTests/PassProtocol_ImpTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tests.UnitTests;\n\nimport org.junit.Test;\n\nimport Domain.store_System.Security.PassProtocol_Imp;\nimport Domain.store_System.Security.PasswordProtocol;\n\nimport static org.junit.Assert.*;\n\npublic class PassProtocol_ImpTest {\n\n    PasswordProtocol protocol1=PassProtocol_Imp.getInstance();\n    PasswordProtocol protocol2=PassProtocol_Imp.getInstance();\n\n    @org.junit.Before\n    public void setUp() throws Exception {\n    }\n\n    @Test\n    public void getInstance() {\n        protocol1.addRegistry(\"Shahar\",\"YellowSubmarine\");\n        assertTrue(protocol2.login(\"Shahar\",\"YellowSubmarine\"));\n    }\n\n    @Test\n    public void addRegistry() {\n        protocol1.addRegistry(\"Shahar\",\"YellowSubmarine\");\n        assertTrue(protocol1.login(\"Shahar\",\"YellowSubmarine\"));\n    }\n\n    @Test\n    public void addRegistry2() {\n       assertTrue( protocol1.addRegistry(\"daniel\",\"YellowSubmarine\"));\n       assertFalse( protocol1.addRegistry(\"daniel\",\"YellowSubmarine\"));\n        assertFalse( protocol1.addRegistry(\"daniel\",\"else\"));\n\n    }\n\n    @org.junit.Test\n    public void login() {\n        protocol1.addRegistry(\"Shahar\",\"YellowSubmarine\");\n        assertTrue(protocol1.login(\"Shahar\",\"YellowSubmarine\"));\n    }\n\n    @org.junit.Test\n    public void login2() {\n        protocol1.addRegistry(\"Shahar\",\"YellowSubmarine\");\n        assertFalse(protocol1.login(\"Shahar\",\"YellowSubmarine1\"));\n    }\n\n    @org.junit.Test\n    public void deleteRegistry() {\n        protocol1.addRegistry(\"Shahar\",\"YellowSubmarine\");\n        assertTrue(protocol1.login(\"Shahar\",\"YellowSubmarine\"));\n        assertTrue(protocol1.deleteRegistry(\"Shahar\",\"YellowSubmarine\"));\n        assertFalse(protocol1.login(\"Shahar\",\"YellowSubmarine\"));\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/tests/UnitTests/PassProtocol_ImpTest.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/tests/UnitTests/PassProtocol_ImpTest.java	(date 1592314856756)
@@ -2,8 +2,8 @@
 
 import org.junit.Test;
 
-import Domain.store_System.Security.PassProtocol_Imp;
-import Domain.store_System.Security.PasswordProtocol;
+import extornal.Security.PassProtocol_Imp;
+import extornal.Security.PasswordProtocol;
 
 import static org.junit.Assert.*;
 
Index: src/tests/UnitTests/stub/UserStub.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tests.UnitTests.stub;\n\nimport java.util.List;\n\nimport Domain.RedClasses.IUser;\nimport Domain.RedClasses.UserPurchase;\nimport Domain.RedClasses.shoppingCart;\nimport Domain.Store.*;\nimport Domain.Store.workers.Store_role;\nimport tests.AcceptanceTests.auxiliary.PurchaseDetails;\n\npublic class UserStub implements IUser {\n    boolean manager=false;\n    boolean owner=false;\n\n    public void setManager(boolean manager) {\n        this.manager = manager;\n    }\n\n    public void setOwner(boolean owner) {\n        this.owner = owner;\n    }\n//\n//    @Override\n//    public boolean isManager() {\n//        return manager;\n//    }\n//\n//    @Override\n//    public boolean isOwner() {\n//        return owner;\n//    }\n//\n//    @Override\n//    public boolean isRegistered() {\n//        return true;\n//    }\n//\n//    @Override\n//    public boolean register(String id, String password) {\n//        return false;\n//    }\n//\n//    @Override\n//    public boolean login(String id, String password) {\n//        return false;\n//    }\n//\n//    @Override\n//    public StoreImp watchStoreDetails(String name) {\n//        return null;\n//    }\n//\n//    @Override\n//    public List<StoreImp> watchAllStores() {\n//        return null;\n//    }\n//\n//    @Override\n//    public List<Product> watchProductsInStore(String name) {\n//        return null;\n//    }\n//\n//    @Override\n//    public List<Product> searchProductsByName(String name) {\n//        return null;\n//    }\n//\n//    @Override\n//    public List<Product> searchProductsByCategory(String category) {\n//        return null;\n//    }\n//\n//    @Override\n//    public List<Product> searchProductsByKeyword(String keyword) {\n//        return null;\n//    }\n//\n//    @Override\n//    public List<Product> filterByPrice(List<Product> base, int min, int max) {\n//        return null;\n//    }\n//\n//    @Override\n//    public List<Product> filterByRating(List<Product> base, int min, int max) {\n//        return null;\n//    }\n//\n//    @Override\n//    public List<Product> filterByCategory(List<Product> base, String category) {\n//        return null;\n//    }\n//\n//    @Override\n//    public List<Product> filterByStoreRating(List<Product> base, int min, int max) {\n//        return null;\n//    }\n//\n//    @Override\n//    public boolean saveProductInBasket(String productName, String storeName) {\n//        return false;\n//    }\n////\n////    @Override\n////    public List<MyPair<Product, Integer>> getProductsInCart() {\n////        return null;\n////    }\n////\n//    @Override\n//    public int deleteProductInBasket(String productName, String storeName, int num) {\n//        return 0;\n//    }\n//\n////    @Override\n////    public boolean purchase() {\n////        return false;\n////    }\n//\n//    @Override\n//    public boolean logout() {\n//        return false;\n//    }\n//\n//    @Override\n//    public boolean openStore(String name, String address, int rating) {\n//        return false;\n//    }\n//\n//    @Override\n//    public List<shoppingCart> watchHistory() {\n//        return null;\n//    }\n//\n//\t@Override\n//\tpublic shoppingCart getCart() {\n//\t\t// TODO Auto-generated method stub\n//\t\treturn null;\n//\t}\n\n\t@Override\n\tpublic List<UserPurchase> getPurchaseHistory() {\n\t\t// TODO Auto-generated method stub\n\t\treturn null;\n\t}\n\n\t@Override\n\tpublic boolean getFired(String store) {\n\t\t// TODO Auto-generated method stub\n\t\treturn false;\n\t}\n\n\t@Override\n\tpublic boolean appointAsOwner(Store_role newRole) {\n\t\t// TODO Auto-generated method stub\n\t\treturn false;\n\t}\n\n\t@Override\n\tpublic boolean appointAsManager(Store_role newRole) {\n\t\t// TODO Auto-generated method stub\n\t\treturn false;\n\t}\n\n\t@Override\n\tpublic String getName() {\n\t\t// TODO Auto-generated method stub\n\t\treturn null;\n\t}\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/tests/UnitTests/stub/UserStub.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/tests/UnitTests/stub/UserStub.java	(date 1592314856756)
@@ -2,12 +2,9 @@
 
 import java.util.List;
 
-import Domain.RedClasses.IUser;
-import Domain.RedClasses.UserPurchase;
-import Domain.RedClasses.shoppingCart;
-import Domain.Store.*;
+import Domain.UserClasses.IUser;
+import Domain.UserClasses.UserPurchase;
 import Domain.Store.workers.Store_role;
-import tests.AcceptanceTests.auxiliary.PurchaseDetails;
 
 public class UserStub implements IUser {
     boolean manager=false;
Index: src/Data_access/ShoppingBasket_DA.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Data_access;\n\nimport Domain.RedClasses.shoppingBasket;\n\nimport java.util.Optional;\n\npublic class ShoppingBasket_DA extends DOA<shoppingBasket> {\n\n    public ShoppingBasket_DA(){\n        super();\n        TABLE_NAME=\"SHOPPING_BASKET_TABLE\";\n    }\n\n    @Override\n    public Optional<shoppingBasket> get(int id) {\n        return Optional.ofNullable(entityManager.find(shoppingBasket.class,id));\n    }\n\n    @Override\n    public void save(shoppingBasket shoppingBasket) {\n        executeInsideTransaction(entityManager -> entityManager.persist(shoppingBasket));\n    }\n\n    @Override\n    public void update(shoppingBasket shoppingBasket, String[] params) {\n        //TODO: add set to shopping basket\n        executeInsideTransaction(entityManager -> entityManager.merge(shoppingBasket));\n    }\n\n    @Override\n    public void delete(shoppingBasket shoppingBasket) {\n        executeInsideTransaction(entityManager -> entityManager.remove(shoppingBasket));\n    }\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Data_access/ShoppingBasket_DA.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Data_access/ShoppingBasket_DA.java	(date 1592314856740)
@@ -1,6 +1,6 @@
 package Data_access;
 
-import Domain.RedClasses.shoppingBasket;
+import Domain.UserClasses.shoppingBasket;
 
 import java.util.Optional;
 
Index: src/Data_access/ShoppingCart_DA.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Data_access;\n\nimport Domain.RedClasses.shoppingCart;\n\nimport java.util.Optional;\n\npublic class ShoppingCart_DA extends DOA<shoppingCart>{\n\n    public ShoppingCart_DA(){\n        super();\n        TABLE_NAME=\"SHOPPING_CART_TABLE\";\n    }\n\n    @Override\n    public Optional<shoppingCart> get(int id) {\n        return Optional.ofNullable(entityManager.find(shoppingCart.class,id));\n    }\n\n    @Override\n    public void save(shoppingCart shoppingCart) {\n        executeInsideTransaction(entityManager -> entityManager.persist(shoppingCart));\n    }\n\n    @Override\n    public void update(shoppingCart shoppingCart, String[] params) {\n        //TODO : add set to shopping cart\n        executeInsideTransaction(entityManager -> entityManager.merge(shoppingCart));\n    }\n\n    @Override\n    public void delete(shoppingCart shoppingCart) {\n        executeInsideTransaction(entityManager -> entityManager.remove(shoppingCart));\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Data_access/ShoppingCart_DA.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Data_access/ShoppingCart_DA.java	(date 1592314856740)
@@ -1,6 +1,6 @@
 package Data_access;
 
-import Domain.RedClasses.shoppingCart;
+import Domain.UserClasses.shoppingCart;
 
 import java.util.Optional;
 
Index: src/tests/AcceptanceTests/SystemAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tests.AcceptanceTests;\n\nimport Domain.Store.Product;\nimport Domain.info.ProductDetails;\nimport Domain.info.StoreInfo;\nimport Domain.store_System.System;\nimport Service_Layer.guest_accese.guest_accese;\nimport Service_Layer.member_accese.member_accese;\nimport Service_Layer.owner_accese.owner_accese;\nimport tests.AcceptanceTests.auxiliary.*;\n\nimport java.util.LinkedList;\nimport java.util.List;\n\npublic class SystemAdapter {\n\tpublic void init(DummyPayment payment, DummySupply supply) {\n\t\t// TODO\n\t}\n\n\tpublic void resetSystem() {\n\t\tSystem.getInstance().resetSystem();\n\t}\n\n\tpublic int newGuest() {\n\t\treturn guest_accese.ImNew();\n\t}\n\n\t// 2.2\n\tpublic boolean register(String username, String password) {\n\t\treturn guest_accese.usecase2_2_guest_register(username, password);\n\t}\n\n\tpublic void removeUser(String username, String password) {\n\t\tSystem.getInstance().removeUser(username, password);\n\t}\n\n\t// 2.3\n\tpublic boolean login(String username, String password) {\n\t\treturn guest_accese.usecase2_3_login(guest_accese.ImNew(), username, password);\n\t}\n\n\t// 2.3\n\tpublic boolean login(int guestID, String username, String password) {\n\t\treturn guest_accese.usecase2_3_login(guestID, username, password);\n\t}\n\n\t// 2.4A\n\tpublic StoreDetails getStoreDetails(String storeName) {\n\t\treturn guest_accese.usecase2_4A_getStoreDetails(storeName);\n\t}\n\n\t// 2.4B\n\tpublic List<ProductDetails> getProductsFromStore(String storeName) {\n\t\tStoreInfo s = guest_accese.usecase2_4B_getStoreProdacts(storeName);\n\t\tif(s == null)\n\t\t\treturn null;\n\t\treturn s.getProducts();\n\t}\n\n\t// 2.5A\n\tpublic List<ProductDetails> searchProductByName(String name) {\n\t\treturn guest_accese.usecase2_5A_searchProductByName(name);\n\t}\n\n\t// 2.5B\n\tpublic List<ProductDetails> searchProductByCategory(String category) {\n\t\treturn guest_accese.usecase2_5B_searchProductByCategory(category);\n\t}\n\n\t// 2.5C\n\tpublic List<ProductDetails> searchProductByKeyword(String keyword) {\n\t\treturn guest_accese.usecase2_5C_searchProductByKeyword(keyword);\n\t}\n\n\t// 2.5D1\n\tpublic List<ProductDetails> filterByPrice(double minPrice, double maxPrice) {\n\t\treturn guest_accese.usecase2_5D_1_FilterbyPrice(minPrice, maxPrice);\n\t}\n\n\t// 2.5D2\n\tpublic List<ProductDetails> filterByRating(int minRating, int maxRating) {\n\t\treturn guest_accese.usecase2_5D_2_FilterbyRating(minRating, maxRating);\n\t}\n\n\t// 2.5D3\n\tpublic List<ProductDetails> filterByCategory(String category) {\n\t\treturn guest_accese.usecase2_5D_3_FilterbyCategory(category);\n\t}\n\n\t// 2.5D4\n\tpublic List<ProductDetails> filterByStoreRating(int minRating, int maxRating) {\n\t\treturn guest_accese.usecase2_5D_4_FilterbyStoreRating(minRating, maxRating);\n\t}\n\n\t// 2.6\n\tpublic boolean addToBasket(int guestID, String storeName, String productName, int amount) {\n\t\treturn guest_accese.usecase2_6_saveProductToBasket(guestID, storeName, productName, amount);\n\t}\n\n\t// 2.7A\n\tpublic List<ProductDetails> watchShoppingCart(int guestID) {\n\t\treturn guest_accese.usecase2_7A_WatchProdactsInCart(guestID);\n\t}\n\n\t// 2.7B\n\tpublic boolean removeProductsFromCart(int guestID, String storeName, String productName, int amount) {\n\t\treturn guest_accese.usecase2_7b_RemoveProdactsInCart(guestID, storeName, productName, amount) > 0;\n\t}\n\n\t// 2.8\n\tpublic void purchase() {\n\t\t// TODO\n\t}\n\n\t// 3.1\n\tpublic boolean logout(String username, String password) {\n\t\treturn member_accese.usecase3_1_Logout(username, password);\n\t}\n\n\t// 3.2\n\tpublic boolean openStore(String username, String password, StoreDetails storeDetails) {\n\t\treturn member_accese.usecase3_2_OpenStore(username, password, storeDetails);\n\t}\n\n\t// 3.7\n\tpublic List<PurchaseDetails> getPurchaseHistory(String username, String password) {\n// TODO\n\t\t//\t\treturn member_accese.usecase3_7_ReviewPurchasesHistory(username, password);\n\t\treturn null;\n\t}\n\n\t// 4.1.1\n\tpublic boolean addProduct(String username, String password, String storeName, ProductDetails product) {\n\t\treturn owner_accese.usecase4_1_1_AddingProdacsToStore(username, password, storeName, new Product(product));\n\t}\n\n\t// 4.1.2\n\tpublic boolean RemoveProduct(String username, String password, String storeName, String productName) {\n\t\treturn owner_accese.usecase4_1_2_RemoveItem(username, password, storeName, productName);\n\t}\n\n\t// 4.1.3\n\tpublic boolean EditProduct(String username, String password, String storeName, String productName,\n\t\t\t\t\t\t\t   ProductDetails newProductDet) {\n\t\treturn owner_accese.usecase4_1_3_EditProduct(username, password, storeName, productName, new Product(newProductDet));\n\t}\n\n\t// 4.3\n    public boolean appointOwner(String myusername, String myPassword, String storeName, String hisusername,String hisPassword) {\n\t\treturn owner_accese.usecase4_3_appointOwner(myusername, myPassword, storeName, hisusername, hisPassword);\n\t}\n\n\t// 4.5\n    public boolean appointManager(String myusername, String myPassword, String storeName, String hisusername,String hisPassword) {\n\t\treturn  owner_accese.usecase4_5_appointManager(myusername, myPassword, storeName, hisusername, hisPassword);\n    }\n\n    // 4.6\n    public boolean editManagerPermissions(String myusername, String myPassword,String storename, String managername,\n                                          List<String> permissions) {\n\t\treturn owner_accese.usecase4_6_editMangagerPermesions(myusername, myPassword, storename, managername, permissions);\n    }\n\n    // 4.7\n    public boolean fireManager(String myusername, String myPassword, String storeName, String hisusername) {\n\t\treturn owner_accese.usecase4_7_FireManager(myusername, myPassword, storeName, hisusername);\n    }\n\n\t// 4.10\n\tpublic List<PurchaseDetails> getStoreSellingHistory(String username, String password, String storeName) {\n\t// TODO\n\t\t//\t\treturn owner_accese.usecase4_10_ViewAcquisitionHistory(username, password, storeName);\n\t\treturn null;\n\t}\n\n\t// 4.9\n\tpublic List<Question> getStoreQuestions(String storeName) {\n\t\t// TODO this is not implemented in version 1\n\t\treturn new LinkedList<>();\n\t}\n\n\t// 4.9\n\tpublic void askQuestion(String storeName, Question question) {\n\t\t// TODO this is not implemented in version 1\n\n\t}\n\n\t// 4.9\n\tpublic void answerQuestion(Question question) {\n\t\t// TODO this is not implemented in version 1\n\n\t}\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/tests/AcceptanceTests/SystemAdapter.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/tests/AcceptanceTests/SystemAdapter.java	(date 1592314856744)
@@ -1,12 +1,15 @@
 package tests.AcceptanceTests;
 
+import Domain.UserClasses.UserPurchase;
 import Domain.Store.Product;
+import Domain.Store.StorePurchase;
 import Domain.info.ProductDetails;
 import Domain.info.StoreInfo;
 import Domain.store_System.System;
 import Service_Layer.guest_accese.guest_accese;
 import Service_Layer.member_accese.member_accese;
 import Service_Layer.owner_accese.owner_accese;
+import extornal.payment.CreditCard;
 import tests.AcceptanceTests.auxiliary.*;
 
 import java.util.LinkedList;
@@ -39,6 +42,14 @@
 		return guest_accese.usecase2_3_login(guest_accese.ImNew(), username, password);
 	}
 
+	public int login_code(String username, String password) {
+		int id = guest_accese.ImNew();
+		if(guest_accese.usecase2_3_login(guest_accese.ImNew(), username, password))
+			return id;
+		return -1;
+	}
+
+
 	// 2.3
 	public boolean login(int guestID, String username, String password) {
 		return guest_accese.usecase2_3_login(guestID, username, password);
@@ -54,7 +65,7 @@
 		StoreInfo s = guest_accese.usecase2_4B_getStoreProdacts(storeName);
 		if(s == null)
 			return null;
-		return s.getProducts();
+		return s.products;
 	}
 
 	// 2.5A
@@ -108,8 +119,8 @@
 	}
 
 	// 2.8
-	public void purchase() {
-		// TODO
+	public boolean purchase(int guestID, String card, String edate, String css, String cardOwner, String shipAdress) {
+		return guest_accese.usecase2_8_Purchase_products(guestID, new CreditCard(card, edate, css, cardOwner), shipAdress);
 	}
 
 	// 3.1
@@ -123,10 +134,8 @@
 	}
 
 	// 3.7
-	public List<PurchaseDetails> getPurchaseHistory(String username, String password) {
-// TODO
-		//		return member_accese.usecase3_7_ReviewPurchasesHistory(username, password);
-		return null;
+	public List<UserPurchase> getPurchaseHistory(String username, String password) {
+				return member_accese.usecase3_7_ReviewPurchasesHistory(username, password);
 	}
 
 	// 4.1.1
@@ -167,10 +176,8 @@
     }
 
 	// 4.10
-	public List<PurchaseDetails> getStoreSellingHistory(String username, String password, String storeName) {
-	// TODO
-		//		return owner_accese.usecase4_10_ViewAcquisitionHistory(username, password, storeName);
-		return null;
+	public List<StorePurchase> getStoreSellingHistory(String username, String password, String storeName) {
+		return owner_accese.usecase4_10_ViewAcquisitionHistory(username, password, storeName);
 	}
 
 	// 4.9
Index: src/Data_access/User_DA.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Data_access;\n\nimport Domain.RedClasses.User;\n\nimport javax.persistence.*;\nimport java.util.List;\nimport java.util.Optional;\nimport java.util.function.Consumer;\n\npublic class User_DA extends DOA<User> {\n\n\n    public User_DA(){\n        super();\n        TABLE_NAME=\"USER_TABLE\";\n    }\n\n    @Override\n    public Optional<User> get(int id) {\n        return Optional.ofNullable(entityManager.find(User.class,id));\n    }\n\n    @Override\n    public void save(User user) {\n        executeInsideTransaction(entityManager -> entityManager.persist(user));\n    }\n\n    @Override\n    public void update(User user, String[] params) {\n        //TODO: add set options\n        executeInsideTransaction(entityManager -> entityManager.remove(user));\n    }\n\n    @Override\n    public void delete(User user) {\n        executeInsideTransaction(entityManager -> entityManager.remove(user));\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Data_access/User_DA.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/Data_access/User_DA.java	(date 1592314856740)
@@ -1,6 +1,7 @@
 package Data_access;
 
-import Domain.RedClasses.User;
+
+import Domain.UserClasses.User;
 
 import javax.persistence.*;
 import java.util.List;
Index: src/tests/AcceptanceTests/auxiliary/PurchaseDetails.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tests.AcceptanceTests.auxiliary;\n\nimport Domain.RedClasses.shoppingCart;\n\npublic class PurchaseDetails {\n\t\n\t\n\t\n\tpublic PurchaseDetails()\n\t{}\n\t\n\t\n\tpublic PurchaseDetails(shoppingCart cart) {\n\t\t// TODO Auto-generated constructor stub\n\t}\n\n\t\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/tests/AcceptanceTests/auxiliary/PurchaseDetails.java	(revision 765f74774114b306c203219db8477a56813b661e)
+++ src/tests/AcceptanceTests/auxiliary/PurchaseDetails.java	(date 1592314856756)
@@ -1,6 +1,6 @@
 package tests.AcceptanceTests.auxiliary;
 
-import Domain.RedClasses.shoppingCart;
+import Domain.UserClasses.shoppingCart;
 
 public class PurchaseDetails {
 	
